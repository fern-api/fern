{
  "title": "Aries Cloud Agent",
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": {
    "tagsById": {
      "action-menu": {
        "id": "action-menu",
        "description": "Menu interaction over connection"
      },
      "basicmessage": {
        "id": "basicmessage",
        "description": "Simple messaging"
      },
      "connection": {
        "id": "connection",
        "description": "Connection management"
      },
      "credential-definition": {
        "id": "credential-definition",
        "description": "Credential definition operations"
      },
      "credentials": {
        "id": "credentials",
        "description": "Holder credential management"
      },
      "did-exchange": {
        "id": "did-exchange",
        "description": "Connection management via DID exchange"
      },
      "discover-features": {
        "id": "discover-features",
        "description": "Feature discovery"
      },
      "discover-features v2.0": {
        "id": "discover-features v2.0",
        "description": "Feature discovery v2"
      },
      "endorse-transaction": {
        "id": "endorse-transaction",
        "description": "Endorse a Transaction"
      },
      "introduction": {
        "id": "introduction",
        "description": "Introduction of known parties"
      },
      "issue-credential v1.0": {
        "id": "issue-credential v1.0",
        "description": "Credential issue v1.0"
      },
      "issue-credential v2.0": {
        "id": "issue-credential v2.0",
        "description": "Credential issue v2.0"
      },
      "jsonld": {
        "id": "jsonld",
        "description": "Sign and verify json-ld data"
      },
      "ledger": {
        "id": "ledger",
        "description": "Interaction with ledger"
      },
      "mediation": {
        "id": "mediation",
        "description": "Mediation management"
      },
      "multitenancy": {
        "id": "multitenancy",
        "description": "Multitenant wallet management"
      },
      "out-of-band": {
        "id": "out-of-band",
        "description": "Out-of-band connections"
      },
      "present-proof v1.0": {
        "id": "present-proof v1.0",
        "description": "Proof presentation v1.0"
      },
      "present-proof v2.0": {
        "id": "present-proof v2.0",
        "description": "Proof presentation v2.0"
      },
      "resolver": {
        "id": "resolver",
        "description": "did resolver interface."
      },
      "revocation": {
        "id": "revocation",
        "description": "Revocation registry management"
      },
      "schema": {
        "id": "schema",
        "description": "Schema operations"
      },
      "trustping": {
        "id": "trustping",
        "description": "Trust-ping over connection"
      },
      "wallet": {
        "id": "wallet",
        "description": "DID and tag policy management"
      }
    },
    "orderedTagIds": [
      "action-menu",
      "basicmessage",
      "connection",
      "credential-definition",
      "credentials",
      "did-exchange",
      "discover-features",
      "discover-features v2.0",
      "endorse-transaction",
      "introduction",
      "issue-credential v1.0",
      "issue-credential v2.0",
      "jsonld",
      "ledger",
      "mediation",
      "multitenancy",
      "out-of-band",
      "present-proof v1.0",
      "present-proof v2.0",
      "resolver",
      "revocation",
      "schema",
      "trustping",
      "wallet"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Close the active menu associated with a connection",
      "audiences": [],
      "operationId": "close_menu_by_conn_id",
      "tags": [
        "action-menu"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CloseMenuByConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CloseMenuByConnIdRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CloseMenuByConnIdResponse",
          "schema": "ActionMenuModulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/action-menu/{conn_id}/close",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the active menu",
      "audiences": [],
      "operationId": "fetch_menu_by_conn_id",
      "tags": [
        "action-menu"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "FetchMenuByConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "FetchMenuByConnIdRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "FetchMenuByConnIdResponse",
          "schema": "ActionMenuFetchResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/action-menu/{conn_id}/fetch",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Perform an action associated with the active menu",
      "audiences": [],
      "operationId": "perform_action_by_conn_id",
      "tags": [
        "action-menu"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PerformActionByConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PerformActionByConnIdRequest",
      "request": {
        "schema": {
          "generatedName": "PerformActionByConnIdRequest",
          "schema": "PerformRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PerformActionByConnIdResponse",
          "schema": "ActionMenuModulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/action-menu/{conn_id}/perform",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "Query",
                  "type": "string"
                },
                "type": "primitive"
              },
              "params": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Request the active menu",
      "audiences": [],
      "operationId": "request_menu_by_conn_id",
      "tags": [
        "action-menu"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RequestMenuByConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RequestMenuByConnIdRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RequestMenuByConnIdResponse",
          "schema": "ActionMenuModulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/action-menu/{conn_id}/request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send an action menu to a connection",
      "audiences": [],
      "operationId": "send_menu_to_conn_id",
      "tags": [
        "action-menu"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SendMenuToConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendMenuToConnIdRequest",
      "request": {
        "schema": {
          "generatedName": "SendMenuToConnIdRequest",
          "schema": "SendMenu",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendMenuToConnIdResponse",
          "schema": "ActionMenuModulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/action-menu/{conn_id}/send-menu",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "menu": {
                "properties": {
                  "options": {
                    "value": [
                      {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "window_prefs",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "title": {
                            "value": {
                              "value": "Window Preferences",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query agent-to-agent connections",
      "audiences": [],
      "operationId": "get_matching_connections",
      "tags": [
        "connection"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Alias",
          "name": "alias",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetMatchingConnectionsRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Connection protocol used",
          "name": "connection_protocol",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestConnectionProtocol",
            "value": {
              "generatedName": "GetMatchingConnectionsRequestConnectionProtocol",
              "values": [
                {
                  "generatedName": "Connections10",
                  "value": "connections/1.0",
                  "casing": {}
                },
                {
                  "generatedName": "Didexchange10",
                  "value": "didexchange/1.0",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "invitation key",
          "name": "invitation_key",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestInvitationKey",
            "value": {
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                "type": "string"
              },
              "generatedName": "GetMatchingConnectionsRequestInvitationKey",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifier of the associated Invitation Mesage",
          "name": "invitation_msg_id",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestInvitationMsgId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingConnectionsRequestInvitationMsgId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "My DID",
          "name": "my_did",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestMyDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "type": "string"
              },
              "generatedName": "GetMatchingConnectionsRequestMyDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Connection state",
          "name": "state",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestState",
            "value": {
              "generatedName": "GetMatchingConnectionsRequestState",
              "values": [
                {
                  "generatedName": "start",
                  "value": "start",
                  "casing": {}
                },
                {
                  "generatedName": "error",
                  "value": "error",
                  "casing": {}
                },
                {
                  "generatedName": "response",
                  "value": "response",
                  "casing": {}
                },
                {
                  "generatedName": "request",
                  "value": "request",
                  "casing": {}
                },
                {
                  "generatedName": "abandoned",
                  "value": "abandoned",
                  "casing": {}
                },
                {
                  "generatedName": "init",
                  "value": "init",
                  "casing": {}
                },
                {
                  "generatedName": "invitation",
                  "value": "invitation",
                  "casing": {}
                },
                {
                  "generatedName": "active",
                  "value": "active",
                  "casing": {}
                },
                {
                  "generatedName": "completed",
                  "value": "completed",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Their DID",
          "name": "their_did",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestTheirDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "type": "string"
              },
              "generatedName": "GetMatchingConnectionsRequestTheirDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Their Public DID",
          "name": "their_public_did",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestTheirPublicDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "type": "string"
              },
              "generatedName": "GetMatchingConnectionsRequestTheirPublicDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Their role in the connection protocol",
          "name": "their_role",
          "schema": {
            "generatedName": "GetMatchingConnectionsRequestTheirRole",
            "value": {
              "generatedName": "GetMatchingConnectionsRequestTheirRole",
              "values": [
                {
                  "generatedName": "invitee",
                  "value": "invitee",
                  "casing": {}
                },
                {
                  "generatedName": "requester",
                  "value": "requester",
                  "casing": {}
                },
                {
                  "generatedName": "inviter",
                  "value": "inviter",
                  "casing": {}
                },
                {
                  "generatedName": "responder",
                  "value": "responder",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingConnectionsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingConnectionsResponse",
          "schema": "ConnectionList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/connections",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "accept": {
                          "value": "auto",
                          "type": "enum"
                        },
                        "alias": {
                          "value": {
                            "value": "Bob, providing quotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "connection_protocol": {
                          "value": "connections/1.0",
                          "type": "enum"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "No DIDDoc provided; cannot connect to public DID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inbound_connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "invitation_key": {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "invitation_mode": {
                          "value": "once",
                          "type": "enum"
                        },
                        "invitation_msg_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "my_did": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "request_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "rfc23_state": {
                          "value": {
                            "value": "invitation-sent",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "routing_state": {
                          "value": "active",
                          "type": "enum"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_did": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_label": {
                          "value": {
                            "value": "Bob",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_public_did": {
                          "value": {
                            "value": "2cpBmR3FqGKWi5EyUbpRY8",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_role": {
                          "value": "requester",
                          "type": "enum"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "accept": {
                          "value": "auto",
                          "type": "enum"
                        },
                        "alias": {
                          "value": {
                            "value": "Bob, providing quotes",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "connection_protocol": {
                          "value": "connections/1.0",
                          "type": "enum"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "No DIDDoc provided; cannot connect to public DID",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "inbound_connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "invitation_key": {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "invitation_mode": {
                          "value": "once",
                          "type": "enum"
                        },
                        "invitation_msg_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "my_did": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "request_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "rfc23_state": {
                          "value": {
                            "value": "invitation-sent",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "routing_state": {
                          "value": "active",
                          "type": "enum"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_did": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_label": {
                          "value": {
                            "value": "Bob",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_public_did": {
                          "value": {
                            "value": "2cpBmR3FqGKWi5EyUbpRY8",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "their_role": {
                          "value": "requester",
                          "type": "enum"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new connection invitation",
      "audiences": [],
      "operationId": "create_connection_invitation",
      "tags": [
        "connection"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Alias",
          "name": "alias",
          "schema": {
            "generatedName": "CreateConnectionInvitationRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateConnectionInvitationRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Auto-accept connection (defaults to configuration)",
          "name": "auto_accept",
          "schema": {
            "generatedName": "CreateConnectionInvitationRequestAutoAccept",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateConnectionInvitationRequestAutoAccept",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create invitation for multiple use (default false)",
          "name": "multi_use",
          "schema": {
            "generatedName": "CreateConnectionInvitationRequestMultiUse",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateConnectionInvitationRequestMultiUse",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create invitation from public DID (default false)",
          "name": "public",
          "schema": {
            "generatedName": "CreateConnectionInvitationRequestPublic",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateConnectionInvitationRequestPublic",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CreateConnectionInvitationRequest",
      "request": {
        "schema": {
          "generatedName": "CreateConnectionInvitationRequestBody",
          "schema": "CreateInvitationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateConnectionInvitationResponse",
          "schema": "InvitationResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/create-invitation",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "mediation_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "my_label": {
                "value": {
                  "value": "Bob",
                  "type": "string"
                },
                "type": "primitive"
              },
              "recipient_keys": {
                "value": [
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "routing_keys": {
                "value": [
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "service_endpoint": {
                "value": {
                  "value": "http://192.168.56.102:8020",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation": {
                  "properties": {
                    "@id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "@type": {
                      "value": {
                        "value": "https://didcomm.org/my-family/1.0/my-message-type",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "imageUrl": {
                      "value": {
                        "value": "http://192.168.56.101/img/logo.jpg",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "Bob",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "recipientKeys": {
                      "value": [
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "routingKeys": {
                      "value": [
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "serviceEndpoint": {
                      "value": {
                        "value": "http://192.168.56.101:8020",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "invitation_url": {
                  "value": {
                    "value": "http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new static connection",
      "audiences": [],
      "operationId": "create_static_connection",
      "tags": [
        "connection"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateStaticConnectionRequest",
      "request": {
        "schema": {
          "generatedName": "CreateStaticConnectionRequest",
          "schema": "ConnectionStaticRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateStaticConnectionResponse",
          "schema": "ConnectionStaticResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/create-static",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "alias": {
                "value": {
                  "value": "alias",
                  "type": "string"
                },
                "type": "primitive"
              },
              "my_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "my_seed": {
                "value": {
                  "value": "my_seed",
                  "type": "string"
                },
                "type": "primitive"
              },
              "their_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "their_endpoint": {
                "value": {
                  "value": "https://myhost:8021",
                  "type": "string"
                },
                "type": "primitive"
              },
              "their_label": {
                "value": {
                  "value": "their_label",
                  "type": "string"
                },
                "type": "primitive"
              },
              "their_seed": {
                "value": {
                  "value": "their_seed",
                  "type": "string"
                },
                "type": "primitive"
              },
              "their_verkey": {
                "value": {
                  "value": "their_verkey",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_endpoint": {
                  "value": {
                    "value": "https://myhost:8021",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_verkey": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "record": {
                  "properties": {
                    "accept": {
                      "value": "auto",
                      "type": "enum"
                    },
                    "alias": {
                      "value": {
                        "value": "Bob, providing quotes",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "connection_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "connection_protocol": {
                      "value": "connections/1.0",
                      "type": "enum"
                    },
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "No DIDDoc provided; cannot connect to public DID",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "inbound_connection_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "invitation_key": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "invitation_mode": {
                      "value": "once",
                      "type": "enum"
                    },
                    "invitation_msg_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "my_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "request_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "rfc23_state": {
                      "value": {
                        "value": "invitation-sent",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "routing_state": {
                      "value": "active",
                      "type": "enum"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "their_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "their_label": {
                      "value": {
                        "value": "Bob",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "their_public_did": {
                      "value": {
                        "value": "2cpBmR3FqGKWi5EyUbpRY8",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "their_role": {
                      "value": "requester",
                      "type": "enum"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_verkey": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Receive a new connection invitation",
      "audiences": [],
      "operationId": "receive_connection_invitation",
      "tags": [
        "connection"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Alias",
          "name": "alias",
          "schema": {
            "generatedName": "ReceiveConnectionInvitationRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ReceiveConnectionInvitationRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Auto-accept connection (defaults to configuration)",
          "name": "auto_accept",
          "schema": {
            "generatedName": "ReceiveConnectionInvitationRequestAutoAccept",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReceiveConnectionInvitationRequestAutoAccept",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifier for active mediation record to be used",
          "name": "mediation_id",
          "schema": {
            "generatedName": "ReceiveConnectionInvitationRequestMediationId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "ReceiveConnectionInvitationRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ReceiveConnectionInvitationRequest",
      "request": {
        "schema": {
          "generatedName": "ReceiveConnectionInvitationRequestBody",
          "schema": "ReceiveInvitationRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReceiveConnectionInvitationResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/receive-invitation",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "@id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "imageUrl": {
                "value": {
                  "value": "http://192.168.56.101/img/logo.jpg",
                  "type": "string"
                },
                "type": "primitive"
              },
              "label": {
                "value": {
                  "value": "Bob",
                  "type": "string"
                },
                "type": "primitive"
              },
              "recipientKeys": {
                "value": [
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "routingKeys": {
                "value": [
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "serviceEndpoint": {
                "value": {
                  "value": "http://192.168.56.101:8020",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch a single connection record",
      "audiences": [],
      "operationId": "get_connection_record",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConnectionRecordRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetConnectionRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetConnectionRecordResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/connections/{conn_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove an existing connection record",
      "audiences": [],
      "operationId": "delete_connection_record",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteConnectionRecordRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteConnectionRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteConnectionRecordResponse",
          "schema": "ConnectionModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/connections/{conn_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Accept a stored connection invitation",
      "audiences": [],
      "operationId": "accept_connection_invitation",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AcceptConnectionInvitationRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Identifier for active mediation record to be used",
          "name": "mediation_id",
          "schema": {
            "generatedName": "AcceptConnectionInvitationRequestMediationId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "AcceptConnectionInvitationRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "My URL endpoint",
          "name": "my_endpoint",
          "schema": {
            "generatedName": "AcceptConnectionInvitationRequestMyEndpoint",
            "value": {
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "type": "string"
              },
              "generatedName": "AcceptConnectionInvitationRequestMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Label for connection",
          "name": "my_label",
          "schema": {
            "generatedName": "AcceptConnectionInvitationRequestMyLabel",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AcceptConnectionInvitationRequestMyLabel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AcceptConnectionInvitationRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AcceptConnectionInvitationResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/accept-invitation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Accept a stored connection request",
      "audiences": [],
      "operationId": "accept_connection_request",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AcceptConnectionRequestRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "My URL endpoint",
          "name": "my_endpoint",
          "schema": {
            "generatedName": "AcceptConnectionRequestRequestMyEndpoint",
            "value": {
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "type": "string"
              },
              "generatedName": "AcceptConnectionRequestRequestMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AcceptConnectionRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AcceptConnectionRequestResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/accept-request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch connection remote endpoint",
      "audiences": [],
      "operationId": "get_connection_endpoint",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConnectionEndpointRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetConnectionEndpointRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetConnectionEndpointResponse",
          "schema": "EndpointsResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/connections/{conn_id}/endpoints",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "my_endpoint": {
                  "value": {
                    "value": "https://myhost:8021",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_endpoint": {
                  "value": {
                    "value": "https://myhost:8021",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign another connection as the inbound connection",
      "audiences": [],
      "operationId": "set_inbound_connection",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetInboundConnectionRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Inbound connection identifier",
          "name": "ref_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetInboundConnectionRequestRefId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SetInboundConnectionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetInboundConnectionResponse",
          "schema": "ConnectionModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/establish-inbound/{ref_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "ref_id",
              "value": {
                "value": {
                  "value": "ref_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch connection metadata",
      "audiences": [],
      "operationId": "get_connection_metadata",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetConnectionMetadataRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Key to retrieve.",
          "name": "key",
          "schema": {
            "generatedName": "GetConnectionMetadataRequestKey",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetConnectionMetadataRequestKey",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetConnectionMetadataRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetConnectionMetadataResponse",
          "schema": "ConnectionMetadata",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/connections/{conn_id}/metadata",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set connection metadata",
      "audiences": [],
      "operationId": "set_connection_metadata",
      "tags": [
        "connection"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetConnectionMetadataRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SetConnectionMetadataRequest",
      "request": {
        "schema": {
          "generatedName": "SetConnectionMetadataRequest",
          "schema": "ConnectionMetadataSetRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetConnectionMetadataResponse",
          "schema": "ConnectionMetadata",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/metadata",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "metadata": {
                "properties": {},
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a basic message to a connection",
      "audiences": [],
      "operationId": "send_message",
      "tags": [
        "basicmessage"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SendMessageRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendMessageRequest",
      "request": {
        "schema": {
          "generatedName": "SendMessageRequest",
          "schema": "SendMessage",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendMessageResponse",
          "schema": "BasicMessageModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/send-message",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "content": {
                "value": {
                  "value": "Hello",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a trust ping to a connection",
      "audiences": [],
      "operationId": "send_ping",
      "tags": [
        "trustping"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SendPingRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendPingRequest",
      "request": {
        "schema": {
          "generatedName": "SendPingRequest",
          "schema": "PingRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendPingResponse",
          "schema": "PingRequestResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/send-ping",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "thread_id": {
                  "value": {
                    "value": "thread_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Start an introduction between two connections",
      "audiences": [],
      "operationId": "start_connection_introduction",
      "tags": [
        "introduction"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StartConnectionIntroductionRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Target connection identifier",
          "name": "target_connection_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "StartConnectionIntroductionRequestTargetConnectionId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Message",
          "name": "message",
          "schema": {
            "generatedName": "StartConnectionIntroductionRequestMessage",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "StartConnectionIntroductionRequestMessage",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "StartConnectionIntroductionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "StartConnectionIntroductionResponse",
          "schema": "IntroModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/connections/{conn_id}/start-introduction",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "target_connection_id",
              "value": {
                "value": {
                  "value": "target_connection_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a credential definition to the ledger",
      "audiences": [],
      "operationId": "publish_credential_definition",
      "tags": [
        "credential-definition"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "PublishCredentialDefinitionRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PublishCredentialDefinitionRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "PublishCredentialDefinitionRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PublishCredentialDefinitionRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PublishCredentialDefinitionRequest",
      "request": {
        "schema": {
          "generatedName": "PublishCredentialDefinitionRequestBody",
          "schema": "CredentialDefinitionSendRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PublishCredentialDefinitionResponse",
          "schema": "TxnOrCredentialDefinitionSendResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/credential-definitions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "revocation_registry_size": {
                "value": {
                  "value": 1000,
                  "type": "int"
                },
                "type": "primitive"
              },
              "schema_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "support_revocation": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "tag": {
                "value": {
                  "value": "default",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "sent": {
                  "properties": {
                    "credential_definition_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Search for matching credential definitions that agent originated",
      "audiences": [],
      "operationId": "get_created_cred_defs",
      "tags": [
        "credential-definition"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Credential definition id",
          "name": "cred_def_id",
          "schema": {
            "generatedName": "GetCreatedCredDefsRequestCredDefId",
            "value": {
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "type": "string"
              },
              "generatedName": "GetCreatedCredDefsRequestCredDefId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Issuer DID",
          "name": "issuer_did",
          "schema": {
            "generatedName": "GetCreatedCredDefsRequestIssuerDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "type": "string"
              },
              "generatedName": "GetCreatedCredDefsRequestIssuerDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema identifier",
          "name": "schema_id",
          "schema": {
            "generatedName": "GetCreatedCredDefsRequestSchemaId",
            "value": {
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                "type": "string"
              },
              "generatedName": "GetCreatedCredDefsRequestSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema issuer DID",
          "name": "schema_issuer_did",
          "schema": {
            "generatedName": "GetCreatedCredDefsRequestSchemaIssuerDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "type": "string"
              },
              "generatedName": "GetCreatedCredDefsRequestSchemaIssuerDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema name",
          "name": "schema_name",
          "schema": {
            "generatedName": "GetCreatedCredDefsRequestSchemaName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetCreatedCredDefsRequestSchemaName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema version",
          "name": "schema_version",
          "schema": {
            "generatedName": "GetCreatedCredDefsRequestSchemaVersion",
            "value": {
              "schema": {
                "pattern": "^[0-9.]+$",
                "type": "string"
              },
              "generatedName": "GetCreatedCredDefsRequestSchemaVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetCreatedCredDefsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCreatedCredDefsResponse",
          "schema": "CredentialDefinitionsCreatedResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credential-definitions/created",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "credential_definition_ids": {
                  "value": [
                    {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Gets a credential definition from the ledger",
      "audiences": [],
      "operationId": "get_credential_definition",
      "tags": [
        "credential-definition"
      ],
      "pathParameters": [
        {
          "description": "Credential definition identifier",
          "name": "cred_def_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
              "type": "string"
            },
            "generatedName": "GetCredentialDefinitionRequestCredDefId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetCredentialDefinitionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredentialDefinitionResponse",
          "schema": "CredentialDefinitionGetResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credential-definitions/{cred_def_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_def_id",
              "value": {
                "value": {
                  "value": "cred_def_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "credential_definition": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "schemaId": {
                      "value": {
                        "value": "20",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "ver": {
                      "value": {
                        "value": "1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Writes a credential definition non-secret record to the wallet",
      "audiences": [],
      "operationId": "write_credential_definition",
      "tags": [
        "credential-definition"
      ],
      "pathParameters": [
        {
          "description": "Credential definition identifier",
          "name": "cred_def_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
              "type": "string"
            },
            "generatedName": "WriteCredentialDefinitionRequestCredDefId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WriteCredentialDefinitionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "WriteCredentialDefinitionResponse",
          "schema": "CredentialDefinitionGetResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/credential-definitions/{cred_def_id}/write_record",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_def_id",
              "value": {
                "value": {
                  "value": "cred_def_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "credential_definition": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "schemaId": {
                      "value": {
                        "value": "20",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": {
                                "value": "value",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "type": "unknown"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    "ver": {
                      "value": {
                        "value": "1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get attribute MIME types from wallet",
      "audiences": [],
      "operationId": "get_credential_mime_types",
      "tags": [
        "credentials"
      ],
      "pathParameters": [
        {
          "description": "Credential identifier",
          "name": "credential_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetCredentialMimeTypesRequestCredentialId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetCredentialMimeTypesRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredentialMimeTypesResponse",
          "schema": "AttributeMimeTypesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credential/mime-types/{credential_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "credential_id",
              "value": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "results",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query credential revocation status by id",
      "audiences": [],
      "operationId": "get_revocation_status",
      "tags": [
        "credentials"
      ],
      "pathParameters": [
        {
          "description": "Credential identifier",
          "name": "credential_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetRevocationStatusRequestCredentialId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Earliest epoch of revocation status interval of interest",
          "name": "from",
          "schema": {
            "generatedName": "GetRevocationStatusRequestFrom",
            "value": {
              "schema": {
                "pattern": "^[0-9]*$",
                "type": "string"
              },
              "generatedName": "GetRevocationStatusRequestFrom",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Latest epoch of revocation status interval of interest",
          "name": "to",
          "schema": {
            "generatedName": "GetRevocationStatusRequestTo",
            "value": {
              "schema": {
                "pattern": "^[0-9]*$",
                "type": "string"
              },
              "generatedName": "GetRevocationStatusRequestTo",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetRevocationStatusRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetRevocationStatusResponse",
          "schema": "CredRevokedResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credential/revoked/{credential_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "credential_id",
              "value": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "revoked": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch W3C credential from wallet by id",
      "audiences": [],
      "operationId": "get_w3c_credential",
      "tags": [
        "credentials"
      ],
      "pathParameters": [
        {
          "description": "Credential identifier",
          "name": "credential_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetW3CCredentialRequestCredentialId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetW3CCredentialRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetW3CCredentialResponse",
          "schema": "VCRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credential/w3c/{credential_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "credential_id",
              "value": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "contexts": {
                  "value": [
                    {
                      "value": {
                        "value": "https://myhost:8021",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "https://myhost:8021",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "cred_tags": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "cred_tags",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "expanded_types": {
                  "value": [
                    {
                      "value": {
                        "value": "https://w3id.org/citizenship#PermanentResidentCard",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "https://w3id.org/citizenship#PermanentResidentCard",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "given_id": {
                  "value": {
                    "value": "http://example.edu/credentials/3732",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "issuer_id": {
                  "value": {
                    "value": "https://example.edu/issuers/14",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "proof_types": {
                  "value": [
                    {
                      "value": {
                        "value": "Ed25519Signature2018",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "Ed25519Signature2018",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "record_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "schema_ids": {
                  "value": [
                    {
                      "value": {
                        "value": "https://example.org/examples/degree.json",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "https://example.org/examples/degree.json",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "subject_ids": {
                  "value": [
                    {
                      "value": {
                        "value": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove W3C credential from wallet by id",
      "audiences": [],
      "operationId": "delete_w3c_credential",
      "tags": [
        "credentials"
      ],
      "pathParameters": [
        {
          "description": "Credential identifier",
          "name": "credential_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteW3CCredentialRequestCredentialId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteW3CCredentialRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteW3CCredentialResponse",
          "schema": "HolderModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/credential/w3c/{credential_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "credential_id",
              "value": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch credential from wallet by id",
      "audiences": [],
      "operationId": "get_credential_record",
      "tags": [
        "credentials"
      ],
      "pathParameters": [
        {
          "description": "Credential identifier",
          "name": "credential_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetCredentialRecordRequestCredentialId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetCredentialRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredentialRecordResponse",
          "schema": "IndyCredInfo",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credential/{credential_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "credential_id",
              "value": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "attrs": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": "alice",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    }
                  ],
                  "type": "map"
                },
                "cred_def_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_rev_id": {
                  "value": {
                    "value": "12345",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referent": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rev_reg_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove credential from wallet by id",
      "audiences": [],
      "operationId": "delete_credential_record",
      "tags": [
        "credentials"
      ],
      "pathParameters": [
        {
          "description": "Credential identifier",
          "name": "credential_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteCredentialRecordRequestCredentialId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteCredentialRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteCredentialRecordResponse",
          "schema": "HolderModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/credential/{credential_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "credential_id",
              "value": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch credentials from wallet",
      "audiences": [],
      "operationId": "get_credentials",
      "tags": [
        "credentials"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Maximum number to retrieve",
          "name": "count",
          "schema": {
            "generatedName": "GetCredentialsRequestCount",
            "value": {
              "schema": {
                "pattern": "^[1-9][0-9]*$",
                "type": "string"
              },
              "generatedName": "GetCredentialsRequestCount",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Start index",
          "name": "start",
          "schema": {
            "generatedName": "GetCredentialsRequestStart",
            "value": {
              "schema": {
                "pattern": "^[0-9]*$",
                "type": "string"
              },
              "generatedName": "GetCredentialsRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "(JSON) WQL query",
          "name": "wql",
          "schema": {
            "generatedName": "GetCredentialsRequestWql",
            "value": {
              "schema": {
                "pattern": "^{.*}$",
                "type": "string"
              },
              "generatedName": "GetCredentialsRequestWql",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetCredentialsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredentialsResponse",
          "schema": "CredInfoList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/credentials",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "attrs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "alice",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "cred_def_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_rev_id": {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referent": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "rev_reg_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schema_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "attrs": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "alice",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "cred_def_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_rev_id": {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referent": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "rev_reg_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schema_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch W3C credentials from wallet",
      "audiences": [],
      "operationId": "get_w3c_credentials",
      "tags": [
        "credentials"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Maximum number to retrieve",
          "name": "count",
          "schema": {
            "generatedName": "GetW3CCredentialsRequestCount",
            "value": {
              "schema": {
                "pattern": "^[1-9][0-9]*$",
                "type": "string"
              },
              "generatedName": "GetW3CCredentialsRequestCount",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Start index",
          "name": "start",
          "schema": {
            "generatedName": "GetW3CCredentialsRequestStart",
            "value": {
              "schema": {
                "pattern": "^[0-9]*$",
                "type": "string"
              },
              "generatedName": "GetW3CCredentialsRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "(JSON) WQL query",
          "name": "wql",
          "schema": {
            "generatedName": "GetW3CCredentialsRequestWql",
            "value": {
              "schema": {
                "pattern": "^{.*}$",
                "type": "string"
              },
              "generatedName": "GetW3CCredentialsRequestWql",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetW3CCredentialsRequest",
      "request": {
        "schema": {
          "generatedName": "GetW3CCredentialsRequestBody",
          "schema": "W3CCredentialsListRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetW3CCredentialsResponse",
          "schema": "VCRecordList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/credentials/w3c",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "contexts": {
                "value": [
                  {
                    "value": {
                      "value": "https://myhost:8021",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "https://myhost:8021",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "given_id": {
                "value": {
                  "value": "given_id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "issuer_id": {
                "value": {
                  "value": "issuer_id",
                  "type": "string"
                },
                "type": "primitive"
              },
              "max_results": {
                "value": {
                  "value": 0,
                  "type": "int"
                },
                "type": "primitive"
              },
              "proof_types": {
                "value": [
                  {
                    "value": {
                      "value": "Ed25519Signature2018",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "Ed25519Signature2018",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "schema_ids": {
                "value": [
                  {
                    "value": {
                      "value": "https://myhost:8021",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "https://myhost:8021",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "subject_ids": {
                "value": [
                  {
                    "value": {
                      "value": "subject_ids",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "subject_ids",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "tag_query": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "tag_query",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              },
              "types": {
                "value": [
                  {
                    "value": {
                      "value": "https://myhost:8021",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "https://myhost:8021",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "contexts": {
                          "value": [
                            {
                              "value": {
                                "value": "https://myhost:8021",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "https://myhost:8021",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "cred_tags": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "cred_tags",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "expanded_types": {
                          "value": [
                            {
                              "value": {
                                "value": "https://w3id.org/citizenship#PermanentResidentCard",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "https://w3id.org/citizenship#PermanentResidentCard",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "given_id": {
                          "value": {
                            "value": "http://example.edu/credentials/3732",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "issuer_id": {
                          "value": {
                            "value": "https://example.edu/issuers/14",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "proof_types": {
                          "value": [
                            {
                              "value": {
                                "value": "Ed25519Signature2018",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "Ed25519Signature2018",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "record_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schema_ids": {
                          "value": [
                            {
                              "value": {
                                "value": "https://example.org/examples/degree.json",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "https://example.org/examples/degree.json",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "subject_ids": {
                          "value": [
                            {
                              "value": {
                                "value": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "contexts": {
                          "value": [
                            {
                              "value": {
                                "value": "https://myhost:8021",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "https://myhost:8021",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "cred_tags": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "cred_tags",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "expanded_types": {
                          "value": [
                            {
                              "value": {
                                "value": "https://w3id.org/citizenship#PermanentResidentCard",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "https://w3id.org/citizenship#PermanentResidentCard",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "given_id": {
                          "value": {
                            "value": "http://example.edu/credentials/3732",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "issuer_id": {
                          "value": {
                            "value": "https://example.edu/issuers/14",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "proof_types": {
                          "value": [
                            {
                              "value": {
                                "value": "Ed25519Signature2018",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "Ed25519Signature2018",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "record_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "schema_ids": {
                          "value": [
                            {
                              "value": {
                                "value": "https://example.org/examples/degree.json",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "https://example.org/examples/degree.json",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "subject_ids": {
                          "value": [
                            {
                              "value": {
                                "value": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create and send a request against public DID's implicit invitation",
      "audiences": [],
      "operationId": "create_didex_request",
      "tags": [
        "did-exchange"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Qualified public DID to which to request connection",
          "name": "their_public_did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$",
              "type": "string"
            },
            "generatedName": "CreateDidexRequestRequestTheirPublicDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Alias for connection",
          "name": "alias",
          "schema": {
            "generatedName": "CreateDidexRequestRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateDidexRequestRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifier for active mediation record to be used",
          "name": "mediation_id",
          "schema": {
            "generatedName": "CreateDidexRequestRequestMediationId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "CreateDidexRequestRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "My URL endpoint",
          "name": "my_endpoint",
          "schema": {
            "generatedName": "CreateDidexRequestRequestMyEndpoint",
            "value": {
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "type": "string"
              },
              "generatedName": "CreateDidexRequestRequestMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Label for connection request",
          "name": "my_label",
          "schema": {
            "generatedName": "CreateDidexRequestRequestMyLabel",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "CreateDidexRequestRequestMyLabel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Use public DID for this connection",
          "name": "use_public_did",
          "schema": {
            "generatedName": "CreateDidexRequestRequestUsePublicDid",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateDidexRequestRequestUsePublicDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CreateDidexRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateDidexRequestResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/didexchange/create-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "their_public_did",
              "value": {
                "value": {
                  "value": "their_public_did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Receive request against public DID's implicit invitation",
      "audiences": [],
      "operationId": "receive_didex_request",
      "tags": [
        "did-exchange"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Alias for connection",
          "name": "alias",
          "schema": {
            "generatedName": "ReceiveDidexRequestRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ReceiveDidexRequestRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Auto-accept connection (defaults to configuration)",
          "name": "auto_accept",
          "schema": {
            "generatedName": "ReceiveDidexRequestRequestAutoAccept",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReceiveDidexRequestRequestAutoAccept",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifier for active mediation record to be used",
          "name": "mediation_id",
          "schema": {
            "generatedName": "ReceiveDidexRequestRequestMediationId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "ReceiveDidexRequestRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "My URL endpoint",
          "name": "my_endpoint",
          "schema": {
            "generatedName": "ReceiveDidexRequestRequestMyEndpoint",
            "value": {
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "type": "string"
              },
              "generatedName": "ReceiveDidexRequestRequestMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ReceiveDidexRequestRequest",
      "request": {
        "schema": {
          "generatedName": "ReceiveDidexRequestRequestBody",
          "schema": "DIDXRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReceiveDidexRequestResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/didexchange/receive-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "@id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "label": {
                "value": {
                  "value": "Request to connect with Bob",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Accept a stored connection invitation",
      "audiences": [],
      "operationId": "accept_didex_invitation",
      "tags": [
        "did-exchange"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AcceptDidexInvitationRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "My URL endpoint",
          "name": "my_endpoint",
          "schema": {
            "generatedName": "AcceptDidexInvitationRequestMyEndpoint",
            "value": {
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "type": "string"
              },
              "generatedName": "AcceptDidexInvitationRequestMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Label for connection request",
          "name": "my_label",
          "schema": {
            "generatedName": "AcceptDidexInvitationRequestMyLabel",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AcceptDidexInvitationRequestMyLabel",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AcceptDidexInvitationRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AcceptDidexInvitationResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/didexchange/{conn_id}/accept-invitation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Accept a stored connection request",
      "audiences": [],
      "operationId": "accept_didex_request",
      "tags": [
        "did-exchange"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AcceptDidexRequestRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Identifier for active mediation record to be used",
          "name": "mediation_id",
          "schema": {
            "generatedName": "AcceptDidexRequestRequestMediationId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "AcceptDidexRequestRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "My URL endpoint",
          "name": "my_endpoint",
          "schema": {
            "generatedName": "AcceptDidexRequestRequestMyEndpoint",
            "value": {
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "type": "string"
              },
              "generatedName": "AcceptDidexRequestRequestMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AcceptDidexRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AcceptDidexRequestResponse",
          "schema": "ConnRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/didexchange/{conn_id}/accept-request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "accept": {
                  "value": "auto",
                  "type": "enum"
                },
                "alias": {
                  "value": {
                    "value": "Bob, providing quotes",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_protocol": {
                  "value": "connections/1.0",
                  "type": "enum"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "No DIDDoc provided; cannot connect to public DID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inbound_connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_key": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_mode": {
                  "value": "once",
                  "type": "enum"
                },
                "invitation_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "my_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "request_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rfc23_state": {
                  "value": {
                    "value": "invitation-sent",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_state": {
                  "value": "active",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_label": {
                  "value": {
                    "value": "Bob",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_public_did": {
                  "value": {
                    "value": "2cpBmR3FqGKWi5EyUbpRY8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "their_role": {
                  "value": "requester",
                  "type": "enum"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query supported features",
      "audiences": [],
      "operationId": "get_v20_features_queries",
      "tags": [
        "discover-features v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier, if none specified, then the query will provide features for this agent.",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetV20FeaturesQueriesRequestConnectionId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV20FeaturesQueriesRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Goal-code feature-type query",
          "name": "query_goal_code",
          "schema": {
            "generatedName": "GetV20FeaturesQueriesRequestQueryGoalCode",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV20FeaturesQueriesRequestQueryGoalCode",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Protocol feature-type query",
          "name": "query_protocol",
          "schema": {
            "generatedName": "GetV20FeaturesQueriesRequestQueryProtocol",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV20FeaturesQueriesRequestQueryProtocol",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetV20FeaturesQueriesRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetV20FeaturesQueriesResponse",
          "schema": "V20DiscoveryExchangeResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/discover-features-2.0/queries",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Discover Features v2.0 records",
      "audiences": [],
      "operationId": "get_v20_feature_records",
      "tags": [
        "discover-features v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetV20FeatureRecordsRequestConnectionId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV20FeatureRecordsRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetV20FeatureRecordsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetV20FeatureRecordsResponse",
          "schema": "V20DiscoveryExchangeListResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/discover-features-2.0/records",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "disclosures": {
                          "properties": {
                            "@id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "@type": {
                              "value": {
                                "value": "https://didcomm.org/my-family/1.0/my-message-type",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "disclosures": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "value",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "discovery_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "queries_msg": {
                          "properties": {
                            "@id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "@type": {
                              "value": {
                                "value": "https://didcomm.org/my-family/1.0/my-message-type",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "disclosures": {
                          "properties": {
                            "@id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "@type": {
                              "value": {
                                "value": "https://didcomm.org/my-family/1.0/my-message-type",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "disclosures": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "value",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "discovery_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "queries_msg": {
                          "properties": {
                            "@id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "@type": {
                              "value": {
                                "value": "https://didcomm.org/my-family/1.0/my-message-type",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query supported features",
      "audiences": [],
      "operationId": "get_v10_features_query",
      "tags": [
        "discover-features"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Comment",
          "name": "comment",
          "schema": {
            "generatedName": "GetV10FeaturesQueryRequestComment",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV10FeaturesQueryRequestComment",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Connection identifier, if none specified, then the query will provide features for this agent.",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetV10FeaturesQueryRequestConnectionId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV10FeaturesQueryRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Protocol feature query",
          "name": "query",
          "schema": {
            "generatedName": "GetV10FeaturesQueryRequestQuery",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV10FeaturesQueryRequestQuery",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetV10FeaturesQueryRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetV10FeaturesQueryResponse",
          "schema": "V10DiscoveryRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/discover-features/query",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "discovery_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Discover Features records",
      "audiences": [],
      "operationId": "get_v10_feature_records",
      "tags": [
        "discover-features"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetV10FeatureRecordsRequestConnectionId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetV10FeatureRecordsRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetV10FeatureRecordsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetV10FeatureRecordsResponse",
          "schema": "V10DiscoveryExchangeListResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/discover-features/records",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "discovery_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "discovery_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a credential record without sending (generally for use with Out-Of-Band)",
      "audiences": [],
      "operationId": "create_credential_record",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateCredentialRecordRequest",
      "request": {
        "schema": {
          "generatedName": "CreateCredentialRecordRequest",
          "schema": "V20IssueCredSchemaCore",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateCredentialRecordResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/2.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "filter": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a credential offer, independent of any proposal or connection",
      "audiences": [],
      "operationId": "create_free_credential_offer",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateFreeCredentialOfferRequest",
      "request": {
        "schema": {
          "generatedName": "CreateFreeCredentialOfferRequest",
          "schema": "V20CredOfferConnFreeRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateFreeCredentialOfferResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/create-offer",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_issue": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/2.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "filter": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch all credential exchange records",
      "audiences": [],
      "operationId": "get_matching_cred_ex_records-v2",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsV2RequestConnectionId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingCredExRecordsV2RequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Role assigned in credential exchange",
          "name": "role",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsV2RequestRole",
            "value": {
              "generatedName": "GetMatchingCredExRecordsV2RequestRole",
              "values": [
                {
                  "generatedName": "issuer",
                  "value": "issuer",
                  "casing": {}
                },
                {
                  "generatedName": "holder",
                  "value": "holder",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Credential exchange state",
          "name": "state",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsV2RequestState",
            "value": {
              "generatedName": "GetMatchingCredExRecordsV2RequestState",
              "values": [
                {
                  "generatedName": "ProposalSent",
                  "value": "proposal-sent",
                  "casing": {}
                },
                {
                  "generatedName": "ProposalReceived",
                  "value": "proposal-received",
                  "casing": {}
                },
                {
                  "generatedName": "OfferSent",
                  "value": "offer-sent",
                  "casing": {}
                },
                {
                  "generatedName": "OfferReceived",
                  "value": "offer-received",
                  "casing": {}
                },
                {
                  "generatedName": "RequestSent",
                  "value": "request-sent",
                  "casing": {}
                },
                {
                  "generatedName": "RequestReceived",
                  "value": "request-received",
                  "casing": {}
                },
                {
                  "generatedName": "CredentialIssued",
                  "value": "credential-issued",
                  "casing": {}
                },
                {
                  "generatedName": "CredentialReceived",
                  "value": "credential-received",
                  "casing": {}
                },
                {
                  "generatedName": "done",
                  "value": "done",
                  "casing": {}
                },
                {
                  "generatedName": "CredentialRevoked",
                  "value": "credential-revoked",
                  "casing": {}
                },
                {
                  "generatedName": "abandoned",
                  "value": "abandoned",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Thread identifier",
          "name": "thread_id",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsV2RequestThreadId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingCredExRecordsV2RequestThreadId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingCredExRecordsV2Request",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingCredExRecordsV2Response",
          "schema": "V20CredExRecordListResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/issue-credential-2.0/records",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "indy": {
                          "properties": {
                            "created_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_indy_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_id_stored": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_rev_id": {
                              "value": {
                                "value": "12345",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "rev_reg_id": {
                              "value": {
                                "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": {
                                "value": "active",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "ld_proof": {
                          "properties": {
                            "created_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_ld_proof_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_id_stored": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": {
                                "value": "active",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "indy": {
                          "properties": {
                            "created_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_indy_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_id_stored": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_rev_id": {
                              "value": {
                                "value": "12345",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "rev_reg_id": {
                              "value": {
                                "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": {
                                "value": "active",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "ld_proof": {
                          "properties": {
                            "created_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_ex_ld_proof_id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "cred_id_stored": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": {
                                "value": "active",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "updated_at": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch a single credential exchange record",
      "audiences": [],
      "operationId": "get_cred_ex_record",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "GetCredExRecordRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetCredExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredExRecordResponse",
          "schema": "V20CredExRecordDetail",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/issue-credential-2.0/records/{cred_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "indy": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_indy_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_id_stored": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_rev_id": {
                      "value": {
                        "value": "12345",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "rev_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "ld_proof": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_ld_proof_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_id_stored": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove an existing credential exchange record",
      "audiences": [],
      "operationId": "delete_cred_ex_record",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "DeleteCredExRecordRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteCredExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteCredExRecordResponse",
          "schema": "V20IssueCredentialModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/issue-credential-2.0/records/{cred_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential",
      "audiences": [],
      "operationId": "issue_credential_to_holder",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "IssueCredentialToHolderRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "IssueCredentialToHolderRequest",
      "request": {
        "schema": {
          "generatedName": "IssueCredentialToHolderRequest",
          "schema": "V20CredIssueRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "IssueCredentialToHolderResponse",
          "schema": "V20CredExRecordDetail",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/records/{cred_ex_id}/issue",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "indy": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_indy_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_id_stored": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_rev_id": {
                      "value": {
                        "value": "12345",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "rev_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "ld_proof": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_ld_proof_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_id_stored": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a problem report for credential exchange",
      "audiences": [],
      "operationId": "report_cred_ex_problem",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "ReportCredExProblemRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReportCredExProblemRequest",
      "request": {
        "schema": {
          "generatedName": "ReportCredExProblemRequest",
          "schema": "V20CredIssueProblemReportRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReportCredExProblemResponse",
          "schema": "V20IssueCredentialModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/records/{cred_ex_id}/problem-report",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "description",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential offer in reference to a proposal with preview",
      "audiences": [],
      "operationId": "send_credential_offer",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendCredentialOfferRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendCredentialOfferRequest",
      "request": {
        "schema": {
          "generatedName": "SendCredentialOfferRequest",
          "schema": "V20CredBoundOfferRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendCredentialOfferResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/records/{cred_ex_id}/send-offer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send issuer a credential request",
      "audiences": [],
      "operationId": "send_credential_request",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendCredentialRequestRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendCredentialRequestRequest",
      "request": {
        "schema": {
          "generatedName": "SendCredentialRequestRequest",
          "schema": "V20CredRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendCredentialRequestResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/records/{cred_ex_id}/send-request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "holder_did": {
                "value": {
                  "value": "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Store a received credential",
      "audiences": [],
      "operationId": "store_received_credential",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "StoreReceivedCredentialRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StoreReceivedCredentialRequest",
      "request": {
        "schema": {
          "generatedName": "StoreReceivedCredentialRequest",
          "schema": "V20CredStoreRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "StoreReceivedCredentialResponse",
          "schema": "V20CredExRecordDetail",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/records/{cred_ex_id}/store",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "credential_id": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "indy": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_indy_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_id_stored": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_rev_id": {
                      "value": {
                        "value": "12345",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "rev_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "ld_proof": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_ld_proof_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_id_stored": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential, automating entire flow",
      "audiences": [],
      "operationId": "send_free_credential",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialRequest",
          "schema": "V20CredExFree",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/send",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/2.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "filter": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "verification_method": {
                "value": {
                  "value": "verification_method",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential offer, independent of any proposal",
      "audiences": [],
      "operationId": "send_free_credential_offer",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialOfferRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialOfferRequest",
          "schema": "V20CredOfferRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialOfferResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/send-offer",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_issue": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/2.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "filter": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send issuer a credential proposal",
      "audiences": [],
      "operationId": "send_free_credential_proposal",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialProposalRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialProposalRequest",
          "schema": "V20CredExFree",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialProposalResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/send-proposal",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/2.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "filter": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "verification_method": {
                "value": {
                  "value": "verification_method",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send issuer a credential request not bound to an existing thread. Indy credentials cannot start at a request",
      "audiences": [],
      "operationId": "send_free_credential_request",
      "tags": [
        "issue-credential v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialRequestRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialRequestRequest",
          "schema": "V20CredRequestFree",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialRequestResponse",
          "schema": "V20CredExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential-2.0/send-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "filter": {
                "properties": {
                  "ld_proof": {
                    "properties": {
                      "credential": {
                        "properties": {
                          "@context": {
                            "value": [
                              {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              },
                              {
                                "value": [
                                  {
                                    "key": {
                                      "value": "key",
                                      "type": "string"
                                    },
                                    "value": {
                                      "value": {
                                        "value": {
                                          "value": "value",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "type": "unknown"
                                    }
                                  }
                                ],
                                "type": "map"
                              }
                            ],
                            "type": "array"
                          },
                          "credentialSubject": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "issuanceDate": {
                            "value": {
                              "value": "2010-01-01 19:23:24+00:00",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "issuer": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "type": {
                            "value": [
                              {
                                "value": {
                                  "value": "VerifiableCredential",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              {
                                "value": {
                                  "value": "AlumniCredential",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "options": {
                        "properties": {
                          "proofType": {
                            "value": {
                              "value": "Ed25519Signature2018",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "holder_did": {
                "value": {
                  "value": "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
                  "type": "string"
                },
                "type": "primitive"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cred_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "The front fell off",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "state": {
                  "value": "done",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a credential record without sending (generally for use with Out-Of-Band)",
      "audiences": [],
      "operationId": "create_credential_record",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateCredentialRecordRequest",
      "request": {
        "schema": {
          "generatedName": "CreateCredentialRecordRequest",
          "schema": "V10CredentialCreate",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateCredentialRecordResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_def_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_proposal": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/1.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "issuer_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_issuer_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_name": {
                "value": {
                  "value": "preferences",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_version": {
                "value": {
                  "value": "1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a credential offer, independent of any proposal or connection",
      "audiences": [],
      "operationId": "create_free_credential_offer",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateFreeCredentialOfferRequest",
      "request": {
        "schema": {
          "generatedName": "CreateFreeCredentialOfferRequest",
          "schema": "V10CredentialConnFreeOfferRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateFreeCredentialOfferResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/create-offer",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_issue": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_def_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/1.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch all credential exchange records",
      "audiences": [],
      "operationId": "get_matching_cred_ex_records",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsRequestConnectionId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingCredExRecordsRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Role assigned in credential exchange",
          "name": "role",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsRequestRole",
            "value": {
              "generatedName": "GetMatchingCredExRecordsRequestRole",
              "values": [
                {
                  "generatedName": "issuer",
                  "value": "issuer",
                  "casing": {}
                },
                {
                  "generatedName": "holder",
                  "value": "holder",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Credential exchange state",
          "name": "state",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsRequestState",
            "value": {
              "generatedName": "GetMatchingCredExRecordsRequestState",
              "values": [
                {
                  "generatedName": "proposal_sent",
                  "value": "proposal_sent",
                  "casing": {}
                },
                {
                  "generatedName": "proposal_received",
                  "value": "proposal_received",
                  "casing": {}
                },
                {
                  "generatedName": "offer_sent",
                  "value": "offer_sent",
                  "casing": {}
                },
                {
                  "generatedName": "offer_received",
                  "value": "offer_received",
                  "casing": {}
                },
                {
                  "generatedName": "request_sent",
                  "value": "request_sent",
                  "casing": {}
                },
                {
                  "generatedName": "request_received",
                  "value": "request_received",
                  "casing": {}
                },
                {
                  "generatedName": "credential_issued",
                  "value": "credential_issued",
                  "casing": {}
                },
                {
                  "generatedName": "credential_received",
                  "value": "credential_received",
                  "casing": {}
                },
                {
                  "generatedName": "credential_acked",
                  "value": "credential_acked",
                  "casing": {}
                },
                {
                  "generatedName": "credential_revoked",
                  "value": "credential_revoked",
                  "casing": {}
                },
                {
                  "generatedName": "abandoned",
                  "value": "abandoned",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Thread identifier",
          "name": "thread_id",
          "schema": {
            "generatedName": "GetMatchingCredExRecordsRequestThreadId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingCredExRecordsRequestThreadId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingCredExRecordsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingCredExRecordsResponse",
          "schema": "V10CredentialExchangeListResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/issue-credential/records",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "auto_issue": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_offer": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_remove": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "credential_definition_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "credential_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "credential_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Credential definition identifier is not set in proposal",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "initiator": {
                          "value": "self",
                          "type": "enum"
                        },
                        "parent_thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "revoc_reg_id": {
                          "value": {
                            "value": "revoc_reg_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "revocation_id": {
                          "value": {
                            "value": "revocation_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "issuer",
                          "type": "enum"
                        },
                        "schema_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "credential_acked",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "auto_issue": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_offer": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_remove": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "credential_definition_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "credential_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "credential_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Credential definition identifier is not set in proposal",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "initiator": {
                          "value": "self",
                          "type": "enum"
                        },
                        "parent_thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "revoc_reg_id": {
                          "value": {
                            "value": "revoc_reg_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "revocation_id": {
                          "value": {
                            "value": "revocation_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "issuer",
                          "type": "enum"
                        },
                        "schema_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "credential_acked",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch a single credential exchange record",
      "audiences": [],
      "operationId": "get_cred_ex_record",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "GetCredExRecordRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetCredExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredExRecordResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/issue-credential/records/{cred_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove an existing credential exchange record",
      "audiences": [],
      "operationId": "delete_cred_ex_record",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "DeleteCredExRecordRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteCredExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteCredExRecordResponse",
          "schema": "IssueCredentialModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/issue-credential/records/{cred_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential",
      "audiences": [],
      "operationId": "issue_credential_to_holder",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "IssueCredentialToHolderRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "IssueCredentialToHolderRequest",
      "request": {
        "schema": {
          "generatedName": "IssueCredentialToHolderRequest",
          "schema": "V10CredentialIssueRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "IssueCredentialToHolderResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/records/{cred_ex_id}/issue",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a problem report for credential exchange",
      "audiences": [],
      "operationId": "report_cred_ex_problem",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "ReportCredExProblemRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReportCredExProblemRequest",
      "request": {
        "schema": {
          "generatedName": "ReportCredExProblemRequest",
          "schema": "V10CredentialProblemReportRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReportCredExProblemResponse",
          "schema": "IssueCredentialModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/records/{cred_ex_id}/problem-report",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "description",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential offer in reference to a proposal with preview",
      "audiences": [],
      "operationId": "send_credential_offer",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendCredentialOfferRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendCredentialOfferRequest",
      "request": {
        "schema": {
          "generatedName": "SendCredentialOfferRequest",
          "schema": "V10CredentialBoundOfferRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendCredentialOfferResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/records/{cred_ex_id}/send-offer",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send issuer a credential request",
      "audiences": [],
      "operationId": "send_credential_request",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendCredentialRequestRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendCredentialRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendCredentialRequestResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/records/{cred_ex_id}/send-request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Store a received credential",
      "audiences": [],
      "operationId": "store_received_credential",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "StoreReceivedCredentialRequestCredExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "StoreReceivedCredentialRequest",
      "request": {
        "schema": {
          "generatedName": "StoreReceivedCredentialRequest",
          "schema": "V10CredentialStoreRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "StoreReceivedCredentialResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/records/{cred_ex_id}/store",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_ex_id",
              "value": {
                "value": {
                  "value": "cred_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "credential_id": {
                "value": {
                  "value": "credential_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential, automating entire flow",
      "audiences": [],
      "operationId": "send_free_credential",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialRequest",
          "schema": "V10CredentialProposalRequestMand",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/send",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_def_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_proposal": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/1.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "issuer_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_issuer_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_name": {
                "value": {
                  "value": "preferences",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_version": {
                "value": {
                  "value": "1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send holder a credential offer, independent of any proposal",
      "audiences": [],
      "operationId": "send_free_credential_offer",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialOfferRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialOfferRequest",
          "schema": "V10CredentialFreeOfferRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialOfferResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/send-offer",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_issue": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_def_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_preview": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/1.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send issuer a credential proposal",
      "audiences": [],
      "operationId": "send_free_credential_proposal",
      "tags": [
        "issue-credential v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreeCredentialProposalRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreeCredentialProposalRequest",
          "schema": "V10CredentialProposalRequestOpt",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreeCredentialProposalResponse",
          "schema": "V10CredentialExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/issue-credential/send-proposal",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_remove": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_def_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "type": "primitive"
              },
              "credential_proposal": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "issue-credential/1.0/credential-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "issuer_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_issuer_did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_name": {
                "value": {
                  "value": "preferences",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_version": {
                "value": {
                  "value": "1.0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_issue": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_offer": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_remove": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_definition_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "credential_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Credential definition identifier is not set in proposal",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "parent_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revoc_reg_id": {
                  "value": {
                    "value": "revoc_reg_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "revocation_id": {
                  "value": {
                    "value": "revocation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "issuer",
                  "type": "enum"
                },
                "schema_id": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "credential_acked",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sign a JSON-LD structure and return it",
      "audiences": [],
      "operationId": "sign",
      "tags": [
        "jsonld"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SignRequest",
      "request": {
        "schema": {
          "generatedName": "SignRequest",
          "schema": "SignRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SignResponse",
          "schema": "SignResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/jsonld/sign",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "doc": {
                "properties": {
                  "credential": {
                    "properties": {},
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "proofPurpose": {
                        "value": {
                          "value": "proofPurpose",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "verificationMethod": {
                        "value": {
                          "value": "verificationMethod",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "verkey": {
                "value": {
                  "value": "verkey",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "error": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Verify a JSON-LD structure.",
      "audiences": [],
      "operationId": "verify",
      "tags": [
        "jsonld"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "VerifyRequest",
      "request": {
        "schema": {
          "generatedName": "VerifyRequest",
          "schema": "VerifyRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "VerifyResponse",
          "schema": "VerifyResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/jsonld/verify",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "doc": {
                "properties": {
                  "proof": {
                    "properties": {
                      "proofPurpose": {
                        "value": {
                          "value": "proofPurpose",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "verificationMethod": {
                        "value": {
                          "value": "verificationMethod",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "verkey": {
                "value": {
                  "value": "verkey",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "error": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "valid": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the endpoint for a DID from the ledger.",
      "audiences": [],
      "operationId": "get_published_did_endpoint",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "GetPublishedDidEndpointRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Endpoint type of interest (default 'Endpoint')",
          "name": "endpoint_type",
          "schema": {
            "generatedName": "GetPublishedDidEndpointRequestEndpointType",
            "value": {
              "generatedName": "GetPublishedDidEndpointRequestEndpointType",
              "values": [
                {
                  "generatedName": "Endpoint",
                  "value": "Endpoint",
                  "casing": {}
                },
                {
                  "generatedName": "Profile",
                  "value": "Profile",
                  "casing": {}
                },
                {
                  "generatedName": "LinkedDomains",
                  "value": "LinkedDomains",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetPublishedDidEndpointRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetPublishedDidEndpointResponse",
          "schema": "GetDIDEndpointResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/ledger/did-endpoint",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "endpoint": {
                  "value": {
                    "value": "https://myhost:8021",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the verkey for a DID from the ledger.",
      "audiences": [],
      "operationId": "get_did_verkey",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "GetDidVerkeyRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetDidVerkeyRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetDidVerkeyResponse",
          "schema": "GetDIDVerkeyResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/ledger/did-verkey",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "verkey": {
                  "value": {
                    "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get the role from the NYM registration of a public DID.",
      "audiences": [],
      "operationId": "get_did_nym_role",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "GetDidNymRoleRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetDidNymRoleRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetDidNymRoleResponse",
          "schema": "GetNymRoleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/ledger/get-nym-role",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "role": {
                  "value": "ENDORSER",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the multiple ledger configuration currently in use",
      "audiences": [],
      "operationId": "get_multiple_ledger_config",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetMultipleLedgerConfigRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMultipleLedgerConfigResponse",
          "schema": "LedgerConfigList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/ledger/multiple/config",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "ledger_config_list": {
                  "value": [
                    {
                      "properties": {
                        "genesis_file": {
                          "value": {
                            "value": "genesis_file",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "genesis_transactions": {
                          "value": {
                            "value": "genesis_transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "genesis_url": {
                          "value": {
                            "value": "genesis_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "is_production": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "genesis_file": {
                          "value": {
                            "value": "genesis_file",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "genesis_transactions": {
                          "value": {
                            "value": "genesis_transactions",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "genesis_url": {
                          "value": {
                            "value": "genesis_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "is_production": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the current write ledger",
      "audiences": [],
      "operationId": "get_write_ledger",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetWriteLedgerRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetWriteLedgerResponse",
          "schema": "WriteLedgerRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/ledger/multiple/get-write-ledger",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "ledger_id": {
                  "value": {
                    "value": "ledger_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a NYM registration to the ledger.",
      "audiences": [],
      "operationId": "register_nym",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID to register",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "RegisterNymRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Verification key",
          "name": "verkey",
          "schema": {
            "schema": {
              "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
              "type": "string"
            },
            "generatedName": "RegisterNymRequestVerkey",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Alias",
          "name": "alias",
          "schema": {
            "generatedName": "RegisterNymRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisterNymRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "RegisterNymRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisterNymRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "RegisterNymRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "RegisterNymRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Role",
          "name": "role",
          "schema": {
            "generatedName": "RegisterNymRequestRole",
            "value": {
              "generatedName": "RegisterNymRequestRole",
              "values": [
                {
                  "generatedName": "STEWARD",
                  "value": "STEWARD",
                  "casing": {}
                },
                {
                  "generatedName": "TRUSTEE",
                  "value": "TRUSTEE",
                  "casing": {}
                },
                {
                  "generatedName": "ENDORSER",
                  "value": "ENDORSER",
                  "casing": {}
                },
                {
                  "generatedName": "NETWORK_MONITOR",
                  "value": "NETWORK_MONITOR",
                  "casing": {}
                },
                {
                  "generatedName": "reset",
                  "value": "reset",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RegisterNymRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RegisterNymResponse",
          "schema": "TxnOrRegisterLedgerNymResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/ledger/register-nym",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "verkey",
              "value": {
                "value": {
                  "value": "verkey",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "success": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Rotate key pair for public DID.",
      "audiences": [],
      "operationId": "rotate_public_did_keypair",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RotatePublicDidKeypairRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RotatePublicDidKeypairResponse",
          "schema": "LedgerModulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PATCH",
      "path": "/ledger/rotate-public-did-keypair",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the current transaction author agreement, if any",
      "audiences": [],
      "operationId": "get_taa",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetTaaRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetTaaResponse",
          "schema": "TAAResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/ledger/taa",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "aml_record": {
                      "properties": {
                        "aml": {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "aml",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        "amlContext": {
                          "value": {
                            "value": "amlContext",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": "version",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "taa_accepted": {
                      "properties": {
                        "mechanism": {
                          "value": {
                            "value": "mechanism",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "time": {
                          "value": {
                            "value": 1640995199,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "taa_record": {
                      "properties": {
                        "digest": {
                          "value": {
                            "value": "digest",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": "version",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "taa_required": {
                      "value": {
                        "value": true,
                        "type": "boolean"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Accept the transaction author agreement",
      "audiences": [],
      "operationId": "accept_taa",
      "tags": [
        "ledger"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AcceptTaaRequest",
      "request": {
        "schema": {
          "generatedName": "AcceptTaaRequest",
          "schema": "TAAAccept",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "AcceptTaaResponse",
          "schema": "LedgerModulesResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/ledger/taa/accept",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "mechanism": {
                "value": {
                  "value": "mechanism",
                  "type": "string"
                },
                "type": "primitive"
              },
              "text": {
                "value": {
                  "value": "text",
                  "type": "string"
                },
                "type": "primitive"
              },
              "version": {
                "value": {
                  "value": "version",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get default mediator",
      "audiences": [],
      "operationId": "get_default_mediator",
      "tags": [
        "mediation"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetDefaultMediatorRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetDefaultMediatorResponse",
          "schema": "MediationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/mediation/default-mediator",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "connection_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "endpoint",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediation_id": {
                  "value": {
                    "value": "mediation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "role": {
                  "value": {
                    "value": "role",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Clear default mediator",
      "audiences": [],
      "operationId": "clear_default_mediator",
      "tags": [
        "mediation"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ClearDefaultMediatorRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ClearDefaultMediatorResponse",
          "schema": "MediationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/mediation/default-mediator",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "connection_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "endpoint",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediation_id": {
                  "value": {
                    "value": "mediation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "role": {
                  "value": {
                    "value": "role",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve keylists by connection or role",
      "audiences": [],
      "operationId": "get_keylists",
      "tags": [
        "mediation"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier (optional)",
          "name": "conn_id",
          "schema": {
            "generatedName": "GetKeylistsRequestConnId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetKeylistsRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filer on role, 'client' for keys         mediated by other agents, 'server' for keys         mediated by this agent",
          "name": "role",
          "schema": {
            "generatedName": "GetKeylistsRequestRole",
            "value": {
              "generatedName": "GetKeylistsRequestRole",
              "values": [
                {
                  "generatedName": "client",
                  "value": "client",
                  "casing": {}
                },
                {
                  "generatedName": "server",
                  "value": "server",
                  "casing": {}
                }
              ],
              "default": {
                "generatedName": "server",
                "value": "server",
                "casing": {}
              },
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetKeylistsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetKeylistsResponse",
          "schema": "Keylist",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/mediation/keylists",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "connection_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "recipient_key": {
                          "value": {
                            "value": "recipient_key",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "record_id": {
                          "value": {
                            "value": "record_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "wallet_id": {
                          "value": {
                            "value": "wallet_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "connection_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "recipient_key": {
                          "value": {
                            "value": "recipient_key",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "record_id": {
                          "value": {
                            "value": "record_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "wallet_id": {
                          "value": {
                            "value": "wallet_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send keylist query to mediator",
      "audiences": [],
      "operationId": "send_keylist_query_to_mediator",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "SendKeylistQueryToMediatorRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "limit number of results",
          "name": "paginate_limit",
          "schema": {
            "generatedName": "SendKeylistQueryToMediatorRequestPaginateLimit",
            "value": {
              "schema": {
                "default": -1,
                "type": "int"
              },
              "generatedName": "SendKeylistQueryToMediatorRequestPaginateLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "offset to use in pagination",
          "name": "paginate_offset",
          "schema": {
            "generatedName": "SendKeylistQueryToMediatorRequestPaginateOffset",
            "value": {
              "schema": {
                "default": 0,
                "type": "int"
              },
              "generatedName": "SendKeylistQueryToMediatorRequestPaginateOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SendKeylistQueryToMediatorRequest",
      "request": {
        "schema": {
          "generatedName": "SendKeylistQueryToMediatorRequestBody",
          "schema": "KeylistQueryFilterRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendKeylistQueryToMediatorResponse",
          "schema": "KeylistQuery",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/mediation/keylists/{mediation_id}/send-keylist-query",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "@id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "@type": {
                  "value": {
                    "value": "https://didcomm.org/my-family/1.0/my-message-type",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send keylist update to mediator",
      "audiences": [],
      "operationId": "send_keylist_update_to_mediator",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "SendKeylistUpdateToMediatorRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendKeylistUpdateToMediatorRequest",
      "request": {
        "schema": {
          "generatedName": "SendKeylistUpdateToMediatorRequest",
          "schema": "KeylistUpdateRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendKeylistUpdateToMediatorResponse",
          "schema": "KeylistUpdate",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/mediation/keylists/{mediation_id}/send-keylist-update",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "updates": {
                "value": [
                  {
                    "properties": {
                      "action": {
                        "value": "add",
                        "type": "enum"
                      },
                      "recipient_key": {
                        "value": {
                          "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "action": {
                        "value": "add",
                        "type": "enum"
                      },
                      "recipient_key": {
                        "value": {
                          "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "@id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "@type": {
                  "value": {
                    "value": "https://didcomm.org/my-family/1.0/my-message-type",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updates": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "add",
                          "type": "enum"
                        },
                        "recipient_key": {
                          "value": {
                            "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "action": {
                          "value": "add",
                          "type": "enum"
                        },
                        "recipient_key": {
                          "value": {
                            "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Request mediation from connection",
      "audiences": [],
      "operationId": "request_mediation_for_connection",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RequestMediationForConnectionRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RequestMediationForConnectionRequest",
      "request": {
        "schema": {
          "generatedName": "RequestMediationForConnectionRequest",
          "schema": "MediationCreateRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RequestMediationForConnectionResponse",
          "schema": "MediationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/mediation/request/{conn_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "mediator_terms": {
                "value": [
                  {
                    "value": {
                      "value": "mediator_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "mediator_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "recipient_terms": {
                "value": [
                  {
                    "value": {
                      "value": "recipient_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "recipient_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "connection_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "endpoint",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediation_id": {
                  "value": {
                    "value": "mediation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "role": {
                  "value": {
                    "value": "role",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query mediation requests, returns list of all mediation records",
      "audiences": [],
      "operationId": "get_matching_mediation_records",
      "tags": [
        "mediation"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier (optional)",
          "name": "conn_id",
          "schema": {
            "generatedName": "GetMatchingMediationRecordsRequestConnId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingMediationRecordsRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "List of mediator rules for recipient",
          "name": "mediator_terms",
          "schema": {
            "generatedName": "GetMatchingMediationRecordsRequestMediatorTerms",
            "value": {
              "value": {
                "description": "Indicate terms to which the mediator requires the recipient to agree",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GetMatchingMediationRecordsRequestMediatorTermsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "GetMatchingMediationRecordsRequestMediatorTerms",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "List of recipient rules for mediation",
          "name": "recipient_terms",
          "schema": {
            "generatedName": "GetMatchingMediationRecordsRequestRecipientTerms",
            "value": {
              "value": {
                "description": "Indicate terms to which the recipient requires the mediator to agree",
                "schema": {
                  "type": "string"
                },
                "generatedName": "GetMatchingMediationRecordsRequestRecipientTermsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "GetMatchingMediationRecordsRequestRecipientTerms",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Mediation state (optional)",
          "name": "state",
          "schema": {
            "generatedName": "GetMatchingMediationRecordsRequestState",
            "value": {
              "generatedName": "GetMatchingMediationRecordsRequestState",
              "values": [
                {
                  "generatedName": "request",
                  "value": "request",
                  "casing": {}
                },
                {
                  "generatedName": "granted",
                  "value": "granted",
                  "casing": {}
                },
                {
                  "generatedName": "denied",
                  "value": "denied",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingMediationRecordsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingMediationRecordsResponse",
          "schema": "MediationList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/mediation/requests",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "connection_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "endpoint": {
                          "value": {
                            "value": "endpoint",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mediation_id": {
                          "value": {
                            "value": "mediation_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mediator_terms": {
                          "value": [
                            {
                              "value": {
                                "value": "mediator_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "mediator_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "recipient_terms": {
                          "value": [
                            {
                              "value": {
                                "value": "recipient_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "recipient_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "routing_keys": {
                          "value": [
                            {
                              "value": {
                                "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "connection_id": {
                          "value": {
                            "value": "connection_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "endpoint": {
                          "value": {
                            "value": "endpoint",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mediation_id": {
                          "value": {
                            "value": "mediation_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mediator_terms": {
                          "value": [
                            {
                              "value": {
                                "value": "mediator_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "mediator_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "recipient_terms": {
                          "value": [
                            {
                              "value": {
                                "value": "recipient_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "recipient_terms",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "role": {
                          "value": {
                            "value": "role",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "routing_keys": {
                          "value": [
                            {
                              "value": {
                                "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve mediation request record",
      "audiences": [],
      "operationId": "get_mediation_record",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "GetMediationRecordRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetMediationRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMediationRecordResponse",
          "schema": "MediationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/mediation/requests/{mediation_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "connection_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "endpoint",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediation_id": {
                  "value": {
                    "value": "mediation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "role": {
                  "value": {
                    "value": "role",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete mediation request by ID",
      "audiences": [],
      "operationId": "delete_mediation_record",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "DeleteMediationRecordRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteMediationRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteMediationRecordResponse",
          "schema": "MediationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/mediation/requests/{mediation_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "connection_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "endpoint",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediation_id": {
                  "value": {
                    "value": "mediation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "role": {
                  "value": {
                    "value": "role",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Deny a stored mediation request",
      "audiences": [],
      "operationId": "deny_mediation_request",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "DenyMediationRequestRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DenyMediationRequestRequest",
      "request": {
        "schema": {
          "generatedName": "DenyMediationRequestRequest",
          "schema": "AdminMediationDeny",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DenyMediationRequestResponse",
          "schema": "MediationDeny",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/mediation/requests/{mediation_id}/deny",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "mediator_terms": {
                "value": [
                  {
                    "value": {
                      "value": "mediator_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "mediator_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "recipient_terms": {
                "value": [
                  {
                    "value": {
                      "value": "recipient_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "recipient_terms",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "@id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "@type": {
                  "value": {
                    "value": "https://didcomm.org/my-family/1.0/my-message-type",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Grant received mediation",
      "audiences": [],
      "operationId": "grant_mediation_request",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "GrantMediationRequestRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GrantMediationRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GrantMediationRequestResponse",
          "schema": "MediationGrant",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/mediation/requests/{mediation_id}/grant",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "@id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "@type": {
                  "value": {
                    "value": "https://didcomm.org/my-family/1.0/my-message-type",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "http://192.168.56.102:8020/",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "routing_keys",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "routing_keys",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update keylist for a connection",
      "audiences": [],
      "operationId": "update_keylist_for_conn_id",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateKeylistForConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateKeylistForConnIdRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateKeylistForConnIdRequest",
          "schema": "MediationIdMatchInfo",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UpdateKeylistForConnIdResponse",
          "schema": "KeylistUpdate",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/mediation/update-keylist/{conn_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "mediation_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "@id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "@type": {
                  "value": {
                    "value": "https://didcomm.org/my-family/1.0/my-message-type",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updates": {
                  "value": [
                    {
                      "properties": {
                        "action": {
                          "value": "add",
                          "type": "enum"
                        },
                        "recipient_key": {
                          "value": {
                            "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "action": {
                          "value": "add",
                          "type": "enum"
                        },
                        "recipient_key": {
                          "value": {
                            "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set default mediator",
      "audiences": [],
      "operationId": "set_default_mediator",
      "tags": [
        "mediation"
      ],
      "pathParameters": [
        {
          "description": "Mediation record identifier",
          "name": "mediation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "SetDefaultMediatorRequestMediationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SetDefaultMediatorRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetDefaultMediatorResponse",
          "schema": "MediationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/mediation/{mediation_id}/default-mediator",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "mediation_id",
              "value": {
                "value": {
                  "value": "mediation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "connection_id": {
                  "value": {
                    "value": "connection_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "endpoint",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediation_id": {
                  "value": {
                    "value": "mediation_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "mediator_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "mediator_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "recipient_terms": {
                  "value": [
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "recipient_terms",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "role": {
                  "value": {
                    "value": "role",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "routing_keys": {
                  "value": [
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a subwallet",
      "audiences": [],
      "operationId": "create_wallet",
      "tags": [
        "multitenancy"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateWalletRequest",
      "request": {
        "schema": {
          "generatedName": "CreateWalletRequest",
          "schema": "CreateWalletRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateWalletResponse",
          "schema": "CreateWalletResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/multitenancy/wallet",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "image_url": {
                "value": {
                  "value": "https://aries.ca/images/sample.png",
                  "type": "string"
                },
                "type": "primitive"
              },
              "key_management_mode": {
                "value": {
                  "value": "managed",
                  "type": "string"
                },
                "type": "literal"
              },
              "label": {
                "value": {
                  "value": "Alice",
                  "type": "string"
                },
                "type": "primitive"
              },
              "wallet_dispatch_type": {
                "value": "default",
                "type": "enum"
              },
              "wallet_key": {
                "value": {
                  "value": "MySecretKey123",
                  "type": "string"
                },
                "type": "primitive"
              },
              "wallet_key_derivation": {
                "value": "RAW",
                "type": "enum"
              },
              "wallet_name": {
                "value": {
                  "value": "MyNewWallet",
                  "type": "string"
                },
                "type": "primitive"
              },
              "wallet_type": {
                "value": "indy",
                "type": "enum"
              },
              "wallet_webhook_urls": {
                "value": [
                  {
                    "value": {
                      "value": "http://localhost:8022/webhooks",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "http://localhost:8022/webhooks",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key_management_mode": {
                  "value": "managed",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "token": {
                  "value": {
                    "value": "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "wallet_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get a single subwallet",
      "audiences": [],
      "operationId": "get_wallet_record",
      "tags": [
        "multitenancy"
      ],
      "pathParameters": [
        {
          "description": "Subwallet identifier",
          "name": "wallet_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetWalletRecordRequestWalletId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetWalletRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetWalletRecordResponse",
          "schema": "WalletRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/multitenancy/wallet/{wallet_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "wallet_id",
              "value": {
                "value": {
                  "value": "wallet_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key_management_mode": {
                  "value": "managed",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "wallet_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update a subwallet",
      "audiences": [],
      "operationId": "update_wallet",
      "tags": [
        "multitenancy"
      ],
      "pathParameters": [
        {
          "description": "Subwallet identifier",
          "name": "wallet_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpdateWalletRequestWalletId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateWalletRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateWalletRequest",
          "schema": "UpdateWalletRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UpdateWalletResponse",
          "schema": "WalletRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/multitenancy/wallet/{wallet_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "wallet_id",
              "value": {
                "value": {
                  "value": "wallet_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "image_url": {
                "value": {
                  "value": "https://aries.ca/images/sample.png",
                  "type": "string"
                },
                "type": "primitive"
              },
              "label": {
                "value": {
                  "value": "Alice",
                  "type": "string"
                },
                "type": "primitive"
              },
              "wallet_dispatch_type": {
                "value": "default",
                "type": "enum"
              },
              "wallet_webhook_urls": {
                "value": [
                  {
                    "value": {
                      "value": "http://localhost:8022/webhooks",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "http://localhost:8022/webhooks",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "key_management_mode": {
                  "value": "managed",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "wallet_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove a subwallet",
      "audiences": [],
      "operationId": "delete_wallet",
      "tags": [
        "multitenancy"
      ],
      "pathParameters": [
        {
          "description": "Subwallet identifier",
          "name": "wallet_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteWalletRequestWalletId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteWalletRequest",
      "request": {
        "schema": {
          "generatedName": "DeleteWalletRequest",
          "schema": "RemoveWalletRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteWalletResponse",
          "schema": "MultitenantModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/multitenancy/wallet/{wallet_id}/remove",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "wallet_id",
              "value": {
                "value": {
                  "value": "wallet_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "wallet_key": {
                "value": {
                  "value": "MySecretKey123",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get auth token for a subwallet",
      "audiences": [],
      "operationId": "get_auth_token",
      "tags": [
        "multitenancy"
      ],
      "pathParameters": [
        {
          "name": "wallet_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetAuthTokenRequestWalletId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetAuthTokenRequest",
      "request": {
        "schema": {
          "generatedName": "GetAuthTokenRequest",
          "schema": "CreateWalletTokenRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetAuthTokenResponse",
          "schema": "CreateWalletTokenResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/multitenancy/wallet/{wallet_id}/token",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "wallet_id",
              "value": {
                "value": {
                  "value": "wallet_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "wallet_key": {
                "value": {
                  "value": "MySecretKey123",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "token": {
                  "value": {
                    "value": "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query subwallets",
      "audiences": [],
      "operationId": "get_matching_wallets",
      "tags": [
        "multitenancy"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Wallet name",
          "name": "wallet_name",
          "schema": {
            "generatedName": "GetMatchingWalletsRequestWalletName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetMatchingWalletsRequestWalletName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingWalletsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingWalletsResponse",
          "schema": "WalletList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/multitenancy/wallets",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "key_management_mode": {
                          "value": "managed",
                          "type": "enum"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "wallet_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "key_management_mode": {
                          "value": "managed",
                          "type": "enum"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "wallet_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a new connection invitation",
      "audiences": [],
      "operationId": "create_oob_invitation",
      "tags": [
        "out-of-band"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Auto-accept connection (defaults to configuration)",
          "name": "auto_accept",
          "schema": {
            "generatedName": "CreateOobInvitationRequestAutoAccept",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateOobInvitationRequestAutoAccept",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create invitation for multiple use (default false)",
          "name": "multi_use",
          "schema": {
            "generatedName": "CreateOobInvitationRequestMultiUse",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateOobInvitationRequestMultiUse",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CreateOobInvitationRequest",
      "request": {
        "schema": {
          "generatedName": "CreateOobInvitationRequestBody",
          "schema": "InvitationCreateRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateOobInvitationResponse",
          "schema": "InvitationRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/out-of-band/create-invitation",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "accept": {
                "value": [
                  {
                    "value": {
                      "value": "didcomm/aip1",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "didcomm/aip2;env=rfc19",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "alias": {
                "value": {
                  "value": "Barry",
                  "type": "string"
                },
                "type": "primitive"
              },
              "attachments": {
                "value": [
                  {
                    "properties": {
                      "id": {
                        "value": {
                          "value": "attachment-0",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": {
                        "value": "present-proof",
                        "type": "enum"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "id": {
                        "value": {
                          "value": "attachment-0",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": {
                        "value": "present-proof",
                        "type": "enum"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "handshake_protocols": {
                "value": [
                  {
                    "value": {
                      "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "mediation_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "my_label": {
                "value": {
                  "value": "Invitation to Barry",
                  "type": "string"
                },
                "type": "primitive"
              },
              "protocol_version": {
                "value": {
                  "value": "1.1",
                  "type": "string"
                },
                "type": "primitive"
              },
              "use_public_did": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invi_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation_url": {
                  "value": {
                    "value": "https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "oob_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "state": {
                  "value": {
                    "value": "await_response",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Receive a new connection invitation",
      "audiences": [],
      "operationId": "receive_oob_invitation",
      "tags": [
        "out-of-band"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Alias for connection",
          "name": "alias",
          "schema": {
            "generatedName": "ReceiveOobInvitationRequestAlias",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ReceiveOobInvitationRequestAlias",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Auto-accept connection (defaults to configuration)",
          "name": "auto_accept",
          "schema": {
            "generatedName": "ReceiveOobInvitationRequestAutoAccept",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReceiveOobInvitationRequestAutoAccept",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Identifier for active mediation record to be used",
          "name": "mediation_id",
          "schema": {
            "generatedName": "ReceiveOobInvitationRequestMediationId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "ReceiveOobInvitationRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Use an existing connection, if possible",
          "name": "use_existing_connection",
          "schema": {
            "generatedName": "ReceiveOobInvitationRequestUseExistingConnection",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ReceiveOobInvitationRequestUseExistingConnection",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ReceiveOobInvitationRequest",
      "request": {
        "schema": {
          "generatedName": "ReceiveOobInvitationRequestBody",
          "schema": "InvitationMessage",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReceiveOobInvitationResponse",
          "schema": "OobRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/out-of-band/receive-invitation",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "@id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "@type": {
                "value": {
                  "value": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "type": "primitive"
              },
              "accept": {
                "value": [
                  {
                    "value": {
                      "value": "didcomm/aip1",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "didcomm/aip2;env=rfc19",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "handshake_protocols": {
                "value": [
                  {
                    "value": {
                      "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "imageUrl": {
                "value": {
                  "value": "http://192.168.56.101/img/logo.jpg",
                  "type": "string"
                },
                "type": "primitive"
              },
              "label": {
                "value": {
                  "value": "Bob",
                  "type": "string"
                },
                "type": "primitive"
              },
              "requests~attach": {
                "value": [
                  {
                    "properties": {
                      "@id": {
                        "value": {
                          "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "byte_count": {
                        "value": {
                          "value": 1234,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "data": {
                        "properties": {
                          "base64": {
                            "value": {
                              "value": "ey4uLn0=",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "json": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "links": {
                            "value": [
                              {
                                "value": {
                                  "value": "https://link.to/data",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              {
                                "value": {
                                  "value": "https://link.to/data",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          },
                          "sha256": {
                            "value": {
                              "value": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "description": {
                        "value": {
                          "value": "view from doorway, facing east, with lights off",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "filename": {
                        "value": {
                          "value": "IMG1092348.png",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "lastmod_time": {
                        "value": {
                          "value": "2021-12-31 23:59:59+00:00",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "mime-type": {
                        "value": {
                          "value": "image/png",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "@id": {
                        "value": {
                          "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "byte_count": {
                        "value": {
                          "value": 1234,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "data": {
                        "properties": {
                          "base64": {
                            "value": {
                              "value": "ey4uLn0=",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "json": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          },
                          "links": {
                            "value": [
                              {
                                "value": {
                                  "value": "https://link.to/data",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              {
                                "value": {
                                  "value": "https://link.to/data",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          },
                          "sha256": {
                            "value": {
                              "value": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "description": {
                        "value": {
                          "value": "view from doorway, facing east, with lights off",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "filename": {
                        "value": {
                          "value": "IMG1092348.png",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "lastmod_time": {
                        "value": {
                          "value": "2021-12-31 23:59:59+00:00",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "mime-type": {
                        "value": {
                          "value": "image/png",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              },
              "services": {
                "value": [
                  {
                    "value": [
                      {
                        "key": {
                          "value": "did",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": {
                              "value": "WgWxqztrNooG92RXvxSTWv",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "type": "unknown"
                        }
                      },
                      {
                        "key": {
                          "value": "id",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": {
                              "value": "string",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "type": "unknown"
                        }
                      },
                      {
                        "key": {
                          "value": "recipientKeys",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": [
                              {
                                "value": {
                                  "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          },
                          "type": "unknown"
                        }
                      },
                      {
                        "key": {
                          "value": "routingKeys",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": [
                              {
                                "value": {
                                  "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          },
                          "type": "unknown"
                        }
                      },
                      {
                        "key": {
                          "value": "serviceEndpoint",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": {
                              "value": "http://192.168.56.101:8020",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "type": "unknown"
                        }
                      },
                      {
                        "key": {
                          "value": "type",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": {
                              "value": "string",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "type": "unknown"
                        }
                      }
                    ],
                    "type": "map"
                  },
                  {
                    "value": [
                      {
                        "key": {
                          "value": "key",
                          "type": "string"
                        },
                        "value": {
                          "value": {
                            "value": {
                              "value": "value",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "type": "unknown"
                        }
                      }
                    ],
                    "type": "map"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "attach_thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invi_msg_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "invitation": {
                  "properties": {
                    "@id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "@type": {
                      "value": {
                        "value": "https://didcomm.org/my-family/1.0/my-message-type",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "accept": {
                      "value": [
                        {
                          "value": {
                            "value": "didcomm/aip1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "didcomm/aip2;env=rfc19",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "handshake_protocols": {
                      "value": [
                        {
                          "value": {
                            "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "imageUrl": {
                      "value": {
                        "value": "http://192.168.56.101/img/logo.jpg",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "Bob",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "requests~attach": {
                      "value": [
                        {
                          "properties": {
                            "@id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "byte_count": {
                              "value": {
                                "value": 1234,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "data": {
                              "properties": {
                                "base64": {
                                  "value": {
                                    "value": "ey4uLn0=",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "json": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "value",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "links": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "https://link.to/data",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    {
                                      "value": {
                                        "value": "https://link.to/data",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "sha256": {
                                  "value": {
                                    "value": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "description": {
                              "value": {
                                "value": "view from doorway, facing east, with lights off",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "filename": {
                              "value": {
                                "value": "IMG1092348.png",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "lastmod_time": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "mime-type": {
                              "value": {
                                "value": "image/png",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "@id": {
                              "value": {
                                "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "byte_count": {
                              "value": {
                                "value": 1234,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "data": {
                              "properties": {
                                "base64": {
                                  "value": {
                                    "value": "ey4uLn0=",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "json": {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": {
                                            "value": "value",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "unknown"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                "links": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "https://link.to/data",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    {
                                      "value": {
                                        "value": "https://link.to/data",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "sha256": {
                                  "value": {
                                    "value": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "description": {
                              "value": {
                                "value": "view from doorway, facing east, with lights off",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "filename": {
                              "value": {
                                "value": "IMG1092348.png",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "lastmod_time": {
                              "value": {
                                "value": "2021-12-31 23:59:59+00:00",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "mime-type": {
                              "value": {
                                "value": "image/png",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "services": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "did",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "WgWxqztrNooG92RXvxSTWv",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "id",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "string",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "recipientKeys",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "routingKeys",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": [
                                    {
                                      "value": {
                                        "value": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  ],
                                  "type": "array"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "serviceEndpoint",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "http://192.168.56.101:8020",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            },
                            {
                              "key": {
                                "value": "type",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "string",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        },
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "oob_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "our_recipient_key": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "receiver",
                  "type": "enum"
                },
                "state": {
                  "value": "await-response",
                  "type": "enum"
                },
                "their_service": {
                  "properties": {
                    "recipientKeys": {
                      "value": [
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "routingKeys": {
                      "value": [
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "serviceEndpoint": {
                      "value": {
                        "value": "http://192.168.56.101:8020",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the list of loaded plugins",
      "audiences": [],
      "operationId": "get_loaded_plugins",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetLoadedPluginsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetLoadedPluginsResponse",
          "schema": "AdminModules",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/plugins",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "value": [
                    {
                      "value": {
                        "value": "result",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "result",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Creates a presentation request not bound to any proposal or connection",
      "audiences": [],
      "operationId": "create_proof_request",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateProofRequestRequest",
      "request": {
        "schema": {
          "generatedName": "CreateProofRequestRequest",
          "schema": "V20PresCreateRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateProofRequestResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/create-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_verify": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "presentation_request": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch all present-proof exchange records",
      "audiences": [],
      "operationId": "get_matching_pres_ex_records-v2",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsV2RequestConnectionId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingPresExRecordsV2RequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Role assigned in presentation exchange",
          "name": "role",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsV2RequestRole",
            "value": {
              "generatedName": "GetMatchingPresExRecordsV2RequestRole",
              "values": [
                {
                  "generatedName": "prover",
                  "value": "prover",
                  "casing": {}
                },
                {
                  "generatedName": "verifier",
                  "value": "verifier",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Presentation exchange state",
          "name": "state",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsV2RequestState",
            "value": {
              "generatedName": "GetMatchingPresExRecordsV2RequestState",
              "values": [
                {
                  "generatedName": "ProposalSent",
                  "value": "proposal-sent",
                  "casing": {}
                },
                {
                  "generatedName": "ProposalReceived",
                  "value": "proposal-received",
                  "casing": {}
                },
                {
                  "generatedName": "RequestSent",
                  "value": "request-sent",
                  "casing": {}
                },
                {
                  "generatedName": "RequestReceived",
                  "value": "request-received",
                  "casing": {}
                },
                {
                  "generatedName": "PresentationSent",
                  "value": "presentation-sent",
                  "casing": {}
                },
                {
                  "generatedName": "PresentationReceived",
                  "value": "presentation-received",
                  "casing": {}
                },
                {
                  "generatedName": "done",
                  "value": "done",
                  "casing": {}
                },
                {
                  "generatedName": "abandoned",
                  "value": "abandoned",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Thread identifier",
          "name": "thread_id",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsV2RequestThreadId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingPresExRecordsV2RequestThreadId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingPresExRecordsV2Request",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingPresExRecordsV2Response",
          "schema": "V20PresExRecordList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/present-proof-2.0/records",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "auto_present": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_verify": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Invalid structure",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "initiator": {
                          "value": "self",
                          "type": "enum"
                        },
                        "pres_ex_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "prover",
                          "type": "enum"
                        },
                        "state": {
                          "value": "proposal-sent",
                          "type": "enum"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "verified": {
                          "value": "true",
                          "type": "enum"
                        },
                        "verified_msgs": {
                          "value": [
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "auto_present": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_verify": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Invalid structure",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "initiator": {
                          "value": "self",
                          "type": "enum"
                        },
                        "pres_ex_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "prover",
                          "type": "enum"
                        },
                        "state": {
                          "value": "proposal-sent",
                          "type": "enum"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "verified": {
                          "value": "true",
                          "type": "enum"
                        },
                        "verified_msgs": {
                          "value": [
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch a single presentation exchange record",
      "audiences": [],
      "operationId": "get_pres_ex_record",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "GetPresExRecordRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetPresExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetPresExRecordResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/present-proof-2.0/records/{pres_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove an existing presentation exchange record",
      "audiences": [],
      "operationId": "delete_pres_ex_record",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "DeletePresExRecordRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeletePresExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeletePresExRecordResponse",
          "schema": "V20PresentProofModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/present-proof-2.0/records/{pres_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch credentials from wallet for presentation request",
      "audiences": [],
      "operationId": "get_pres_ex_credentials-v2",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "GetPresExCredentialsV2RequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Maximum number to retrieve",
          "name": "count",
          "schema": {
            "generatedName": "GetPresExCredentialsV2RequestCount",
            "value": {
              "schema": {
                "pattern": "^[1-9][0-9]*$",
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsV2RequestCount",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "(JSON) object mapping referents to extra WQL queries",
          "name": "extra_query",
          "schema": {
            "generatedName": "GetPresExCredentialsV2RequestExtraQuery",
            "value": {
              "schema": {
                "pattern": "^{\\s*\".*?\"\\s*:\\s*{.*?}\\s*(,\\s*\".*?\"\\s*:\\s*{.*?}\\s*)*\\s*}$",
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsV2RequestExtraQuery",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Proof request referents of interest, comma-separated",
          "name": "referent",
          "schema": {
            "generatedName": "GetPresExCredentialsV2RequestReferent",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsV2RequestReferent",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Start index",
          "name": "start",
          "schema": {
            "generatedName": "GetPresExCredentialsV2RequestStart",
            "value": {
              "schema": {
                "pattern": "^[0-9]*$",
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsV2RequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetPresExCredentialsV2Request",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "GetPresExCredentialsV2ResponseItem",
            "schema": "IndyCredPrecis",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "GetPresExCredentialsV2Response",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/present-proof-2.0/records/{pres_ex_id}/credentials",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "presentation_referents": {
                      "value": [
                        {
                          "value": {
                            "value": "1_age_uuid",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "1_age_uuid",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a problem report for presentation exchange",
      "audiences": [],
      "operationId": "report_pres_ex_problem",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "ReportPresExProblemRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReportPresExProblemRequest",
      "request": {
        "schema": {
          "generatedName": "ReportPresExProblemRequest",
          "schema": "V20PresProblemReportRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReportPresExProblemResponse",
          "schema": "V20PresentProofModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/records/{pres_ex_id}/problem-report",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "description",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a proof presentation",
      "audiences": [],
      "operationId": "send_proof_presentation",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendProofPresentationRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendProofPresentationRequest",
      "request": {
        "schema": {
          "generatedName": "SendProofPresentationRequest",
          "schema": "V20PresSpecByFormatRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendProofPresentationResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/records/{pres_ex_id}/send-presentation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "trace": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a presentation request in reference to a proposal",
      "audiences": [],
      "operationId": "send_proof_presentation_request",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendProofPresentationRequestRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendProofPresentationRequestRequest",
      "request": {
        "schema": {
          "generatedName": "SendProofPresentationRequestRequest",
          "schema": "V20PresentationSendRequestToProposal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendProofPresentationRequestResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/records/{pres_ex_id}/send-request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_verify": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Verify a received presentation",
      "audiences": [],
      "operationId": "verify_received_presentation",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "VerifyReceivedPresentationRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "VerifyReceivedPresentationRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "VerifyReceivedPresentationResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/records/{pres_ex_id}/verify-presentation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a presentation proposal",
      "audiences": [],
      "operationId": "send_presentation_proposal",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendPresentationProposalRequest",
      "request": {
        "schema": {
          "generatedName": "SendPresentationProposalRequest",
          "schema": "V20PresProposalRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendPresentationProposalResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/send-proposal",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_present": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "presentation_proposal": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a free presentation request not bound to any proposal",
      "audiences": [],
      "operationId": "send_free_presentation_request",
      "tags": [
        "present-proof v2.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreePresentationRequestRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreePresentationRequestRequest",
          "schema": "V20PresSendRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreePresentationRequestResponse",
          "schema": "V20PresExRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof-2.0/send-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_verify": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "presentation_request": {
                "properties": {},
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "pres_ex_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": "proposal-sent",
                  "type": "enum"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Creates a presentation request not bound to any proposal or connection",
      "audiences": [],
      "operationId": "create_free_proof_request",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateFreeProofRequestRequest",
      "request": {
        "schema": {
          "generatedName": "CreateFreeProofRequestRequest",
          "schema": "V10PresentationCreateRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateFreeProofRequestResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/create-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_verify": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "proof_request": {
                "properties": {
                  "name": {
                    "value": {
                      "value": "Proof request",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "nonce": {
                    "value": {
                      "value": "1",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "requested_attributes": {
                    "value": [
                      {
                        "key": {
                          "value": "key",
                          "type": "string"
                        },
                        "value": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "favouriteDrink",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "names": {
                              "value": [
                                {
                                  "value": {
                                    "value": "age",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                {
                                  "value": {
                                    "value": "age",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "restrictions": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    ],
                    "type": "map"
                  },
                  "requested_predicates": {
                    "value": [
                      {
                        "key": {
                          "value": "key",
                          "type": "string"
                        },
                        "value": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "index",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "p_type": {
                              "value": ">=",
                              "type": "enum"
                            },
                            "p_value": {
                              "value": {
                                "value": 0,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "restrictions": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    ],
                    "type": "map"
                  },
                  "version": {
                    "value": {
                      "value": "1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch all present-proof exchange records",
      "audiences": [],
      "operationId": "get_matching_pres_ex_records",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "connection_id",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsRequestConnectionId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingPresExRecordsRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Role assigned in presentation exchange",
          "name": "role",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsRequestRole",
            "value": {
              "generatedName": "GetMatchingPresExRecordsRequestRole",
              "values": [
                {
                  "generatedName": "prover",
                  "value": "prover",
                  "casing": {}
                },
                {
                  "generatedName": "verifier",
                  "value": "verifier",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Presentation exchange state",
          "name": "state",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsRequestState",
            "value": {
              "generatedName": "GetMatchingPresExRecordsRequestState",
              "values": [
                {
                  "generatedName": "proposal_sent",
                  "value": "proposal_sent",
                  "casing": {}
                },
                {
                  "generatedName": "proposal_received",
                  "value": "proposal_received",
                  "casing": {}
                },
                {
                  "generatedName": "request_sent",
                  "value": "request_sent",
                  "casing": {}
                },
                {
                  "generatedName": "request_received",
                  "value": "request_received",
                  "casing": {}
                },
                {
                  "generatedName": "presentation_sent",
                  "value": "presentation_sent",
                  "casing": {}
                },
                {
                  "generatedName": "presentation_received",
                  "value": "presentation_received",
                  "casing": {}
                },
                {
                  "generatedName": "verified",
                  "value": "verified",
                  "casing": {}
                },
                {
                  "generatedName": "presentation_acked",
                  "value": "presentation_acked",
                  "casing": {}
                },
                {
                  "generatedName": "abandoned",
                  "value": "abandoned",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Thread identifier",
          "name": "thread_id",
          "schema": {
            "generatedName": "GetMatchingPresExRecordsRequestThreadId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "GetMatchingPresExRecordsRequestThreadId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingPresExRecordsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingPresExRecordsResponse",
          "schema": "V10PresentationExchangeList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/present-proof/records",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "auto_present": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_verify": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Invalid structure",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "initiator": {
                          "value": "self",
                          "type": "enum"
                        },
                        "presentation_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "prover",
                          "type": "enum"
                        },
                        "state": {
                          "value": {
                            "value": "verified",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "verified": {
                          "value": "true",
                          "type": "enum"
                        },
                        "verified_msgs": {
                          "value": [
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "auto_present": {
                          "value": {
                            "value": false,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "auto_verify": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Invalid structure",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "initiator": {
                          "value": "self",
                          "type": "enum"
                        },
                        "presentation_exchange_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "role": {
                          "value": "prover",
                          "type": "enum"
                        },
                        "state": {
                          "value": {
                            "value": "verified",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "verified": {
                          "value": "true",
                          "type": "enum"
                        },
                        "verified_msgs": {
                          "value": [
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "verified_msgs",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch a single presentation exchange record",
      "audiences": [],
      "operationId": "get_pres_ex_record",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "GetPresExRecordRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetPresExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetPresExRecordResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/present-proof/records/{pres_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Remove an existing presentation exchange record",
      "audiences": [],
      "operationId": "delete_pres_ex_record",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "DeletePresExRecordRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeletePresExRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeletePresExRecordResponse",
          "schema": "V10PresentProofModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/present-proof/records/{pres_ex_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch credentials for a presentation request from wallet",
      "audiences": [],
      "operationId": "get_pres_ex_credentials",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "GetPresExCredentialsRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Maximum number to retrieve",
          "name": "count",
          "schema": {
            "generatedName": "GetPresExCredentialsRequestCount",
            "value": {
              "schema": {
                "pattern": "^[1-9][0-9]*$",
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsRequestCount",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "(JSON) object mapping referents to extra WQL queries",
          "name": "extra_query",
          "schema": {
            "generatedName": "GetPresExCredentialsRequestExtraQuery",
            "value": {
              "schema": {
                "pattern": "^{\\s*\".*?\"\\s*:\\s*{.*?}\\s*(,\\s*\".*?\"\\s*:\\s*{.*?}\\s*)*\\s*}$",
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsRequestExtraQuery",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Proof request referents of interest, comma-separated",
          "name": "referent",
          "schema": {
            "generatedName": "GetPresExCredentialsRequestReferent",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsRequestReferent",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Start index",
          "name": "start",
          "schema": {
            "generatedName": "GetPresExCredentialsRequestStart",
            "value": {
              "schema": {
                "pattern": "^[0-9]*$",
                "type": "string"
              },
              "generatedName": "GetPresExCredentialsRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetPresExCredentialsRequest",
      "response": {
        "description": "",
        "schema": {
          "value": {
            "generatedName": "GetPresExCredentialsResponseItem",
            "schema": "IndyCredPrecis",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "GetPresExCredentialsResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/present-proof/records/{pres_ex_id}/credentials",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "presentation_referents": {
                      "value": [
                        {
                          "value": {
                            "value": "1_age_uuid",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "1_age_uuid",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send a problem report for presentation exchange",
      "audiences": [],
      "operationId": "report_pres_ex_problem",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "ReportPresExProblemRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ReportPresExProblemRequest",
      "request": {
        "schema": {
          "generatedName": "ReportPresExProblemRequest",
          "schema": "V10PresentationProblemReportRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ReportPresExProblemResponse",
          "schema": "V10PresentProofModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/records/{pres_ex_id}/problem-report",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "description": {
                "value": {
                  "value": "description",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a proof presentation",
      "audiences": [],
      "operationId": "send_proof_presentation",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendProofPresentationRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendProofPresentationRequest",
      "request": {
        "schema": {
          "generatedName": "SendProofPresentationRequest",
          "schema": "IndyPresSpec",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendProofPresentationResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/records/{pres_ex_id}/send-presentation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "requested_attributes": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "properties": {
                        "cred_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "revealed": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  }
                ],
                "type": "map"
              },
              "requested_predicates": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "properties": {
                        "cred_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "timestamp": {
                          "value": {
                            "value": 1640995199,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  }
                ],
                "type": "map"
              },
              "self_attested_attributes": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": "self_attested_value",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  }
                ],
                "type": "map"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a presentation request in reference to a proposal",
      "audiences": [],
      "operationId": "send_proof_presentation_request",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "SendProofPresentationRequestRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendProofPresentationRequestRequest",
      "request": {
        "schema": {
          "generatedName": "SendProofPresentationRequestRequest",
          "schema": "V10PresentationSendRequestToProposal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendProofPresentationRequestResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/records/{pres_ex_id}/send-request",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_verify": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Verify a received presentation",
      "audiences": [],
      "operationId": "verify_received_presentation",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [
        {
          "description": "Presentation exchange identifier",
          "name": "pres_ex_id",
          "schema": {
            "schema": {
              "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
              "type": "string"
            },
            "generatedName": "VerifyReceivedPresentationRequestPresExId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "VerifyReceivedPresentationRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "VerifyReceivedPresentationResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/records/{pres_ex_id}/verify-presentation",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "pres_ex_id",
              "value": {
                "value": {
                  "value": "pres_ex_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a presentation proposal",
      "audiences": [],
      "operationId": "send_presentation_proposal",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendPresentationProposalRequest",
      "request": {
        "schema": {
          "generatedName": "SendPresentationProposalRequest",
          "schema": "V10PresentationProposalRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendPresentationProposalResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/send-proposal",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_present": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "presentation_proposal": {
                "properties": {
                  "@type": {
                    "value": {
                      "value": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "attributes": {
                    "value": [
                      {
                        "properties": {
                          "cred_def_id": {
                            "value": {
                              "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "referent": {
                            "value": {
                              "value": "0",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "cred_def_id": {
                            "value": {
                              "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "mime-type": {
                            "value": {
                              "value": "image/jpeg",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "favourite_drink",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "referent": {
                            "value": {
                              "value": "0",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "value": {
                            "value": {
                              "value": "martini",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  },
                  "predicates": {
                    "value": [
                      {
                        "properties": {
                          "cred_def_id": {
                            "value": {
                              "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "high_score",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "predicate": {
                            "value": ">=",
                            "type": "enum"
                          },
                          "threshold": {
                            "value": {
                              "value": 0,
                              "type": "int"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "cred_def_id": {
                            "value": {
                              "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "high_score",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "predicate": {
                            "value": ">=",
                            "type": "enum"
                          },
                          "threshold": {
                            "value": {
                              "value": 0,
                              "type": "int"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a free presentation request not bound to any proposal",
      "audiences": [],
      "operationId": "send_free_presentation_request",
      "tags": [
        "present-proof v1.0"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SendFreePresentationRequestRequest",
      "request": {
        "schema": {
          "generatedName": "SendFreePresentationRequestRequest",
          "schema": "V10PresentationSendRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SendFreePresentationRequestResponse",
          "schema": "V10PresentationExchange",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/present-proof/send-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "auto_verify": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "proof_request": {
                "properties": {
                  "name": {
                    "value": {
                      "value": "Proof request",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "nonce": {
                    "value": {
                      "value": "1",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "requested_attributes": {
                    "value": [
                      {
                        "key": {
                          "value": "key",
                          "type": "string"
                        },
                        "value": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "favouriteDrink",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "names": {
                              "value": [
                                {
                                  "value": {
                                    "value": "age",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                {
                                  "value": {
                                    "value": "age",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              ],
                              "type": "array"
                            },
                            "restrictions": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    ],
                    "type": "map"
                  },
                  "requested_predicates": {
                    "value": [
                      {
                        "key": {
                          "value": "key",
                          "type": "string"
                        },
                        "value": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "index",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "p_type": {
                              "value": ">=",
                              "type": "enum"
                            },
                            "p_value": {
                              "value": {
                                "value": 0,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "restrictions": {
                              "value": [
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                },
                                {
                                  "value": [
                                    {
                                      "key": {
                                        "value": "key",
                                        "type": "string"
                                      },
                                      "value": {
                                        "value": {
                                          "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    }
                                  ],
                                  "type": "map"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    ],
                    "type": "map"
                  },
                  "version": {
                    "value": {
                      "value": "1.0",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              },
              "trace": {
                "value": {
                  "value": false,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "auto_present": {
                  "value": {
                    "value": false,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "auto_verify": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "error_msg": {
                  "value": {
                    "value": "Invalid structure",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initiator": {
                  "value": "self",
                  "type": "enum"
                },
                "presentation_exchange_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "role": {
                  "value": "prover",
                  "type": "enum"
                },
                "state": {
                  "value": {
                    "value": "verified",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "verified": {
                  "value": "true",
                  "type": "enum"
                },
                "verified_msgs": {
                  "value": [
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "verified_msgs",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Retrieve doc for requested did",
      "audiences": [],
      "operationId": "get_did_document",
      "tags": [
        "resolver"
      ],
      "pathParameters": [
        {
          "description": "DID",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^did:([a-z0-9]+):((?:[a-zA-Z0-9._%-]*:)*[a-zA-Z0-9._%-]+)$",
              "type": "string"
            },
            "generatedName": "GetDidDocumentRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetDidDocumentRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetDidDocumentResponse",
          "schema": "ResolutionResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/resolver/resolve/{did}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "did_document": {
                  "properties": {},
                  "type": "object"
                },
                "metadata": {
                  "properties": {},
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get current active revocation registry by credential definition id",
      "audiences": [],
      "operationId": "get_active_registry_for_cred_def_id",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Credential definition identifier",
          "name": "cred_def_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
              "type": "string"
            },
            "generatedName": "GetActiveRegistryForCredDefIdRequestCredDefId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetActiveRegistryForCredDefIdRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetActiveRegistryForCredDefIdResponse",
          "schema": "RevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/active-registry/{cred_def_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "cred_def_id",
              "value": {
                "value": {
                  "value": "cred_def_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "Revocation registry undefined",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "issuer_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "max_cred_num": {
                      "value": {
                        "value": 1000,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "pending_pub": {
                      "value": [
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "revoc_def_type": {
                      "value": {
                        "value": "CL_ACCUM",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "revoc_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_hash": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_local_path": {
                      "value": {
                        "value": "tails_local_path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_public_uri": {
                      "value": {
                        "value": "tails_public_uri",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Clear pending revocations",
      "audiences": [],
      "operationId": "clear_pending_revocations",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ClearPendingRevocationsRequest",
      "request": {
        "schema": {
          "generatedName": "ClearPendingRevocationsRequest",
          "schema": "ClearPendingRevocationsRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ClearPendingRevocationsResponse",
          "schema": "PublishRevocations",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/revocation/clear-pending-revocations",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "purge": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": [
                        {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "rrid2crid": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": [
                          {
                            "value": {
                              "value": "12345",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          {
                            "value": {
                              "value": "12345",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        ],
                        "type": "array"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Creates a new revocation registry",
      "audiences": [],
      "operationId": "create_revocation_registry",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateRevocationRegistryRequest",
      "request": {
        "schema": {
          "generatedName": "CreateRevocationRegistryRequest",
          "schema": "RevRegCreateRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateRevocationRegistryResponse",
          "schema": "RevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/revocation/create-registry",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "credential_definition_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "type": "primitive"
              },
              "max_cred_num": {
                "value": {
                  "value": 1000,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "Revocation registry undefined",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "issuer_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "max_cred_num": {
                      "value": {
                        "value": 1000,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "pending_pub": {
                      "value": [
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "revoc_def_type": {
                      "value": {
                        "value": "CL_ACCUM",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "revoc_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_hash": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_local_path": {
                      "value": {
                        "value": "tails_local_path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_public_uri": {
                      "value": {
                        "value": "tails_public_uri",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get credential revocation status",
      "audiences": [],
      "operationId": "get_credential_revocation_record",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Credential exchange identifier",
          "name": "cred_ex_id",
          "schema": {
            "generatedName": "GetCredentialRevocationRecordRequestCredExId",
            "value": {
              "schema": {
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "type": "string"
              },
              "generatedName": "GetCredentialRevocationRecordRequestCredExId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Credential revocation identifier",
          "name": "cred_rev_id",
          "schema": {
            "generatedName": "GetCredentialRevocationRecordRequestCredRevId",
            "value": {
              "schema": {
                "pattern": "^[1-9][0-9]*$",
                "type": "string"
              },
              "generatedName": "GetCredentialRevocationRecordRequestCredRevId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Revocation registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "generatedName": "GetCredentialRevocationRecordRequestRevRegId",
            "value": {
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                "type": "string"
              },
              "generatedName": "GetCredentialRevocationRecordRequestRevRegId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetCredentialRevocationRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCredentialRevocationRecordResponse",
          "schema": "CredRevRecordResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/credential-record",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_ex_version": {
                      "value": {
                        "value": "cred_ex_version",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_rev_id": {
                      "value": {
                        "value": "12345",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "rev_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "issued",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Publish pending revocations to ledger",
      "audiences": [],
      "operationId": "publish_revocations",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PublishRevocationsRequest",
      "request": {
        "schema": {
          "generatedName": "PublishRevocationsRequest",
          "schema": "PublishRevocations",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PublishRevocationsResponse",
          "schema": "TxnOrPublishRevocationsResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/revocation/publish-revocations",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "rrid2crid": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": [
                        {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "sent": {
                  "properties": {
                    "rrid2crid": {
                      "value": [
                        {
                          "key": {
                            "value": "key",
                            "type": "string"
                          },
                          "value": {
                            "value": [
                              {
                                "value": {
                                  "value": "12345",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              {
                                "value": {
                                  "value": "12345",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            ],
                            "type": "array"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Search for matching revocation registries that current agent created",
      "audiences": [],
      "operationId": "get_created_registries",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Credential definition identifier",
          "name": "cred_def_id",
          "schema": {
            "generatedName": "GetCreatedRegistriesRequestCredDefId",
            "value": {
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "type": "string"
              },
              "generatedName": "GetCreatedRegistriesRequestCredDefId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Revocation registry state",
          "name": "state",
          "schema": {
            "generatedName": "GetCreatedRegistriesRequestState",
            "value": {
              "generatedName": "GetCreatedRegistriesRequestState",
              "values": [
                {
                  "generatedName": "init",
                  "value": "init",
                  "casing": {}
                },
                {
                  "generatedName": "generated",
                  "value": "generated",
                  "casing": {}
                },
                {
                  "generatedName": "posted",
                  "value": "posted",
                  "casing": {}
                },
                {
                  "generatedName": "active",
                  "value": "active",
                  "casing": {}
                },
                {
                  "generatedName": "full",
                  "value": "full",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetCreatedRegistriesRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetCreatedRegistriesResponse",
          "schema": "RevRegsCreated",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registries/created",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "rev_reg_ids": {
                  "value": [
                    {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Delete the tail files",
      "audiences": [],
      "operationId": "delete_tails_file",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Credential definition identifier",
          "name": "cred_def_id",
          "schema": {
            "generatedName": "DeleteTailsFileRequestCredDefId",
            "value": {
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "type": "string"
              },
              "generatedName": "DeleteTailsFileRequestCredDefId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Revocation registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "generatedName": "DeleteTailsFileRequestRevRegId",
            "value": {
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                "type": "string"
              },
              "generatedName": "DeleteTailsFileRequestRevRegId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DeleteTailsFileRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeleteTailsFileResponse",
          "schema": "TailsDeleteResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/revocation/registry/delete-tails-file",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get revocation registry by revocation registry id",
      "audiences": [],
      "operationId": "get_revocation_registry",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "GetRevocationRegistryRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetRevocationRegistryRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetRevocationRegistryResponse",
          "schema": "RevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registry/{rev_reg_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "Revocation registry undefined",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "issuer_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "max_cred_num": {
                      "value": {
                        "value": 1000,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "pending_pub": {
                      "value": [
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "revoc_def_type": {
                      "value": {
                        "value": "CL_ACCUM",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "revoc_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_hash": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_local_path": {
                      "value": {
                        "value": "tails_local_path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_public_uri": {
                      "value": {
                        "value": "tails_public_uri",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update revocation registry with new public URI to its tails file",
      "audiences": [],
      "operationId": "update_revocation_registry",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "UpdateRevocationRegistryRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateRevocationRegistryRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateRevocationRegistryRequest",
          "schema": "RevRegUpdateTailsFileUri",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UpdateRevocationRegistryResponse",
          "schema": "RevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PATCH",
      "path": "/revocation/registry/{rev_reg_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "tails_public_uri": {
                "value": {
                  "value": "http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "Revocation registry undefined",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "issuer_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "max_cred_num": {
                      "value": {
                        "value": 1000,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "pending_pub": {
                      "value": [
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "revoc_def_type": {
                      "value": {
                        "value": "CL_ACCUM",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "revoc_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_hash": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_local_path": {
                      "value": {
                        "value": "tails_local_path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_public_uri": {
                      "value": {
                        "value": "tails_public_uri",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send revocation registry definition to ledger",
      "audiences": [],
      "operationId": "publish_revocation_registry_definition",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "PublishRevocationRegistryDefinitionRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "PublishRevocationRegistryDefinitionRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PublishRevocationRegistryDefinitionRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "PublishRevocationRegistryDefinitionRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PublishRevocationRegistryDefinitionRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PublishRevocationRegistryDefinitionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PublishRevocationRegistryDefinitionResponse",
          "schema": "TxnOrRevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/revocation/registry/{rev_reg_id}/definition",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "sent": {
                  "properties": {
                    "result": {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_def_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "error_msg": {
                          "value": {
                            "value": "Revocation registry undefined",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "issuer_did": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_cred_num": {
                          "value": {
                            "value": 1000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "pending_pub": {
                          "value": [
                            {
                              "value": {
                                "value": "23",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "23",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "record_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "revoc_def_type": {
                          "value": {
                            "value": "CL_ACCUM",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "revoc_reg_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tag": {
                          "value": {
                            "value": "tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tails_hash": {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tails_local_path": {
                          "value": {
                            "value": "tails_local_path",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tails_public_uri": {
                          "value": {
                            "value": "tails_public_uri",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Send revocation registry entry to ledger",
      "audiences": [],
      "operationId": "publish_revocation_registry_entry",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "PublishRevocationRegistryEntryRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "PublishRevocationRegistryEntryRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PublishRevocationRegistryEntryRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "PublishRevocationRegistryEntryRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PublishRevocationRegistryEntryRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PublishRevocationRegistryEntryRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PublishRevocationRegistryEntryResponse",
          "schema": "RevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/revocation/registry/{rev_reg_id}/entry",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "Revocation registry undefined",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "issuer_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "max_cred_num": {
                      "value": {
                        "value": 1000,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "pending_pub": {
                      "value": [
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "revoc_def_type": {
                      "value": {
                        "value": "CL_ACCUM",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "revoc_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_hash": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_local_path": {
                      "value": {
                        "value": "tails_local_path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_public_uri": {
                      "value": {
                        "value": "tails_public_uri",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fix revocation state in wallet and return number of updated entries",
      "audiences": [],
      "operationId": "update_revocation_entry_state",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "UpdateRevocationEntryStateRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Apply updated accumulator transaction to ledger",
          "name": "apply_ledger_update",
          "schema": {
            "schema": {
              "type": "boolean"
            },
            "generatedName": "UpdateRevocationEntryStateRequestApplyLedgerUpdate",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "UpdateRevocationEntryStateRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UpdateRevocationEntryStateResponse",
          "schema": "RevRegWalletUpdatedResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/revocation/registry/{rev_reg_id}/fix-revocation-entry-state",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "apply_ledger_update",
              "value": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get number of credentials issued against revocation registry",
      "audiences": [],
      "operationId": "get_issued_credentials_count",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "GetIssuedCredentialsCountRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetIssuedCredentialsCountRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetIssuedCredentialsCountResponse",
          "schema": "RevRegIssuedResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registry/{rev_reg_id}/issued",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "value": {
                    "value": 0,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get details of credentials issued against revocation registry",
      "audiences": [],
      "operationId": "get_issued_credential_details",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "GetIssuedCredentialDetailsRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetIssuedCredentialDetailsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetIssuedCredentialDetailsResponse",
          "schema": "CredRevRecordDetailsResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registry/{rev_reg_id}/issued/details",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_def_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_ex_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_ex_version": {
                          "value": {
                            "value": "cred_ex_version",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_rev_id": {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "record_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "rev_reg_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "issued",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_def_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_ex_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_ex_version": {
                          "value": {
                            "value": "cred_ex_version",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cred_rev_id": {
                          "value": {
                            "value": "12345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "record_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "rev_reg_id": {
                          "value": {
                            "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": {
                            "value": "issued",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Get details of revoked credentials from ledger",
      "audiences": [],
      "operationId": "get_published_credential_details",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "GetPublishedCredentialDetailsRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetPublishedCredentialDetailsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetPublishedCredentialDetailsResponse",
          "schema": "CredRevIndyRecordsResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registry/{rev_reg_id}/issued/indy_recs",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set revocation registry state manually",
      "audiences": [],
      "operationId": "set_revocation_registry_state",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "SetRevocationRegistryStateRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Revocation registry state to set",
          "name": "state",
          "schema": {
            "generatedName": "SetRevocationRegistryStateRequestState",
            "values": [
              {
                "generatedName": "init",
                "value": "init",
                "casing": {}
              },
              {
                "generatedName": "generated",
                "value": "generated",
                "casing": {}
              },
              {
                "generatedName": "posted",
                "value": "posted",
                "casing": {}
              },
              {
                "generatedName": "active",
                "value": "active",
                "casing": {}
              },
              {
                "generatedName": "full",
                "value": "full",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SetRevocationRegistryStateRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetRevocationRegistryStateResponse",
          "schema": "RevRegResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PATCH",
      "path": "/revocation/registry/{rev_reg_id}/set-state",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "state",
              "value": {
                "value": "init",
                "type": "enum"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "created_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "cred_def_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "error_msg": {
                      "value": {
                        "value": "Revocation registry undefined",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "issuer_did": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "max_cred_num": {
                      "value": {
                        "value": 1000,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "pending_pub": {
                      "value": [
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "record_id": {
                      "value": {
                        "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "revoc_def_type": {
                      "value": {
                        "value": "CL_ACCUM",
                        "type": "string"
                      },
                      "type": "literal"
                    },
                    "revoc_reg_id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "state": {
                      "value": {
                        "value": "active",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tag": {
                      "value": {
                        "value": "tag",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_hash": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_local_path": {
                      "value": {
                        "value": "tails_local_path",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "tails_public_uri": {
                      "value": {
                        "value": "tails_public_uri",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "updated_at": {
                      "value": {
                        "value": "2021-12-31 23:59:59+00:00",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Download tails file",
      "audiences": [],
      "operationId": "download_tails_file_sparse",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "DownloadTailsFileSparseRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DownloadTailsFileSparseRequest",
      "response": {
        "description": "tails file",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registry/{rev_reg_id}/tails-file-less-deets",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Download tails file",
      "audiences": [],
      "operationId": "download_tails_file",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "DownloadTailsFileRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DownloadTailsFileRequest",
      "response": {
        "description": "tails file",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/revocation/registry/{rev_reg_id}/tails-file",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Upload local tails file to server",
      "audiences": [],
      "operationId": "upload_tails_file",
      "tags": [
        "revocation"
      ],
      "pathParameters": [
        {
          "description": "Revocation Registry identifier",
          "name": "rev_reg_id",
          "schema": {
            "schema": {
              "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
              "type": "string"
            },
            "generatedName": "UploadTailsFileRequestRevRegId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UploadTailsFileRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UploadTailsFileResponse",
          "schema": "RevocationModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PUT",
      "path": "/revocation/registry/{rev_reg_id}/tails-file",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "rev_reg_id",
              "value": {
                "value": {
                  "value": "rev_reg_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Revoke an issued credential",
      "audiences": [],
      "operationId": "revoke_issued_credential",
      "tags": [
        "revocation"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RevokeIssuedCredentialRequest",
      "request": {
        "schema": {
          "generatedName": "RevokeIssuedCredentialRequest",
          "schema": "RevokeRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RevokeIssuedCredentialResponse",
          "schema": "RevocationModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/revocation/revoke",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "comment": {
                "value": {
                  "value": "comment",
                  "type": "string"
                },
                "type": "primitive"
              },
              "connection_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_ex_id": {
                "value": {
                  "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "type": "primitive"
              },
              "cred_rev_id": {
                "value": {
                  "value": "12345",
                  "type": "string"
                },
                "type": "primitive"
              },
              "notify": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "notify_version": {
                "value": "v1_0",
                "type": "enum"
              },
              "publish": {
                "value": {
                  "value": true,
                  "type": "boolean"
                },
                "type": "primitive"
              },
              "rev_reg_id": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                  "type": "string"
                },
                "type": "primitive"
              },
              "thread_id": {
                "value": {
                  "value": "thread_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Sends a schema to the ledger",
      "audiences": [],
      "operationId": "publish_schema",
      "tags": [
        "schema"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "PublishSchemaRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PublishSchemaRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "PublishSchemaRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "PublishSchemaRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PublishSchemaRequest",
      "request": {
        "schema": {
          "generatedName": "PublishSchemaRequestBody",
          "schema": "SchemaSendRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PublishSchemaResponse",
          "schema": "TxnOrSchemaSendResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/schemas",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "attributes": {
                "value": [
                  {
                    "value": {
                      "value": "score",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  {
                    "value": {
                      "value": "score",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "schema_name": {
                "value": {
                  "value": "prefs",
                  "type": "string"
                },
                "type": "primitive"
              },
              "schema_version": {
                "value": {
                  "value": "1.0",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Search for matching schema that agent originated",
      "audiences": [],
      "operationId": "get_matching_created_schemas",
      "tags": [
        "schema"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Schema identifier",
          "name": "schema_id",
          "schema": {
            "generatedName": "GetMatchingCreatedSchemasRequestSchemaId",
            "value": {
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                "type": "string"
              },
              "generatedName": "GetMatchingCreatedSchemasRequestSchemaId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema issuer DID",
          "name": "schema_issuer_did",
          "schema": {
            "generatedName": "GetMatchingCreatedSchemasRequestSchemaIssuerDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "type": "string"
              },
              "generatedName": "GetMatchingCreatedSchemasRequestSchemaIssuerDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema name",
          "name": "schema_name",
          "schema": {
            "generatedName": "GetMatchingCreatedSchemasRequestSchemaName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetMatchingCreatedSchemasRequestSchemaName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Schema version",
          "name": "schema_version",
          "schema": {
            "generatedName": "GetMatchingCreatedSchemasRequestSchemaVersion",
            "value": {
              "schema": {
                "pattern": "^[0-9.]+$",
                "type": "string"
              },
              "generatedName": "GetMatchingCreatedSchemasRequestSchemaVersion",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMatchingCreatedSchemasRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetMatchingCreatedSchemasResponse",
          "schema": "SchemasCreatedResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/schemas/created",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "schema_ids": {
                  "value": [
                    {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Gets a schema from the ledger",
      "audiences": [],
      "operationId": "get_schema",
      "tags": [
        "schema"
      ],
      "pathParameters": [
        {
          "description": "Schema identifier",
          "name": "schema_id",
          "schema": {
            "schema": {
              "pattern": "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
              "type": "string"
            },
            "generatedName": "GetSchemaRequestSchemaId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSchemaRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetSchemaResponse",
          "schema": "SchemaGetResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/schemas/{schema_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "schema_id",
              "value": {
                "value": {
                  "value": "schema_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "schema": {
                  "properties": {
                    "attrNames": {
                      "value": [
                        {
                          "value": {
                            "value": "score",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "score",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "schema_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "seqNo": {
                      "value": {
                        "value": 10,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "ver": {
                      "value": {
                        "value": "1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": "1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Writes a schema non-secret record to the wallet",
      "audiences": [],
      "operationId": "write_schema_record_to_wallet",
      "tags": [
        "schema"
      ],
      "pathParameters": [
        {
          "description": "Schema identifier",
          "name": "schema_id",
          "schema": {
            "schema": {
              "pattern": "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
              "type": "string"
            },
            "generatedName": "WriteSchemaRecordToWalletRequestSchemaId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WriteSchemaRecordToWalletRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "WriteSchemaRecordToWalletResponse",
          "schema": "SchemaGetResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/schemas/{schema_id}/write_record",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "schema_id",
              "value": {
                "value": {
                  "value": "schema_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "schema": {
                  "properties": {
                    "attrNames": {
                      "value": [
                        {
                          "value": {
                            "value": "score",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        {
                          "value": {
                            "value": "score",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "id": {
                      "value": {
                        "value": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "schema_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "seqNo": {
                      "value": {
                        "value": 10,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "ver": {
                      "value": {
                        "value": "1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "version": {
                      "value": {
                        "value": "1.0",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Shut down server",
      "audiences": [],
      "operationId": "shutdown_server",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ShutdownServerRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ShutdownServerResponse",
          "schema": "AdminShutdown",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/shutdown",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the server status",
      "audiences": [],
      "operationId": "get_status",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetStatusRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetStatusResponse",
          "schema": "AdminStatus",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/status",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": "version",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the server configuration",
      "audiences": [],
      "operationId": "get_config",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetConfigRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetConfigResponse",
          "schema": "AdminConfig",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/status/config",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {},
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Liveliness check",
      "audiences": [],
      "operationId": "get_liveliness",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetLivelinessRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetLivelinessResponse",
          "schema": "AdminStatusLiveliness",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/status/live",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "alive": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Readiness check",
      "audiences": [],
      "operationId": "get_readiness",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetReadinessRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetReadinessResponse",
          "schema": "AdminStatusReadiness",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/status/ready",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "ready": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Reset statistics",
      "audiences": [],
      "operationId": "reset_statistics",
      "tags": [
        "server"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ResetStatisticsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ResetStatisticsResponse",
          "schema": "AdminReset",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/status/reset",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "For Author to resend a particular transaction request",
      "audiences": [],
      "operationId": "resend_transaction_request",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "ResendTransactionRequestRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ResendTransactionRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ResendTransactionRequestResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transaction/{tran_id}/resend",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query transactions",
      "audiences": [],
      "operationId": "get_transaction_list",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetTransactionListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetTransactionListResponse",
          "schema": "TransactionList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/transactions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "_type": {
                          "value": {
                            "value": "101",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "endorser_write_txn": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "formats": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "attach_id",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "format",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "dif/endorse-transaction/request@v1.0",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "attach_id",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "format",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "dif/endorse-transaction/request@v1.0",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        },
                        "messages_attach": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            },
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "signature_request": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            },
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "signature_response": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            },
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "transaction_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "_type": {
                          "value": {
                            "value": "101",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "connection_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "endorser_write_txn": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "formats": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "attach_id",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "format",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "dif/endorse-transaction/request@v1.0",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            },
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "attach_id",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "format",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "dif/endorse-transaction/request@v1.0",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        },
                        "messages_attach": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            },
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "signature_request": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            },
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "signature_response": {
                          "value": [
                            {
                              "properties": {},
                              "type": "object"
                            },
                            {
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "state": {
                          "value": {
                            "value": "active",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "thread_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trace": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "transaction_id": {
                          "value": {
                            "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "updated_at": {
                          "value": {
                            "value": "2021-12-31 23:59:59+00:00",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "For author to send a transaction request",
      "audiences": [],
      "operationId": "create_transaction_request",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CreateTransactionRequestRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Endorser will write the transaction after endorsing it",
          "name": "endorser_write_txn",
          "schema": {
            "generatedName": "CreateTransactionRequestRequestEndorserWriteTxn",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "CreateTransactionRequestRequestEndorserWriteTxn",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "CreateTransactionRequestRequest",
      "request": {
        "schema": {
          "generatedName": "CreateTransactionRequestRequestBody",
          "schema": "Date",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateTransactionRequestResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/create-request",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "request": {
            "properties": {
              "expires_time": {
                "value": {
                  "value": "2021-03-29 05:22:19+00:00",
                  "type": "datetime"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set Endorser Info",
      "audiences": [],
      "operationId": "set_endorser_info_for_conn_id",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetEndorserInfoForConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Endorser DID",
          "name": "endorser_did",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetEndorserInfoForConnIdRequestEndorserDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Endorser Name",
          "name": "endorser_name",
          "schema": {
            "generatedName": "SetEndorserInfoForConnIdRequestEndorserName",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SetEndorserInfoForConnIdRequestEndorserName",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SetEndorserInfoForConnIdRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetEndorserInfoForConnIdResponse",
          "schema": "EndorserInfo",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/{conn_id}/set-endorser-info",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "endorser_did",
              "value": {
                "value": {
                  "value": "endorser_did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "endorser_did": {
                  "value": {
                    "value": "endorser_did",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_name": {
                  "value": {
                    "value": "endorser_name",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Set transaction jobs",
      "audiences": [],
      "operationId": "set_endorser_role_for_conn_id",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "SetEndorserRoleForConnIdRequestConnId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Transaction related jobs",
          "name": "transaction_my_job",
          "schema": {
            "generatedName": "SetEndorserRoleForConnIdRequestTransactionMyJob",
            "value": {
              "generatedName": "SetEndorserRoleForConnIdRequestTransactionMyJob",
              "values": [
                {
                  "generatedName": "TRANSACTION_AUTHOR",
                  "value": "TRANSACTION_AUTHOR",
                  "casing": {}
                },
                {
                  "generatedName": "TRANSACTION_ENDORSER",
                  "value": "TRANSACTION_ENDORSER",
                  "casing": {}
                },
                {
                  "generatedName": "reset",
                  "value": "reset",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SetEndorserRoleForConnIdRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetEndorserRoleForConnIdResponse",
          "schema": "TransactionJobs",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/{conn_id}/set-endorser-role",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "conn_id",
              "value": {
                "value": {
                  "value": "conn_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "transaction_my_job": {
                  "value": "TRANSACTION_AUTHOR",
                  "type": "enum"
                },
                "transaction_their_job": {
                  "value": "TRANSACTION_AUTHOR",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch a single transaction record",
      "audiences": [],
      "operationId": "get_transaction_record",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetTransactionRecordRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetTransactionRecordRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetTransactionRecordResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/transactions/{tran_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "For Author to cancel a particular transaction request",
      "audiences": [],
      "operationId": "cancel_transaction_request",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CancelTransactionRequestRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CancelTransactionRequestRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CancelTransactionRequestResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/{tran_id}/cancel",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "For Endorser to endorse a particular transaction record",
      "audiences": [],
      "operationId": "endorse_transaction",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "EndorseTransactionRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Endorser DID",
          "name": "endorser_did",
          "schema": {
            "generatedName": "EndorseTransactionRequestEndorserDid",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EndorseTransactionRequestEndorserDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "EndorseTransactionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "EndorseTransactionResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/{tran_id}/endorse",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "For Endorser to refuse a particular transaction record",
      "audiences": [],
      "operationId": "refuse_transaction",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "RefuseTransactionRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RefuseTransactionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RefuseTransactionResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/{tran_id}/refuse",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "For Author / Endorser to write an endorsed transaction to the ledger",
      "audiences": [],
      "operationId": "publish_endorsed_transaction",
      "tags": [
        "endorse-transaction"
      ],
      "pathParameters": [
        {
          "description": "Transaction identifier",
          "name": "tran_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "PublishEndorsedTransactionRequestTranId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PublishEndorsedTransactionRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "PublishEndorsedTransactionResponse",
          "schema": "TransactionRecord",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/transactions/{tran_id}/write",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "tran_id",
              "value": {
                "value": {
                  "value": "tran_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "_type": {
                  "value": {
                    "value": "101",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "connection_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endorser_write_txn": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "formats": {
                  "value": [
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    },
                    {
                      "value": [
                        {
                          "key": {
                            "value": "attach_id",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        {
                          "key": {
                            "value": "format",
                            "type": "string"
                          },
                          "value": {
                            "value": {
                              "value": "dif/endorse-transaction/request@v1.0",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        }
                      ],
                      "type": "map"
                    }
                  ],
                  "type": "array"
                },
                "messages_attach": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_request": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "signature_response": {
                  "value": [
                    {
                      "properties": {},
                      "type": "object"
                    },
                    {
                      "properties": {},
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "state": {
                  "value": {
                    "value": "active",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "thread_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "trace": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "transaction_id": {
                  "value": {
                    "value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": "2021-12-31 23:59:59+00:00",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "List wallet DIDs",
      "audiences": [],
      "operationId": "get_dids",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "generatedName": "GetDidsRequestDid",
            "value": {
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$",
                "type": "string"
              },
              "generatedName": "GetDidsRequestDid",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Key type to query for.",
          "name": "key_type",
          "schema": {
            "generatedName": "GetDidsRequestKeyType",
            "value": {
              "generatedName": "GetDidsRequestKeyType",
              "values": [
                {
                  "generatedName": "ed25519",
                  "value": "ed25519",
                  "casing": {}
                },
                {
                  "generatedName": "bls12381g2",
                  "value": "bls12381g2",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "DID method to query for. e.g. sov to only fetch indy/sov DIDs",
          "name": "method",
          "schema": {
            "generatedName": "GetDidsRequestMethod",
            "value": {
              "generatedName": "GetDidsRequestMethod",
              "values": [
                {
                  "generatedName": "key",
                  "value": "key",
                  "casing": {}
                },
                {
                  "generatedName": "sov",
                  "value": "sov",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether DID is current public DID, posted to ledger but current public DID, or local to the wallet",
          "name": "posture",
          "schema": {
            "generatedName": "GetDidsRequestPosture",
            "value": {
              "generatedName": "GetDidsRequestPosture",
              "values": [
                {
                  "generatedName": "public",
                  "value": "public",
                  "casing": {}
                },
                {
                  "generatedName": "posted",
                  "value": "posted",
                  "casing": {}
                },
                {
                  "generatedName": "wallet_only",
                  "value": "wallet_only",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Verification key of interest",
          "name": "verkey",
          "schema": {
            "generatedName": "GetDidsRequestVerkey",
            "value": {
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                "type": "string"
              },
              "generatedName": "GetDidsRequestVerkey",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetDidsRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetDidsResponse",
          "schema": "DIDList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/wallet/did",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "did": {
                          "value": {
                            "value": "did:peer:WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "key_type": {
                          "value": "ed25519",
                          "type": "enum"
                        },
                        "method": {
                          "value": {
                            "value": "sov",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "posture": {
                          "value": "wallet_only",
                          "type": "enum"
                        },
                        "verkey": {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "did": {
                          "value": {
                            "value": "did:peer:WgWxqztrNooG92RXvxSTWv",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "key_type": {
                          "value": "ed25519",
                          "type": "enum"
                        },
                        "method": {
                          "value": {
                            "value": "sov",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "posture": {
                          "value": "wallet_only",
                          "type": "enum"
                        },
                        "verkey": {
                          "value": {
                            "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Create a local DID",
      "audiences": [],
      "operationId": "create_local_did",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateLocalDidRequest",
      "request": {
        "schema": {
          "generatedName": "CreateLocalDidRequest",
          "schema": "DIDCreate",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "CreateLocalDidResponse",
          "schema": "DIDResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/wallet/did/create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "method": {
                "value": {
                  "value": "sov",
                  "type": "string"
                },
                "type": "primitive"
              },
              "seed": {
                "value": {
                  "value": "000000000000000000000000Trustee1",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "did": {
                      "value": {
                        "value": "did:peer:WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key_type": {
                      "value": "ed25519",
                      "type": "enum"
                    },
                    "method": {
                      "value": {
                        "value": "sov",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "posture": {
                      "value": "wallet_only",
                      "type": "enum"
                    },
                    "verkey": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Rotate keypair for a DID not posted to the ledger",
      "audiences": [],
      "operationId": "rotate_keypair",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "RotateKeypairRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RotateKeypairRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RotateKeypairResponse",
          "schema": "WalletModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "PATCH",
      "path": "/wallet/did/local/rotate-keypair",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Fetch the current public DID",
      "audiences": [],
      "operationId": "get_public_did",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetPublicDidRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetPublicDidResponse",
          "schema": "DIDResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/wallet/did/public",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "did": {
                      "value": {
                        "value": "did:peer:WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key_type": {
                      "value": "ed25519",
                      "type": "enum"
                    },
                    "method": {
                      "value": {
                        "value": "sov",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "posture": {
                      "value": "wallet_only",
                      "type": "enum"
                    },
                    "verkey": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Assign the current public DID",
      "audiences": [],
      "operationId": "set_public_did",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "SetPublicDidRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "SetPublicDidRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SetPublicDidRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "SetPublicDidRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SetPublicDidRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Mediation identifier",
          "name": "mediation_id",
          "schema": {
            "generatedName": "SetPublicDidRequestMediationId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SetPublicDidRequestMediationId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SetPublicDidRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetPublicDidResponse",
          "schema": "DIDResult",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/wallet/did/public",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "result": {
                  "properties": {
                    "did": {
                      "value": {
                        "value": "did:peer:WgWxqztrNooG92RXvxSTWv",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "key_type": {
                      "value": "ed25519",
                      "type": "enum"
                    },
                    "method": {
                      "value": {
                        "value": "sov",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "posture": {
                      "value": "wallet_only",
                      "type": "enum"
                    },
                    "verkey": {
                      "value": {
                        "value": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Query DID endpoint in wallet",
      "audiences": [],
      "operationId": "get_did_endpoint",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "DID of interest",
          "name": "did",
          "schema": {
            "schema": {
              "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
              "type": "string"
            },
            "generatedName": "GetDidEndpointRequestDid",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetDidEndpointRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GetDidEndpointResponse",
          "schema": "DIDEndpoint",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/wallet/get-did-endpoint",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "did",
              "value": {
                "value": {
                  "value": "did",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "did": {
                  "value": {
                    "value": "WgWxqztrNooG92RXvxSTWv",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "endpoint": {
                  "value": {
                    "value": "https://myhost:8021",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "summary": "Update endpoint in wallet and on ledger if posted to it",
      "audiences": [],
      "operationId": "set_did_endpoint",
      "tags": [
        "wallet"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Connection identifier",
          "name": "conn_id",
          "schema": {
            "generatedName": "SetDidEndpointRequestConnId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SetDidEndpointRequestConnId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Create Transaction For Endorser's signature",
          "name": "create_transaction_for_endorser",
          "schema": {
            "generatedName": "SetDidEndpointRequestCreateTransactionForEndorser",
            "value": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SetDidEndpointRequestCreateTransactionForEndorser",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SetDidEndpointRequest",
      "request": {
        "schema": {
          "generatedName": "SetDidEndpointRequestBody",
          "schema": "DIDEndpointWithType",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SetDidEndpointResponse",
          "schema": "WalletModuleResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "POST",
      "path": "/wallet/set-did-endpoint",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "did": {
                "value": {
                  "value": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "type": "primitive"
              },
              "endpoint": {
                "value": {
                  "value": "https://myhost:8021",
                  "type": "string"
                },
                "type": "primitive"
              },
              "endpoint_type": {
                "value": "Endpoint",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "AMLRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "amlRecordAml",
            "key": "aml",
            "schema": {
              "generatedName": "amlRecordAml",
              "nameOverride": "AMLRecord",
              "title": "AMLRecord",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AmlRecordAmlKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AmlRecordAmlValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AmlRecordAml",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "amlRecordAmlContext",
            "key": "amlContext",
            "schema": {
              "generatedName": "amlRecordAmlContext",
              "nameOverride": "AMLRecord",
              "title": "AMLRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AmlRecordAmlContext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "amlRecordVersion",
            "key": "version",
            "schema": {
              "generatedName": "amlRecordVersion",
              "nameOverride": "AMLRecord",
              "title": "AMLRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "AmlRecordVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AmlRecord",
        "nameOverride": "AMLRecord",
        "title": "AMLRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ActionMenuFetchResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "actionMenuFetchResultResult",
            "key": "result",
            "schema": {
              "generatedName": "actionMenuFetchResultResult",
              "nameOverride": "ActionMenuFetchResult",
              "title": "ActionMenuFetchResult",
              "value": {
                "generatedName": "ActionMenuFetchResultResult",
                "schema": "ActionMenuFetchResult_result",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ActionMenuFetchResult",
        "nameOverride": "ActionMenuFetchResult",
        "title": "ActionMenuFetchResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ActionMenuModulesResult": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ActionMenuModulesResultKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ActionMenuModulesResultValue",
          "type": "unknown"
        },
        "generatedName": "ActionMenuModulesResult",
        "groupName": [],
        "type": "map"
      },
      "AdminConfig": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminConfigConfig",
            "key": "config",
            "schema": {
              "generatedName": "adminConfigConfig",
              "nameOverride": "AdminConfig",
              "title": "AdminConfig",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Configuration settings",
                "generatedName": "AdminConfigConfig",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AdminConfig",
        "nameOverride": "AdminConfig",
        "title": "AdminConfig",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AdminMediationDeny": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminMediationDenyMediatorTerms",
            "key": "mediator_terms",
            "schema": {
              "generatedName": "adminMediationDenyMediatorTerms",
              "nameOverride": "AdminMediationDeny",
              "title": "AdminMediationDeny",
              "value": {
                "description": "List of mediator rules for recipient",
                "value": {
                  "description": "Indicate terms to which the mediator requires the recipient to agree",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AdminMediationDenyMediatorTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AdminMediationDenyMediatorTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminMediationDenyRecipientTerms",
            "key": "recipient_terms",
            "schema": {
              "generatedName": "adminMediationDenyRecipientTerms",
              "nameOverride": "AdminMediationDeny",
              "title": "AdminMediationDeny",
              "value": {
                "description": "List of recipient rules for mediation",
                "value": {
                  "description": "Indicate terms to which the recipient requires the mediator to agree",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AdminMediationDenyRecipientTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AdminMediationDenyRecipientTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AdminMediationDeny",
        "nameOverride": "AdminMediationDeny",
        "title": "AdminMediationDeny",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AdminModules": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminModulesResult",
            "key": "result",
            "schema": {
              "generatedName": "adminModulesResult",
              "nameOverride": "AdminModules",
              "title": "AdminModules",
              "value": {
                "description": "List of admin modules",
                "value": {
                  "description": "admin module",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AdminModulesResultItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AdminModulesResult",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AdminModules",
        "nameOverride": "AdminModules",
        "title": "AdminModules",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AdminReset": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "AdminResetKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "AdminResetValue",
          "type": "unknown"
        },
        "generatedName": "AdminReset",
        "groupName": [],
        "type": "map"
      },
      "AdminShutdown": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "AdminShutdownKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "AdminShutdownValue",
          "type": "unknown"
        },
        "generatedName": "AdminShutdown",
        "groupName": [],
        "type": "map"
      },
      "AdminStatus": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminStatusConductor",
            "key": "conductor",
            "schema": {
              "generatedName": "adminStatusConductor",
              "nameOverride": "AdminStatus",
              "title": "AdminStatus",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Conductor statistics",
                "generatedName": "AdminStatusConductor",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminStatusLabel",
            "key": "label",
            "schema": {
              "generatedName": "adminStatusLabel",
              "nameOverride": "AdminStatus",
              "title": "AdminStatus",
              "value": {
                "generatedName": "AdminStatusLabel",
                "description": "Default label",
                "value": {
                  "description": "Default label",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AdminStatusLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminStatusTiming",
            "key": "timing",
            "schema": {
              "generatedName": "adminStatusTiming",
              "nameOverride": "AdminStatus",
              "title": "AdminStatus",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Timing results",
                "generatedName": "AdminStatusTiming",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "adminStatusVersion",
            "key": "version",
            "schema": {
              "generatedName": "adminStatusVersion",
              "nameOverride": "AdminStatus",
              "title": "AdminStatus",
              "value": {
                "description": "Version code",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AdminStatusVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AdminStatus",
        "nameOverride": "AdminStatus",
        "title": "AdminStatus",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AdminStatusLiveliness": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminStatusLivelinessAlive",
            "key": "alive",
            "schema": {
              "generatedName": "adminStatusLivelinessAlive",
              "nameOverride": "AdminStatusLiveliness",
              "title": "AdminStatusLiveliness",
              "value": {
                "description": "Liveliness status",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "AdminStatusLivelinessAlive",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AdminStatusLiveliness",
        "nameOverride": "AdminStatusLiveliness",
        "title": "AdminStatusLiveliness",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AdminStatusReadiness": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "adminStatusReadinessReady",
            "key": "ready",
            "schema": {
              "generatedName": "adminStatusReadinessReady",
              "nameOverride": "AdminStatusReadiness",
              "title": "AdminStatusReadiness",
              "value": {
                "description": "Readiness status",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "AdminStatusReadinessReady",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AdminStatusReadiness",
        "nameOverride": "AdminStatusReadiness",
        "title": "AdminStatusReadiness",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttachDecorator": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachDecoratorId",
            "key": "@id",
            "schema": {
              "generatedName": "attachDecoratorId",
              "nameOverride": "AttachDecorator",
              "title": "AttachDecorator",
              "value": {
                "description": "Attachment identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorByteCount",
            "key": "byte_count",
            "schema": {
              "generatedName": "attachDecoratorByteCount",
              "nameOverride": "AttachDecorator",
              "title": "AttachDecorator",
              "value": {
                "description": "Byte count of data included by reference",
                "schema": {
                  "example": 1234,
                  "type": "int"
                },
                "generatedName": "AttachDecoratorByteCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorData",
            "key": "data",
            "schema": {
              "generatedName": "AttachDecoratorData",
              "schema": "AttachDecoratorData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDescription",
            "key": "description",
            "schema": {
              "generatedName": "attachDecoratorDescription",
              "nameOverride": "AttachDecorator",
              "title": "AttachDecorator",
              "value": {
                "description": "Human-readable description of content",
                "schema": {
                  "example": "view from doorway, facing east, with lights off",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorFilename",
            "key": "filename",
            "schema": {
              "generatedName": "attachDecoratorFilename",
              "nameOverride": "AttachDecorator",
              "title": "AttachDecorator",
              "value": {
                "description": "File name",
                "schema": {
                  "example": "IMG1092348.png",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorFilename",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorLastmodTime",
            "key": "lastmod_time",
            "schema": {
              "generatedName": "attachDecoratorLastmodTime",
              "nameOverride": "AttachDecorator",
              "title": "AttachDecorator",
              "value": {
                "description": "Hint regarding last modification datetime, in ISO-8601 format",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorLastmodTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorMimeType",
            "key": "mime-type",
            "schema": {
              "generatedName": "attachDecoratorMimeType",
              "nameOverride": "AttachDecorator",
              "title": "AttachDecorator",
              "value": {
                "description": "MIME type",
                "schema": {
                  "example": "image/png",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorMimeType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttachDecorator",
        "nameOverride": "AttachDecorator",
        "title": "AttachDecorator",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttachDecoratorData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataBase64",
            "key": "base64",
            "schema": {
              "generatedName": "attachDecoratorDataBase64",
              "nameOverride": "AttachDecoratorData",
              "title": "AttachDecoratorData",
              "value": {
                "description": "Base64-encoded data",
                "schema": {
                  "pattern": "^[a-zA-Z0-9+/]*={0,2}$",
                  "example": "ey4uLn0=",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorDataBase64",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJson",
            "key": "json",
            "schema": {
              "generatedName": "attachDecoratorDataJson",
              "nameOverride": "AttachDecoratorData",
              "title": "AttachDecoratorData",
              "value": {
                "description": "JSON-serialized data",
                "key": {
                  "schema": {
                    "example": "{\"sample\": \"content\"}",
                    "type": "string"
                  },
                  "generatedName": "AttachDecoratorDataJsonKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "AttachDecoratorDataJsonValue",
                  "type": "unknown"
                },
                "generatedName": "AttachDecoratorDataJson",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJws",
            "key": "jws",
            "schema": {
              "generatedName": "attachDecoratorDataJws",
              "nameOverride": "AttachDecoratorData",
              "title": "AttachDecoratorData",
              "value": {
                "generatedName": "AttachDecoratorDataJws",
                "schema": "AttachDecoratorData_jws",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataLinks",
            "key": "links",
            "schema": {
              "generatedName": "attachDecoratorDataLinks",
              "nameOverride": "AttachDecoratorData",
              "title": "AttachDecoratorData",
              "value": {
                "description": "List of hypertext links to data",
                "value": {
                  "schema": {
                    "example": "https://link.to/data",
                    "type": "string"
                  },
                  "generatedName": "AttachDecoratorDataLinksItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AttachDecoratorDataLinks",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataSha256",
            "key": "sha256",
            "schema": {
              "generatedName": "attachDecoratorDataSha256",
              "nameOverride": "AttachDecoratorData",
              "title": "AttachDecoratorData",
              "value": {
                "description": "SHA256 hash (binhex encoded) of content",
                "schema": {
                  "pattern": "^[a-fA-F0-9+/]{64}$",
                  "example": "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorDataSha256",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttachDecoratorData",
        "nameOverride": "AttachDecoratorData",
        "title": "AttachDecoratorData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttachDecoratorData1JWS": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachDecoratorData1JwsHeader",
            "key": "header",
            "schema": {
              "generatedName": "AttachDecoratorData1JwsHeader",
              "schema": "AttachDecoratorDataJWSHeader",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorData1JwsProtected",
            "key": "protected",
            "schema": {
              "generatedName": "attachDecoratorData1JwsProtected",
              "title": "AttachDecoratorData1JWS",
              "value": {
                "description": "protected JWS header",
                "schema": {
                  "pattern": "^[-_a-zA-Z0-9]*$",
                  "example": "ey4uLn0",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorData1JwsProtected",
                "nameOverride": "protected",
                "title": "protected",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorData1JwsSignature",
            "key": "signature",
            "schema": {
              "description": "signature",
              "schema": {
                "pattern": "^[-_a-zA-Z0-9]*$",
                "example": "ey4uLn0",
                "type": "string"
              },
              "generatedName": "AttachDecoratorData1JwsSignature",
              "nameOverride": "signature",
              "title": "signature",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttachDecoratorData1Jws",
        "title": "AttachDecoratorData1JWS",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttachDecoratorDataJWS": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJwsHeader",
            "key": "header",
            "schema": {
              "generatedName": "attachDecoratorDataJwsHeader",
              "nameOverride": "AttachDecoratorDataJWS",
              "title": "AttachDecoratorDataJWS",
              "value": {
                "generatedName": "AttachDecoratorDataJwsHeader",
                "schema": "AttachDecoratorDataJWSHeader",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJwsProtected",
            "key": "protected",
            "schema": {
              "generatedName": "attachDecoratorDataJwsProtected",
              "nameOverride": "AttachDecoratorDataJWS",
              "title": "AttachDecoratorDataJWS",
              "value": {
                "description": "protected JWS header",
                "schema": {
                  "pattern": "^[-_a-zA-Z0-9]*$",
                  "example": "ey4uLn0",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorDataJwsProtected",
                "nameOverride": "protected",
                "title": "protected",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJwsSignature",
            "key": "signature",
            "schema": {
              "generatedName": "attachDecoratorDataJwsSignature",
              "nameOverride": "AttachDecoratorDataJWS",
              "title": "AttachDecoratorDataJWS",
              "value": {
                "description": "signature",
                "schema": {
                  "pattern": "^[-_a-zA-Z0-9]*$",
                  "example": "ey4uLn0",
                  "type": "string"
                },
                "generatedName": "AttachDecoratorDataJwsSignature",
                "nameOverride": "signature",
                "title": "signature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJwsSignatures",
            "key": "signatures",
            "schema": {
              "generatedName": "attachDecoratorDataJwsSignatures",
              "nameOverride": "AttachDecoratorDataJWS",
              "title": "AttachDecoratorDataJWS",
              "value": {
                "description": "List of signatures",
                "value": {
                  "generatedName": "AttachDecoratorDataJwsSignaturesItem",
                  "schema": "AttachDecoratorData1JWS",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "AttachDecoratorDataJwsSignatures",
                "nameOverride": "signatures",
                "title": "signatures",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttachDecoratorDataJws",
        "nameOverride": "AttachDecoratorDataJWS",
        "title": "AttachDecoratorDataJWS",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttachDecoratorDataJWSHeader": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachDecoratorDataJwsHeaderKid",
            "key": "kid",
            "schema": {
              "description": "Key identifier, in W3C did:key or DID URL format",
              "schema": {
                "pattern": "^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\\?.*)?#.+)$",
                "example": "did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4",
                "type": "string"
              },
              "generatedName": "AttachDecoratorDataJwsHeaderKid",
              "nameOverride": "kid",
              "title": "kid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttachDecoratorDataJwsHeader",
        "nameOverride": "AttachDecoratorDataJWSHeader",
        "title": "AttachDecoratorDataJWSHeader",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttachmentDef": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attachmentDefId",
            "key": "id",
            "schema": {
              "generatedName": "attachmentDefId",
              "nameOverride": "AttachmentDef",
              "title": "AttachmentDef",
              "value": {
                "description": "Attachment identifier",
                "schema": {
                  "example": "attachment-0",
                  "type": "string"
                },
                "generatedName": "AttachmentDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "attachmentDefType",
            "key": "type",
            "schema": {
              "generatedName": "attachmentDefType",
              "nameOverride": "AttachmentDef",
              "title": "AttachmentDef",
              "value": {
                "description": "Attachment type",
                "generatedName": "AttachmentDefType",
                "values": [
                  {
                    "generatedName": "CredentialOffer",
                    "value": "credential-offer",
                    "casing": {}
                  },
                  {
                    "generatedName": "PresentProof",
                    "value": "present-proof",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttachmentDef",
        "nameOverride": "AttachmentDef",
        "title": "AttachmentDef",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "AttributeMimeTypesResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "attributeMimeTypesResultResults",
            "key": "results",
            "schema": {
              "generatedName": "attributeMimeTypesResultResults",
              "nameOverride": "AttributeMimeTypesResult",
              "title": "AttributeMimeTypesResult",
              "value": {
                "generatedName": "AttributeMimeTypesResultResults",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "AttributeMimeTypesResultResultsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "AttributeMimeTypesResultResultsValue",
                    "description": "MIME type",
                    "value": {
                      "description": "MIME type",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "AttributeMimeTypesResultResultsValue",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "inline": true,
                    "type": "nullable"
                  },
                  "generatedName": "AttributeMimeTypesResultResults",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AttributeMimeTypesResult",
        "nameOverride": "AttributeMimeTypesResult",
        "title": "AttributeMimeTypesResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BasicMessageModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "BasicMessageModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "BasicMessageModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "BasicMessageModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "ClaimFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "claimFormatJwt",
            "key": "jwt",
            "schema": {
              "generatedName": "claimFormatJwt",
              "nameOverride": "ClaimFormat",
              "title": "ClaimFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "ClaimFormatJwt",
                "nameOverride": "jwt",
                "title": "jwt",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "claimFormatJwtVc",
            "key": "jwt_vc",
            "schema": {
              "generatedName": "claimFormatJwtVc",
              "nameOverride": "ClaimFormat",
              "title": "ClaimFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "ClaimFormatJwtVc",
                "title": "jwt_vc",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "claimFormatJwtVp",
            "key": "jwt_vp",
            "schema": {
              "generatedName": "claimFormatJwtVp",
              "nameOverride": "ClaimFormat",
              "title": "ClaimFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "ClaimFormatJwtVp",
                "title": "jwt_vp",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "claimFormatLdp",
            "key": "ldp",
            "schema": {
              "generatedName": "claimFormatLdp",
              "nameOverride": "ClaimFormat",
              "title": "ClaimFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "ClaimFormatLdp",
                "nameOverride": "ldp",
                "title": "ldp",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "claimFormatLdpVc",
            "key": "ldp_vc",
            "schema": {
              "generatedName": "claimFormatLdpVc",
              "nameOverride": "ClaimFormat",
              "title": "ClaimFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "ClaimFormatLdpVc",
                "title": "ldp_vc",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "claimFormatLdpVp",
            "key": "ldp_vp",
            "schema": {
              "generatedName": "claimFormatLdpVp",
              "nameOverride": "ClaimFormat",
              "title": "ClaimFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "ClaimFormatLdpVp",
                "title": "ldp_vp",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ClaimFormat",
        "nameOverride": "ClaimFormat",
        "title": "ClaimFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ClearPendingRevocationsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "clearPendingRevocationsRequestPurge",
            "key": "purge",
            "schema": {
              "generatedName": "clearPendingRevocationsRequestPurge",
              "nameOverride": "ClearPendingRevocationsRequest",
              "title": "ClearPendingRevocationsRequest",
              "value": {
                "description": "Credential revocation ids by revocation registry id: omit for all, specify null or empty list for all pending per revocation registry",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ClearPendingRevocationsRequestPurgeKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "value": {
                    "description": "Credential revocation identifier",
                    "schema": {
                      "pattern": "^[1-9][0-9]*$",
                      "example": "12345",
                      "type": "string"
                    },
                    "generatedName": "ClearPendingRevocationsRequestPurgeValueItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ClearPendingRevocationsRequestPurgeValue",
                  "groupName": [],
                  "inline": true,
                  "type": "array"
                },
                "generatedName": "ClearPendingRevocationsRequestPurge",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ClearPendingRevocationsRequest",
        "nameOverride": "ClearPendingRevocationsRequest",
        "title": "ClearPendingRevocationsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connRecordAccept",
            "key": "accept",
            "schema": {
              "generatedName": "connRecordAccept",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Connection acceptance: manual or auto",
                "generatedName": "ConnRecordAccept",
                "values": [
                  {
                    "generatedName": "manual",
                    "value": "manual",
                    "casing": {}
                  },
                  {
                    "generatedName": "auto",
                    "value": "auto",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordAlias",
            "key": "alias",
            "schema": {
              "generatedName": "connRecordAlias",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Optional alias to apply to connection for later use",
                "schema": {
                  "example": "Bob, providing quotes",
                  "type": "string"
                },
                "generatedName": "ConnRecordAlias",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "connRecordConnectionId",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "ConnRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordConnectionProtocol",
            "key": "connection_protocol",
            "schema": {
              "generatedName": "connRecordConnectionProtocol",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Connection protocol used",
                "generatedName": "ConnRecordConnectionProtocol",
                "values": [
                  {
                    "generatedName": "Connections10",
                    "value": "connections/1.0",
                    "casing": {}
                  },
                  {
                    "generatedName": "Didexchange10",
                    "value": "didexchange/1.0",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "connRecordCreatedAt",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "ConnRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordErrorMsg",
            "key": "error_msg",
            "schema": {
              "generatedName": "connRecordErrorMsg",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Error message",
                "schema": {
                  "example": "No DIDDoc provided; cannot connect to public DID",
                  "type": "string"
                },
                "generatedName": "ConnRecordErrorMsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordInboundConnectionId",
            "key": "inbound_connection_id",
            "schema": {
              "generatedName": "connRecordInboundConnectionId",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Inbound routing connection id to use",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "ConnRecordInboundConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordInvitationKey",
            "key": "invitation_key",
            "schema": {
              "generatedName": "connRecordInvitationKey",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Public key for connection",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                  "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                  "type": "string"
                },
                "generatedName": "ConnRecordInvitationKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordInvitationMode",
            "key": "invitation_mode",
            "schema": {
              "generatedName": "connRecordInvitationMode",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Invitation mode",
                "generatedName": "ConnRecordInvitationMode",
                "values": [
                  {
                    "generatedName": "once",
                    "value": "once",
                    "casing": {}
                  },
                  {
                    "generatedName": "multi",
                    "value": "multi",
                    "casing": {}
                  },
                  {
                    "generatedName": "static",
                    "value": "static",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordInvitationMsgId",
            "key": "invitation_msg_id",
            "schema": {
              "generatedName": "connRecordInvitationMsgId",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "ID of out-of-band invitation message",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "ConnRecordInvitationMsgId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordMyDid",
            "key": "my_did",
            "schema": {
              "generatedName": "connRecordMyDid",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Our DID for connection",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "ConnRecordMyDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordRequestId",
            "key": "request_id",
            "schema": {
              "generatedName": "connRecordRequestId",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Connection request identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "ConnRecordRequestId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordRfc23State",
            "key": "rfc23_state",
            "schema": {
              "generatedName": "connRecordRfc23State",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "State per RFC 23",
                "schema": {
                  "example": "invitation-sent",
                  "type": "string"
                },
                "generatedName": "ConnRecordRfc23State",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "connRecordRoutingState",
            "key": "routing_state",
            "schema": {
              "generatedName": "connRecordRoutingState",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Routing state of connection",
                "generatedName": "ConnRecordRoutingState",
                "values": [
                  {
                    "generatedName": "none",
                    "value": "none",
                    "casing": {}
                  },
                  {
                    "generatedName": "request",
                    "value": "request",
                    "casing": {}
                  },
                  {
                    "generatedName": "active",
                    "value": "active",
                    "casing": {}
                  },
                  {
                    "generatedName": "error",
                    "value": "error",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordState",
            "key": "state",
            "schema": {
              "generatedName": "connRecordState",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "ConnRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordTheirDid",
            "key": "their_did",
            "schema": {
              "generatedName": "connRecordTheirDid",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Their DID for connection",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "ConnRecordTheirDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordTheirLabel",
            "key": "their_label",
            "schema": {
              "generatedName": "connRecordTheirLabel",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Their label for connection",
                "schema": {
                  "example": "Bob",
                  "type": "string"
                },
                "generatedName": "ConnRecordTheirLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordTheirPublicDid",
            "key": "their_public_did",
            "schema": {
              "generatedName": "connRecordTheirPublicDid",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Other agent's public DID for connection",
                "schema": {
                  "example": "2cpBmR3FqGKWi5EyUbpRY8",
                  "type": "string"
                },
                "generatedName": "ConnRecordTheirPublicDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordTheirRole",
            "key": "their_role",
            "schema": {
              "generatedName": "connRecordTheirRole",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Their role in the connection protocol",
                "generatedName": "ConnRecordTheirRole",
                "values": [
                  {
                    "generatedName": "invitee",
                    "value": "invitee",
                    "casing": {}
                  },
                  {
                    "generatedName": "requester",
                    "value": "requester",
                    "casing": {}
                  },
                  {
                    "generatedName": "inviter",
                    "value": "inviter",
                    "casing": {}
                  },
                  {
                    "generatedName": "responder",
                    "value": "responder",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "connRecordUpdatedAt",
              "nameOverride": "ConnRecord",
              "title": "ConnRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "ConnRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnRecord",
        "nameOverride": "ConnRecord",
        "title": "ConnRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnectionInvitation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connectionInvitationId",
            "key": "@id",
            "schema": {
              "generatedName": "connectionInvitationId",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "ConnectionInvitationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationType",
            "key": "@type",
            "schema": {
              "generatedName": "connectionInvitationType",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "ConnectionInvitationType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationDid",
            "key": "did",
            "schema": {
              "generatedName": "connectionInvitationDid",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "DID for connection invitation",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "ConnectionInvitationDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationImageUrl",
            "key": "imageUrl",
            "schema": {
              "generatedName": "connectionInvitationImageUrl",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "generatedName": "ConnectionInvitationImageUrl",
                "description": "Optional image URL for connection invitation",
                "value": {
                  "description": "Optional image URL for connection invitation",
                  "schema": {
                    "format": "url",
                    "example": "http://192.168.56.101/img/logo.jpg",
                    "type": "string"
                  },
                  "generatedName": "ConnectionInvitationImageUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationLabel",
            "key": "label",
            "schema": {
              "generatedName": "connectionInvitationLabel",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "Optional label for connection invitation",
                "schema": {
                  "example": "Bob",
                  "type": "string"
                },
                "generatedName": "ConnectionInvitationLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationRecipientKeys",
            "key": "recipientKeys",
            "schema": {
              "generatedName": "connectionInvitationRecipientKeys",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "List of recipient keys",
                "value": {
                  "description": "Recipient public key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "ConnectionInvitationRecipientKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ConnectionInvitationRecipientKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationRoutingKeys",
            "key": "routingKeys",
            "schema": {
              "generatedName": "connectionInvitationRoutingKeys",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "List of routing keys",
                "value": {
                  "description": "Routing key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "ConnectionInvitationRoutingKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ConnectionInvitationRoutingKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionInvitationServiceEndpoint",
            "key": "serviceEndpoint",
            "schema": {
              "generatedName": "connectionInvitationServiceEndpoint",
              "nameOverride": "ConnectionInvitation",
              "title": "ConnectionInvitation",
              "value": {
                "description": "Service endpoint at which to reach this agent",
                "schema": {
                  "example": "http://192.168.56.101:8020",
                  "type": "string"
                },
                "generatedName": "ConnectionInvitationServiceEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnectionInvitation",
        "nameOverride": "ConnectionInvitation",
        "title": "ConnectionInvitation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnectionList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connectionListResults",
            "key": "results",
            "schema": {
              "generatedName": "connectionListResults",
              "nameOverride": "ConnectionList",
              "title": "ConnectionList",
              "value": {
                "description": "List of connection records",
                "value": {
                  "generatedName": "ConnectionListResultsItem",
                  "schema": "ConnRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConnectionListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnectionList",
        "nameOverride": "ConnectionList",
        "title": "ConnectionList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnectionMetadata": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connectionMetadataResults",
            "key": "results",
            "schema": {
              "generatedName": "connectionMetadataResults",
              "nameOverride": "ConnectionMetadata",
              "title": "ConnectionMetadata",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Dictionary of metadata associated with connection.",
                "generatedName": "ConnectionMetadataResults",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnectionMetadata",
        "nameOverride": "ConnectionMetadata",
        "title": "ConnectionMetadata",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnectionMetadataSetRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connectionMetadataSetRequestMetadata",
            "key": "metadata",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Dictionary of metadata to set for connection.",
              "generatedName": "ConnectionMetadataSetRequestMetadata",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnectionMetadataSetRequest",
        "nameOverride": "ConnectionMetadataSetRequest",
        "title": "ConnectionMetadataSetRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnectionModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ConnectionModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ConnectionModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "ConnectionModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "ConnectionStaticRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestAlias",
            "key": "alias",
            "schema": {
              "generatedName": "connectionStaticRequestAlias",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Alias to assign to this connection",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestAlias",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestMyDid",
            "key": "my_did",
            "schema": {
              "generatedName": "connectionStaticRequestMyDid",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Local DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestMyDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestMySeed",
            "key": "my_seed",
            "schema": {
              "generatedName": "connectionStaticRequestMySeed",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Seed to use for the local DID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestMySeed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestTheirDid",
            "key": "their_did",
            "schema": {
              "generatedName": "connectionStaticRequestTheirDid",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Remote DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestTheirDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestTheirEndpoint",
            "key": "their_endpoint",
            "schema": {
              "generatedName": "connectionStaticRequestTheirEndpoint",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "URL endpoint for other party",
                "schema": {
                  "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                  "example": "https://myhost:8021",
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestTheirEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestTheirLabel",
            "key": "their_label",
            "schema": {
              "generatedName": "connectionStaticRequestTheirLabel",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Other party's label for this connection",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestTheirLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestTheirSeed",
            "key": "their_seed",
            "schema": {
              "generatedName": "connectionStaticRequestTheirSeed",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Seed to use for the remote DID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestTheirSeed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticRequestTheirVerkey",
            "key": "their_verkey",
            "schema": {
              "generatedName": "connectionStaticRequestTheirVerkey",
              "nameOverride": "ConnectionStaticRequest",
              "title": "ConnectionStaticRequest",
              "value": {
                "description": "Remote verification key",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConnectionStaticRequestTheirVerkey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnectionStaticRequest",
        "nameOverride": "ConnectionStaticRequest",
        "title": "ConnectionStaticRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConnectionStaticResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "connectionStaticResultMyDid",
            "key": "my_did",
            "schema": {
              "description": "Local DID",
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "example": "WgWxqztrNooG92RXvxSTWv",
                "type": "string"
              },
              "generatedName": "ConnectionStaticResultMyDid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticResultMyEndpoint",
            "key": "my_endpoint",
            "schema": {
              "description": "My URL endpoint",
              "schema": {
                "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                "example": "https://myhost:8021",
                "type": "string"
              },
              "generatedName": "ConnectionStaticResultMyEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticResultMyVerkey",
            "key": "my_verkey",
            "schema": {
              "description": "My verification key",
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                "type": "string"
              },
              "generatedName": "ConnectionStaticResultMyVerkey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticResultRecord",
            "key": "record",
            "schema": {
              "generatedName": "ConnectionStaticResultRecord",
              "schema": "ConnRecord",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticResultTheirDid",
            "key": "their_did",
            "schema": {
              "description": "Remote DID",
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "example": "WgWxqztrNooG92RXvxSTWv",
                "type": "string"
              },
              "generatedName": "ConnectionStaticResultTheirDid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "connectionStaticResultTheirVerkey",
            "key": "their_verkey",
            "schema": {
              "description": "Remote verification key",
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                "type": "string"
              },
              "generatedName": "ConnectionStaticResultTheirVerkey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConnectionStaticResult",
        "nameOverride": "ConnectionStaticResult",
        "title": "ConnectionStaticResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Constraints": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "constraintsFields",
            "key": "fields",
            "schema": {
              "generatedName": "constraintsFields",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "value": {
                  "generatedName": "ConstraintsFieldsItem",
                  "schema": "DIFField",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConstraintsFields",
                "nameOverride": "fields",
                "title": "fields",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "constraintsIsHolder",
            "key": "is_holder",
            "schema": {
              "generatedName": "constraintsIsHolder",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "value": {
                  "generatedName": "ConstraintsIsHolderItem",
                  "schema": "DIFHolder",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ConstraintsIsHolder",
                "title": "is_holder",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "constraintsLimitDisclosure",
            "key": "limit_disclosure",
            "schema": {
              "generatedName": "constraintsLimitDisclosure",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "description": "LimitDisclosure",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ConstraintsLimitDisclosure",
                "title": "limit_disclosure",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "constraintsStatusActive",
            "key": "status_active",
            "schema": {
              "generatedName": "constraintsStatusActive",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "generatedName": "ConstraintsStatusActive",
                "title": "status_active",
                "values": [
                  {
                    "generatedName": "required",
                    "value": "required",
                    "casing": {}
                  },
                  {
                    "generatedName": "allowed",
                    "value": "allowed",
                    "casing": {}
                  },
                  {
                    "generatedName": "disallowed",
                    "value": "disallowed",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "constraintsStatusRevoked",
            "key": "status_revoked",
            "schema": {
              "generatedName": "constraintsStatusRevoked",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "generatedName": "ConstraintsStatusRevoked",
                "title": "status_revoked",
                "values": [
                  {
                    "generatedName": "required",
                    "value": "required",
                    "casing": {}
                  },
                  {
                    "generatedName": "allowed",
                    "value": "allowed",
                    "casing": {}
                  },
                  {
                    "generatedName": "disallowed",
                    "value": "disallowed",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "constraintsStatusSuspended",
            "key": "status_suspended",
            "schema": {
              "generatedName": "constraintsStatusSuspended",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "generatedName": "ConstraintsStatusSuspended",
                "title": "status_suspended",
                "values": [
                  {
                    "generatedName": "required",
                    "value": "required",
                    "casing": {}
                  },
                  {
                    "generatedName": "allowed",
                    "value": "allowed",
                    "casing": {}
                  },
                  {
                    "generatedName": "disallowed",
                    "value": "disallowed",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "constraintsSubjectIsIssuer",
            "key": "subject_is_issuer",
            "schema": {
              "generatedName": "constraintsSubjectIsIssuer",
              "nameOverride": "Constraints",
              "title": "Constraints",
              "value": {
                "description": "SubjectIsIssuer",
                "generatedName": "ConstraintsSubjectIsIssuer",
                "title": "subject_is_issuer",
                "values": [
                  {
                    "generatedName": "required",
                    "value": "required",
                    "casing": {}
                  },
                  {
                    "generatedName": "preferred",
                    "value": "preferred",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Constraints",
        "nameOverride": "Constraints",
        "title": "Constraints",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateInvitationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createInvitationRequestMediationId",
            "key": "mediation_id",
            "schema": {
              "generatedName": "createInvitationRequestMediationId",
              "nameOverride": "CreateInvitationRequest",
              "title": "CreateInvitationRequest",
              "value": {
                "description": "Identifier for active mediation record to be used",
                "schema": {
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "CreateInvitationRequestMediationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createInvitationRequestMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "createInvitationRequestMetadata",
              "nameOverride": "CreateInvitationRequest",
              "title": "CreateInvitationRequest",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Optional metadata to attach to the connection created with the invitation",
                "generatedName": "CreateInvitationRequestMetadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createInvitationRequestMyLabel",
            "key": "my_label",
            "schema": {
              "generatedName": "createInvitationRequestMyLabel",
              "nameOverride": "CreateInvitationRequest",
              "title": "CreateInvitationRequest",
              "value": {
                "description": "Optional label for connection invitation",
                "schema": {
                  "example": "Bob",
                  "type": "string"
                },
                "generatedName": "CreateInvitationRequestMyLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createInvitationRequestRecipientKeys",
            "key": "recipient_keys",
            "schema": {
              "generatedName": "createInvitationRequestRecipientKeys",
              "nameOverride": "CreateInvitationRequest",
              "title": "CreateInvitationRequest",
              "value": {
                "description": "List of recipient keys",
                "value": {
                  "description": "Recipient public key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "CreateInvitationRequestRecipientKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CreateInvitationRequestRecipientKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createInvitationRequestRoutingKeys",
            "key": "routing_keys",
            "schema": {
              "generatedName": "createInvitationRequestRoutingKeys",
              "nameOverride": "CreateInvitationRequest",
              "title": "CreateInvitationRequest",
              "value": {
                "description": "List of routing keys",
                "value": {
                  "description": "Routing key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "CreateInvitationRequestRoutingKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CreateInvitationRequestRoutingKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createInvitationRequestServiceEndpoint",
            "key": "service_endpoint",
            "schema": {
              "generatedName": "createInvitationRequestServiceEndpoint",
              "nameOverride": "CreateInvitationRequest",
              "title": "CreateInvitationRequest",
              "value": {
                "description": "Connection endpoint",
                "schema": {
                  "example": "http://192.168.56.102:8020",
                  "type": "string"
                },
                "generatedName": "CreateInvitationRequestServiceEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateInvitationRequest",
        "nameOverride": "CreateInvitationRequest",
        "title": "CreateInvitationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateWalletRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createWalletRequestImageUrl",
            "key": "image_url",
            "schema": {
              "generatedName": "createWalletRequestImageUrl",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Image url for this wallet. This image url is publicized            (self-attested) to other agents as part of forming a connection.",
                "schema": {
                  "example": "https://aries.ca/images/sample.png",
                  "type": "string"
                },
                "generatedName": "CreateWalletRequestImageUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestKeyManagementMode",
            "key": "key_management_mode",
            "schema": {
              "generatedName": "createWalletRequestKeyManagementMode",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Key management method to use for this wallet.",
                "value": {
                  "value": "managed",
                  "type": "string"
                },
                "generatedName": "CreateWalletRequestKeyManagementMode",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestLabel",
            "key": "label",
            "schema": {
              "generatedName": "createWalletRequestLabel",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Label for this wallet. This label is publicized            (self-attested) to other agents as part of forming a connection.",
                "schema": {
                  "example": "Alice",
                  "type": "string"
                },
                "generatedName": "CreateWalletRequestLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestWalletDispatchType",
            "key": "wallet_dispatch_type",
            "schema": {
              "generatedName": "createWalletRequestWalletDispatchType",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Webhook target dispatch type for this wallet.             default - Dispatch only to webhooks associated with this wallet.             base - Dispatch only to webhooks associated with the base wallet.             both - Dispatch to both webhook targets.",
                "generatedName": "CreateWalletRequestWalletDispatchType",
                "values": [
                  {
                    "generatedName": "default",
                    "value": "default",
                    "casing": {}
                  },
                  {
                    "generatedName": "both",
                    "value": "both",
                    "casing": {}
                  },
                  {
                    "generatedName": "base",
                    "value": "base",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestWalletKey",
            "key": "wallet_key",
            "schema": {
              "generatedName": "createWalletRequestWalletKey",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Master key used for key derivation.",
                "schema": {
                  "example": "MySecretKey123",
                  "type": "string"
                },
                "generatedName": "CreateWalletRequestWalletKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestWalletKeyDerivation",
            "key": "wallet_key_derivation",
            "schema": {
              "generatedName": "createWalletRequestWalletKeyDerivation",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Key derivation",
                "generatedName": "CreateWalletRequestWalletKeyDerivation",
                "values": [
                  {
                    "generatedName": "ARGON2I_MOD",
                    "value": "ARGON2I_MOD",
                    "casing": {}
                  },
                  {
                    "generatedName": "ARGON2I_INT",
                    "value": "ARGON2I_INT",
                    "casing": {}
                  },
                  {
                    "generatedName": "RAW",
                    "value": "RAW",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestWalletName",
            "key": "wallet_name",
            "schema": {
              "generatedName": "createWalletRequestWalletName",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Wallet name",
                "schema": {
                  "example": "MyNewWallet",
                  "type": "string"
                },
                "generatedName": "CreateWalletRequestWalletName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestWalletType",
            "key": "wallet_type",
            "schema": {
              "generatedName": "createWalletRequestWalletType",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "Type of the wallet to create",
                "generatedName": "CreateWalletRequestWalletType",
                "values": [
                  {
                    "generatedName": "askar",
                    "value": "askar",
                    "casing": {}
                  },
                  {
                    "generatedName": "in_memory",
                    "value": "in_memory",
                    "casing": {}
                  },
                  {
                    "generatedName": "indy",
                    "value": "indy",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletRequestWalletWebhookUrls",
            "key": "wallet_webhook_urls",
            "schema": {
              "generatedName": "createWalletRequestWalletWebhookUrls",
              "nameOverride": "CreateWalletRequest",
              "title": "CreateWalletRequest",
              "value": {
                "description": "List of Webhook URLs associated with this subwallet",
                "value": {
                  "description": "Optional webhook URL to receive webhook messages",
                  "schema": {
                    "example": "http://localhost:8022/webhooks",
                    "type": "string"
                  },
                  "generatedName": "CreateWalletRequestWalletWebhookUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CreateWalletRequestWalletWebhookUrls",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateWalletRequest",
        "nameOverride": "CreateWalletRequest",
        "title": "CreateWalletRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateWalletResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createWalletResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "createWalletResponseCreatedAt",
              "nameOverride": "CreateWalletResponse",
              "title": "CreateWalletResponse",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "CreateWalletResponseCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletResponseKeyManagementMode",
            "key": "key_management_mode",
            "schema": {
              "description": "Mode regarding management of wallet key",
              "generatedName": "CreateWalletResponseKeyManagementMode",
              "values": [
                {
                  "generatedName": "managed",
                  "value": "managed",
                  "casing": {}
                },
                {
                  "generatedName": "unmanaged",
                  "value": "unmanaged",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletResponseSettings",
            "key": "settings",
            "schema": {
              "generatedName": "createWalletResponseSettings",
              "nameOverride": "CreateWalletResponse",
              "title": "CreateWalletResponse",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Settings for this wallet.",
                "generatedName": "CreateWalletResponseSettings",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletResponseState",
            "key": "state",
            "schema": {
              "generatedName": "createWalletResponseState",
              "nameOverride": "CreateWalletResponse",
              "title": "CreateWalletResponse",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "CreateWalletResponseState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletResponseToken",
            "key": "token",
            "schema": {
              "generatedName": "createWalletResponseToken",
              "nameOverride": "CreateWalletResponse",
              "title": "CreateWalletResponse",
              "value": {
                "description": "Authorization token to authenticate wallet requests",
                "schema": {
                  "example": "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
                  "type": "string"
                },
                "generatedName": "CreateWalletResponseToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "createWalletResponseUpdatedAt",
              "nameOverride": "CreateWalletResponse",
              "title": "CreateWalletResponse",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "CreateWalletResponseUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "createWalletResponseWalletId",
            "key": "wallet_id",
            "schema": {
              "description": "Wallet record ID",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "CreateWalletResponseWalletId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateWalletResponse",
        "nameOverride": "CreateWalletResponse",
        "title": "CreateWalletResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateWalletTokenRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createWalletTokenRequestWalletKey",
            "key": "wallet_key",
            "schema": {
              "generatedName": "createWalletTokenRequestWalletKey",
              "nameOverride": "CreateWalletTokenRequest",
              "title": "CreateWalletTokenRequest",
              "value": {
                "description": "Master key used for key derivation. Only required for             unamanged wallets.",
                "schema": {
                  "example": "MySecretKey123",
                  "type": "string"
                },
                "generatedName": "CreateWalletTokenRequestWalletKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateWalletTokenRequest",
        "nameOverride": "CreateWalletTokenRequest",
        "title": "CreateWalletTokenRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CreateWalletTokenResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "createWalletTokenResponseToken",
            "key": "token",
            "schema": {
              "generatedName": "createWalletTokenResponseToken",
              "nameOverride": "CreateWalletTokenResponse",
              "title": "CreateWalletTokenResponse",
              "value": {
                "description": "Authorization token to authenticate wallet requests",
                "schema": {
                  "example": "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
                  "type": "string"
                },
                "generatedName": "CreateWalletTokenResponseToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CreateWalletTokenResponse",
        "nameOverride": "CreateWalletTokenResponse",
        "title": "CreateWalletTokenResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredAttrSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credAttrSpecMimeType",
            "key": "mime-type",
            "schema": {
              "generatedName": "credAttrSpecMimeType",
              "nameOverride": "CredAttrSpec",
              "title": "CredAttrSpec",
              "value": {
                "generatedName": "CredAttrSpecMimeType",
                "description": "MIME type: omit for (null) default",
                "value": {
                  "description": "MIME type: omit for (null) default",
                  "schema": {
                    "example": "image/jpeg",
                    "type": "string"
                  },
                  "generatedName": "CredAttrSpecMimeType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credAttrSpecName",
            "key": "name",
            "schema": {
              "description": "Attribute name",
              "schema": {
                "example": "favourite_drink",
                "type": "string"
              },
              "generatedName": "CredAttrSpecName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credAttrSpecValue",
            "key": "value",
            "schema": {
              "description": "Attribute value: base64-encode if MIME type is present",
              "schema": {
                "example": "martini",
                "type": "string"
              },
              "generatedName": "CredAttrSpecValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredAttrSpec",
        "nameOverride": "CredAttrSpec",
        "title": "CredAttrSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredDefValue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credDefValuePrimary",
            "key": "primary",
            "schema": {
              "generatedName": "credDefValuePrimary",
              "nameOverride": "CredDefValue",
              "title": "CredDefValue",
              "value": {
                "generatedName": "CredDefValuePrimary",
                "schema": "CredDefValue_primary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocation",
            "key": "revocation",
            "schema": {
              "generatedName": "credDefValueRevocation",
              "nameOverride": "CredDefValue",
              "title": "CredDefValue",
              "value": {
                "generatedName": "CredDefValueRevocation",
                "schema": "CredDefValue_revocation",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredDefValue",
        "nameOverride": "CredDefValue",
        "title": "CredDefValue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredDefValuePrimary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credDefValuePrimaryN",
            "key": "n",
            "schema": {
              "generatedName": "credDefValuePrimaryN",
              "nameOverride": "CredDefValuePrimary",
              "title": "CredDefValuePrimary",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "CredDefValuePrimaryN",
                "nameOverride": "n",
                "title": "n",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValuePrimaryR",
            "key": "r",
            "schema": {
              "generatedName": "credDefValuePrimaryR",
              "nameOverride": "CredDefValuePrimary",
              "title": "CredDefValuePrimary",
              "value": {
                "generatedName": "CredDefValuePrimaryR",
                "schema": "Generated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "credDefValuePrimaryRctxt",
            "key": "rctxt",
            "schema": {
              "generatedName": "credDefValuePrimaryRctxt",
              "nameOverride": "CredDefValuePrimary",
              "title": "CredDefValuePrimary",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "CredDefValuePrimaryRctxt",
                "nameOverride": "rctxt",
                "title": "rctxt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValuePrimaryS",
            "key": "s",
            "schema": {
              "generatedName": "credDefValuePrimaryS",
              "nameOverride": "CredDefValuePrimary",
              "title": "CredDefValuePrimary",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "CredDefValuePrimaryS",
                "nameOverride": "s",
                "title": "s",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValuePrimaryZ",
            "key": "z",
            "schema": {
              "generatedName": "credDefValuePrimaryZ",
              "nameOverride": "CredDefValuePrimary",
              "title": "CredDefValuePrimary",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "CredDefValuePrimaryZ",
                "nameOverride": "z",
                "title": "z",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredDefValuePrimary",
        "nameOverride": "CredDefValuePrimary",
        "title": "CredDefValuePrimary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredDefValueRevocation": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationG",
            "key": "g",
            "schema": {
              "generatedName": "credDefValueRevocationG",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 1F14F&ECB578F 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationG",
                "nameOverride": "g",
                "title": "g",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationGDash",
            "key": "g_dash",
            "schema": {
              "generatedName": "credDefValueRevocationGDash",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 1D64716fCDC00C 1 0C781960FA66E3D3 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationGDash",
                "title": "g_dash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationH",
            "key": "h",
            "schema": {
              "generatedName": "credDefValueRevocationH",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 16675DAE54BFAE8 2 095E45DD417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationH",
                "nameOverride": "h",
                "title": "h",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationH0",
            "key": "h0",
            "schema": {
              "generatedName": "credDefValueRevocationH0",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 21E5EF9476EAF18 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationH0",
                "title": "h0",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationH1",
            "key": "h1",
            "schema": {
              "generatedName": "credDefValueRevocationH1",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 236D1D99236090 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationH1",
                "title": "h1",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationH2",
            "key": "h2",
            "schema": {
              "generatedName": "credDefValueRevocationH2",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 1C3AE8D1F1E277 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationH2",
                "title": "h2",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationHCap",
            "key": "h_cap",
            "schema": {
              "generatedName": "credDefValueRevocationHCap",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 1B2A32CF3167 1 2490FEBF6EE55 1 0000000000000000",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationHCap",
                "title": "h_cap",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationHtilde",
            "key": "htilde",
            "schema": {
              "generatedName": "credDefValueRevocationHtilde",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 1D8549E8C0F8 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationHtilde",
                "nameOverride": "htilde",
                "title": "htilde",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationPk",
            "key": "pk",
            "schema": {
              "generatedName": "credDefValueRevocationPk",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 142CD5E5A7DC 1 153885BD903312 2 095E45DDF417D",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationPk",
                "nameOverride": "pk",
                "title": "pk",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationU",
            "key": "u",
            "schema": {
              "generatedName": "credDefValueRevocationU",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 0C430AAB2B4710 1 1CB3A0932EE7E 1 0000000000000000",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationU",
                "nameOverride": "u",
                "title": "u",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credDefValueRevocationY",
            "key": "y",
            "schema": {
              "generatedName": "credDefValueRevocationY",
              "nameOverride": "CredDefValueRevocation",
              "title": "CredDefValueRevocation",
              "value": {
                "schema": {
                  "example": "1 153558BD903312 2 095E45DDF417D 1 0000000000000000",
                  "type": "string"
                },
                "generatedName": "CredDefValueRevocationY",
                "nameOverride": "y",
                "title": "y",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredDefValueRevocation",
        "nameOverride": "CredDefValueRevocation",
        "title": "CredDefValueRevocation",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredInfoList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credInfoListResults",
            "key": "results",
            "schema": {
              "generatedName": "credInfoListResults",
              "nameOverride": "CredInfoList",
              "title": "CredInfoList",
              "value": {
                "value": {
                  "generatedName": "CredInfoListResultsItem",
                  "schema": "IndyCredInfo",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CredInfoListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredInfoList",
        "nameOverride": "CredInfoList",
        "title": "CredInfoList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredRevIndyRecordsResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credRevIndyRecordsResultRevRegDelta",
            "key": "rev_reg_delta",
            "schema": {
              "generatedName": "credRevIndyRecordsResultRevRegDelta",
              "nameOverride": "CredRevIndyRecordsResult",
              "title": "CredRevIndyRecordsResult",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Indy revocation registry delta",
                "generatedName": "CredRevIndyRecordsResultRevRegDelta",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredRevIndyRecordsResult",
        "nameOverride": "CredRevIndyRecordsResult",
        "title": "CredRevIndyRecordsResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredRevRecordDetailsResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credRevRecordDetailsResultResults",
            "key": "results",
            "schema": {
              "generatedName": "credRevRecordDetailsResultResults",
              "nameOverride": "CredRevRecordDetailsResult",
              "title": "CredRevRecordDetailsResult",
              "value": {
                "value": {
                  "generatedName": "CredRevRecordDetailsResultResultsItem",
                  "schema": "IssuerCredRevRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "CredRevRecordDetailsResultResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredRevRecordDetailsResult",
        "nameOverride": "CredRevRecordDetailsResult",
        "title": "CredRevRecordDetailsResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredRevRecordResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credRevRecordResultResult",
            "key": "result",
            "schema": {
              "generatedName": "credRevRecordResultResult",
              "nameOverride": "CredRevRecordResult",
              "title": "CredRevRecordResult",
              "value": {
                "generatedName": "CredRevRecordResultResult",
                "schema": "IssuerCredRevRecord",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredRevRecordResult",
        "nameOverride": "CredRevRecordResult",
        "title": "CredRevRecordResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredRevokedResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credRevokedResultRevoked",
            "key": "revoked",
            "schema": {
              "generatedName": "credRevokedResultRevoked",
              "nameOverride": "CredRevokedResult",
              "title": "CredRevokedResult",
              "value": {
                "description": "Whether credential is revoked on the ledger",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "CredRevokedResultRevoked",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredRevokedResult",
        "nameOverride": "CredRevokedResult",
        "title": "CredRevokedResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Credential": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialContext",
            "key": "@context",
            "schema": {
              "description": "The JSON-LD context of the credential",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CredentialContextItemKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "CredentialContextItemValue",
                  "type": "unknown"
                },
                "generatedName": "CredentialContextItem",
                "groupName": [],
                "type": "map"
              },
              "generatedName": "CredentialContext",
              "title": "@context",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialCredentialSubject",
            "key": "credentialSubject",
            "schema": {
              "key": {
                "schema": {
                  "example": "",
                  "type": "string"
                },
                "generatedName": "CredentialCredentialSubjectKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "CredentialCredentialSubjectValue",
                "type": "unknown"
              },
              "generatedName": "CredentialCredentialSubject",
              "title": "credentialSubject",
              "nameOverride": "credentialSubject",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialExpirationDate",
            "key": "expirationDate",
            "schema": {
              "generatedName": "credentialExpirationDate",
              "nameOverride": "Credential",
              "title": "Credential",
              "value": {
                "description": "The expiration date",
                "schema": {
                  "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$",
                  "example": "2010-01-01 19:23:24+00:00",
                  "type": "string"
                },
                "generatedName": "CredentialExpirationDate",
                "nameOverride": "expirationDate",
                "title": "expirationDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialId",
            "key": "id",
            "schema": {
              "generatedName": "credentialId",
              "nameOverride": "Credential",
              "title": "Credential",
              "value": {
                "schema": {
                  "pattern": "\\w+:(\\/?\\/?)[^\\s]+",
                  "example": "http://example.edu/credentials/1872",
                  "type": "string"
                },
                "generatedName": "CredentialId",
                "nameOverride": "id",
                "title": "id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialIssuanceDate",
            "key": "issuanceDate",
            "schema": {
              "description": "The issuance date",
              "schema": {
                "pattern": "^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$",
                "example": "2010-01-01 19:23:24+00:00",
                "type": "string"
              },
              "generatedName": "CredentialIssuanceDate",
              "nameOverride": "issuanceDate",
              "title": "issuanceDate",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialIssuer",
            "key": "issuer",
            "schema": {
              "description": "The JSON-LD Verifiable Credential Issuer. Either string of object with id field.",
              "key": {
                "schema": {
                  "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                  "type": "string"
                },
                "generatedName": "CredentialIssuerKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "CredentialIssuerValue",
                "type": "unknown"
              },
              "generatedName": "CredentialIssuer",
              "title": "issuer",
              "nameOverride": "issuer",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProof",
            "key": "proof",
            "schema": {
              "generatedName": "credentialProof",
              "nameOverride": "Credential",
              "title": "Credential",
              "value": {
                "generatedName": "CredentialProof",
                "schema": "Credential_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "credentialType",
            "key": "type",
            "schema": {
              "description": "The JSON-LD type of the credential",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CredentialTypeItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "CredentialType",
              "nameOverride": "type",
              "title": "type",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Credential",
        "nameOverride": "Credential",
        "title": "Credential",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialDefinition": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialDefinitionId",
            "key": "id",
            "schema": {
              "generatedName": "credentialDefinitionId",
              "nameOverride": "CredentialDefinition",
              "title": "CredentialDefinition",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionSchemaId",
            "key": "schemaId",
            "schema": {
              "generatedName": "credentialDefinitionSchemaId",
              "nameOverride": "CredentialDefinition",
              "title": "CredentialDefinition",
              "value": {
                "description": "Schema identifier within credential definition identifier",
                "schema": {
                  "example": "20",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionTag",
            "key": "tag",
            "schema": {
              "generatedName": "credentialDefinitionTag",
              "nameOverride": "CredentialDefinition",
              "title": "CredentialDefinition",
              "value": {
                "description": "Tag within credential definition identifier",
                "schema": {
                  "example": "tag",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionTag",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionType",
            "key": "type",
            "schema": {
              "generatedName": "credentialDefinitionType",
              "nameOverride": "CredentialDefinition",
              "title": "CredentialDefinition",
              "value": {
                "description": "Signature type: CL for Camenisch-Lysyanskaya",
                "key": {
                  "schema": {
                    "example": "CL",
                    "type": "string"
                  },
                  "generatedName": "CredentialDefinitionTypeKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "CredentialDefinitionTypeValue",
                  "type": "unknown"
                },
                "generatedName": "CredentialDefinitionType",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionValue",
            "key": "value",
            "schema": {
              "generatedName": "credentialDefinitionValue",
              "nameOverride": "CredentialDefinition",
              "title": "CredentialDefinition",
              "value": {
                "generatedName": "CredentialDefinitionValue",
                "schema": "CredentialDefinition_value",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionVer",
            "key": "ver",
            "schema": {
              "generatedName": "credentialDefinitionVer",
              "nameOverride": "CredentialDefinition",
              "title": "CredentialDefinition",
              "value": {
                "description": "Node protocol version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionVer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialDefinition",
        "nameOverride": "CredentialDefinition",
        "title": "CredentialDefinition",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialDefinitionGetResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialDefinitionGetResultCredentialDefinition",
            "key": "credential_definition",
            "schema": {
              "generatedName": "credentialDefinitionGetResultCredentialDefinition",
              "nameOverride": "CredentialDefinitionGetResult",
              "title": "CredentialDefinitionGetResult",
              "value": {
                "generatedName": "CredentialDefinitionGetResultCredentialDefinition",
                "schema": "CredentialDefinition",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialDefinitionGetResult",
        "nameOverride": "CredentialDefinitionGetResult",
        "title": "CredentialDefinitionGetResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialDefinitionSendRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialDefinitionSendRequestRevocationRegistrySize",
            "key": "revocation_registry_size",
            "schema": {
              "generatedName": "credentialDefinitionSendRequestRevocationRegistrySize",
              "nameOverride": "CredentialDefinitionSendRequest",
              "title": "CredentialDefinitionSendRequest",
              "value": {
                "description": "Revocation registry size",
                "schema": {
                  "minimum": 4,
                  "maximum": 32768,
                  "example": 1000,
                  "type": "int"
                },
                "generatedName": "CredentialDefinitionSendRequestRevocationRegistrySize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionSendRequestSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "credentialDefinitionSendRequestSchemaId",
              "nameOverride": "CredentialDefinitionSendRequest",
              "title": "CredentialDefinitionSendRequest",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionSendRequestSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionSendRequestSupportRevocation",
            "key": "support_revocation",
            "schema": {
              "generatedName": "credentialDefinitionSendRequestSupportRevocation",
              "nameOverride": "CredentialDefinitionSendRequest",
              "title": "CredentialDefinitionSendRequest",
              "value": {
                "description": "Revocation supported flag",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "CredentialDefinitionSendRequestSupportRevocation",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialDefinitionSendRequestTag",
            "key": "tag",
            "schema": {
              "generatedName": "credentialDefinitionSendRequestTag",
              "nameOverride": "CredentialDefinitionSendRequest",
              "title": "CredentialDefinitionSendRequest",
              "value": {
                "description": "Credential definition identifier tag",
                "schema": {
                  "example": "default",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionSendRequestTag",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialDefinitionSendRequest",
        "nameOverride": "CredentialDefinitionSendRequest",
        "title": "CredentialDefinitionSendRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialDefinitionSendResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialDefinitionSendResultCredentialDefinitionId",
            "key": "credential_definition_id",
            "schema": {
              "generatedName": "credentialDefinitionSendResultCredentialDefinitionId",
              "nameOverride": "CredentialDefinitionSendResult",
              "title": "CredentialDefinitionSendResult",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "CredentialDefinitionSendResultCredentialDefinitionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialDefinitionSendResult",
        "nameOverride": "CredentialDefinitionSendResult",
        "title": "CredentialDefinitionSendResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialDefinitionsCreatedResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialDefinitionsCreatedResultCredentialDefinitionIds",
            "key": "credential_definition_ids",
            "schema": {
              "generatedName": "credentialDefinitionsCreatedResultCredentialDefinitionIds",
              "nameOverride": "CredentialDefinitionsCreatedResult",
              "title": "CredentialDefinitionsCreatedResult",
              "value": {
                "value": {
                  "description": "Credential definition identifiers",
                  "schema": {
                    "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                    "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                    "type": "string"
                  },
                  "generatedName": "CredentialDefinitionsCreatedResultCredentialDefinitionIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "CredentialDefinitionsCreatedResultCredentialDefinitionIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialDefinitionsCreatedResult",
        "nameOverride": "CredentialDefinitionsCreatedResult",
        "title": "CredentialDefinitionsCreatedResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialOffer": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialOfferId",
            "key": "@id",
            "schema": {
              "generatedName": "credentialOfferId",
              "nameOverride": "CredentialOffer",
              "title": "CredentialOffer",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "CredentialOfferId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialOfferType",
            "key": "@type",
            "schema": {
              "generatedName": "credentialOfferType",
              "nameOverride": "CredentialOffer",
              "title": "CredentialOffer",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "CredentialOfferType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "credentialOfferComment",
            "key": "comment",
            "schema": {
              "generatedName": "credentialOfferComment",
              "nameOverride": "CredentialOffer",
              "title": "CredentialOffer",
              "value": {
                "generatedName": "CredentialOfferComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CredentialOfferComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialOfferCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "credentialOfferCredentialPreview",
              "nameOverride": "CredentialOffer",
              "title": "CredentialOffer",
              "value": {
                "generatedName": "CredentialOfferCredentialPreview",
                "schema": "CredentialPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "credentialOfferOffersAttach",
            "key": "offers~attach",
            "schema": {
              "value": {
                "generatedName": "CredentialOfferOffersAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "CredentialOfferOffersAttach",
              "title": "offers~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialOffer",
        "nameOverride": "CredentialOffer",
        "title": "CredentialOffer",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialPreview": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialPreviewType",
            "key": "@type",
            "schema": {
              "generatedName": "credentialPreviewType",
              "nameOverride": "CredentialPreview",
              "title": "CredentialPreview",
              "value": {
                "description": "Message type identifier",
                "schema": {
                  "example": "issue-credential/1.0/credential-preview",
                  "type": "string"
                },
                "generatedName": "CredentialPreviewType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialPreviewAttributes",
            "key": "attributes",
            "schema": {
              "value": {
                "generatedName": "CredentialPreviewAttributesItem",
                "schema": "CredAttrSpec",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "CredentialPreviewAttributes",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialPreview",
        "nameOverride": "CredentialPreview",
        "title": "CredentialPreview",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialProposalId",
            "key": "@id",
            "schema": {
              "generatedName": "credentialProposalId",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "CredentialProposalId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalType",
            "key": "@type",
            "schema": {
              "generatedName": "credentialProposalType",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "CredentialProposalType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalComment",
            "key": "comment",
            "schema": {
              "generatedName": "credentialProposalComment",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "generatedName": "CredentialProposalComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "CredentialProposalComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "credentialProposalCredDefId",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "CredentialProposalCredDefId",
                "title": "cred_def_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalCredentialProposal",
            "key": "credential_proposal",
            "schema": {
              "generatedName": "credentialProposalCredentialProposal",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "generatedName": "CredentialProposalCredentialProposal",
                "schema": "CredentialPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalIssuerDid",
            "key": "issuer_did",
            "schema": {
              "generatedName": "credentialProposalIssuerDid",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "CredentialProposalIssuerDid",
                "title": "issuer_did",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "credentialProposalSchemaId",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "CredentialProposalSchemaId",
                "title": "schema_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalSchemaIssuerDid",
            "key": "schema_issuer_did",
            "schema": {
              "generatedName": "credentialProposalSchemaIssuerDid",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "CredentialProposalSchemaIssuerDid",
                "title": "schema_issuer_did",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalSchemaName",
            "key": "schema_name",
            "schema": {
              "generatedName": "credentialProposalSchemaName",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "CredentialProposalSchemaName",
                "title": "schema_name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "credentialProposalSchemaVersion",
            "key": "schema_version",
            "schema": {
              "generatedName": "credentialProposalSchemaVersion",
              "nameOverride": "CredentialProposal",
              "title": "CredentialProposal",
              "value": {
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "CredentialProposalSchemaVersion",
                "title": "schema_version",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialProposal",
        "nameOverride": "CredentialProposal",
        "title": "CredentialProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "CredentialStatusOptions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "credentialStatusOptionsType",
            "key": "type",
            "schema": {
              "description": "Credential status method type to use for the credential. Should match status method registered in the Verifiable Credential Extension Registry",
              "schema": {
                "example": "CredentialStatusList2017",
                "type": "string"
              },
              "generatedName": "CredentialStatusOptionsType",
              "nameOverride": "type",
              "title": "type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "CredentialStatusOptions",
        "nameOverride": "CredentialStatusOptions",
        "title": "CredentialStatusOptions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DID": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didDid",
            "key": "did",
            "schema": {
              "generatedName": "didDid",
              "nameOverride": "DID",
              "title": "DID",
              "value": {
                "description": "DID of interest",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$",
                  "example": "did:peer:WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "DidDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didKeyType",
            "key": "key_type",
            "schema": {
              "generatedName": "didKeyType",
              "nameOverride": "DID",
              "title": "DID",
              "value": {
                "description": "Key type associated with the DID",
                "generatedName": "DidKeyType",
                "values": [
                  {
                    "generatedName": "ed25519",
                    "value": "ed25519",
                    "casing": {}
                  },
                  {
                    "generatedName": "bls12381g2",
                    "value": "bls12381g2",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didMethod",
            "key": "method",
            "schema": {
              "generatedName": "didMethod",
              "nameOverride": "DID",
              "title": "DID",
              "value": {
                "description": "Did method associated with the DID",
                "schema": {
                  "example": "sov",
                  "type": "string"
                },
                "generatedName": "DidMethod",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didPosture",
            "key": "posture",
            "schema": {
              "generatedName": "didPosture",
              "nameOverride": "DID",
              "title": "DID",
              "value": {
                "description": "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet",
                "generatedName": "DidPosture",
                "values": [
                  {
                    "generatedName": "public",
                    "value": "public",
                    "casing": {}
                  },
                  {
                    "generatedName": "posted",
                    "value": "posted",
                    "casing": {}
                  },
                  {
                    "generatedName": "wallet_only",
                    "value": "wallet_only",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didVerkey",
            "key": "verkey",
            "schema": {
              "generatedName": "didVerkey",
              "nameOverride": "DID",
              "title": "DID",
              "value": {
                "description": "Public verification key",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                  "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                  "type": "string"
                },
                "generatedName": "DidVerkey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Did",
        "nameOverride": "DID",
        "title": "DID",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didCreateMethod",
            "key": "method",
            "schema": {
              "generatedName": "didCreateMethod",
              "nameOverride": "DIDCreate",
              "title": "DIDCreate",
              "value": {
                "description": "Method for the requested DID.Supported methods are 'key', 'sov', and any other registered method.",
                "schema": {
                  "example": "sov",
                  "type": "string"
                },
                "generatedName": "DidCreateMethod",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didCreateOptions",
            "key": "options",
            "schema": {
              "generatedName": "didCreateOptions",
              "nameOverride": "DIDCreate",
              "title": "DIDCreate",
              "value": {
                "generatedName": "DidCreateOptions",
                "schema": "DIDCreate_options",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "didCreateSeed",
            "key": "seed",
            "schema": {
              "generatedName": "didCreateSeed",
              "nameOverride": "DIDCreate",
              "title": "DIDCreate",
              "value": {
                "description": "Optional seed to use for DID, Must beenabled in configuration before use.",
                "schema": {
                  "example": "000000000000000000000000Trustee1",
                  "type": "string"
                },
                "generatedName": "DidCreateSeed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidCreate",
        "nameOverride": "DIDCreate",
        "title": "DIDCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDCreateOptions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didCreateOptionsDid",
            "key": "did",
            "schema": {
              "generatedName": "didCreateOptionsDid",
              "nameOverride": "DIDCreateOptions",
              "title": "DIDCreateOptions",
              "value": {
                "description": "Specify final value of the did (including did:<method>: prefix)if the method supports or requires so.",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(\\#.*)?$$",
                  "example": "did:peer:WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "DidCreateOptionsDid",
                "nameOverride": "did",
                "title": "did",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didCreateOptionsKeyType",
            "key": "key_type",
            "schema": {
              "description": "Key type to use for the DID keypair. Validated with the chosen DID method's supported key types.",
              "generatedName": "DidCreateOptionsKeyType",
              "title": "key_type",
              "values": [
                {
                  "generatedName": "ed25519",
                  "value": "ed25519",
                  "casing": {}
                },
                {
                  "generatedName": "bls12381g2",
                  "value": "bls12381g2",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidCreateOptions",
        "nameOverride": "DIDCreateOptions",
        "title": "DIDCreateOptions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDEndpoint": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didEndpointDid",
            "key": "did",
            "schema": {
              "description": "DID of interest",
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "example": "WgWxqztrNooG92RXvxSTWv",
                "type": "string"
              },
              "generatedName": "DidEndpointDid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didEndpointEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "didEndpointEndpoint",
              "nameOverride": "DIDEndpoint",
              "title": "DIDEndpoint",
              "value": {
                "description": "Endpoint to set (omit to delete)",
                "schema": {
                  "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                  "example": "https://myhost:8021",
                  "type": "string"
                },
                "generatedName": "DidEndpointEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidEndpoint",
        "nameOverride": "DIDEndpoint",
        "title": "DIDEndpoint",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDEndpointWithType": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didEndpointWithTypeDid",
            "key": "did",
            "schema": {
              "description": "DID of interest",
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "example": "WgWxqztrNooG92RXvxSTWv",
                "type": "string"
              },
              "generatedName": "DidEndpointWithTypeDid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didEndpointWithTypeEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "didEndpointWithTypeEndpoint",
              "nameOverride": "DIDEndpointWithType",
              "title": "DIDEndpointWithType",
              "value": {
                "description": "Endpoint to set (omit to delete)",
                "schema": {
                  "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                  "example": "https://myhost:8021",
                  "type": "string"
                },
                "generatedName": "DidEndpointWithTypeEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didEndpointWithTypeEndpointType",
            "key": "endpoint_type",
            "schema": {
              "generatedName": "didEndpointWithTypeEndpointType",
              "nameOverride": "DIDEndpointWithType",
              "title": "DIDEndpointWithType",
              "value": {
                "description": "Endpoint type to set (default 'Endpoint'); affects only public or posted DIDs",
                "generatedName": "DidEndpointWithTypeEndpointType",
                "values": [
                  {
                    "generatedName": "Endpoint",
                    "value": "Endpoint",
                    "casing": {}
                  },
                  {
                    "generatedName": "Profile",
                    "value": "Profile",
                    "casing": {}
                  },
                  {
                    "generatedName": "LinkedDomains",
                    "value": "LinkedDomains",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidEndpointWithType",
        "nameOverride": "DIDEndpointWithType",
        "title": "DIDEndpointWithType",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didListResults",
            "key": "results",
            "schema": {
              "generatedName": "didListResults",
              "nameOverride": "DIDList",
              "title": "DIDList",
              "value": {
                "description": "DID list",
                "value": {
                  "generatedName": "DidListResultsItem",
                  "schema": "DID",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DidListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidList",
        "nameOverride": "DIDList",
        "title": "DIDList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didResultResult",
            "key": "result",
            "schema": {
              "generatedName": "didResultResult",
              "nameOverride": "DIDResult",
              "title": "DIDResult",
              "value": {
                "generatedName": "DidResultResult",
                "schema": "DID",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidResult",
        "nameOverride": "DIDResult",
        "title": "DIDResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIDXRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "didxRequestId",
            "key": "@id",
            "schema": {
              "generatedName": "didxRequestId",
              "nameOverride": "DIDXRequest",
              "title": "DIDXRequest",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "DidxRequestId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didxRequestType",
            "key": "@type",
            "schema": {
              "generatedName": "didxRequestType",
              "nameOverride": "DIDXRequest",
              "title": "DIDXRequest",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "DidxRequestType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "didxRequestDid",
            "key": "did",
            "schema": {
              "generatedName": "didxRequestDid",
              "nameOverride": "DIDXRequest",
              "title": "DIDXRequest",
              "value": {
                "description": "DID of exchange",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "DidxRequestDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "didxRequestDidDocAttach",
            "key": "did_doc~attach",
            "schema": {
              "generatedName": "didxRequestDidDocAttach",
              "nameOverride": "DIDXRequest",
              "title": "DIDXRequest",
              "value": {
                "generatedName": "DidxRequestDidDocAttach",
                "schema": "DIDXRequest_did_doc_attach",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "didxRequestLabel",
            "key": "label",
            "schema": {
              "description": "Label for DID exchange request",
              "schema": {
                "example": "Request to connect with Bob",
                "type": "string"
              },
              "generatedName": "DidxRequestLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DidxRequest",
        "nameOverride": "DIDXRequest",
        "title": "DIDXRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIFField": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "difFieldFilter",
            "key": "filter",
            "schema": {
              "generatedName": "difFieldFilter",
              "nameOverride": "DIFField",
              "title": "DIFField",
              "value": {
                "generatedName": "DifFieldFilter",
                "schema": "Filter",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "difFieldId",
            "key": "id",
            "schema": {
              "generatedName": "difFieldId",
              "nameOverride": "DIFField",
              "title": "DIFField",
              "value": {
                "description": "ID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DifFieldId",
                "nameOverride": "id",
                "title": "id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difFieldPath",
            "key": "path",
            "schema": {
              "generatedName": "difFieldPath",
              "nameOverride": "DIFField",
              "title": "DIFField",
              "value": {
                "value": {
                  "description": "Path",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DifFieldPathItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "DifFieldPath",
                "nameOverride": "path",
                "title": "path",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difFieldPredicate",
            "key": "predicate",
            "schema": {
              "generatedName": "difFieldPredicate",
              "nameOverride": "DIFField",
              "title": "DIFField",
              "value": {
                "description": "Preference",
                "generatedName": "DifFieldPredicate",
                "nameOverride": "predicate",
                "title": "predicate",
                "values": [
                  {
                    "generatedName": "required",
                    "value": "required",
                    "casing": {}
                  },
                  {
                    "generatedName": "preferred",
                    "value": "preferred",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difFieldPurpose",
            "key": "purpose",
            "schema": {
              "generatedName": "difFieldPurpose",
              "nameOverride": "DIFField",
              "title": "DIFField",
              "value": {
                "description": "Purpose",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DifFieldPurpose",
                "nameOverride": "purpose",
                "title": "purpose",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DifField",
        "nameOverride": "DIFField",
        "title": "DIFField",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIFHolder": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "difHolderDirective",
            "key": "directive",
            "schema": {
              "generatedName": "difHolderDirective",
              "nameOverride": "DIFHolder",
              "title": "DIFHolder",
              "value": {
                "description": "Preference",
                "generatedName": "DifHolderDirective",
                "nameOverride": "directive",
                "title": "directive",
                "values": [
                  {
                    "generatedName": "required",
                    "value": "required",
                    "casing": {}
                  },
                  {
                    "generatedName": "preferred",
                    "value": "preferred",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difHolderFieldId",
            "key": "field_id",
            "schema": {
              "generatedName": "difHolderFieldId",
              "nameOverride": "DIFHolder",
              "title": "DIFHolder",
              "value": {
                "value": {
                  "description": "FieldID",
                  "schema": {
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "generatedName": "DifHolderFieldIdItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "DifHolderFieldId",
                "title": "field_id",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DifHolder",
        "nameOverride": "DIFHolder",
        "title": "DIFHolder",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIFOptions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "difOptionsChallenge",
            "key": "challenge",
            "schema": {
              "generatedName": "difOptionsChallenge",
              "nameOverride": "DIFOptions",
              "title": "DIFOptions",
              "value": {
                "description": "Challenge protect against replay attack",
                "schema": {
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "DifOptionsChallenge",
                "nameOverride": "challenge",
                "title": "challenge",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difOptionsDomain",
            "key": "domain",
            "schema": {
              "generatedName": "difOptionsDomain",
              "nameOverride": "DIFOptions",
              "title": "DIFOptions",
              "value": {
                "description": "Domain protect against replay attack",
                "schema": {
                  "example": "4jt78h47fh47",
                  "type": "string"
                },
                "generatedName": "DifOptionsDomain",
                "nameOverride": "domain",
                "title": "domain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DifOptions",
        "nameOverride": "DIFOptions",
        "title": "DIFOptions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIFPresSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "difPresSpecIssuerId",
            "key": "issuer_id",
            "schema": {
              "generatedName": "difPresSpecIssuerId",
              "nameOverride": "DIFPresSpec",
              "title": "DIFPresSpec",
              "value": {
                "description": "Issuer identifier to sign the presentation, if different from current public DID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DifPresSpecIssuerId",
                "title": "issuer_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difPresSpecPresentationDefinition",
            "key": "presentation_definition",
            "schema": {
              "generatedName": "difPresSpecPresentationDefinition",
              "nameOverride": "DIFPresSpec",
              "title": "DIFPresSpec",
              "value": {
                "generatedName": "DifPresSpecPresentationDefinition",
                "schema": "PresentationDefinition",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "difPresSpecRecordIds",
            "key": "record_ids",
            "schema": {
              "generatedName": "difPresSpecRecordIds",
              "nameOverride": "DIFPresSpec",
              "title": "DIFPresSpec",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Mapping of input_descriptor id to list of stored W3C credential record_id",
                "generatedName": "DifPresSpecRecordIds",
                "title": "record_ids",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difPresSpecRevealDoc",
            "key": "reveal_doc",
            "schema": {
              "generatedName": "difPresSpecRevealDoc",
              "nameOverride": "DIFPresSpec",
              "title": "DIFPresSpec",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "reveal doc [JSON-LD frame] dict used to derive the credential when selective disclosure is required",
                "generatedName": "DifPresSpecRevealDoc",
                "title": "reveal_doc",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DifPresSpec",
        "nameOverride": "DIFPresSpec",
        "title": "DIFPresSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIFProofProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "difProofProposalInputDescriptors",
            "key": "input_descriptors",
            "schema": {
              "generatedName": "difProofProposalInputDescriptors",
              "nameOverride": "DIFProofProposal",
              "title": "DIFProofProposal",
              "value": {
                "value": {
                  "generatedName": "DifProofProposalInputDescriptorsItem",
                  "schema": "InputDescriptors",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DifProofProposalInputDescriptors",
                "title": "input_descriptors",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "difProofProposalOptions",
            "key": "options",
            "schema": {
              "generatedName": "difProofProposalOptions",
              "nameOverride": "DIFProofProposal",
              "title": "DIFProofProposal",
              "value": {
                "generatedName": "DifProofProposalOptions",
                "schema": "DIFOptions",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DifProofProposal",
        "nameOverride": "DIFProofProposal",
        "title": "DIFProofProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DIFProofRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "difProofRequestOptions",
            "key": "options",
            "schema": {
              "generatedName": "difProofRequestOptions",
              "nameOverride": "DIFProofRequest",
              "title": "DIFProofRequest",
              "value": {
                "generatedName": "DifProofRequestOptions",
                "schema": "DIFOptions",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "difProofRequestPresentationDefinition",
            "key": "presentation_definition",
            "schema": {
              "generatedName": "DifProofRequestPresentationDefinition",
              "schema": "PresentationDefinition",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DifProofRequest",
        "nameOverride": "DIFProofRequest",
        "title": "DIFProofRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Date": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "dateExpiresTime",
            "key": "expires_time",
            "schema": {
              "description": "Expiry Date",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DateExpiresTime",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Date",
        "nameOverride": "Date",
        "title": "Date",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Disclose": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "discloseId",
            "key": "@id",
            "schema": {
              "generatedName": "discloseId",
              "nameOverride": "Disclose",
              "title": "Disclose",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "DiscloseId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "discloseType",
            "key": "@type",
            "schema": {
              "generatedName": "discloseType",
              "nameOverride": "Disclose",
              "title": "Disclose",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "DiscloseType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "discloseProtocols",
            "key": "protocols",
            "schema": {
              "description": "List of protocol descriptors",
              "value": {
                "generatedName": "DiscloseProtocolsItem",
                "schema": "ProtocolDescriptor",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "DiscloseProtocols",
              "nameOverride": "protocols",
              "title": "protocols",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Disclose",
        "nameOverride": "Disclose",
        "title": "Disclose",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Disclosures": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "disclosuresId",
            "key": "@id",
            "schema": {
              "generatedName": "disclosuresId",
              "nameOverride": "Disclosures",
              "title": "Disclosures",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "DisclosuresId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "disclosuresType",
            "key": "@type",
            "schema": {
              "generatedName": "disclosuresType",
              "nameOverride": "Disclosures",
              "title": "Disclosures",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "DisclosuresType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "disclosuresDisclosures",
            "key": "disclosures",
            "schema": {
              "description": "List of protocol or goal_code descriptors",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DisclosuresDisclosuresItemKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "DisclosuresDisclosuresItemValue",
                  "type": "unknown"
                },
                "generatedName": "DisclosuresDisclosuresItem",
                "groupName": [],
                "type": "map"
              },
              "generatedName": "DisclosuresDisclosures",
              "nameOverride": "disclosures",
              "title": "disclosures",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Disclosures",
        "nameOverride": "Disclosures",
        "title": "Disclosures",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Doc": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "docCredential",
            "key": "credential",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Credential to sign",
              "generatedName": "DocCredential",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "docOptions",
            "key": "options",
            "schema": {
              "generatedName": "DocOptions",
              "schema": "Doc_options",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Doc",
        "nameOverride": "Doc",
        "title": "Doc",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EndorserInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "endorserInfoEndorserDid",
            "key": "endorser_did",
            "schema": {
              "description": "Endorser DID",
              "schema": {
                "type": "string"
              },
              "generatedName": "EndorserInfoEndorserDid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endorserInfoEndorserName",
            "key": "endorser_name",
            "schema": {
              "generatedName": "endorserInfoEndorserName",
              "nameOverride": "EndorserInfo",
              "title": "EndorserInfo",
              "value": {
                "description": "Endorser Name",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EndorserInfoEndorserName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EndorserInfo",
        "nameOverride": "EndorserInfo",
        "title": "EndorserInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EndpointsResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "endpointsResultMyEndpoint",
            "key": "my_endpoint",
            "schema": {
              "generatedName": "endpointsResultMyEndpoint",
              "nameOverride": "EndpointsResult",
              "title": "EndpointsResult",
              "value": {
                "description": "My endpoint",
                "schema": {
                  "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                  "example": "https://myhost:8021",
                  "type": "string"
                },
                "generatedName": "EndpointsResultMyEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "endpointsResultTheirEndpoint",
            "key": "their_endpoint",
            "schema": {
              "generatedName": "endpointsResultTheirEndpoint",
              "nameOverride": "EndpointsResult",
              "title": "EndpointsResult",
              "value": {
                "description": "Their endpoint",
                "schema": {
                  "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                  "example": "https://myhost:8021",
                  "type": "string"
                },
                "generatedName": "EndpointsResultTheirEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EndpointsResult",
        "nameOverride": "EndpointsResult",
        "title": "EndpointsResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Filter": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "filterConst",
            "key": "const",
            "schema": {
              "generatedName": "filterConst",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Const",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FilterConstKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "FilterConstValue",
                  "type": "unknown"
                },
                "generatedName": "FilterConst",
                "title": "const",
                "nameOverride": "const",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterEnum",
            "key": "enum",
            "schema": {
              "generatedName": "filterEnum",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "value": {
                  "description": "Enum",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "FilterEnumItemKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "FilterEnumItemValue",
                    "type": "unknown"
                  },
                  "generatedName": "FilterEnumItem",
                  "groupName": [],
                  "type": "map"
                },
                "generatedName": "FilterEnum",
                "nameOverride": "enum",
                "title": "enum",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterExclusiveMaximum",
            "key": "exclusiveMaximum",
            "schema": {
              "generatedName": "filterExclusiveMaximum",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "ExclusiveMaximum",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FilterExclusiveMaximumKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "FilterExclusiveMaximumValue",
                  "type": "unknown"
                },
                "generatedName": "FilterExclusiveMaximum",
                "title": "exclusiveMaximum",
                "nameOverride": "exclusiveMaximum",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterExclusiveMinimum",
            "key": "exclusiveMinimum",
            "schema": {
              "generatedName": "filterExclusiveMinimum",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "ExclusiveMinimum",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FilterExclusiveMinimumKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "FilterExclusiveMinimumValue",
                  "type": "unknown"
                },
                "generatedName": "FilterExclusiveMinimum",
                "title": "exclusiveMinimum",
                "nameOverride": "exclusiveMinimum",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterFormat",
            "key": "format",
            "schema": {
              "generatedName": "filterFormat",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Format",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FilterFormat",
                "nameOverride": "format",
                "title": "format",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterMaxLength",
            "key": "maxLength",
            "schema": {
              "generatedName": "filterMaxLength",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Max Length",
                "schema": {
                  "example": 1234,
                  "type": "int"
                },
                "generatedName": "FilterMaxLength",
                "nameOverride": "maxLength",
                "title": "maxLength",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterMaximum",
            "key": "maximum",
            "schema": {
              "generatedName": "filterMaximum",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Maximum",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FilterMaximumKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "FilterMaximumValue",
                  "type": "unknown"
                },
                "generatedName": "FilterMaximum",
                "title": "maximum",
                "nameOverride": "maximum",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterMinLength",
            "key": "minLength",
            "schema": {
              "generatedName": "filterMinLength",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Min Length",
                "schema": {
                  "example": 1234,
                  "type": "int"
                },
                "generatedName": "FilterMinLength",
                "nameOverride": "minLength",
                "title": "minLength",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterMinimum",
            "key": "minimum",
            "schema": {
              "generatedName": "filterMinimum",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Minimum",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "FilterMinimumKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "FilterMinimumValue",
                  "type": "unknown"
                },
                "generatedName": "FilterMinimum",
                "title": "minimum",
                "nameOverride": "minimum",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterNot",
            "key": "not",
            "schema": {
              "generatedName": "filterNot",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Not",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "FilterNot",
                "nameOverride": "not",
                "title": "not",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterPattern",
            "key": "pattern",
            "schema": {
              "generatedName": "filterPattern",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Pattern",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FilterPattern",
                "nameOverride": "pattern",
                "title": "pattern",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "filterType",
            "key": "type",
            "schema": {
              "generatedName": "filterType",
              "nameOverride": "Filter",
              "title": "Filter",
              "value": {
                "description": "Type",
                "schema": {
                  "type": "string"
                },
                "generatedName": "FilterType",
                "nameOverride": "type",
                "title": "type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Filter",
        "nameOverride": "Filter",
        "title": "Filter",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Generated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generatedMasterSecret",
            "key": "master_secret",
            "schema": {
              "generatedName": "generatedMasterSecret",
              "nameOverride": "Generated",
              "title": "Generated",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "GeneratedMasterSecret",
                "title": "master_secret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generatedNumber",
            "key": "number",
            "schema": {
              "generatedName": "generatedNumber",
              "nameOverride": "Generated",
              "title": "Generated",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "GeneratedNumber",
                "nameOverride": "number",
                "title": "number",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generatedRemainder",
            "key": "remainder",
            "schema": {
              "generatedName": "generatedRemainder",
              "nameOverride": "Generated",
              "title": "Generated",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "GeneratedRemainder",
                "nameOverride": "remainder",
                "title": "remainder",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Generated",
        "nameOverride": "Generated",
        "title": "Generated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GetDIDEndpointResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "getDidEndpointResponseEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "getDidEndpointResponseEndpoint",
              "nameOverride": "GetDIDEndpointResponse",
              "title": "GetDIDEndpointResponse",
              "value": {
                "generatedName": "GetDidEndpointResponseEndpoint",
                "description": "Full verification key",
                "value": {
                  "description": "Full verification key",
                  "schema": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    "example": "https://myhost:8021",
                    "type": "string"
                  },
                  "generatedName": "GetDidEndpointResponseEndpoint",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GetDidEndpointResponse",
        "nameOverride": "GetDIDEndpointResponse",
        "title": "GetDIDEndpointResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GetDIDVerkeyResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "getDidVerkeyResponseVerkey",
            "key": "verkey",
            "schema": {
              "generatedName": "getDidVerkeyResponseVerkey",
              "nameOverride": "GetDIDVerkeyResponse",
              "title": "GetDIDVerkeyResponse",
              "value": {
                "generatedName": "GetDidVerkeyResponseVerkey",
                "description": "Full verification key",
                "value": {
                  "description": "Full verification key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "GetDidVerkeyResponseVerkey",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GetDidVerkeyResponse",
        "nameOverride": "GetDIDVerkeyResponse",
        "title": "GetDIDVerkeyResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GetNymRoleResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "getNymRoleResponseRole",
            "key": "role",
            "schema": {
              "generatedName": "getNymRoleResponseRole",
              "nameOverride": "GetNymRoleResponse",
              "title": "GetNymRoleResponse",
              "value": {
                "description": "Ledger role",
                "generatedName": "GetNymRoleResponseRole",
                "values": [
                  {
                    "generatedName": "STEWARD",
                    "value": "STEWARD",
                    "casing": {}
                  },
                  {
                    "generatedName": "TRUSTEE",
                    "value": "TRUSTEE",
                    "casing": {}
                  },
                  {
                    "generatedName": "ENDORSER",
                    "value": "ENDORSER",
                    "casing": {}
                  },
                  {
                    "generatedName": "NETWORK_MONITOR",
                    "value": "NETWORK_MONITOR",
                    "casing": {}
                  },
                  {
                    "generatedName": "USER",
                    "value": "USER",
                    "casing": {}
                  },
                  {
                    "generatedName": "ROLE_REMOVE",
                    "value": "ROLE_REMOVE",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GetNymRoleResponse",
        "nameOverride": "GetNymRoleResponse",
        "title": "GetNymRoleResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "HolderModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "HolderModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "HolderModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "HolderModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "IndyAttrValue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyAttrValueEncoded",
            "key": "encoded",
            "schema": {
              "description": "Attribute encoded value",
              "schema": {
                "pattern": "^-?[0-9]*$",
                "example": "-1",
                "type": "string"
              },
              "generatedName": "IndyAttrValueEncoded",
              "nameOverride": "encoded",
              "title": "encoded",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyAttrValueRaw",
            "key": "raw",
            "schema": {
              "description": "Attribute raw value",
              "schema": {
                "type": "string"
              },
              "generatedName": "IndyAttrValueRaw",
              "nameOverride": "raw",
              "title": "raw",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyAttrValue",
        "nameOverride": "IndyAttrValue",
        "title": "IndyAttrValue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyCredAbstract": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyCredAbstractCredDefId",
            "key": "cred_def_id",
            "schema": {
              "description": "Credential definition identifier",
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                "type": "string"
              },
              "generatedName": "IndyCredAbstractCredDefId",
              "title": "cred_def_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredAbstractKeyCorrectnessProof",
            "key": "key_correctness_proof",
            "schema": {
              "generatedName": "IndyCredAbstractKeyCorrectnessProof",
              "schema": "IndyCredAbstract_key_correctness_proof",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyCredAbstractNonce",
            "key": "nonce",
            "schema": {
              "description": "Nonce in credential abstract",
              "schema": {
                "pattern": "^[0-9]*$",
                "example": "0",
                "type": "string"
              },
              "generatedName": "IndyCredAbstractNonce",
              "nameOverride": "nonce",
              "title": "nonce",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredAbstractSchemaId",
            "key": "schema_id",
            "schema": {
              "description": "Schema identifier",
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                "type": "string"
              },
              "generatedName": "IndyCredAbstractSchemaId",
              "title": "schema_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyCredAbstract",
        "nameOverride": "IndyCredAbstract",
        "title": "IndyCredAbstract",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyCredInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyCredInfoAttrs",
            "key": "attrs",
            "schema": {
              "generatedName": "indyCredInfoAttrs",
              "nameOverride": "IndyCredInfo",
              "title": "IndyCredInfo",
              "value": {
                "description": "Attribute names and value",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyCredInfoAttrsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "example": "alice",
                    "type": "string"
                  },
                  "generatedName": "IndyCredInfoAttrsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyCredInfoAttrs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredInfoCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "indyCredInfoCredDefId",
              "nameOverride": "IndyCredInfo",
              "title": "IndyCredInfo",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IndyCredInfoCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredInfoCredRevId",
            "key": "cred_rev_id",
            "schema": {
              "generatedName": "indyCredInfoCredRevId",
              "nameOverride": "IndyCredInfo",
              "title": "IndyCredInfo",
              "value": {
                "generatedName": "IndyCredInfoCredRevId",
                "description": "Credential revocation identifier",
                "value": {
                  "description": "Credential revocation identifier",
                  "schema": {
                    "pattern": "^[1-9][0-9]*$",
                    "example": "12345",
                    "type": "string"
                  },
                  "generatedName": "IndyCredInfoCredRevId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredInfoReferent",
            "key": "referent",
            "schema": {
              "generatedName": "indyCredInfoReferent",
              "nameOverride": "IndyCredInfo",
              "title": "IndyCredInfo",
              "value": {
                "description": "Wallet referent",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "IndyCredInfoReferent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredInfoRevRegId",
            "key": "rev_reg_id",
            "schema": {
              "generatedName": "indyCredInfoRevRegId",
              "nameOverride": "IndyCredInfo",
              "title": "IndyCredInfo",
              "value": {
                "generatedName": "IndyCredInfoRevRegId",
                "description": "Revocation registry identifier",
                "value": {
                  "description": "Revocation registry identifier",
                  "schema": {
                    "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                    "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                    "type": "string"
                  },
                  "generatedName": "IndyCredInfoRevRegId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredInfoSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "indyCredInfoSchemaId",
              "nameOverride": "IndyCredInfo",
              "title": "IndyCredInfo",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "IndyCredInfoSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyCredInfo",
        "nameOverride": "IndyCredInfo",
        "title": "IndyCredInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyCredPrecis": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyCredPrecisCredInfo",
            "key": "cred_info",
            "schema": {
              "generatedName": "indyCredPrecisCredInfo",
              "nameOverride": "IndyCredPrecis",
              "title": "IndyCredPrecis",
              "value": {
                "generatedName": "IndyCredPrecisCredInfo",
                "schema": "IndyCredPrecis_cred_info",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyCredPrecisInterval",
            "key": "interval",
            "schema": {
              "generatedName": "indyCredPrecisInterval",
              "nameOverride": "IndyCredPrecis",
              "title": "IndyCredPrecis",
              "value": {
                "generatedName": "IndyCredPrecisInterval",
                "schema": "IndyCredPrecis_interval",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyCredPrecisPresentationReferents",
            "key": "presentation_referents",
            "schema": {
              "generatedName": "indyCredPrecisPresentationReferents",
              "nameOverride": "IndyCredPrecis",
              "title": "IndyCredPrecis",
              "value": {
                "value": {
                  "description": "presentation referent",
                  "schema": {
                    "example": "1_age_uuid",
                    "type": "string"
                  },
                  "generatedName": "IndyCredPrecisPresentationReferentsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyCredPrecisPresentationReferents",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyCredPrecis",
        "nameOverride": "IndyCredPrecis",
        "title": "IndyCredPrecis",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyCredRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyCredRequestBlindedMs",
            "key": "blinded_ms",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Blinded master secret",
              "generatedName": "IndyCredRequestBlindedMs",
              "title": "blinded_ms",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredRequestBlindedMsCorrectnessProof",
            "key": "blinded_ms_correctness_proof",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Blinded master secret correctness proof",
              "generatedName": "IndyCredRequestBlindedMsCorrectnessProof",
              "title": "blinded_ms_correctness_proof",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredRequestCredDefId",
            "key": "cred_def_id",
            "schema": {
              "description": "Credential definition identifier",
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                "type": "string"
              },
              "generatedName": "IndyCredRequestCredDefId",
              "title": "cred_def_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredRequestNonce",
            "key": "nonce",
            "schema": {
              "description": "Nonce in credential request",
              "schema": {
                "pattern": "^[0-9]*$",
                "example": "0",
                "type": "string"
              },
              "generatedName": "IndyCredRequestNonce",
              "nameOverride": "nonce",
              "title": "nonce",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredRequestProverDid",
            "key": "prover_did",
            "schema": {
              "description": "Prover DID",
              "schema": {
                "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                "example": "WgWxqztrNooG92RXvxSTWv",
                "type": "string"
              },
              "generatedName": "IndyCredRequestProverDid",
              "title": "prover_did",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyCredRequest",
        "nameOverride": "IndyCredRequest",
        "title": "IndyCredRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyCredential": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyCredentialCredDefId",
            "key": "cred_def_id",
            "schema": {
              "description": "Credential definition identifier",
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                "type": "string"
              },
              "generatedName": "IndyCredentialCredDefId",
              "title": "cred_def_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialRevReg",
            "key": "rev_reg",
            "schema": {
              "generatedName": "indyCredentialRevReg",
              "nameOverride": "IndyCredential",
              "title": "IndyCredential",
              "value": {
                "generatedName": "IndyCredentialRevReg",
                "title": "rev_reg",
                "description": "Revocation registry state",
                "value": {
                  "allOf": [],
                  "properties": [],
                  "allOfPropertyConflicts": [],
                  "description": "Revocation registry state",
                  "generatedName": "IndyCredentialRevReg",
                  "title": "rev_reg",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialRevRegId",
            "key": "rev_reg_id",
            "schema": {
              "generatedName": "indyCredentialRevRegId",
              "nameOverride": "IndyCredential",
              "title": "IndyCredential",
              "value": {
                "generatedName": "IndyCredentialRevRegId",
                "title": "rev_reg_id",
                "description": "Revocation registry identifier",
                "value": {
                  "description": "Revocation registry identifier",
                  "schema": {
                    "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                    "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                    "type": "string"
                  },
                  "generatedName": "IndyCredentialRevRegId",
                  "title": "rev_reg_id",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialSchemaId",
            "key": "schema_id",
            "schema": {
              "description": "Schema identifier",
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                "type": "string"
              },
              "generatedName": "IndyCredentialSchemaId",
              "title": "schema_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialSignature",
            "key": "signature",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Credential signature",
              "generatedName": "IndyCredentialSignature",
              "nameOverride": "signature",
              "title": "signature",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialSignatureCorrectnessProof",
            "key": "signature_correctness_proof",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Credential signature correctness proof",
              "generatedName": "IndyCredentialSignatureCorrectnessProof",
              "title": "signature_correctness_proof",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialValues",
            "key": "values",
            "schema": {
              "description": "Credential attributes",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyCredentialValuesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "IndyCredentialValuesValue",
                "schema": "IndyCredential_values_value",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyCredentialValues",
              "title": "values",
              "nameOverride": "values",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyCredentialWitness",
            "key": "witness",
            "schema": {
              "generatedName": "indyCredentialWitness",
              "nameOverride": "IndyCredential",
              "title": "IndyCredential",
              "value": {
                "generatedName": "IndyCredentialWitness",
                "nameOverride": "witness",
                "title": "witness",
                "description": "Witness for revocation proof",
                "value": {
                  "allOf": [],
                  "properties": [],
                  "allOfPropertyConflicts": [],
                  "description": "Witness for revocation proof",
                  "generatedName": "IndyCredentialWitness",
                  "nameOverride": "witness",
                  "title": "witness",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyCredential",
        "nameOverride": "IndyCredential",
        "title": "IndyCredential",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyEQProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyEqProofAPrime",
            "key": "a_prime",
            "schema": {
              "generatedName": "indyEqProofAPrime",
              "nameOverride": "IndyEQProof",
              "title": "IndyEQProof",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyEqProofAPrime",
                "title": "a_prime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyEqProofE",
            "key": "e",
            "schema": {
              "generatedName": "indyEqProofE",
              "nameOverride": "IndyEQProof",
              "title": "IndyEQProof",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyEqProofE",
                "nameOverride": "e",
                "title": "e",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyEqProofM",
            "key": "m",
            "schema": {
              "generatedName": "indyEqProofM",
              "nameOverride": "IndyEQProof",
              "title": "IndyEQProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyEqProofMKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "pattern": "^[0-9]*$",
                    "example": "0",
                    "type": "string"
                  },
                  "generatedName": "IndyEqProofMValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyEqProofM",
                "title": "m",
                "nameOverride": "m",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyEqProofM2",
            "key": "m2",
            "schema": {
              "generatedName": "indyEqProofM2",
              "nameOverride": "IndyEQProof",
              "title": "IndyEQProof",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyEqProofM2",
                "title": "m2",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyEqProofRevealedAttrs",
            "key": "revealed_attrs",
            "schema": {
              "generatedName": "indyEqProofRevealedAttrs",
              "nameOverride": "IndyEQProof",
              "title": "IndyEQProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyEqProofRevealedAttrsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "pattern": "^-?[0-9]*$",
                    "example": "-1",
                    "type": "string"
                  },
                  "generatedName": "IndyEqProofRevealedAttrsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyEqProofRevealedAttrs",
                "title": "revealed_attrs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyEqProofV",
            "key": "v",
            "schema": {
              "generatedName": "indyEqProofV",
              "nameOverride": "IndyEQProof",
              "title": "IndyEQProof",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyEqProofV",
                "nameOverride": "v",
                "title": "v",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyEqProof",
        "nameOverride": "IndyEQProof",
        "title": "IndyEQProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyGEProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyGeProofAlpha",
            "key": "alpha",
            "schema": {
              "generatedName": "indyGeProofAlpha",
              "nameOverride": "IndyGEProof",
              "title": "IndyGEProof",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyGeProofAlpha",
                "nameOverride": "alpha",
                "title": "alpha",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofMj",
            "key": "mj",
            "schema": {
              "generatedName": "indyGeProofMj",
              "nameOverride": "IndyGEProof",
              "title": "IndyGEProof",
              "value": {
                "schema": {
                  "pattern": "^[0-9]*$",
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyGeProofMj",
                "nameOverride": "mj",
                "title": "mj",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofPredicate",
            "key": "predicate",
            "schema": {
              "generatedName": "indyGeProofPredicate",
              "nameOverride": "IndyGEProof",
              "title": "IndyGEProof",
              "value": {
                "generatedName": "IndyGeProofPredicate",
                "schema": "IndyGEProofPred",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofR",
            "key": "r",
            "schema": {
              "generatedName": "indyGeProofR",
              "nameOverride": "IndyGEProof",
              "title": "IndyGEProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyGeProofRKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "pattern": "^[0-9]*$",
                    "example": "0",
                    "type": "string"
                  },
                  "generatedName": "IndyGeProofRValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyGeProofR",
                "title": "r",
                "nameOverride": "r",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofT",
            "key": "t",
            "schema": {
              "generatedName": "indyGeProofT",
              "nameOverride": "IndyGEProof",
              "title": "IndyGEProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyGeProofTKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "pattern": "^[0-9]*$",
                    "example": "0",
                    "type": "string"
                  },
                  "generatedName": "IndyGeProofTValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyGeProofT",
                "title": "t",
                "nameOverride": "t",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofU",
            "key": "u",
            "schema": {
              "generatedName": "indyGeProofU",
              "nameOverride": "IndyGEProof",
              "title": "IndyGEProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyGeProofUKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "pattern": "^[0-9]*$",
                    "example": "0",
                    "type": "string"
                  },
                  "generatedName": "IndyGeProofUValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyGeProofU",
                "title": "u",
                "nameOverride": "u",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyGeProof",
        "nameOverride": "IndyGEProof",
        "title": "IndyGEProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyGEProofPred": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyGeProofPredAttrName",
            "key": "attr_name",
            "schema": {
              "generatedName": "indyGeProofPredAttrName",
              "nameOverride": "IndyGEProofPred",
              "title": "IndyGEProofPred",
              "value": {
                "description": "Attribute name, indy-canonicalized",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyGeProofPredAttrName",
                "title": "attr_name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofPredPType",
            "key": "p_type",
            "schema": {
              "generatedName": "indyGeProofPredPType",
              "nameOverride": "IndyGEProofPred",
              "title": "IndyGEProofPred",
              "value": {
                "description": "Predicate type",
                "generatedName": "IndyGeProofPredPType",
                "title": "p_type",
                "values": [
                  {
                    "generatedName": "LT",
                    "value": "LT",
                    "casing": {}
                  },
                  {
                    "generatedName": "LE",
                    "value": "LE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GE",
                    "value": "GE",
                    "casing": {}
                  },
                  {
                    "generatedName": "GT",
                    "value": "GT",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyGeProofPredValue",
            "key": "value",
            "schema": {
              "generatedName": "indyGeProofPredValue",
              "nameOverride": "IndyGEProofPred",
              "title": "IndyGEProofPred",
              "value": {
                "description": "Predicate threshold value",
                "schema": {
                  "type": "int"
                },
                "generatedName": "IndyGeProofPredValue",
                "nameOverride": "value",
                "title": "value",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyGeProofPred",
        "nameOverride": "IndyGEProofPred",
        "title": "IndyGEProofPred",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyKeyCorrectnessProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyKeyCorrectnessProofC",
            "key": "c",
            "schema": {
              "description": "c in key correctness proof",
              "schema": {
                "pattern": "^[0-9]*$",
                "example": "0",
                "type": "string"
              },
              "generatedName": "IndyKeyCorrectnessProofC",
              "nameOverride": "c",
              "title": "c",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyKeyCorrectnessProofXrCap",
            "key": "xr_cap",
            "schema": {
              "description": "xr_cap in key correctness proof",
              "value": {
                "description": "xr_cap components in key correctness proof",
                "value": {
                  "description": "xr_cap component values in key correctness proof",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyKeyCorrectnessProofXrCapItemItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyKeyCorrectnessProofXrCapItem",
                "groupName": [],
                "type": "array"
              },
              "generatedName": "IndyKeyCorrectnessProofXrCap",
              "title": "xr_cap",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyKeyCorrectnessProofXzCap",
            "key": "xz_cap",
            "schema": {
              "description": "xz_cap in key correctness proof",
              "schema": {
                "pattern": "^[0-9]*$",
                "example": "0",
                "type": "string"
              },
              "generatedName": "IndyKeyCorrectnessProofXzCap",
              "title": "xz_cap",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyKeyCorrectnessProof",
        "nameOverride": "IndyKeyCorrectnessProof",
        "title": "IndyKeyCorrectnessProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyNonRevocProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyNonRevocProofCList",
            "key": "c_list",
            "schema": {
              "generatedName": "indyNonRevocProofCList",
              "nameOverride": "IndyNonRevocProof",
              "title": "IndyNonRevocProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyNonRevocProofCListKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyNonRevocProofCListValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyNonRevocProofCList",
                "title": "c_list",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyNonRevocProofXList",
            "key": "x_list",
            "schema": {
              "generatedName": "indyNonRevocProofXList",
              "nameOverride": "IndyNonRevocProof",
              "title": "IndyNonRevocProof",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyNonRevocProofXListKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyNonRevocProofXListValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyNonRevocProofXList",
                "title": "x_list",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyNonRevocProof",
        "nameOverride": "IndyNonRevocProof",
        "title": "IndyNonRevocProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyNonRevocationInterval": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyNonRevocationIntervalFrom",
            "key": "from",
            "schema": {
              "generatedName": "indyNonRevocationIntervalFrom",
              "nameOverride": "IndyNonRevocationInterval",
              "title": "IndyNonRevocationInterval",
              "value": {
                "description": "Earliest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyNonRevocationIntervalFrom",
                "nameOverride": "from",
                "title": "from",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyNonRevocationIntervalTo",
            "key": "to",
            "schema": {
              "generatedName": "indyNonRevocationIntervalTo",
              "nameOverride": "IndyNonRevocationInterval",
              "title": "IndyNonRevocationInterval",
              "value": {
                "description": "Latest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyNonRevocationIntervalTo",
                "nameOverride": "to",
                "title": "to",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyNonRevocationInterval",
        "nameOverride": "IndyNonRevocationInterval",
        "title": "IndyNonRevocationInterval",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyPresAttrSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyPresAttrSpecCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "indyPresAttrSpecCredDefId",
              "nameOverride": "IndyPresAttrSpec",
              "title": "IndyPresAttrSpec",
              "value": {
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IndyPresAttrSpecCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresAttrSpecMimeType",
            "key": "mime-type",
            "schema": {
              "generatedName": "indyPresAttrSpecMimeType",
              "nameOverride": "IndyPresAttrSpec",
              "title": "IndyPresAttrSpec",
              "value": {
                "description": "MIME type (default null)",
                "schema": {
                  "example": "image/jpeg",
                  "type": "string"
                },
                "generatedName": "IndyPresAttrSpecMimeType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresAttrSpecName",
            "key": "name",
            "schema": {
              "description": "Attribute name",
              "schema": {
                "example": "favourite_drink",
                "type": "string"
              },
              "generatedName": "IndyPresAttrSpecName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresAttrSpecReferent",
            "key": "referent",
            "schema": {
              "generatedName": "indyPresAttrSpecReferent",
              "nameOverride": "IndyPresAttrSpec",
              "title": "IndyPresAttrSpec",
              "value": {
                "description": "Credential referent",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "IndyPresAttrSpecReferent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresAttrSpecValue",
            "key": "value",
            "schema": {
              "generatedName": "indyPresAttrSpecValue",
              "nameOverride": "IndyPresAttrSpec",
              "title": "IndyPresAttrSpec",
              "value": {
                "description": "Attribute value",
                "schema": {
                  "example": "martini",
                  "type": "string"
                },
                "generatedName": "IndyPresAttrSpecValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyPresAttrSpec",
        "nameOverride": "IndyPresAttrSpec",
        "title": "IndyPresAttrSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyPresPredSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyPresPredSpecCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "indyPresPredSpecCredDefId",
              "nameOverride": "IndyPresPredSpec",
              "title": "IndyPresPredSpec",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IndyPresPredSpecCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresPredSpecName",
            "key": "name",
            "schema": {
              "description": "Attribute name",
              "schema": {
                "example": "high_score",
                "type": "string"
              },
              "generatedName": "IndyPresPredSpecName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresPredSpecPredicate",
            "key": "predicate",
            "schema": {
              "description": "Predicate type ('<', '<=', '>=', or '>')",
              "generatedName": "IndyPresPredSpecPredicate",
              "values": [
                {
                  "nameOverride": "LessThan",
                  "generatedName": "LESS_THAN",
                  "value": "<",
                  "casing": {}
                },
                {
                  "nameOverride": "LessThanOrEqualTo",
                  "generatedName": "LESS_THAN_OR_EQUAL_TO",
                  "value": "<=",
                  "casing": {}
                },
                {
                  "nameOverride": "GreaterThanOrEqualTo",
                  "generatedName": "GREATER_THAN_OR_EQUAL_TO",
                  "value": ">=",
                  "casing": {}
                },
                {
                  "nameOverride": "GreaterThan",
                  "generatedName": "GREATER_THAN",
                  "value": ">",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresPredSpecThreshold",
            "key": "threshold",
            "schema": {
              "description": "Threshold value",
              "schema": {
                "type": "int"
              },
              "generatedName": "IndyPresPredSpecThreshold",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyPresPredSpec",
        "nameOverride": "IndyPresPredSpec",
        "title": "IndyPresPredSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyPresPreview": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyPresPreviewType",
            "key": "@type",
            "schema": {
              "generatedName": "indyPresPreviewType",
              "nameOverride": "IndyPresPreview",
              "title": "IndyPresPreview",
              "value": {
                "description": "Message type identifier",
                "schema": {
                  "example": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview",
                  "type": "string"
                },
                "generatedName": "IndyPresPreviewType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresPreviewAttributes",
            "key": "attributes",
            "schema": {
              "value": {
                "generatedName": "IndyPresPreviewAttributesItem",
                "schema": "IndyPresAttrSpec",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyPresPreviewAttributes",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresPreviewPredicates",
            "key": "predicates",
            "schema": {
              "value": {
                "generatedName": "IndyPresPreviewPredicatesItem",
                "schema": "IndyPresPredSpec",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyPresPreviewPredicates",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyPresPreview",
        "nameOverride": "IndyPresPreview",
        "title": "IndyPresPreview",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyPresSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyPresSpecRequestedAttributes",
            "key": "requested_attributes",
            "schema": {
              "description": "Nested object mapping proof request attribute referents to requested-attribute specifiers",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyPresSpecRequestedAttributesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "IndyPresSpecRequestedAttributesValue",
                "schema": "IndyRequestedCredsRequestedAttr",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyPresSpecRequestedAttributes",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresSpecRequestedPredicates",
            "key": "requested_predicates",
            "schema": {
              "description": "Nested object mapping proof request predicate referents to requested-predicate specifiers",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyPresSpecRequestedPredicatesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "IndyPresSpecRequestedPredicatesValue",
                "schema": "IndyRequestedCredsRequestedPred",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyPresSpecRequestedPredicates",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresSpecSelfAttestedAttributes",
            "key": "self_attested_attributes",
            "schema": {
              "description": "Self-attested attributes to build into proof",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyPresSpecSelfAttestedAttributesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "description": "Self-attested attribute values to use in requested-credentials structure for proof construction",
                "schema": {
                  "example": "self_attested_value",
                  "type": "string"
                },
                "generatedName": "IndyPresSpecSelfAttestedAttributesValue",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "IndyPresSpecSelfAttestedAttributes",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyPresSpecTrace",
            "key": "trace",
            "schema": {
              "generatedName": "indyPresSpecTrace",
              "nameOverride": "IndyPresSpec",
              "title": "IndyPresSpec",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "IndyPresSpecTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyPresSpec",
        "nameOverride": "IndyPresSpec",
        "title": "IndyPresSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyPrimaryProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyPrimaryProofEqProof",
            "key": "eq_proof",
            "schema": {
              "generatedName": "indyPrimaryProofEqProof",
              "nameOverride": "IndyPrimaryProof",
              "title": "IndyPrimaryProof",
              "value": {
                "generatedName": "IndyPrimaryProofEqProof",
                "schema": "IndyPrimaryProof_eq_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyPrimaryProofGeProofs",
            "key": "ge_proofs",
            "schema": {
              "generatedName": "indyPrimaryProofGeProofs",
              "nameOverride": "IndyPrimaryProof",
              "title": "IndyPrimaryProof",
              "value": {
                "generatedName": "IndyPrimaryProofGeProofs",
                "title": "ge_proofs",
                "description": "Indy GE proofs",
                "value": {
                  "description": "Indy GE proofs",
                  "value": {
                    "generatedName": "IndyPrimaryProofGeProofsItem",
                    "schema": "IndyGEProof",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "IndyPrimaryProofGeProofs",
                  "title": "ge_proofs",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyPrimaryProof",
        "nameOverride": "IndyPrimaryProof",
        "title": "IndyPrimaryProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofIdentifiers",
            "key": "identifiers",
            "schema": {
              "generatedName": "indyProofIdentifiers",
              "nameOverride": "IndyProof",
              "title": "IndyProof",
              "value": {
                "description": "Indy proof.identifiers content",
                "value": {
                  "generatedName": "IndyProofIdentifiersItem",
                  "schema": "IndyProofIdentifier",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "IndyProofIdentifiers",
                "nameOverride": "identifiers",
                "title": "identifiers",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofProof",
            "key": "proof",
            "schema": {
              "generatedName": "indyProofProof",
              "nameOverride": "IndyProof",
              "title": "IndyProof",
              "value": {
                "generatedName": "IndyProofProof",
                "schema": "IndyProof_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProof",
            "key": "requested_proof",
            "schema": {
              "generatedName": "indyProofRequestedProof",
              "nameOverride": "IndyProof",
              "title": "IndyProof",
              "value": {
                "generatedName": "IndyProofRequestedProof",
                "schema": "IndyProof_requested_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProof",
        "nameOverride": "IndyProof",
        "title": "IndyProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofIdentifier": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofIdentifierCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "indyProofIdentifierCredDefId",
              "nameOverride": "IndyProofIdentifier",
              "title": "IndyProofIdentifier",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IndyProofIdentifierCredDefId",
                "title": "cred_def_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofIdentifierRevRegId",
            "key": "rev_reg_id",
            "schema": {
              "generatedName": "indyProofIdentifierRevRegId",
              "nameOverride": "IndyProofIdentifier",
              "title": "IndyProofIdentifier",
              "value": {
                "generatedName": "IndyProofIdentifierRevRegId",
                "title": "rev_reg_id",
                "description": "Revocation registry identifier",
                "value": {
                  "description": "Revocation registry identifier",
                  "schema": {
                    "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                    "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                    "type": "string"
                  },
                  "generatedName": "IndyProofIdentifierRevRegId",
                  "title": "rev_reg_id",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofIdentifierSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "indyProofIdentifierSchemaId",
              "nameOverride": "IndyProofIdentifier",
              "title": "IndyProofIdentifier",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "IndyProofIdentifierSchemaId",
                "title": "schema_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofIdentifierTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "indyProofIdentifierTimestamp",
              "nameOverride": "IndyProofIdentifier",
              "title": "IndyProofIdentifier",
              "value": {
                "generatedName": "IndyProofIdentifierTimestamp",
                "nameOverride": "timestamp",
                "title": "timestamp",
                "description": "Timestamp epoch",
                "value": {
                  "description": "Timestamp epoch",
                  "schema": {
                    "minimum": 0,
                    "maximum": 18446744073709552000,
                    "example": 1640995199,
                    "type": "int"
                  },
                  "generatedName": "IndyProofIdentifierTimestamp",
                  "nameOverride": "timestamp",
                  "title": "timestamp",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofIdentifier",
        "nameOverride": "IndyProofIdentifier",
        "title": "IndyProofIdentifier",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofProofAggregatedProof",
            "key": "aggregated_proof",
            "schema": {
              "generatedName": "indyProofProofAggregatedProof",
              "nameOverride": "IndyProofProof",
              "title": "IndyProofProof",
              "value": {
                "generatedName": "IndyProofProofAggregatedProof",
                "schema": "IndyProofProof_aggregated_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyProofProofProofs",
            "key": "proofs",
            "schema": {
              "generatedName": "indyProofProofProofs",
              "nameOverride": "IndyProofProof",
              "title": "IndyProofProof",
              "value": {
                "description": "Indy proof proofs",
                "value": {
                  "generatedName": "IndyProofProofProofsItem",
                  "schema": "IndyProofProofProofsProof",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "IndyProofProofProofs",
                "nameOverride": "proofs",
                "title": "proofs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofProof",
        "nameOverride": "IndyProofProof",
        "title": "IndyProofProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofProofAggregatedProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofProofAggregatedProofCHash",
            "key": "c_hash",
            "schema": {
              "generatedName": "indyProofProofAggregatedProofCHash",
              "nameOverride": "IndyProofProofAggregatedProof",
              "title": "IndyProofProofAggregatedProof",
              "value": {
                "description": "c_hash value",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyProofProofAggregatedProofCHash",
                "title": "c_hash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofProofAggregatedProofCList",
            "key": "c_list",
            "schema": {
              "generatedName": "indyProofProofAggregatedProofCList",
              "nameOverride": "IndyProofProofAggregatedProof",
              "title": "IndyProofProofAggregatedProof",
              "value": {
                "description": "c_list value",
                "value": {
                  "value": {
                    "schema": {
                      "type": "int"
                    },
                    "generatedName": "IndyProofProofAggregatedProofCListItemItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "IndyProofProofAggregatedProofCListItem",
                  "groupName": [],
                  "type": "array"
                },
                "generatedName": "IndyProofProofAggregatedProofCList",
                "title": "c_list",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofProofAggregatedProof",
        "nameOverride": "IndyProofProofAggregatedProof",
        "title": "IndyProofProofAggregatedProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofProofProofsProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofProofProofsProofNonRevocProof",
            "key": "non_revoc_proof",
            "schema": {
              "generatedName": "indyProofProofProofsProofNonRevocProof",
              "nameOverride": "IndyProofProofProofsProof",
              "title": "IndyProofProofProofsProof",
              "value": {
                "generatedName": "IndyProofProofProofsProofNonRevocProof",
                "schema": "IndyProofProofProofsProof_non_revoc_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyProofProofProofsProofPrimaryProof",
            "key": "primary_proof",
            "schema": {
              "generatedName": "indyProofProofProofsProofPrimaryProof",
              "nameOverride": "IndyProofProofProofsProof",
              "title": "IndyProofProofProofsProof",
              "value": {
                "generatedName": "IndyProofProofProofsProofPrimaryProof",
                "schema": "IndyProofProofProofsProof_primary_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofProofProofsProof",
        "nameOverride": "IndyProofProofProofsProof",
        "title": "IndyProofProofProofsProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofReqAttrSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofReqAttrSpecName",
            "key": "name",
            "schema": {
              "generatedName": "indyProofReqAttrSpecName",
              "nameOverride": "IndyProofReqAttrSpec",
              "title": "IndyProofReqAttrSpec",
              "value": {
                "description": "Attribute name",
                "schema": {
                  "example": "favouriteDrink",
                  "type": "string"
                },
                "generatedName": "IndyProofReqAttrSpecName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqAttrSpecNames",
            "key": "names",
            "schema": {
              "generatedName": "indyProofReqAttrSpecNames",
              "nameOverride": "IndyProofReqAttrSpec",
              "title": "IndyProofReqAttrSpec",
              "value": {
                "description": "Attribute name group",
                "value": {
                  "schema": {
                    "example": "age",
                    "type": "string"
                  },
                  "generatedName": "IndyProofReqAttrSpecNamesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyProofReqAttrSpecNames",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqAttrSpecNonRevoked",
            "key": "non_revoked",
            "schema": {
              "generatedName": "indyProofReqAttrSpecNonRevoked",
              "nameOverride": "IndyProofReqAttrSpec",
              "title": "IndyProofReqAttrSpec",
              "value": {
                "generatedName": "IndyProofReqAttrSpecNonRevoked",
                "schema": "IndyProofReqAttrSpec_non_revoked",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqAttrSpecRestrictions",
            "key": "restrictions",
            "schema": {
              "generatedName": "indyProofReqAttrSpecRestrictions",
              "nameOverride": "IndyProofReqAttrSpec",
              "title": "IndyProofReqAttrSpec",
              "value": {
                "description": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "IndyProofReqAttrSpecRestrictionsItemKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "schema": {
                      "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "type": "string"
                    },
                    "generatedName": "IndyProofReqAttrSpecRestrictionsItemValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "IndyProofReqAttrSpecRestrictionsItem",
                  "groupName": [],
                  "type": "map"
                },
                "generatedName": "IndyProofReqAttrSpecRestrictions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofReqAttrSpec",
        "nameOverride": "IndyProofReqAttrSpec",
        "title": "IndyProofReqAttrSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofReqAttrSpecNonRevoked": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofReqAttrSpecNonRevokedFrom",
            "key": "from",
            "schema": {
              "generatedName": "indyProofReqAttrSpecNonRevokedFrom",
              "nameOverride": "IndyProofReqAttrSpecNonRevoked",
              "title": "IndyProofReqAttrSpecNonRevoked",
              "value": {
                "description": "Earliest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyProofReqAttrSpecNonRevokedFrom",
                "nameOverride": "from",
                "title": "from",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqAttrSpecNonRevokedTo",
            "key": "to",
            "schema": {
              "generatedName": "indyProofReqAttrSpecNonRevokedTo",
              "nameOverride": "IndyProofReqAttrSpecNonRevoked",
              "title": "IndyProofReqAttrSpecNonRevoked",
              "value": {
                "description": "Latest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyProofReqAttrSpecNonRevokedTo",
                "nameOverride": "to",
                "title": "to",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofReqAttrSpecNonRevoked",
        "nameOverride": "IndyProofReqAttrSpecNonRevoked",
        "title": "IndyProofReqAttrSpecNonRevoked",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofReqPredSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecName",
            "key": "name",
            "schema": {
              "description": "Attribute name",
              "schema": {
                "example": "index",
                "type": "string"
              },
              "generatedName": "IndyProofReqPredSpecName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecNonRevoked",
            "key": "non_revoked",
            "schema": {
              "generatedName": "indyProofReqPredSpecNonRevoked",
              "nameOverride": "IndyProofReqPredSpec",
              "title": "IndyProofReqPredSpec",
              "value": {
                "generatedName": "IndyProofReqPredSpecNonRevoked",
                "schema": "IndyProofReqPredSpec_non_revoked",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecPType",
            "key": "p_type",
            "schema": {
              "description": "Predicate type ('<', '<=', '>=', or '>')",
              "generatedName": "IndyProofReqPredSpecPType",
              "values": [
                {
                  "nameOverride": "LessThan",
                  "generatedName": "LESS_THAN",
                  "value": "<",
                  "casing": {}
                },
                {
                  "nameOverride": "LessThanOrEqualTo",
                  "generatedName": "LESS_THAN_OR_EQUAL_TO",
                  "value": "<=",
                  "casing": {}
                },
                {
                  "nameOverride": "GreaterThanOrEqualTo",
                  "generatedName": "GREATER_THAN_OR_EQUAL_TO",
                  "value": ">=",
                  "casing": {}
                },
                {
                  "nameOverride": "GreaterThan",
                  "generatedName": "GREATER_THAN",
                  "value": ">",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecPValue",
            "key": "p_value",
            "schema": {
              "description": "Threshold value",
              "schema": {
                "type": "int"
              },
              "generatedName": "IndyProofReqPredSpecPValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecRestrictions",
            "key": "restrictions",
            "schema": {
              "generatedName": "indyProofReqPredSpecRestrictions",
              "nameOverride": "IndyProofReqPredSpec",
              "title": "IndyProofReqPredSpec",
              "value": {
                "description": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "IndyProofReqPredSpecRestrictionsItemKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "schema": {
                      "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                      "type": "string"
                    },
                    "generatedName": "IndyProofReqPredSpecRestrictionsItemValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "IndyProofReqPredSpecRestrictionsItem",
                  "groupName": [],
                  "type": "map"
                },
                "generatedName": "IndyProofReqPredSpecRestrictions",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofReqPredSpec",
        "nameOverride": "IndyProofReqPredSpec",
        "title": "IndyProofReqPredSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofReqPredSpecNonRevoked": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecNonRevokedFrom",
            "key": "from",
            "schema": {
              "generatedName": "indyProofReqPredSpecNonRevokedFrom",
              "nameOverride": "IndyProofReqPredSpecNonRevoked",
              "title": "IndyProofReqPredSpecNonRevoked",
              "value": {
                "description": "Earliest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyProofReqPredSpecNonRevokedFrom",
                "nameOverride": "from",
                "title": "from",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofReqPredSpecNonRevokedTo",
            "key": "to",
            "schema": {
              "generatedName": "indyProofReqPredSpecNonRevokedTo",
              "nameOverride": "IndyProofReqPredSpecNonRevoked",
              "title": "IndyProofReqPredSpecNonRevoked",
              "value": {
                "description": "Latest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyProofReqPredSpecNonRevokedTo",
                "nameOverride": "to",
                "title": "to",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofReqPredSpecNonRevoked",
        "nameOverride": "IndyProofReqPredSpecNonRevoked",
        "title": "IndyProofReqPredSpecNonRevoked",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofRequestName",
            "key": "name",
            "schema": {
              "generatedName": "indyProofRequestName",
              "nameOverride": "IndyProofRequest",
              "title": "IndyProofRequest",
              "value": {
                "description": "Proof request name",
                "schema": {
                  "example": "Proof request",
                  "type": "string"
                },
                "generatedName": "IndyProofRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestNonRevoked",
            "key": "non_revoked",
            "schema": {
              "generatedName": "indyProofRequestNonRevoked",
              "nameOverride": "IndyProofRequest",
              "title": "IndyProofRequest",
              "value": {
                "generatedName": "IndyProofRequestNonRevoked",
                "schema": "IndyProofRequest_non_revoked",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestNonce",
            "key": "nonce",
            "schema": {
              "generatedName": "indyProofRequestNonce",
              "nameOverride": "IndyProofRequest",
              "title": "IndyProofRequest",
              "value": {
                "description": "Nonce",
                "schema": {
                  "pattern": "^[1-9][0-9]*$",
                  "example": "1",
                  "type": "string"
                },
                "generatedName": "IndyProofRequestNonce",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestRequestedAttributes",
            "key": "requested_attributes",
            "schema": {
              "description": "Requested attribute specifications of proof request",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyProofRequestRequestedAttributesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "IndyProofRequestRequestedAttributesValue",
                "schema": "IndyProofReqAttrSpec",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyProofRequestRequestedAttributes",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestRequestedPredicates",
            "key": "requested_predicates",
            "schema": {
              "description": "Requested predicate specifications of proof request",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyProofRequestRequestedPredicatesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "IndyProofRequestRequestedPredicatesValue",
                "schema": "IndyProofReqPredSpec",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "IndyProofRequestRequestedPredicates",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestVersion",
            "key": "version",
            "schema": {
              "generatedName": "indyProofRequestVersion",
              "nameOverride": "IndyProofRequest",
              "title": "IndyProofRequest",
              "value": {
                "description": "Proof request version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "IndyProofRequestVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofRequest",
        "nameOverride": "IndyProofRequest",
        "title": "IndyProofRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofRequestNonRevoked": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofRequestNonRevokedFrom",
            "key": "from",
            "schema": {
              "generatedName": "indyProofRequestNonRevokedFrom",
              "nameOverride": "IndyProofRequestNonRevoked",
              "title": "IndyProofRequestNonRevoked",
              "value": {
                "description": "Earliest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyProofRequestNonRevokedFrom",
                "nameOverride": "from",
                "title": "from",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestNonRevokedTo",
            "key": "to",
            "schema": {
              "generatedName": "indyProofRequestNonRevokedTo",
              "nameOverride": "IndyProofRequestNonRevoked",
              "title": "IndyProofRequestNonRevoked",
              "value": {
                "description": "Latest time of interest in non-revocation interval",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyProofRequestNonRevokedTo",
                "nameOverride": "to",
                "title": "to",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofRequestNonRevoked",
        "nameOverride": "IndyProofRequestNonRevoked",
        "title": "IndyProofRequestNonRevoked",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofRequestedProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofPredicates",
            "key": "predicates",
            "schema": {
              "generatedName": "indyProofRequestedProofPredicates",
              "nameOverride": "IndyProofRequestedProof",
              "title": "IndyProofRequestedProof",
              "value": {
                "description": "Proof requested proof predicates.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyProofRequestedProofPredicatesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "IndyProofRequestedProofPredicatesValue",
                  "schema": "IndyProofRequestedProofPredicate",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "IndyProofRequestedProofPredicates",
                "title": "predicates",
                "nameOverride": "predicates",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrGroups",
            "key": "revealed_attr_groups",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrGroups",
              "nameOverride": "IndyProofRequestedProof",
              "title": "IndyProofRequestedProof",
              "value": {
                "generatedName": "IndyProofRequestedProofRevealedAttrGroups",
                "title": "revealed_attr_groups",
                "description": "Proof requested proof revealed attribute groups",
                "value": {
                  "description": "Proof requested proof revealed attribute groups",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "IndyProofRequestedProofRevealedAttrGroupsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "IndyProofRequestedProofRevealedAttrGroupsValue",
                    "value": {
                      "generatedName": "IndyProofRequestedProofRevealedAttrGroupsValue",
                      "schema": "IndyProofRequestedProofRevealedAttrGroup",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "inline": true,
                    "type": "nullable"
                  },
                  "generatedName": "IndyProofRequestedProofRevealedAttrGroups",
                  "title": "revealed_attr_groups",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrs",
            "key": "revealed_attrs",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrs",
              "nameOverride": "IndyProofRequestedProof",
              "title": "IndyProofRequestedProof",
              "value": {
                "generatedName": "IndyProofRequestedProofRevealedAttrs",
                "title": "revealed_attrs",
                "description": "Proof requested proof revealed attributes",
                "value": {
                  "description": "Proof requested proof revealed attributes",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "IndyProofRequestedProofRevealedAttrsKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "IndyProofRequestedProofRevealedAttrsValue",
                    "value": {
                      "generatedName": "IndyProofRequestedProofRevealedAttrsValue",
                      "schema": "IndyProofRequestedProofRevealedAttr",
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "reference"
                    },
                    "inline": true,
                    "type": "nullable"
                  },
                  "generatedName": "IndyProofRequestedProofRevealedAttrs",
                  "title": "revealed_attrs",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofSelfAttestedAttrs",
            "key": "self_attested_attrs",
            "schema": {
              "generatedName": "indyProofRequestedProofSelfAttestedAttrs",
              "nameOverride": "IndyProofRequestedProof",
              "title": "IndyProofRequestedProof",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Proof requested proof self-attested attributes",
                "generatedName": "IndyProofRequestedProofSelfAttestedAttrs",
                "title": "self_attested_attrs",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofUnrevealedAttrs",
            "key": "unrevealed_attrs",
            "schema": {
              "generatedName": "indyProofRequestedProofUnrevealedAttrs",
              "nameOverride": "IndyProofRequestedProof",
              "title": "IndyProofRequestedProof",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Unrevealed attributes",
                "generatedName": "IndyProofRequestedProofUnrevealedAttrs",
                "title": "unrevealed_attrs",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofRequestedProof",
        "nameOverride": "IndyProofRequestedProof",
        "title": "IndyProofRequestedProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofRequestedProofPredicate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofPredicateSubProofIndex",
            "key": "sub_proof_index",
            "schema": {
              "generatedName": "indyProofRequestedProofPredicateSubProofIndex",
              "nameOverride": "IndyProofRequestedProofPredicate",
              "title": "IndyProofRequestedProofPredicate",
              "value": {
                "description": "Sub-proof index",
                "schema": {
                  "type": "int"
                },
                "generatedName": "IndyProofRequestedProofPredicateSubProofIndex",
                "title": "sub_proof_index",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofRequestedProofPredicate",
        "nameOverride": "IndyProofRequestedProofPredicate",
        "title": "IndyProofRequestedProofPredicate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofRequestedProofRevealedAttr": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrEncoded",
            "key": "encoded",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrEncoded",
              "nameOverride": "IndyProofRequestedProofRevealedAttr",
              "title": "IndyProofRequestedProofRevealedAttr",
              "value": {
                "description": "Encoded value",
                "schema": {
                  "pattern": "^-?[0-9]*$",
                  "example": "-1",
                  "type": "string"
                },
                "generatedName": "IndyProofRequestedProofRevealedAttrEncoded",
                "nameOverride": "encoded",
                "title": "encoded",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrRaw",
            "key": "raw",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrRaw",
              "nameOverride": "IndyProofRequestedProofRevealedAttr",
              "title": "IndyProofRequestedProofRevealedAttr",
              "value": {
                "description": "Raw value",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyProofRequestedProofRevealedAttrRaw",
                "nameOverride": "raw",
                "title": "raw",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrSubProofIndex",
            "key": "sub_proof_index",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrSubProofIndex",
              "nameOverride": "IndyProofRequestedProofRevealedAttr",
              "title": "IndyProofRequestedProofRevealedAttr",
              "value": {
                "description": "Sub-proof index",
                "schema": {
                  "type": "int"
                },
                "generatedName": "IndyProofRequestedProofRevealedAttrSubProofIndex",
                "title": "sub_proof_index",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofRequestedProofRevealedAttr",
        "nameOverride": "IndyProofRequestedProofRevealedAttr",
        "title": "IndyProofRequestedProofRevealedAttr",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyProofRequestedProofRevealedAttrGroup": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrGroupSubProofIndex",
            "key": "sub_proof_index",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrGroupSubProofIndex",
              "nameOverride": "IndyProofRequestedProofRevealedAttrGroup",
              "title": "IndyProofRequestedProofRevealedAttrGroup",
              "value": {
                "description": "Sub-proof index",
                "schema": {
                  "type": "int"
                },
                "generatedName": "IndyProofRequestedProofRevealedAttrGroupSubProofIndex",
                "title": "sub_proof_index",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyProofRequestedProofRevealedAttrGroupValues",
            "key": "values",
            "schema": {
              "generatedName": "indyProofRequestedProofRevealedAttrGroupValues",
              "nameOverride": "IndyProofRequestedProofRevealedAttrGroup",
              "title": "IndyProofRequestedProofRevealedAttrGroup",
              "value": {
                "description": "Indy proof requested proof revealed attr groups group value",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "IndyProofRequestedProofRevealedAttrGroupValuesKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "IndyProofRequestedProofRevealedAttrGroupValuesValue",
                  "schema": "RawEncoded",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "IndyProofRequestedProofRevealedAttrGroupValues",
                "title": "values",
                "nameOverride": "values",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyProofRequestedProofRevealedAttrGroup",
        "nameOverride": "IndyProofRequestedProofRevealedAttrGroup",
        "title": "IndyProofRequestedProofRevealedAttrGroup",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRequestedCredsRequestedAttr": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRequestedCredsRequestedAttrCredId",
            "key": "cred_id",
            "schema": {
              "description": "Wallet credential identifier (typically but not necessarily a UUID)",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "IndyRequestedCredsRequestedAttrCredId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRequestedCredsRequestedAttrRevealed",
            "key": "revealed",
            "schema": {
              "generatedName": "indyRequestedCredsRequestedAttrRevealed",
              "nameOverride": "IndyRequestedCredsRequestedAttr",
              "title": "IndyRequestedCredsRequestedAttr",
              "value": {
                "description": "Whether to reveal attribute in proof (default true)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "IndyRequestedCredsRequestedAttrRevealed",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRequestedCredsRequestedAttr",
        "nameOverride": "IndyRequestedCredsRequestedAttr",
        "title": "IndyRequestedCredsRequestedAttr",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRequestedCredsRequestedPred": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRequestedCredsRequestedPredCredId",
            "key": "cred_id",
            "schema": {
              "description": "Wallet credential identifier (typically but not necessarily a UUID)",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "IndyRequestedCredsRequestedPredCredId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRequestedCredsRequestedPredTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "indyRequestedCredsRequestedPredTimestamp",
              "nameOverride": "IndyRequestedCredsRequestedPred",
              "title": "IndyRequestedCredsRequestedPred",
              "value": {
                "description": "Epoch timestamp of interest for non-revocation proof",
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "IndyRequestedCredsRequestedPredTimestamp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRequestedCredsRequestedPred",
        "nameOverride": "IndyRequestedCredsRequestedPred",
        "title": "IndyRequestedCredsRequestedPred",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRevRegDef": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRevRegDefCredDefId",
            "key": "credDefId",
            "schema": {
              "generatedName": "indyRevRegDefCredDefId",
              "nameOverride": "IndyRevRegDef",
              "title": "IndyRevRegDef",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefCredDefId",
                "nameOverride": "credDefId",
                "title": "credDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefId",
            "key": "id",
            "schema": {
              "generatedName": "indyRevRegDefId",
              "nameOverride": "IndyRevRegDef",
              "title": "IndyRevRegDef",
              "value": {
                "description": "Indy revocation registry identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                  "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefId",
                "nameOverride": "id",
                "title": "id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefRevocDefType",
            "key": "revocDefType",
            "schema": {
              "generatedName": "indyRevRegDefRevocDefType",
              "nameOverride": "IndyRevRegDef",
              "title": "IndyRevRegDef",
              "value": {
                "description": "Revocation registry type (specify CL_ACCUM)",
                "value": {
                  "value": "CL_ACCUM",
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefRevocDefType",
                "nameOverride": "revocDefType",
                "title": "revocDefType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefTag",
            "key": "tag",
            "schema": {
              "generatedName": "indyRevRegDefTag",
              "nameOverride": "IndyRevRegDef",
              "title": "IndyRevRegDef",
              "value": {
                "description": "Revocation registry tag",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefTag",
                "nameOverride": "tag",
                "title": "tag",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValue",
            "key": "value",
            "schema": {
              "generatedName": "indyRevRegDefValue",
              "nameOverride": "IndyRevRegDef",
              "title": "IndyRevRegDef",
              "value": {
                "generatedName": "IndyRevRegDefValue",
                "schema": "IndyRevRegDef_value",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefVer",
            "key": "ver",
            "schema": {
              "generatedName": "indyRevRegDefVer",
              "nameOverride": "IndyRevRegDef",
              "title": "IndyRevRegDef",
              "value": {
                "description": "Version of revocation registry definition",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefVer",
                "nameOverride": "ver",
                "title": "ver",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRevRegDef",
        "nameOverride": "IndyRevRegDef",
        "title": "IndyRevRegDef",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRevRegDefValue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValueIssuanceType",
            "key": "issuanceType",
            "schema": {
              "generatedName": "indyRevRegDefValueIssuanceType",
              "nameOverride": "IndyRevRegDefValue",
              "title": "IndyRevRegDefValue",
              "value": {
                "description": "Issuance type",
                "generatedName": "IndyRevRegDefValueIssuanceType",
                "nameOverride": "issuanceType",
                "title": "issuanceType",
                "values": [
                  {
                    "generatedName": "ISSUANCE_ON_DEMAND",
                    "value": "ISSUANCE_ON_DEMAND",
                    "casing": {}
                  },
                  {
                    "generatedName": "ISSUANCE_BY_DEFAULT",
                    "value": "ISSUANCE_BY_DEFAULT",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValueMaxCredNum",
            "key": "maxCredNum",
            "schema": {
              "generatedName": "indyRevRegDefValueMaxCredNum",
              "nameOverride": "IndyRevRegDefValue",
              "title": "IndyRevRegDefValue",
              "value": {
                "description": "Maximum number of credentials; registry size",
                "schema": {
                  "minimum": 1,
                  "example": 10,
                  "type": "int"
                },
                "generatedName": "IndyRevRegDefValueMaxCredNum",
                "nameOverride": "maxCredNum",
                "title": "maxCredNum",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValuePublicKeys",
            "key": "publicKeys",
            "schema": {
              "generatedName": "indyRevRegDefValuePublicKeys",
              "nameOverride": "IndyRevRegDefValue",
              "title": "IndyRevRegDefValue",
              "value": {
                "generatedName": "IndyRevRegDefValuePublicKeys",
                "schema": "IndyRevRegDefValue_publicKeys",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValueTailsHash",
            "key": "tailsHash",
            "schema": {
              "generatedName": "indyRevRegDefValueTailsHash",
              "nameOverride": "IndyRevRegDefValue",
              "title": "IndyRevRegDefValue",
              "value": {
                "description": "Tails hash value",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                  "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefValueTailsHash",
                "nameOverride": "tailsHash",
                "title": "tailsHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValueTailsLocation",
            "key": "tailsLocation",
            "schema": {
              "generatedName": "indyRevRegDefValueTailsLocation",
              "nameOverride": "IndyRevRegDefValue",
              "title": "IndyRevRegDefValue",
              "value": {
                "description": "Tails file location",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefValueTailsLocation",
                "nameOverride": "tailsLocation",
                "title": "tailsLocation",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRevRegDefValue",
        "nameOverride": "IndyRevRegDefValue",
        "title": "IndyRevRegDefValue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRevRegDefValuePublicKeys": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValuePublicKeysAccumKey",
            "key": "accumKey",
            "schema": {
              "generatedName": "indyRevRegDefValuePublicKeysAccumKey",
              "nameOverride": "IndyRevRegDefValuePublicKeys",
              "title": "IndyRevRegDefValuePublicKeys",
              "value": {
                "generatedName": "IndyRevRegDefValuePublicKeysAccumKey",
                "schema": "IndyRevRegDefValuePublicKeysAccumKey",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRevRegDefValuePublicKeys",
        "nameOverride": "IndyRevRegDefValuePublicKeys",
        "title": "IndyRevRegDefValuePublicKeys",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRevRegDefValuePublicKeysAccumKey": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRevRegDefValuePublicKeysAccumKeyZ",
            "key": "z",
            "schema": {
              "generatedName": "indyRevRegDefValuePublicKeysAccumKeyZ",
              "nameOverride": "IndyRevRegDefValuePublicKeysAccumKey",
              "title": "IndyRevRegDefValuePublicKeysAccumKey",
              "value": {
                "description": "Value for z",
                "schema": {
                  "example": "1 120F522F81E6B7 1 09F7A59005C4939854",
                  "type": "string"
                },
                "generatedName": "IndyRevRegDefValuePublicKeysAccumKeyZ",
                "nameOverride": "z",
                "title": "z",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRevRegDefValuePublicKeysAccumKey",
        "nameOverride": "IndyRevRegDefValuePublicKeysAccumKey",
        "title": "IndyRevRegDefValuePublicKeysAccumKey",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRevRegEntry": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRevRegEntryValue",
            "key": "value",
            "schema": {
              "generatedName": "indyRevRegEntryValue",
              "nameOverride": "IndyRevRegEntry",
              "title": "IndyRevRegEntry",
              "value": {
                "generatedName": "IndyRevRegEntryValue",
                "schema": "IndyRevRegEntry_value",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegEntryVer",
            "key": "ver",
            "schema": {
              "generatedName": "indyRevRegEntryVer",
              "nameOverride": "IndyRevRegEntry",
              "title": "IndyRevRegEntry",
              "value": {
                "description": "Version of revocation registry entry",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "IndyRevRegEntryVer",
                "nameOverride": "ver",
                "title": "ver",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRevRegEntry",
        "nameOverride": "IndyRevRegEntry",
        "title": "IndyRevRegEntry",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndyRevRegEntryValue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "indyRevRegEntryValueAccum",
            "key": "accum",
            "schema": {
              "generatedName": "indyRevRegEntryValueAccum",
              "nameOverride": "IndyRevRegEntryValue",
              "title": "IndyRevRegEntryValue",
              "value": {
                "description": "Accumulator value",
                "schema": {
                  "example": "21 11792B036AED0AAA12A4 4 298B2571FFC63A737",
                  "type": "string"
                },
                "generatedName": "IndyRevRegEntryValueAccum",
                "nameOverride": "accum",
                "title": "accum",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegEntryValuePrevAccum",
            "key": "prevAccum",
            "schema": {
              "generatedName": "indyRevRegEntryValuePrevAccum",
              "nameOverride": "IndyRevRegEntryValue",
              "title": "IndyRevRegEntryValue",
              "value": {
                "description": "Previous accumulator value",
                "schema": {
                  "example": "21 137AC810975E4 6 76F0384B6F23",
                  "type": "string"
                },
                "generatedName": "IndyRevRegEntryValuePrevAccum",
                "nameOverride": "prevAccum",
                "title": "prevAccum",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "indyRevRegEntryValueRevoked",
            "key": "revoked",
            "schema": {
              "generatedName": "indyRevRegEntryValueRevoked",
              "nameOverride": "IndyRevRegEntryValue",
              "title": "IndyRevRegEntryValue",
              "value": {
                "description": "Revoked credential revocation identifiers",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "IndyRevRegEntryValueRevokedItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IndyRevRegEntryValueRevoked",
                "nameOverride": "revoked",
                "title": "revoked",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IndyRevRegEntryValue",
        "nameOverride": "IndyRevRegEntryValue",
        "title": "IndyRevRegEntryValue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "InputDescriptors": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "inputDescriptorsConstraints",
            "key": "constraints",
            "schema": {
              "generatedName": "inputDescriptorsConstraints",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "generatedName": "InputDescriptorsConstraints",
                "schema": "Constraints",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "inputDescriptorsGroup",
            "key": "group",
            "schema": {
              "generatedName": "inputDescriptorsGroup",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "value": {
                  "description": "Group",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "InputDescriptorsGroupItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "InputDescriptorsGroup",
                "nameOverride": "group",
                "title": "group",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inputDescriptorsId",
            "key": "id",
            "schema": {
              "generatedName": "inputDescriptorsId",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "description": "ID",
                "schema": {
                  "type": "string"
                },
                "generatedName": "InputDescriptorsId",
                "nameOverride": "id",
                "title": "id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inputDescriptorsMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "inputDescriptorsMetadata",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Metadata dictionary",
                "generatedName": "InputDescriptorsMetadata",
                "nameOverride": "metadata",
                "title": "metadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inputDescriptorsName",
            "key": "name",
            "schema": {
              "generatedName": "inputDescriptorsName",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "description": "Name",
                "schema": {
                  "type": "string"
                },
                "generatedName": "InputDescriptorsName",
                "nameOverride": "name",
                "title": "name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inputDescriptorsPurpose",
            "key": "purpose",
            "schema": {
              "generatedName": "inputDescriptorsPurpose",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "description": "Purpose",
                "schema": {
                  "type": "string"
                },
                "generatedName": "InputDescriptorsPurpose",
                "nameOverride": "purpose",
                "title": "purpose",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "inputDescriptorsSchema",
            "key": "schema",
            "schema": {
              "generatedName": "inputDescriptorsSchema",
              "nameOverride": "InputDescriptors",
              "title": "InputDescriptors",
              "value": {
                "generatedName": "InputDescriptorsSchema",
                "schema": "InputDescriptors_schema",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InputDescriptors",
        "nameOverride": "InputDescriptors",
        "title": "InputDescriptors",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IntroModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "IntroModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "IntroModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "IntroModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "InvitationCreateRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestAccept",
            "key": "accept",
            "schema": {
              "generatedName": "invitationCreateRequestAccept",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "List of mime type in order of preference that should be use in responding to the message",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "InvitationCreateRequestAcceptItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "InvitationCreateRequestAccept",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestAlias",
            "key": "alias",
            "schema": {
              "generatedName": "invitationCreateRequestAlias",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "Alias for connection",
                "schema": {
                  "example": "Barry",
                  "type": "string"
                },
                "generatedName": "InvitationCreateRequestAlias",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestAttachments",
            "key": "attachments",
            "schema": {
              "generatedName": "invitationCreateRequestAttachments",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "Optional invitation attachments",
                "value": {
                  "generatedName": "InvitationCreateRequestAttachmentsItem",
                  "schema": "AttachmentDef",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "InvitationCreateRequestAttachments",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestHandshakeProtocols",
            "key": "handshake_protocols",
            "schema": {
              "generatedName": "invitationCreateRequestHandshakeProtocols",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "value": {
                  "description": "Handshake protocol to specify in invitation",
                  "schema": {
                    "example": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                    "type": "string"
                  },
                  "generatedName": "InvitationCreateRequestHandshakeProtocolsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "InvitationCreateRequestHandshakeProtocols",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestMediationId",
            "key": "mediation_id",
            "schema": {
              "generatedName": "invitationCreateRequestMediationId",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "Identifier for active mediation record to be used",
                "schema": {
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "InvitationCreateRequestMediationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestMetadata",
            "key": "metadata",
            "schema": {
              "generatedName": "invitationCreateRequestMetadata",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Optional metadata to attach to the connection created with the invitation",
                "generatedName": "InvitationCreateRequestMetadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestMyLabel",
            "key": "my_label",
            "schema": {
              "generatedName": "invitationCreateRequestMyLabel",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "Label for connection invitation",
                "schema": {
                  "example": "Invitation to Barry",
                  "type": "string"
                },
                "generatedName": "InvitationCreateRequestMyLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestProtocolVersion",
            "key": "protocol_version",
            "schema": {
              "generatedName": "invitationCreateRequestProtocolVersion",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "OOB protocol version",
                "schema": {
                  "example": "1.1",
                  "type": "string"
                },
                "generatedName": "InvitationCreateRequestProtocolVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationCreateRequestUsePublicDid",
            "key": "use_public_did",
            "schema": {
              "generatedName": "invitationCreateRequestUsePublicDid",
              "nameOverride": "InvitationCreateRequest",
              "title": "InvitationCreateRequest",
              "value": {
                "description": "Whether to use public DID in invitation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "InvitationCreateRequestUsePublicDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InvitationCreateRequest",
        "nameOverride": "InvitationCreateRequest",
        "title": "InvitationCreateRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "InvitationMessage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "invitationMessageId",
            "key": "@id",
            "schema": {
              "generatedName": "invitationMessageId",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "InvitationMessageId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageType",
            "key": "@type",
            "schema": {
              "generatedName": "invitationMessageType",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "InvitationMessageType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageAccept",
            "key": "accept",
            "schema": {
              "generatedName": "invitationMessageAccept",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "description": "List of mime type in order of preference",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "InvitationMessageAcceptItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "InvitationMessageAccept",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageHandshakeProtocols",
            "key": "handshake_protocols",
            "schema": {
              "generatedName": "invitationMessageHandshakeProtocols",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "value": {
                  "description": "Handshake protocol",
                  "schema": {
                    "example": "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0",
                    "type": "string"
                  },
                  "generatedName": "InvitationMessageHandshakeProtocolsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "InvitationMessageHandshakeProtocols",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageImageUrl",
            "key": "imageUrl",
            "schema": {
              "generatedName": "invitationMessageImageUrl",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "generatedName": "InvitationMessageImageUrl",
                "description": "Optional image URL for out-of-band invitation",
                "value": {
                  "description": "Optional image URL for out-of-band invitation",
                  "schema": {
                    "format": "url",
                    "example": "http://192.168.56.101/img/logo.jpg",
                    "type": "string"
                  },
                  "generatedName": "InvitationMessageImageUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageLabel",
            "key": "label",
            "schema": {
              "generatedName": "invitationMessageLabel",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "description": "Optional label",
                "schema": {
                  "example": "Bob",
                  "type": "string"
                },
                "generatedName": "InvitationMessageLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageRequestsAttach",
            "key": "requests~attach",
            "schema": {
              "generatedName": "invitationMessageRequestsAttach",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "description": "Optional request attachment",
                "value": {
                  "generatedName": "InvitationMessageRequestsAttachItem",
                  "schema": "AttachDecorator",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "InvitationMessageRequestsAttach",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationMessageServices",
            "key": "services",
            "schema": {
              "generatedName": "invitationMessageServices",
              "nameOverride": "InvitationMessage",
              "title": "InvitationMessage",
              "value": {
                "value": {
                  "description": "Either a DIDComm service object (as per RFC0067) or a DID string.",
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "InvitationMessageServicesItemKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "InvitationMessageServicesItemValue",
                    "type": "unknown"
                  },
                  "generatedName": "InvitationMessageServicesItem",
                  "groupName": [],
                  "type": "map"
                },
                "generatedName": "InvitationMessageServices",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InvitationMessage",
        "nameOverride": "InvitationMessage",
        "title": "InvitationMessage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "InvitationRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "invitationRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "invitationRecordCreatedAt",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "InvitationRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordInviMsgId",
            "key": "invi_msg_id",
            "schema": {
              "generatedName": "invitationRecordInviMsgId",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Invitation message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "InvitationRecordInviMsgId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordInvitation",
            "key": "invitation",
            "schema": {
              "generatedName": "invitationRecordInvitation",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "generatedName": "InvitationRecordInvitation",
                "schema": "InvitationRecord_invitation",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordInvitationId",
            "key": "invitation_id",
            "schema": {
              "generatedName": "invitationRecordInvitationId",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Invitation record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "InvitationRecordInvitationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordInvitationUrl",
            "key": "invitation_url",
            "schema": {
              "generatedName": "invitationRecordInvitationUrl",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Invitation message URL",
                "schema": {
                  "example": "https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=",
                  "type": "string"
                },
                "generatedName": "InvitationRecordInvitationUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordOobId",
            "key": "oob_id",
            "schema": {
              "generatedName": "invitationRecordOobId",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Out of band record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "InvitationRecordOobId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordState",
            "key": "state",
            "schema": {
              "generatedName": "invitationRecordState",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Out of band message exchange state",
                "schema": {
                  "example": "await_response",
                  "type": "string"
                },
                "generatedName": "InvitationRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "invitationRecordTrace",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "InvitationRecordTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "invitationRecordUpdatedAt",
              "nameOverride": "InvitationRecord",
              "title": "InvitationRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "InvitationRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InvitationRecord",
        "nameOverride": "InvitationRecord",
        "title": "InvitationRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "InvitationResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "invitationResultConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "invitationResultConnectionId",
              "nameOverride": "InvitationResult",
              "title": "InvitationResult",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "InvitationResultConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "invitationResultInvitation",
            "key": "invitation",
            "schema": {
              "generatedName": "invitationResultInvitation",
              "nameOverride": "InvitationResult",
              "title": "InvitationResult",
              "value": {
                "generatedName": "InvitationResultInvitation",
                "schema": "ConnectionInvitation",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "invitationResultInvitationUrl",
            "key": "invitation_url",
            "schema": {
              "generatedName": "invitationResultInvitationUrl",
              "nameOverride": "InvitationResult",
              "title": "InvitationResult",
              "value": {
                "description": "Invitation URL",
                "schema": {
                  "example": "http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==",
                  "type": "string"
                },
                "generatedName": "InvitationResultInvitationUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "InvitationResult",
        "nameOverride": "InvitationResult",
        "title": "InvitationResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IssueCredentialModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "IssueCredentialModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "IssueCredentialModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "IssueCredentialModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "IssuerCredRevRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "issuerCredRevRecordCreatedAt",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "issuerCredRevRecordCredDefId",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordCredExId",
            "key": "cred_ex_id",
            "schema": {
              "generatedName": "issuerCredRevRecordCredExId",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Credential exchange record identifier at credential issue",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordCredExId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordCredExVersion",
            "key": "cred_ex_version",
            "schema": {
              "generatedName": "issuerCredRevRecordCredExVersion",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Credential exchange version",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordCredExVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordCredRevId",
            "key": "cred_rev_id",
            "schema": {
              "generatedName": "issuerCredRevRecordCredRevId",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Credential revocation identifier",
                "schema": {
                  "pattern": "^[1-9][0-9]*$",
                  "example": "12345",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordCredRevId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordRecordId",
            "key": "record_id",
            "schema": {
              "generatedName": "issuerCredRevRecordRecordId",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Issuer credential revocation record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordRevRegId",
            "key": "rev_reg_id",
            "schema": {
              "generatedName": "issuerCredRevRecordRevRegId",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Revocation registry identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                  "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordRevRegId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordState",
            "key": "state",
            "schema": {
              "generatedName": "issuerCredRevRecordState",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Issue credential revocation record state",
                "schema": {
                  "example": "issued",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerCredRevRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "issuerCredRevRecordUpdatedAt",
              "nameOverride": "IssuerCredRevRecord",
              "title": "IssuerCredRevRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "IssuerCredRevRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IssuerCredRevRecord",
        "nameOverride": "IssuerCredRevRecord",
        "title": "IssuerCredRevRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IssuerRevRegRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "issuerRevRegRecordCreatedAt",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "issuerRevRegRecordCredDefId",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordErrorMsg",
            "key": "error_msg",
            "schema": {
              "generatedName": "issuerRevRegRecordErrorMsg",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Error message",
                "schema": {
                  "example": "Revocation registry undefined",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordErrorMsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordIssuerDid",
            "key": "issuer_did",
            "schema": {
              "generatedName": "issuerRevRegRecordIssuerDid",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordMaxCredNum",
            "key": "max_cred_num",
            "schema": {
              "generatedName": "issuerRevRegRecordMaxCredNum",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Maximum number of credentials for revocation registry",
                "schema": {
                  "example": 1000,
                  "type": "int"
                },
                "generatedName": "IssuerRevRegRecordMaxCredNum",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordPendingPub",
            "key": "pending_pub",
            "schema": {
              "generatedName": "issuerRevRegRecordPendingPub",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Credential revocation identifier for credential revoked and pending publication to ledger",
                "value": {
                  "schema": {
                    "example": "23",
                    "type": "string"
                  },
                  "generatedName": "IssuerRevRegRecordPendingPubItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "IssuerRevRegRecordPendingPub",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordRecordId",
            "key": "record_id",
            "schema": {
              "generatedName": "issuerRevRegRecordRecordId",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Issuer revocation registry record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordRevocDefType",
            "key": "revoc_def_type",
            "schema": {
              "generatedName": "issuerRevRegRecordRevocDefType",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Revocation registry type (specify CL_ACCUM)",
                "value": {
                  "value": "CL_ACCUM",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordRevocDefType",
                "groupName": [],
                "type": "literal"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordRevocRegDef",
            "key": "revoc_reg_def",
            "schema": {
              "generatedName": "issuerRevRegRecordRevocRegDef",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "generatedName": "IssuerRevRegRecordRevocRegDef",
                "schema": "IssuerRevRegRecord_revoc_reg_def",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordRevocRegEntry",
            "key": "revoc_reg_entry",
            "schema": {
              "generatedName": "issuerRevRegRecordRevocRegEntry",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "generatedName": "IssuerRevRegRecordRevocRegEntry",
                "schema": "IssuerRevRegRecord_revoc_reg_entry",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordRevocRegId",
            "key": "revoc_reg_id",
            "schema": {
              "generatedName": "issuerRevRegRecordRevocRegId",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Revocation registry identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                  "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordRevocRegId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordState",
            "key": "state",
            "schema": {
              "generatedName": "issuerRevRegRecordState",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Issue revocation registry record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordTag",
            "key": "tag",
            "schema": {
              "generatedName": "issuerRevRegRecordTag",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Tag within issuer revocation registry identifier",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordTag",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordTailsHash",
            "key": "tails_hash",
            "schema": {
              "generatedName": "issuerRevRegRecordTailsHash",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Tails hash",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                  "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordTailsHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordTailsLocalPath",
            "key": "tails_local_path",
            "schema": {
              "generatedName": "issuerRevRegRecordTailsLocalPath",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Local path to tails file",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordTailsLocalPath",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordTailsPublicUri",
            "key": "tails_public_uri",
            "schema": {
              "generatedName": "issuerRevRegRecordTailsPublicUri",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Public URI for tails file",
                "schema": {
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordTailsPublicUri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "issuerRevRegRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "issuerRevRegRecordUpdatedAt",
              "nameOverride": "IssuerRevRegRecord",
              "title": "IssuerRevRegRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "IssuerRevRegRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "IssuerRevRegRecord",
        "nameOverride": "IssuerRevRegRecord",
        "title": "IssuerRevRegRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Keylist": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistResults",
            "key": "results",
            "schema": {
              "generatedName": "keylistResults",
              "nameOverride": "Keylist",
              "title": "Keylist",
              "value": {
                "description": "List of keylist records",
                "value": {
                  "generatedName": "KeylistResultsItem",
                  "schema": "RouteRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "KeylistResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Keylist",
        "nameOverride": "Keylist",
        "title": "Keylist",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KeylistQuery": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistQueryId",
            "key": "@id",
            "schema": {
              "generatedName": "keylistQueryId",
              "nameOverride": "KeylistQuery",
              "title": "KeylistQuery",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "KeylistQueryId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keylistQueryType",
            "key": "@type",
            "schema": {
              "generatedName": "keylistQueryType",
              "nameOverride": "KeylistQuery",
              "title": "KeylistQuery",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "KeylistQueryType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "keylistQueryFilter",
            "key": "filter",
            "schema": {
              "generatedName": "keylistQueryFilter",
              "nameOverride": "KeylistQuery",
              "title": "KeylistQuery",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Query dictionary object",
                "generatedName": "KeylistQueryFilter",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keylistQueryPaginate",
            "key": "paginate",
            "schema": {
              "generatedName": "keylistQueryPaginate",
              "nameOverride": "KeylistQuery",
              "title": "KeylistQuery",
              "value": {
                "generatedName": "KeylistQueryPaginate",
                "schema": "KeylistQuery_paginate",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KeylistQuery",
        "nameOverride": "KeylistQuery",
        "title": "KeylistQuery",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KeylistQueryFilterRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistQueryFilterRequestFilter",
            "key": "filter",
            "schema": {
              "generatedName": "keylistQueryFilterRequestFilter",
              "nameOverride": "KeylistQueryFilterRequest",
              "title": "KeylistQueryFilterRequest",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Filter for keylist query",
                "generatedName": "KeylistQueryFilterRequestFilter",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KeylistQueryFilterRequest",
        "nameOverride": "KeylistQueryFilterRequest",
        "title": "KeylistQueryFilterRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KeylistQueryPaginate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistQueryPaginateLimit",
            "key": "limit",
            "schema": {
              "generatedName": "keylistQueryPaginateLimit",
              "nameOverride": "KeylistQueryPaginate",
              "title": "KeylistQueryPaginate",
              "value": {
                "description": "Limit for keylist query",
                "schema": {
                  "example": 30,
                  "type": "int"
                },
                "generatedName": "KeylistQueryPaginateLimit",
                "nameOverride": "limit",
                "title": "limit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keylistQueryPaginateOffset",
            "key": "offset",
            "schema": {
              "generatedName": "keylistQueryPaginateOffset",
              "nameOverride": "KeylistQueryPaginate",
              "title": "KeylistQueryPaginate",
              "value": {
                "description": "Offset value for query",
                "schema": {
                  "example": 0,
                  "type": "int"
                },
                "generatedName": "KeylistQueryPaginateOffset",
                "nameOverride": "offset",
                "title": "offset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KeylistQueryPaginate",
        "nameOverride": "KeylistQueryPaginate",
        "title": "KeylistQueryPaginate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KeylistUpdate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistUpdateId",
            "key": "@id",
            "schema": {
              "generatedName": "keylistUpdateId",
              "nameOverride": "KeylistUpdate",
              "title": "KeylistUpdate",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "KeylistUpdateId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keylistUpdateType",
            "key": "@type",
            "schema": {
              "generatedName": "keylistUpdateType",
              "nameOverride": "KeylistUpdate",
              "title": "KeylistUpdate",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "KeylistUpdateType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "keylistUpdateUpdates",
            "key": "updates",
            "schema": {
              "generatedName": "keylistUpdateUpdates",
              "nameOverride": "KeylistUpdate",
              "title": "KeylistUpdate",
              "value": {
                "description": "List of update rules",
                "value": {
                  "generatedName": "KeylistUpdateUpdatesItem",
                  "schema": "KeylistUpdateRule",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "KeylistUpdateUpdates",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KeylistUpdate",
        "nameOverride": "KeylistUpdate",
        "title": "KeylistUpdate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KeylistUpdateRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistUpdateRequestUpdates",
            "key": "updates",
            "schema": {
              "generatedName": "keylistUpdateRequestUpdates",
              "nameOverride": "KeylistUpdateRequest",
              "title": "KeylistUpdateRequest",
              "value": {
                "value": {
                  "generatedName": "KeylistUpdateRequestUpdatesItem",
                  "schema": "KeylistUpdateRule",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "KeylistUpdateRequestUpdates",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KeylistUpdateRequest",
        "nameOverride": "KeylistUpdateRequest",
        "title": "KeylistUpdateRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "KeylistUpdateRule": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "keylistUpdateRuleAction",
            "key": "action",
            "schema": {
              "description": "Action for specific key",
              "generatedName": "KeylistUpdateRuleAction",
              "values": [
                {
                  "generatedName": "add",
                  "value": "add",
                  "casing": {}
                },
                {
                  "generatedName": "remove",
                  "value": "remove",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "keylistUpdateRuleRecipientKey",
            "key": "recipient_key",
            "schema": {
              "description": "Key to remove or add",
              "schema": {
                "pattern": "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                "type": "string"
              },
              "generatedName": "KeylistUpdateRuleRecipientKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "KeylistUpdateRule",
        "nameOverride": "KeylistUpdateRule",
        "title": "KeylistUpdateRule",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LDProofVCDetail": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailCredential",
            "key": "credential",
            "schema": {
              "generatedName": "LdProofVcDetailCredential",
              "schema": "LDProofVCDetail_credential",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptions",
            "key": "options",
            "schema": {
              "generatedName": "LdProofVcDetailOptions",
              "schema": "LDProofVCDetail_options",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LdProofVcDetail",
        "nameOverride": "LDProofVCDetail",
        "title": "LDProofVCDetail",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LDProofVCDetailOptions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptionsChallenge",
            "key": "challenge",
            "schema": {
              "generatedName": "ldProofVcDetailOptionsChallenge",
              "nameOverride": "LDProofVCDetailOptions",
              "title": "LDProofVCDetailOptions",
              "value": {
                "description": "A challenge to include in the proof. SHOULD be provided by the requesting party of the credential (=holder)",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "LdProofVcDetailOptionsChallenge",
                "nameOverride": "challenge",
                "title": "challenge",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptionsCreated",
            "key": "created",
            "schema": {
              "generatedName": "ldProofVcDetailOptionsCreated",
              "nameOverride": "LDProofVCDetailOptions",
              "title": "LDProofVCDetailOptions",
              "value": {
                "description": "The date and time of the proof (with a maximum accuracy in seconds). Defaults to current system time",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "LdProofVcDetailOptionsCreated",
                "nameOverride": "created",
                "title": "created",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptionsCredentialStatus",
            "key": "credentialStatus",
            "schema": {
              "generatedName": "ldProofVcDetailOptionsCredentialStatus",
              "nameOverride": "LDProofVCDetailOptions",
              "title": "LDProofVCDetailOptions",
              "value": {
                "generatedName": "LdProofVcDetailOptionsCredentialStatus",
                "schema": "LDProofVCDetailOptions_credentialStatus",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptionsDomain",
            "key": "domain",
            "schema": {
              "generatedName": "ldProofVcDetailOptionsDomain",
              "nameOverride": "LDProofVCDetailOptions",
              "title": "LDProofVCDetailOptions",
              "value": {
                "description": "The intended domain of validity for the proof",
                "schema": {
                  "example": "example.com",
                  "type": "string"
                },
                "generatedName": "LdProofVcDetailOptionsDomain",
                "nameOverride": "domain",
                "title": "domain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptionsProofPurpose",
            "key": "proofPurpose",
            "schema": {
              "generatedName": "ldProofVcDetailOptionsProofPurpose",
              "nameOverride": "LDProofVCDetailOptions",
              "title": "LDProofVCDetailOptions",
              "value": {
                "description": "The proof purpose used for the proof. Should match proof purposes registered in the Linked Data Proofs Specification",
                "schema": {
                  "example": "assertionMethod",
                  "type": "string"
                },
                "generatedName": "LdProofVcDetailOptionsProofPurpose",
                "nameOverride": "proofPurpose",
                "title": "proofPurpose",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ldProofVcDetailOptionsProofType",
            "key": "proofType",
            "schema": {
              "description": "The proof type used for the proof. Should match suites registered in the Linked Data Cryptographic Suite Registry",
              "schema": {
                "example": "Ed25519Signature2018",
                "type": "string"
              },
              "generatedName": "LdProofVcDetailOptionsProofType",
              "nameOverride": "proofType",
              "title": "proofType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LdProofVcDetailOptions",
        "nameOverride": "LDProofVCDetailOptions",
        "title": "LDProofVCDetailOptions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LedgerConfigInstance": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ledgerConfigInstanceGenesisFile",
            "key": "genesis_file",
            "schema": {
              "generatedName": "ledgerConfigInstanceGenesisFile",
              "nameOverride": "LedgerConfigInstance",
              "title": "LedgerConfigInstance",
              "value": {
                "description": "genesis_file",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LedgerConfigInstanceGenesisFile",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ledgerConfigInstanceGenesisTransactions",
            "key": "genesis_transactions",
            "schema": {
              "generatedName": "ledgerConfigInstanceGenesisTransactions",
              "nameOverride": "LedgerConfigInstance",
              "title": "LedgerConfigInstance",
              "value": {
                "description": "genesis_transactions",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LedgerConfigInstanceGenesisTransactions",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ledgerConfigInstanceGenesisUrl",
            "key": "genesis_url",
            "schema": {
              "generatedName": "ledgerConfigInstanceGenesisUrl",
              "nameOverride": "LedgerConfigInstance",
              "title": "LedgerConfigInstance",
              "value": {
                "description": "genesis_url",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LedgerConfigInstanceGenesisUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ledgerConfigInstanceId",
            "key": "id",
            "schema": {
              "generatedName": "ledgerConfigInstanceId",
              "nameOverride": "LedgerConfigInstance",
              "title": "LedgerConfigInstance",
              "value": {
                "description": "ledger_id",
                "schema": {
                  "type": "string"
                },
                "generatedName": "LedgerConfigInstanceId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "ledgerConfigInstanceIsProduction",
            "key": "is_production",
            "schema": {
              "generatedName": "ledgerConfigInstanceIsProduction",
              "nameOverride": "LedgerConfigInstance",
              "title": "LedgerConfigInstance",
              "value": {
                "description": "is_production",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "LedgerConfigInstanceIsProduction",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LedgerConfigInstance",
        "nameOverride": "LedgerConfigInstance",
        "title": "LedgerConfigInstance",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LedgerConfigList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ledgerConfigListLedgerConfigList",
            "key": "ledger_config_list",
            "schema": {
              "value": {
                "generatedName": "LedgerConfigListLedgerConfigListItem",
                "schema": "LedgerConfigInstance",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "LedgerConfigListLedgerConfigList",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LedgerConfigList",
        "nameOverride": "LedgerConfigList",
        "title": "LedgerConfigList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "LedgerModulesResult": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "LedgerModulesResultKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "LedgerModulesResultValue",
          "type": "unknown"
        },
        "generatedName": "LedgerModulesResult",
        "groupName": [],
        "type": "map"
      },
      "LinkedDataProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "linkedDataProofChallenge",
            "key": "challenge",
            "schema": {
              "generatedName": "linkedDataProofChallenge",
              "nameOverride": "LinkedDataProof",
              "title": "LinkedDataProof",
              "value": {
                "description": "Associates a challenge with a proof, for use with a proofPurpose such as authentication",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "LinkedDataProofChallenge",
                "nameOverride": "challenge",
                "title": "challenge",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofCreated",
            "key": "created",
            "schema": {
              "description": "The string value of an ISO8601 combined date and time string generated by the Signature Algorithm",
              "schema": {
                "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                "example": "2021-12-31 23:59:59+00:00",
                "type": "string"
              },
              "generatedName": "LinkedDataProofCreated",
              "nameOverride": "created",
              "title": "created",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofDomain",
            "key": "domain",
            "schema": {
              "generatedName": "linkedDataProofDomain",
              "nameOverride": "LinkedDataProof",
              "title": "LinkedDataProof",
              "value": {
                "description": "A string value specifying the restricted domain of the signature.",
                "schema": {
                  "pattern": "\\w+:(\\/?\\/?)[^\\s]+",
                  "example": "example.com",
                  "type": "string"
                },
                "generatedName": "LinkedDataProofDomain",
                "nameOverride": "domain",
                "title": "domain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofJws",
            "key": "jws",
            "schema": {
              "generatedName": "linkedDataProofJws",
              "nameOverride": "LinkedDataProof",
              "title": "LinkedDataProof",
              "value": {
                "description": "Associates a Detached Json Web Signature with a proof",
                "schema": {
                  "example": "eyJhbGciOiAiRWREUc2UsICJjcml0IjogWyJiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQ1Ch6YBKY7UBAjg6iBX5qBQ",
                  "type": "string"
                },
                "generatedName": "LinkedDataProofJws",
                "nameOverride": "jws",
                "title": "jws",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofNonce",
            "key": "nonce",
            "schema": {
              "generatedName": "linkedDataProofNonce",
              "nameOverride": "LinkedDataProof",
              "title": "LinkedDataProof",
              "value": {
                "description": "The nonce",
                "schema": {
                  "example": "CF69iO3nfvqRsRBNElE8b4wO39SyJHPM7Gg1nExltW5vSfQA1lvDCR/zXX1To0/4NLo==",
                  "type": "string"
                },
                "generatedName": "LinkedDataProofNonce",
                "nameOverride": "nonce",
                "title": "nonce",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofProofPurpose",
            "key": "proofPurpose",
            "schema": {
              "description": "Proof purpose",
              "schema": {
                "example": "assertionMethod",
                "type": "string"
              },
              "generatedName": "LinkedDataProofProofPurpose",
              "nameOverride": "proofPurpose",
              "title": "proofPurpose",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofProofValue",
            "key": "proofValue",
            "schema": {
              "generatedName": "linkedDataProofProofValue",
              "nameOverride": "LinkedDataProof",
              "title": "LinkedDataProof",
              "value": {
                "description": "The proof value of a proof",
                "schema": {
                  "example": "sy1AahqbzJQ63n9RtekmwzqZeVj494VppdAVJBnMYrTwft6cLJJGeTSSxCCJ6HKnRtwE7jjDh6sB2z2AAiZY9BBnCD8wUVgwqH3qchGRCuC2RugA4eQ9fUrR4Yuycac3caiaaay",
                  "type": "string"
                },
                "generatedName": "LinkedDataProofProofValue",
                "nameOverride": "proofValue",
                "title": "proofValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofType",
            "key": "type",
            "schema": {
              "description": "Identifies the digital signature suite that was used to create the signature",
              "schema": {
                "example": "Ed25519Signature2018",
                "type": "string"
              },
              "generatedName": "LinkedDataProofType",
              "nameOverride": "type",
              "title": "type",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "linkedDataProofVerificationMethod",
            "key": "verificationMethod",
            "schema": {
              "description": "Information used for proof verification",
              "schema": {
                "pattern": "\\w+:(\\/?\\/?)[^\\s]+",
                "example": "did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
                "type": "string"
              },
              "generatedName": "LinkedDataProofVerificationMethod",
              "nameOverride": "verificationMethod",
              "title": "verificationMethod",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "LinkedDataProof",
        "nameOverride": "LinkedDataProof",
        "title": "LinkedDataProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediationCreateRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediationCreateRequestMediatorTerms",
            "key": "mediator_terms",
            "schema": {
              "generatedName": "mediationCreateRequestMediatorTerms",
              "nameOverride": "MediationCreateRequest",
              "title": "MediationCreateRequest",
              "value": {
                "description": "List of mediator rules for recipient",
                "value": {
                  "description": "Indicate terms to which the mediator requires the recipient to agree",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationCreateRequestMediatorTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationCreateRequestMediatorTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationCreateRequestRecipientTerms",
            "key": "recipient_terms",
            "schema": {
              "generatedName": "mediationCreateRequestRecipientTerms",
              "nameOverride": "MediationCreateRequest",
              "title": "MediationCreateRequest",
              "value": {
                "description": "List of recipient rules for mediation",
                "value": {
                  "description": "Indicate terms to which the recipient requires the mediator to agree",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationCreateRequestRecipientTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationCreateRequestRecipientTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediationCreateRequest",
        "nameOverride": "MediationCreateRequest",
        "title": "MediationCreateRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediationDeny": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediationDenyId",
            "key": "@id",
            "schema": {
              "generatedName": "mediationDenyId",
              "nameOverride": "MediationDeny",
              "title": "MediationDeny",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "MediationDenyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationDenyType",
            "key": "@type",
            "schema": {
              "generatedName": "mediationDenyType",
              "nameOverride": "MediationDeny",
              "title": "MediationDeny",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "MediationDenyType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "mediationDenyMediatorTerms",
            "key": "mediator_terms",
            "schema": {
              "generatedName": "mediationDenyMediatorTerms",
              "nameOverride": "MediationDeny",
              "title": "MediationDeny",
              "value": {
                "value": {
                  "description": "Terms for mediator to agree",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationDenyMediatorTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationDenyMediatorTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationDenyRecipientTerms",
            "key": "recipient_terms",
            "schema": {
              "generatedName": "mediationDenyRecipientTerms",
              "nameOverride": "MediationDeny",
              "title": "MediationDeny",
              "value": {
                "value": {
                  "description": "Terms for recipient to agree",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationDenyRecipientTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationDenyRecipientTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediationDeny",
        "nameOverride": "MediationDeny",
        "title": "MediationDeny",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediationGrant": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediationGrantId",
            "key": "@id",
            "schema": {
              "generatedName": "mediationGrantId",
              "nameOverride": "MediationGrant",
              "title": "MediationGrant",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "MediationGrantId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationGrantType",
            "key": "@type",
            "schema": {
              "generatedName": "mediationGrantType",
              "nameOverride": "MediationGrant",
              "title": "MediationGrant",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "MediationGrantType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "mediationGrantEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "mediationGrantEndpoint",
              "nameOverride": "MediationGrant",
              "title": "MediationGrant",
              "value": {
                "description": "endpoint on which messages destined for the recipient are received.",
                "schema": {
                  "example": "http://192.168.56.102:8020/",
                  "type": "string"
                },
                "generatedName": "MediationGrantEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationGrantRoutingKeys",
            "key": "routing_keys",
            "schema": {
              "generatedName": "mediationGrantRoutingKeys",
              "nameOverride": "MediationGrant",
              "title": "MediationGrant",
              "value": {
                "value": {
                  "description": "Keys to use for forward message packaging",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationGrantRoutingKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationGrantRoutingKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediationGrant",
        "nameOverride": "MediationGrant",
        "title": "MediationGrant",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediationIdMatchInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediationIdMatchInfoMediationId",
            "key": "mediation_id",
            "schema": {
              "generatedName": "mediationIdMatchInfoMediationId",
              "nameOverride": "MediationIdMatchInfo",
              "title": "MediationIdMatchInfo",
              "value": {
                "description": "Mediation record identifier",
                "schema": {
                  "format": "uuid",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "MediationIdMatchInfoMediationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediationIdMatchInfo",
        "nameOverride": "MediationIdMatchInfo",
        "title": "MediationIdMatchInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediationList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediationListResults",
            "key": "results",
            "schema": {
              "generatedName": "mediationListResults",
              "nameOverride": "MediationList",
              "title": "MediationList",
              "value": {
                "description": "List of mediation records",
                "value": {
                  "generatedName": "MediationListResultsItem",
                  "schema": "MediationRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "MediationListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediationList",
        "nameOverride": "MediationList",
        "title": "MediationList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MediationRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "mediationRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "MediationRecordConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "mediationRecordCreatedAt",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "MediationRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordEndpoint",
            "key": "endpoint",
            "schema": {
              "generatedName": "mediationRecordEndpoint",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MediationRecordEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordMediationId",
            "key": "mediation_id",
            "schema": {
              "generatedName": "mediationRecordMediationId",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MediationRecordMediationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordMediatorTerms",
            "key": "mediator_terms",
            "schema": {
              "generatedName": "mediationRecordMediatorTerms",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationRecordMediatorTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationRecordMediatorTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordRecipientTerms",
            "key": "recipient_terms",
            "schema": {
              "generatedName": "mediationRecordRecipientTerms",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MediationRecordRecipientTermsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationRecordRecipientTerms",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordRole",
            "key": "role",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "MediationRecordRole",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordRoutingKeys",
            "key": "routing_keys",
            "schema": {
              "generatedName": "mediationRecordRoutingKeys",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "value": {
                  "schema": {
                    "pattern": "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$",
                    "example": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
                    "type": "string"
                  },
                  "generatedName": "MediationRecordRoutingKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "MediationRecordRoutingKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordState",
            "key": "state",
            "schema": {
              "generatedName": "mediationRecordState",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "MediationRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "mediationRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "mediationRecordUpdatedAt",
              "nameOverride": "MediationRecord",
              "title": "MediationRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "MediationRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MediationRecord",
        "nameOverride": "MediationRecord",
        "title": "MediationRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Menu": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "menuId",
            "key": "@id",
            "schema": {
              "generatedName": "menuId",
              "nameOverride": "Menu",
              "title": "Menu",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "MenuId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuType",
            "key": "@type",
            "schema": {
              "generatedName": "menuType",
              "nameOverride": "Menu",
              "title": "Menu",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "MenuType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "menuDescription",
            "key": "description",
            "schema": {
              "generatedName": "menuDescription",
              "nameOverride": "Menu",
              "title": "Menu",
              "value": {
                "description": "Introductory text for the menu",
                "schema": {
                  "example": "This menu presents options",
                  "type": "string"
                },
                "generatedName": "MenuDescription",
                "nameOverride": "description",
                "title": "description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuErrormsg",
            "key": "errormsg",
            "schema": {
              "generatedName": "menuErrormsg",
              "nameOverride": "Menu",
              "title": "Menu",
              "value": {
                "description": "An optional error message to display in menu header",
                "schema": {
                  "example": "Error: item not found",
                  "type": "string"
                },
                "generatedName": "MenuErrormsg",
                "nameOverride": "errormsg",
                "title": "errormsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuOptions",
            "key": "options",
            "schema": {
              "description": "List of menu options",
              "value": {
                "generatedName": "MenuOptionsItem",
                "schema": "MenuOption",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "MenuOptions",
              "nameOverride": "options",
              "title": "options",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuTitle",
            "key": "title",
            "schema": {
              "generatedName": "menuTitle",
              "nameOverride": "Menu",
              "title": "Menu",
              "value": {
                "description": "Menu title",
                "schema": {
                  "example": "My Menu",
                  "type": "string"
                },
                "generatedName": "MenuTitle",
                "nameOverride": "title",
                "title": "title",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Menu",
        "nameOverride": "Menu",
        "title": "Menu",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MenuForm": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "menuFormDescription",
            "key": "description",
            "schema": {
              "generatedName": "menuFormDescription",
              "nameOverride": "MenuForm",
              "title": "MenuForm",
              "value": {
                "description": "Additional descriptive text for menu form",
                "schema": {
                  "example": "Window preference settings",
                  "type": "string"
                },
                "generatedName": "MenuFormDescription",
                "nameOverride": "description",
                "title": "description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormParams",
            "key": "params",
            "schema": {
              "generatedName": "menuFormParams",
              "nameOverride": "MenuForm",
              "title": "MenuForm",
              "value": {
                "description": "List of form parameters",
                "value": {
                  "generatedName": "MenuFormParamsItem",
                  "schema": "MenuFormParam",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "MenuFormParams",
                "nameOverride": "params",
                "title": "params",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormSubmitLabel",
            "key": "submit-label",
            "schema": {
              "generatedName": "menuFormSubmitLabel",
              "nameOverride": "MenuForm",
              "title": "MenuForm",
              "value": {
                "description": "Alternative label for form submit button",
                "schema": {
                  "example": "Send",
                  "type": "string"
                },
                "generatedName": "MenuFormSubmitLabel",
                "title": "submit-label",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormTitle",
            "key": "title",
            "schema": {
              "generatedName": "menuFormTitle",
              "nameOverride": "MenuForm",
              "title": "MenuForm",
              "value": {
                "description": "Menu form title",
                "schema": {
                  "example": "Preferences",
                  "type": "string"
                },
                "generatedName": "MenuFormTitle",
                "nameOverride": "title",
                "title": "title",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MenuForm",
        "nameOverride": "MenuForm",
        "title": "MenuForm",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MenuFormParam": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "menuFormParamDefault",
            "key": "default",
            "schema": {
              "generatedName": "menuFormParamDefault",
              "nameOverride": "MenuFormParam",
              "title": "MenuFormParam",
              "value": {
                "description": "Default parameter value",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "MenuFormParamDefault",
                "nameOverride": "default",
                "title": "default",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormParamDescription",
            "key": "description",
            "schema": {
              "generatedName": "menuFormParamDescription",
              "nameOverride": "MenuFormParam",
              "title": "MenuFormParam",
              "value": {
                "description": "Additional descriptive text for menu form parameter",
                "schema": {
                  "example": "Delay in seconds before starting",
                  "type": "string"
                },
                "generatedName": "MenuFormParamDescription",
                "nameOverride": "description",
                "title": "description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormParamName",
            "key": "name",
            "schema": {
              "description": "Menu parameter name",
              "schema": {
                "example": "delay",
                "type": "string"
              },
              "generatedName": "MenuFormParamName",
              "nameOverride": "name",
              "title": "name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormParamRequired",
            "key": "required",
            "schema": {
              "generatedName": "menuFormParamRequired",
              "nameOverride": "MenuFormParam",
              "title": "MenuFormParam",
              "value": {
                "description": "Whether parameter is required",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "MenuFormParamRequired",
                "nameOverride": "required",
                "title": "required",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormParamTitle",
            "key": "title",
            "schema": {
              "description": "Menu parameter title",
              "schema": {
                "example": "Delay in seconds",
                "type": "string"
              },
              "generatedName": "MenuFormParamTitle",
              "nameOverride": "title",
              "title": "title",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuFormParamType",
            "key": "type",
            "schema": {
              "generatedName": "menuFormParamType",
              "nameOverride": "MenuFormParam",
              "title": "MenuFormParam",
              "value": {
                "description": "Menu form parameter input type",
                "schema": {
                  "example": "int",
                  "type": "string"
                },
                "generatedName": "MenuFormParamType",
                "nameOverride": "type",
                "title": "type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MenuFormParam",
        "nameOverride": "MenuFormParam",
        "title": "MenuFormParam",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MenuJson": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "menuJsonDescription",
            "key": "description",
            "schema": {
              "generatedName": "menuJsonDescription",
              "nameOverride": "MenuJson",
              "title": "MenuJson",
              "value": {
                "description": "Introductory text for the menu",
                "schema": {
                  "example": "User preferences for window settings",
                  "type": "string"
                },
                "generatedName": "MenuJsonDescription",
                "nameOverride": "description",
                "title": "description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuJsonErrormsg",
            "key": "errormsg",
            "schema": {
              "generatedName": "menuJsonErrormsg",
              "nameOverride": "MenuJson",
              "title": "MenuJson",
              "value": {
                "description": "Optional error message to display in menu header",
                "schema": {
                  "example": "Error: item not present",
                  "type": "string"
                },
                "generatedName": "MenuJsonErrormsg",
                "nameOverride": "errormsg",
                "title": "errormsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuJsonOptions",
            "key": "options",
            "schema": {
              "description": "List of menu options",
              "value": {
                "generatedName": "MenuJsonOptionsItem",
                "schema": "MenuOption",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "MenuJsonOptions",
              "nameOverride": "options",
              "title": "options",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuJsonTitle",
            "key": "title",
            "schema": {
              "generatedName": "menuJsonTitle",
              "nameOverride": "MenuJson",
              "title": "MenuJson",
              "value": {
                "description": "Menu title",
                "schema": {
                  "example": "My Menu",
                  "type": "string"
                },
                "generatedName": "MenuJsonTitle",
                "nameOverride": "title",
                "title": "title",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MenuJson",
        "nameOverride": "MenuJson",
        "title": "MenuJson",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MenuOption": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "menuOptionDescription",
            "key": "description",
            "schema": {
              "generatedName": "menuOptionDescription",
              "nameOverride": "MenuOption",
              "title": "MenuOption",
              "value": {
                "description": "Additional descriptive text for menu option",
                "schema": {
                  "example": "Window display preferences",
                  "type": "string"
                },
                "generatedName": "MenuOptionDescription",
                "nameOverride": "description",
                "title": "description",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuOptionDisabled",
            "key": "disabled",
            "schema": {
              "generatedName": "menuOptionDisabled",
              "nameOverride": "MenuOption",
              "title": "MenuOption",
              "value": {
                "description": "Whether to show option as disabled",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "MenuOptionDisabled",
                "nameOverride": "disabled",
                "title": "disabled",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuOptionForm",
            "key": "form",
            "schema": {
              "generatedName": "menuOptionForm",
              "nameOverride": "MenuOption",
              "title": "MenuOption",
              "value": {
                "generatedName": "MenuOptionForm",
                "schema": "MenuForm",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "menuOptionName",
            "key": "name",
            "schema": {
              "description": "Menu option name (unique identifier)",
              "schema": {
                "example": "window_prefs",
                "type": "string"
              },
              "generatedName": "MenuOptionName",
              "nameOverride": "name",
              "title": "name",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "menuOptionTitle",
            "key": "title",
            "schema": {
              "description": "Menu option title",
              "schema": {
                "example": "Window Preferences",
                "type": "string"
              },
              "generatedName": "MenuOptionTitle",
              "nameOverride": "title",
              "title": "title",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MenuOption",
        "nameOverride": "MenuOption",
        "title": "MenuOption",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "MultitenantModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "MultitenantModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "MultitenantModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "MultitenantModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "OobRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "oobRecordAttachThreadId",
            "key": "attach_thread_id",
            "schema": {
              "generatedName": "oobRecordAttachThreadId",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "Connection record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "OobRecordAttachThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "oobRecordConnectionId",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "Connection record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "OobRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "oobRecordCreatedAt",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "OobRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordInviMsgId",
            "key": "invi_msg_id",
            "schema": {
              "description": "Invitation message identifier",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "OobRecordInviMsgId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordInvitation",
            "key": "invitation",
            "schema": {
              "generatedName": "OobRecordInvitation",
              "schema": "InvitationRecord_invitation",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "oobRecordOobId",
            "key": "oob_id",
            "schema": {
              "description": "Oob record identifier",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "OobRecordOobId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordOurRecipientKey",
            "key": "our_recipient_key",
            "schema": {
              "generatedName": "oobRecordOurRecipientKey",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "Recipient key used for oob invitation",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "OobRecordOurRecipientKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordRole",
            "key": "role",
            "schema": {
              "generatedName": "oobRecordRole",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "OOB Role",
                "generatedName": "OobRecordRole",
                "values": [
                  {
                    "generatedName": "sender",
                    "value": "sender",
                    "casing": {}
                  },
                  {
                    "generatedName": "receiver",
                    "value": "receiver",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordState",
            "key": "state",
            "schema": {
              "description": "Out of band message exchange state",
              "generatedName": "OobRecordState",
              "values": [
                {
                  "generatedName": "initial",
                  "value": "initial",
                  "casing": {}
                },
                {
                  "generatedName": "PrepareResponse",
                  "value": "prepare-response",
                  "casing": {}
                },
                {
                  "generatedName": "AwaitResponse",
                  "value": "await-response",
                  "casing": {}
                },
                {
                  "generatedName": "ReuseNotAccepted",
                  "value": "reuse-not-accepted",
                  "casing": {}
                },
                {
                  "generatedName": "ReuseAccepted",
                  "value": "reuse-accepted",
                  "casing": {}
                },
                {
                  "generatedName": "done",
                  "value": "done",
                  "casing": {}
                },
                {
                  "generatedName": "deleted",
                  "value": "deleted",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordTheirService",
            "key": "their_service",
            "schema": {
              "generatedName": "oobRecordTheirService",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "generatedName": "OobRecordTheirService",
                "schema": "ServiceDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "oobRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "oobRecordTrace",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "OobRecordTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "oobRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "oobRecordUpdatedAt",
              "nameOverride": "OobRecord",
              "title": "OobRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "OobRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OobRecord",
        "nameOverride": "OobRecord",
        "title": "OobRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PerformRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "performRequestName",
            "key": "name",
            "schema": {
              "generatedName": "performRequestName",
              "nameOverride": "PerformRequest",
              "title": "PerformRequest",
              "value": {
                "description": "Menu option name",
                "schema": {
                  "example": "Query",
                  "type": "string"
                },
                "generatedName": "PerformRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "performRequestParams",
            "key": "params",
            "schema": {
              "generatedName": "performRequestParams",
              "nameOverride": "PerformRequest",
              "title": "PerformRequest",
              "value": {
                "description": "Input parameter values",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PerformRequestParamsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "schema": {
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                  },
                  "generatedName": "PerformRequestParamsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PerformRequestParams",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PerformRequest",
        "nameOverride": "PerformRequest",
        "title": "PerformRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PingRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pingRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "pingRequestComment",
              "nameOverride": "PingRequest",
              "title": "PingRequest",
              "value": {
                "generatedName": "PingRequestComment",
                "description": "Comment for the ping message",
                "value": {
                  "description": "Comment for the ping message",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PingRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PingRequest",
        "nameOverride": "PingRequest",
        "title": "PingRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PingRequestResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "pingRequestResponseThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "pingRequestResponseThreadId",
              "nameOverride": "PingRequestResponse",
              "title": "PingRequestResponse",
              "value": {
                "description": "Thread ID of the ping message",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PingRequestResponseThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PingRequestResponse",
        "nameOverride": "PingRequestResponse",
        "title": "PingRequestResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PresentationDefinition": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "presentationDefinitionFormat",
            "key": "format",
            "schema": {
              "generatedName": "presentationDefinitionFormat",
              "nameOverride": "PresentationDefinition",
              "title": "PresentationDefinition",
              "value": {
                "generatedName": "PresentationDefinitionFormat",
                "schema": "ClaimFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "presentationDefinitionId",
            "key": "id",
            "schema": {
              "generatedName": "presentationDefinitionId",
              "nameOverride": "PresentationDefinition",
              "title": "PresentationDefinition",
              "value": {
                "description": "Unique Resource Identifier",
                "schema": {
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "PresentationDefinitionId",
                "nameOverride": "id",
                "title": "id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationDefinitionInputDescriptors",
            "key": "input_descriptors",
            "schema": {
              "generatedName": "presentationDefinitionInputDescriptors",
              "nameOverride": "PresentationDefinition",
              "title": "PresentationDefinition",
              "value": {
                "value": {
                  "generatedName": "PresentationDefinitionInputDescriptorsItem",
                  "schema": "InputDescriptors",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PresentationDefinitionInputDescriptors",
                "title": "input_descriptors",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationDefinitionName",
            "key": "name",
            "schema": {
              "generatedName": "presentationDefinitionName",
              "nameOverride": "PresentationDefinition",
              "title": "PresentationDefinition",
              "value": {
                "description": "Human-friendly name that describes what the presentation definition pertains to",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PresentationDefinitionName",
                "nameOverride": "name",
                "title": "name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationDefinitionPurpose",
            "key": "purpose",
            "schema": {
              "generatedName": "presentationDefinitionPurpose",
              "nameOverride": "PresentationDefinition",
              "title": "PresentationDefinition",
              "value": {
                "description": "Describes the purpose for which the Presentation Definition's inputs are being requested",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PresentationDefinitionPurpose",
                "nameOverride": "purpose",
                "title": "purpose",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationDefinitionSubmissionRequirements",
            "key": "submission_requirements",
            "schema": {
              "generatedName": "presentationDefinitionSubmissionRequirements",
              "nameOverride": "PresentationDefinition",
              "title": "PresentationDefinition",
              "value": {
                "value": {
                  "generatedName": "PresentationDefinitionSubmissionRequirementsItem",
                  "schema": "SubmissionRequirements",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PresentationDefinitionSubmissionRequirements",
                "title": "submission_requirements",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PresentationDefinition",
        "nameOverride": "PresentationDefinition",
        "title": "PresentationDefinition",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PresentationProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "presentationProposalId",
            "key": "@id",
            "schema": {
              "generatedName": "presentationProposalId",
              "nameOverride": "PresentationProposal",
              "title": "PresentationProposal",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "PresentationProposalId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationProposalType",
            "key": "@type",
            "schema": {
              "generatedName": "presentationProposalType",
              "nameOverride": "PresentationProposal",
              "title": "PresentationProposal",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "PresentationProposalType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "presentationProposalComment",
            "key": "comment",
            "schema": {
              "generatedName": "presentationProposalComment",
              "nameOverride": "PresentationProposal",
              "title": "PresentationProposal",
              "value": {
                "generatedName": "PresentationProposalComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PresentationProposalComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationProposalPresentationProposal",
            "key": "presentation_proposal",
            "schema": {
              "generatedName": "PresentationProposalPresentationProposal",
              "schema": "IndyPresPreview",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PresentationProposal",
        "nameOverride": "PresentationProposal",
        "title": "PresentationProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PresentationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "presentationRequestId",
            "key": "@id",
            "schema": {
              "generatedName": "presentationRequestId",
              "nameOverride": "PresentationRequest",
              "title": "PresentationRequest",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "PresentationRequestId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationRequestType",
            "key": "@type",
            "schema": {
              "generatedName": "presentationRequestType",
              "nameOverride": "PresentationRequest",
              "title": "PresentationRequest",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "PresentationRequestType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "presentationRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "presentationRequestComment",
              "nameOverride": "PresentationRequest",
              "title": "PresentationRequest",
              "value": {
                "generatedName": "PresentationRequestComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PresentationRequestComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "presentationRequestRequestPresentationsAttach",
            "key": "request_presentations~attach",
            "schema": {
              "value": {
                "generatedName": "PresentationRequestRequestPresentationsAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PresentationRequestRequestPresentationsAttach",
              "title": "request_presentations~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PresentationRequest",
        "nameOverride": "PresentationRequest",
        "title": "PresentationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProtocolDescriptor": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "protocolDescriptorPid",
            "key": "pid",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ProtocolDescriptorPid",
              "nameOverride": "pid",
              "title": "pid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "protocolDescriptorRoles",
            "key": "roles",
            "schema": {
              "generatedName": "protocolDescriptorRoles",
              "nameOverride": "ProtocolDescriptor",
              "title": "ProtocolDescriptor",
              "value": {
                "generatedName": "ProtocolDescriptorRoles",
                "nameOverride": "roles",
                "title": "roles",
                "description": "List of roles",
                "value": {
                  "description": "List of roles",
                  "value": {
                    "description": "Role: requester or responder",
                    "schema": {
                      "example": "requester",
                      "type": "string"
                    },
                    "generatedName": "ProtocolDescriptorRolesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ProtocolDescriptorRoles",
                  "nameOverride": "roles",
                  "title": "roles",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ProtocolDescriptor",
        "nameOverride": "ProtocolDescriptor",
        "title": "ProtocolDescriptor",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PublishRevocations": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "publishRevocationsRrid2Crid",
            "key": "rrid2crid",
            "schema": {
              "generatedName": "publishRevocationsRrid2Crid",
              "nameOverride": "PublishRevocations",
              "title": "PublishRevocations",
              "value": {
                "description": "Credential revocation ids by revocation registry id",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PublishRevocationsRrid2CridKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "value": {
                    "description": "Credential revocation identifier",
                    "schema": {
                      "pattern": "^[1-9][0-9]*$",
                      "example": "12345",
                      "type": "string"
                    },
                    "generatedName": "PublishRevocationsRrid2CridValueItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "PublishRevocationsRrid2CridValue",
                  "groupName": [],
                  "inline": true,
                  "type": "array"
                },
                "generatedName": "PublishRevocationsRrid2Crid",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PublishRevocations",
        "nameOverride": "PublishRevocations",
        "title": "PublishRevocations",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Queries": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "queriesId",
            "key": "@id",
            "schema": {
              "generatedName": "queriesId",
              "nameOverride": "Queries",
              "title": "Queries",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "QueriesId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queriesType",
            "key": "@type",
            "schema": {
              "generatedName": "queriesType",
              "nameOverride": "Queries",
              "title": "Queries",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "QueriesType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "queriesQueries",
            "key": "queries",
            "schema": {
              "generatedName": "queriesQueries",
              "nameOverride": "Queries",
              "title": "Queries",
              "value": {
                "value": {
                  "generatedName": "QueriesQueriesItem",
                  "schema": "QueryItem",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "QueriesQueries",
                "nameOverride": "queries",
                "title": "queries",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Queries",
        "nameOverride": "Queries",
        "title": "Queries",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Query": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "queryId",
            "key": "@id",
            "schema": {
              "generatedName": "queryId",
              "nameOverride": "Query",
              "title": "Query",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "QueryId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryType",
            "key": "@type",
            "schema": {
              "generatedName": "queryType",
              "nameOverride": "Query",
              "title": "Query",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "QueryType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "queryComment",
            "key": "comment",
            "schema": {
              "generatedName": "queryComment",
              "nameOverride": "Query",
              "title": "Query",
              "value": {
                "generatedName": "QueryComment",
                "nameOverride": "comment",
                "title": "comment",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "QueryComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryQuery",
            "key": "query",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "QueryQuery",
              "nameOverride": "query",
              "title": "query",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Query",
        "nameOverride": "Query",
        "title": "Query",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "QueryItem": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "queryItemFeatureType",
            "key": "feature-type",
            "schema": {
              "description": "feature type",
              "generatedName": "QueryItemFeatureType",
              "title": "feature-type",
              "values": [
                {
                  "generatedName": "protocol",
                  "value": "protocol",
                  "casing": {}
                },
                {
                  "generatedName": "GoalCode",
                  "value": "goal-code",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "queryItemMatch",
            "key": "match",
            "schema": {
              "description": "match",
              "schema": {
                "type": "string"
              },
              "generatedName": "QueryItemMatch",
              "nameOverride": "match",
              "title": "match",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "QueryItem",
        "nameOverride": "QueryItem",
        "title": "QueryItem",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RawEncoded": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "rawEncodedEncoded",
            "key": "encoded",
            "schema": {
              "generatedName": "rawEncodedEncoded",
              "nameOverride": "RawEncoded",
              "title": "RawEncoded",
              "value": {
                "description": "Encoded value",
                "schema": {
                  "pattern": "^-?[0-9]*$",
                  "example": "-1",
                  "type": "string"
                },
                "generatedName": "RawEncodedEncoded",
                "nameOverride": "encoded",
                "title": "encoded",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "rawEncodedRaw",
            "key": "raw",
            "schema": {
              "generatedName": "rawEncodedRaw",
              "nameOverride": "RawEncoded",
              "title": "RawEncoded",
              "value": {
                "description": "Raw value",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RawEncodedRaw",
                "nameOverride": "raw",
                "title": "raw",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RawEncoded",
        "nameOverride": "RawEncoded",
        "title": "RawEncoded",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ReceiveInvitationRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestId",
            "key": "@id",
            "schema": {
              "generatedName": "receiveInvitationRequestId",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "ReceiveInvitationRequestId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestType",
            "key": "@type",
            "schema": {
              "generatedName": "receiveInvitationRequestType",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "ReceiveInvitationRequestType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestDid",
            "key": "did",
            "schema": {
              "generatedName": "receiveInvitationRequestDid",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "DID for connection invitation",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "ReceiveInvitationRequestDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestImageUrl",
            "key": "imageUrl",
            "schema": {
              "generatedName": "receiveInvitationRequestImageUrl",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "generatedName": "ReceiveInvitationRequestImageUrl",
                "description": "Optional image URL for connection invitation",
                "value": {
                  "description": "Optional image URL for connection invitation",
                  "schema": {
                    "format": "url",
                    "example": "http://192.168.56.101/img/logo.jpg",
                    "type": "string"
                  },
                  "generatedName": "ReceiveInvitationRequestImageUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestLabel",
            "key": "label",
            "schema": {
              "generatedName": "receiveInvitationRequestLabel",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "Optional label for connection invitation",
                "schema": {
                  "example": "Bob",
                  "type": "string"
                },
                "generatedName": "ReceiveInvitationRequestLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestRecipientKeys",
            "key": "recipientKeys",
            "schema": {
              "generatedName": "receiveInvitationRequestRecipientKeys",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "List of recipient keys",
                "value": {
                  "description": "Recipient public key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "ReceiveInvitationRequestRecipientKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ReceiveInvitationRequestRecipientKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestRoutingKeys",
            "key": "routingKeys",
            "schema": {
              "generatedName": "receiveInvitationRequestRoutingKeys",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "List of routing keys",
                "value": {
                  "description": "Routing key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "ReceiveInvitationRequestRoutingKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ReceiveInvitationRequestRoutingKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "receiveInvitationRequestServiceEndpoint",
            "key": "serviceEndpoint",
            "schema": {
              "generatedName": "receiveInvitationRequestServiceEndpoint",
              "nameOverride": "ReceiveInvitationRequest",
              "title": "ReceiveInvitationRequest",
              "value": {
                "description": "Service endpoint at which to reach this agent",
                "schema": {
                  "example": "http://192.168.56.101:8020",
                  "type": "string"
                },
                "generatedName": "ReceiveInvitationRequestServiceEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ReceiveInvitationRequest",
        "nameOverride": "ReceiveInvitationRequest",
        "title": "ReceiveInvitationRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RemoveWalletRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "removeWalletRequestWalletKey",
            "key": "wallet_key",
            "schema": {
              "generatedName": "removeWalletRequestWalletKey",
              "nameOverride": "RemoveWalletRequest",
              "title": "RemoveWalletRequest",
              "value": {
                "description": "Master key used for key derivation. Only required for             unmanaged wallets.",
                "schema": {
                  "example": "MySecretKey123",
                  "type": "string"
                },
                "generatedName": "RemoveWalletRequestWalletKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RemoveWalletRequest",
        "nameOverride": "RemoveWalletRequest",
        "title": "RemoveWalletRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResolutionResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resolutionResultDidDocument",
            "key": "did_document",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "DID Document",
              "generatedName": "ResolutionResultDidDocument",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resolutionResultMetadata",
            "key": "metadata",
            "schema": {
              "allOf": [],
              "properties": [],
              "allOfPropertyConflicts": [],
              "description": "Resolution metadata",
              "generatedName": "ResolutionResultMetadata",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResolutionResult",
        "nameOverride": "ResolutionResult",
        "title": "ResolutionResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevRegCreateRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revRegCreateRequestCredentialDefinitionId",
            "key": "credential_definition_id",
            "schema": {
              "generatedName": "revRegCreateRequestCredentialDefinitionId",
              "nameOverride": "RevRegCreateRequest",
              "title": "RevRegCreateRequest",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "RevRegCreateRequestCredentialDefinitionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revRegCreateRequestMaxCredNum",
            "key": "max_cred_num",
            "schema": {
              "generatedName": "revRegCreateRequestMaxCredNum",
              "nameOverride": "RevRegCreateRequest",
              "title": "RevRegCreateRequest",
              "value": {
                "description": "Revocation registry size",
                "schema": {
                  "minimum": 4,
                  "maximum": 32768,
                  "example": 1000,
                  "type": "int"
                },
                "generatedName": "RevRegCreateRequestMaxCredNum",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevRegCreateRequest",
        "nameOverride": "RevRegCreateRequest",
        "title": "RevRegCreateRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevRegIssuedResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revRegIssuedResultResult",
            "key": "result",
            "schema": {
              "generatedName": "revRegIssuedResultResult",
              "nameOverride": "RevRegIssuedResult",
              "title": "RevRegIssuedResult",
              "value": {
                "description": "Number of credentials issued against revocation registry",
                "schema": {
                  "minimum": 0,
                  "example": 0,
                  "type": "int"
                },
                "generatedName": "RevRegIssuedResultResult",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevRegIssuedResult",
        "nameOverride": "RevRegIssuedResult",
        "title": "RevRegIssuedResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevRegResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revRegResultResult",
            "key": "result",
            "schema": {
              "generatedName": "revRegResultResult",
              "nameOverride": "RevRegResult",
              "title": "RevRegResult",
              "value": {
                "generatedName": "RevRegResultResult",
                "schema": "IssuerRevRegRecord",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevRegResult",
        "nameOverride": "RevRegResult",
        "title": "RevRegResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevRegUpdateTailsFileUri": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revRegUpdateTailsFileUriTailsPublicUri",
            "key": "tails_public_uri",
            "schema": {
              "description": "Public URI to the tails file",
              "schema": {
                "format": "url",
                "example": "http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file",
                "type": "string"
              },
              "generatedName": "RevRegUpdateTailsFileUriTailsPublicUri",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevRegUpdateTailsFileUri",
        "nameOverride": "RevRegUpdateTailsFileUri",
        "title": "RevRegUpdateTailsFileUri",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevRegWalletUpdatedResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revRegWalletUpdatedResultAccumCalculated",
            "key": "accum_calculated",
            "schema": {
              "generatedName": "revRegWalletUpdatedResultAccumCalculated",
              "nameOverride": "RevRegWalletUpdatedResult",
              "title": "RevRegWalletUpdatedResult",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Calculated accumulator for phantom revocations",
                "generatedName": "RevRegWalletUpdatedResultAccumCalculated",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revRegWalletUpdatedResultAccumFixed",
            "key": "accum_fixed",
            "schema": {
              "generatedName": "revRegWalletUpdatedResultAccumFixed",
              "nameOverride": "RevRegWalletUpdatedResult",
              "title": "RevRegWalletUpdatedResult",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Applied ledger transaction to fix revocations",
                "generatedName": "RevRegWalletUpdatedResultAccumFixed",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revRegWalletUpdatedResultRevRegDelta",
            "key": "rev_reg_delta",
            "schema": {
              "generatedName": "revRegWalletUpdatedResultRevRegDelta",
              "nameOverride": "RevRegWalletUpdatedResult",
              "title": "RevRegWalletUpdatedResult",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Indy revocation registry delta",
                "generatedName": "RevRegWalletUpdatedResultRevRegDelta",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevRegWalletUpdatedResult",
        "nameOverride": "RevRegWalletUpdatedResult",
        "title": "RevRegWalletUpdatedResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevRegsCreated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revRegsCreatedRevRegIds",
            "key": "rev_reg_ids",
            "schema": {
              "generatedName": "revRegsCreatedRevRegIds",
              "nameOverride": "RevRegsCreated",
              "title": "RevRegsCreated",
              "value": {
                "value": {
                  "description": "Revocation registry identifiers",
                  "schema": {
                    "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                    "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                    "type": "string"
                  },
                  "generatedName": "RevRegsCreatedRevRegIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RevRegsCreatedRevRegIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevRegsCreated",
        "nameOverride": "RevRegsCreated",
        "title": "RevRegsCreated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RevocationModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "RevocationModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "RevocationModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "RevocationModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "RevokeRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revokeRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "revokeRequestComment",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Optional comment to include in revocation notification",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevokeRequestComment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "revokeRequestConnectionId",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Connection ID to which the revocation notification will be sent; required if notify is true",
                "schema": {
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "RevokeRequestConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestCredExId",
            "key": "cred_ex_id",
            "schema": {
              "generatedName": "revokeRequestCredExId",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Credential exchange identifier",
                "schema": {
                  "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "RevokeRequestCredExId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestCredRevId",
            "key": "cred_rev_id",
            "schema": {
              "generatedName": "revokeRequestCredRevId",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Credential revocation identifier",
                "schema": {
                  "pattern": "^[1-9][0-9]*$",
                  "example": "12345",
                  "type": "string"
                },
                "generatedName": "RevokeRequestCredRevId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestNotify",
            "key": "notify",
            "schema": {
              "generatedName": "revokeRequestNotify",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Send a notification to the credential recipient",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "RevokeRequestNotify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestNotifyVersion",
            "key": "notify_version",
            "schema": {
              "generatedName": "revokeRequestNotifyVersion",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Specify which version of the revocation notification should be sent",
                "generatedName": "RevokeRequestNotifyVersion",
                "values": [
                  {
                    "generatedName": "v1_0",
                    "value": "v1_0",
                    "casing": {}
                  },
                  {
                    "generatedName": "v2_0",
                    "value": "v2_0",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestPublish",
            "key": "publish",
            "schema": {
              "generatedName": "revokeRequestPublish",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "(True) publish revocation to ledger immediately, or (default, False) mark it pending",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "RevokeRequestPublish",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestRevRegId",
            "key": "rev_reg_id",
            "schema": {
              "generatedName": "revokeRequestRevRegId",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Revocation registry identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                  "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                  "type": "string"
                },
                "generatedName": "RevokeRequestRevRegId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revokeRequestThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "revokeRequestThreadId",
              "nameOverride": "RevokeRequest",
              "title": "RevokeRequest",
              "value": {
                "description": "Thread ID of the credential exchange message thread resulting in the credential now being revoked; required if notify is true",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevokeRequestThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevokeRequest",
        "nameOverride": "RevokeRequest",
        "title": "RevokeRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RouteRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "routeRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "routeRecordConnectionId",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RouteRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "routeRecordCreatedAt",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "RouteRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordRecipientKey",
            "key": "recipient_key",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RouteRecordRecipientKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordRecordId",
            "key": "record_id",
            "schema": {
              "generatedName": "routeRecordRecordId",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RouteRecordRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordRole",
            "key": "role",
            "schema": {
              "generatedName": "routeRecordRole",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RouteRecordRole",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordState",
            "key": "state",
            "schema": {
              "generatedName": "routeRecordState",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "RouteRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "routeRecordUpdatedAt",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "RouteRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "routeRecordWalletId",
            "key": "wallet_id",
            "schema": {
              "generatedName": "routeRecordWalletId",
              "nameOverride": "RouteRecord",
              "title": "RouteRecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RouteRecordWalletId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RouteRecord",
        "nameOverride": "RouteRecord",
        "title": "RouteRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "Schema": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaAttrNames",
            "key": "attrNames",
            "schema": {
              "generatedName": "schemaAttrNames",
              "nameOverride": "Schema",
              "title": "Schema",
              "value": {
                "description": "Schema attribute names",
                "value": {
                  "description": "Attribute name",
                  "schema": {
                    "example": "score",
                    "type": "string"
                  },
                  "generatedName": "SchemaAttrNamesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SchemaAttrNames",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaId",
            "key": "id",
            "schema": {
              "generatedName": "schemaId",
              "nameOverride": "Schema",
              "title": "Schema",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "SchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaName",
            "key": "name",
            "schema": {
              "generatedName": "schemaName",
              "nameOverride": "Schema",
              "title": "Schema",
              "value": {
                "description": "Schema name",
                "schema": {
                  "example": "schema_name",
                  "type": "string"
                },
                "generatedName": "SchemaName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaSeqNo",
            "key": "seqNo",
            "schema": {
              "generatedName": "schemaSeqNo",
              "nameOverride": "Schema",
              "title": "Schema",
              "value": {
                "description": "Schema sequence number",
                "schema": {
                  "minimum": 1,
                  "example": 10,
                  "type": "int"
                },
                "generatedName": "SchemaSeqNo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaVer",
            "key": "ver",
            "schema": {
              "generatedName": "schemaVer",
              "nameOverride": "Schema",
              "title": "Schema",
              "value": {
                "description": "Node protocol version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "SchemaVer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaVersion",
            "key": "version",
            "schema": {
              "generatedName": "schemaVersion",
              "nameOverride": "Schema",
              "title": "Schema",
              "value": {
                "description": "Schema version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "SchemaVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Schema",
        "nameOverride": "Schema",
        "title": "Schema",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaGetResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaGetResultSchema",
            "key": "schema",
            "schema": {
              "generatedName": "schemaGetResultSchema",
              "nameOverride": "SchemaGetResult",
              "title": "SchemaGetResult",
              "value": {
                "generatedName": "SchemaGetResultSchema",
                "schema": "Schema",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaGetResult",
        "nameOverride": "SchemaGetResult",
        "title": "SchemaGetResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaInputDescriptor": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaInputDescriptorRequired",
            "key": "required",
            "schema": {
              "generatedName": "schemaInputDescriptorRequired",
              "nameOverride": "SchemaInputDescriptor",
              "title": "SchemaInputDescriptor",
              "value": {
                "description": "Required",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SchemaInputDescriptorRequired",
                "nameOverride": "required",
                "title": "required",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaInputDescriptorUri",
            "key": "uri",
            "schema": {
              "generatedName": "schemaInputDescriptorUri",
              "nameOverride": "SchemaInputDescriptor",
              "title": "SchemaInputDescriptor",
              "value": {
                "description": "URI",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SchemaInputDescriptorUri",
                "nameOverride": "uri",
                "title": "uri",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaInputDescriptor",
        "nameOverride": "SchemaInputDescriptor",
        "title": "SchemaInputDescriptor",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaSendRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaSendRequestAttributes",
            "key": "attributes",
            "schema": {
              "description": "List of schema attributes",
              "value": {
                "description": "attribute name",
                "schema": {
                  "example": "score",
                  "type": "string"
                },
                "generatedName": "SchemaSendRequestAttributesItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "SchemaSendRequestAttributes",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaSendRequestSchemaName",
            "key": "schema_name",
            "schema": {
              "description": "Schema name",
              "schema": {
                "example": "prefs",
                "type": "string"
              },
              "generatedName": "SchemaSendRequestSchemaName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemaSendRequestSchemaVersion",
            "key": "schema_version",
            "schema": {
              "description": "Schema version",
              "schema": {
                "pattern": "^[0-9.]+$",
                "example": "1.0",
                "type": "string"
              },
              "generatedName": "SchemaSendRequestSchemaVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaSendRequest",
        "nameOverride": "SchemaSendRequest",
        "title": "SchemaSendRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemaSendResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemaSendResultSchema",
            "key": "schema",
            "schema": {
              "generatedName": "schemaSendResultSchema",
              "nameOverride": "SchemaSendResult",
              "title": "SchemaSendResult",
              "value": {
                "generatedName": "SchemaSendResultSchema",
                "schema": "SchemaSendResult_schema",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "schemaSendResultSchemaId",
            "key": "schema_id",
            "schema": {
              "description": "Schema identifier",
              "schema": {
                "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                "type": "string"
              },
              "generatedName": "SchemaSendResultSchemaId",
              "title": "schema_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemaSendResult",
        "nameOverride": "SchemaSendResult",
        "title": "SchemaSendResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemasCreatedResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemasCreatedResultSchemaIds",
            "key": "schema_ids",
            "schema": {
              "generatedName": "schemasCreatedResultSchemaIds",
              "nameOverride": "SchemasCreatedResult",
              "title": "SchemasCreatedResult",
              "value": {
                "value": {
                  "description": "Schema identifiers",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                    "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                    "type": "string"
                  },
                  "generatedName": "SchemasCreatedResultSchemaIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SchemasCreatedResultSchemaIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemasCreatedResult",
        "nameOverride": "SchemasCreatedResult",
        "title": "SchemasCreatedResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SchemasInputDescriptorFilter": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "schemasInputDescriptorFilterOneofFilter",
            "key": "oneof_filter",
            "schema": {
              "generatedName": "schemasInputDescriptorFilterOneofFilter",
              "nameOverride": "SchemasInputDescriptorFilter",
              "title": "SchemasInputDescriptorFilter",
              "value": {
                "description": "oneOf",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "SchemasInputDescriptorFilterOneofFilter",
                "title": "oneof_filter",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "schemasInputDescriptorFilterUriGroups",
            "key": "uri_groups",
            "schema": {
              "generatedName": "schemasInputDescriptorFilterUriGroups",
              "nameOverride": "SchemasInputDescriptorFilter",
              "title": "SchemasInputDescriptorFilter",
              "value": {
                "value": {
                  "value": {
                    "generatedName": "SchemasInputDescriptorFilterUriGroupsItemItem",
                    "schema": "SchemaInputDescriptor",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "SchemasInputDescriptorFilterUriGroupsItem",
                  "groupName": [],
                  "type": "array"
                },
                "generatedName": "SchemasInputDescriptorFilterUriGroups",
                "title": "uri_groups",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SchemasInputDescriptorFilter",
        "nameOverride": "SchemasInputDescriptorFilter",
        "title": "SchemasInputDescriptorFilter",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SendMenu": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sendMenuMenu",
            "key": "menu",
            "schema": {
              "generatedName": "SendMenuMenu",
              "schema": "SendMenu_menu",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SendMenu",
        "nameOverride": "SendMenu",
        "title": "SendMenu",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SendMessage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sendMessageContent",
            "key": "content",
            "schema": {
              "generatedName": "sendMessageContent",
              "nameOverride": "SendMessage",
              "title": "SendMessage",
              "value": {
                "description": "Message content",
                "schema": {
                  "example": "Hello",
                  "type": "string"
                },
                "generatedName": "SendMessageContent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SendMessage",
        "nameOverride": "SendMessage",
        "title": "SendMessage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ServiceDecorator": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "serviceDecoratorRecipientKeys",
            "key": "recipientKeys",
            "schema": {
              "description": "List of recipient keys",
              "value": {
                "description": "Recipient public key",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                  "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                  "type": "string"
                },
                "generatedName": "ServiceDecoratorRecipientKeysItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ServiceDecoratorRecipientKeys",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "serviceDecoratorRoutingKeys",
            "key": "routingKeys",
            "schema": {
              "generatedName": "serviceDecoratorRoutingKeys",
              "nameOverride": "ServiceDecorator",
              "title": "ServiceDecorator",
              "value": {
                "description": "List of routing keys",
                "value": {
                  "description": "Routing key",
                  "schema": {
                    "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$",
                    "example": "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
                    "type": "string"
                  },
                  "generatedName": "ServiceDecoratorRoutingKeysItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ServiceDecoratorRoutingKeys",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "serviceDecoratorServiceEndpoint",
            "key": "serviceEndpoint",
            "schema": {
              "description": "Service endpoint at which to reach this agent",
              "schema": {
                "example": "http://192.168.56.101:8020",
                "type": "string"
              },
              "generatedName": "ServiceDecoratorServiceEndpoint",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ServiceDecorator",
        "nameOverride": "ServiceDecorator",
        "title": "ServiceDecorator",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SignRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "signRequestDoc",
            "key": "doc",
            "schema": {
              "generatedName": "SignRequestDoc",
              "schema": "Doc",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "signRequestVerkey",
            "key": "verkey",
            "schema": {
              "description": "Verkey to use for signing",
              "schema": {
                "type": "string"
              },
              "generatedName": "SignRequestVerkey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SignRequest",
        "nameOverride": "SignRequest",
        "title": "SignRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SignResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "signResponseError",
            "key": "error",
            "schema": {
              "generatedName": "signResponseError",
              "nameOverride": "SignResponse",
              "title": "SignResponse",
              "value": {
                "description": "Error text",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SignResponseError",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signResponseSignedDoc",
            "key": "signed_doc",
            "schema": {
              "generatedName": "signResponseSignedDoc",
              "nameOverride": "SignResponse",
              "title": "SignResponse",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Signed document",
                "generatedName": "SignResponseSignedDoc",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SignResponse",
        "nameOverride": "SignResponse",
        "title": "SignResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SignatureOptions": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "signatureOptionsChallenge",
            "key": "challenge",
            "schema": {
              "generatedName": "signatureOptionsChallenge",
              "nameOverride": "SignatureOptions",
              "title": "SignatureOptions",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SignatureOptionsChallenge",
                "nameOverride": "challenge",
                "title": "challenge",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signatureOptionsDomain",
            "key": "domain",
            "schema": {
              "generatedName": "signatureOptionsDomain",
              "nameOverride": "SignatureOptions",
              "title": "SignatureOptions",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SignatureOptionsDomain",
                "nameOverride": "domain",
                "title": "domain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signatureOptionsProofPurpose",
            "key": "proofPurpose",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SignatureOptionsProofPurpose",
              "nameOverride": "proofPurpose",
              "title": "proofPurpose",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signatureOptionsType",
            "key": "type",
            "schema": {
              "generatedName": "signatureOptionsType",
              "nameOverride": "SignatureOptions",
              "title": "SignatureOptions",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SignatureOptionsType",
                "nameOverride": "type",
                "title": "type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "signatureOptionsVerificationMethod",
            "key": "verificationMethod",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SignatureOptionsVerificationMethod",
              "nameOverride": "verificationMethod",
              "title": "verificationMethod",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SignatureOptions",
        "nameOverride": "SignatureOptions",
        "title": "SignatureOptions",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SignedDoc": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "signedDocProof",
            "key": "proof",
            "schema": {
              "generatedName": "SignedDocProof",
              "schema": "SignedDoc_proof",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SignedDoc",
        "nameOverride": "SignedDoc",
        "title": "SignedDoc",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SubmissionRequirements": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "submissionRequirementsCount",
            "key": "count",
            "schema": {
              "generatedName": "submissionRequirementsCount",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "Count Value",
                "schema": {
                  "example": 1234,
                  "type": "int"
                },
                "generatedName": "SubmissionRequirementsCount",
                "nameOverride": "count",
                "title": "count",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsFrom",
            "key": "from",
            "schema": {
              "generatedName": "submissionRequirementsFrom",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "From",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SubmissionRequirementsFrom",
                "nameOverride": "from",
                "title": "from",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsFromNested",
            "key": "from_nested",
            "schema": {
              "generatedName": "submissionRequirementsFromNested",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "value": {
                  "generatedName": "SubmissionRequirementsFromNestedItem",
                  "schema": "SubmissionRequirements",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SubmissionRequirementsFromNested",
                "title": "from_nested",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsMax",
            "key": "max",
            "schema": {
              "generatedName": "submissionRequirementsMax",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "Max Value",
                "schema": {
                  "example": 1234,
                  "type": "int"
                },
                "generatedName": "SubmissionRequirementsMax",
                "nameOverride": "max",
                "title": "max",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsMin",
            "key": "min",
            "schema": {
              "generatedName": "submissionRequirementsMin",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "Min Value",
                "schema": {
                  "example": 1234,
                  "type": "int"
                },
                "generatedName": "SubmissionRequirementsMin",
                "nameOverride": "min",
                "title": "min",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsName",
            "key": "name",
            "schema": {
              "generatedName": "submissionRequirementsName",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "Name",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SubmissionRequirementsName",
                "nameOverride": "name",
                "title": "name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsPurpose",
            "key": "purpose",
            "schema": {
              "generatedName": "submissionRequirementsPurpose",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "Purpose",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SubmissionRequirementsPurpose",
                "nameOverride": "purpose",
                "title": "purpose",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submissionRequirementsRule",
            "key": "rule",
            "schema": {
              "generatedName": "submissionRequirementsRule",
              "nameOverride": "SubmissionRequirements",
              "title": "SubmissionRequirements",
              "value": {
                "description": "Selection",
                "generatedName": "SubmissionRequirementsRule",
                "nameOverride": "rule",
                "title": "rule",
                "values": [
                  {
                    "generatedName": "all",
                    "value": "all",
                    "casing": {}
                  },
                  {
                    "generatedName": "pick",
                    "value": "pick",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SubmissionRequirements",
        "nameOverride": "SubmissionRequirements",
        "title": "SubmissionRequirements",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TAAAccept": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "taaAcceptMechanism",
            "key": "mechanism",
            "schema": {
              "generatedName": "taaAcceptMechanism",
              "nameOverride": "TAAAccept",
              "title": "TAAAccept",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaAcceptMechanism",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taaAcceptText",
            "key": "text",
            "schema": {
              "generatedName": "taaAcceptText",
              "nameOverride": "TAAAccept",
              "title": "TAAAccept",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaAcceptText",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taaAcceptVersion",
            "key": "version",
            "schema": {
              "generatedName": "taaAcceptVersion",
              "nameOverride": "TAAAccept",
              "title": "TAAAccept",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaAcceptVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TaaAccept",
        "nameOverride": "TAAAccept",
        "title": "TAAAccept",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TAAAcceptance": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "taaAcceptanceMechanism",
            "key": "mechanism",
            "schema": {
              "generatedName": "taaAcceptanceMechanism",
              "nameOverride": "TAAAcceptance",
              "title": "TAAAcceptance",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaAcceptanceMechanism",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taaAcceptanceTime",
            "key": "time",
            "schema": {
              "generatedName": "taaAcceptanceTime",
              "nameOverride": "TAAAcceptance",
              "title": "TAAAcceptance",
              "value": {
                "schema": {
                  "minimum": 0,
                  "maximum": 18446744073709552000,
                  "example": 1640995199,
                  "type": "int"
                },
                "generatedName": "TaaAcceptanceTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TaaAcceptance",
        "nameOverride": "TAAAcceptance",
        "title": "TAAAcceptance",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TAAInfo": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "taaInfoAmlRecord",
            "key": "aml_record",
            "schema": {
              "generatedName": "taaInfoAmlRecord",
              "nameOverride": "TAAInfo",
              "title": "TAAInfo",
              "value": {
                "generatedName": "TaaInfoAmlRecord",
                "schema": "AMLRecord",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "taaInfoTaaAccepted",
            "key": "taa_accepted",
            "schema": {
              "generatedName": "taaInfoTaaAccepted",
              "nameOverride": "TAAInfo",
              "title": "TAAInfo",
              "value": {
                "generatedName": "TaaInfoTaaAccepted",
                "schema": "TAAAcceptance",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "taaInfoTaaRecord",
            "key": "taa_record",
            "schema": {
              "generatedName": "taaInfoTaaRecord",
              "nameOverride": "TAAInfo",
              "title": "TAAInfo",
              "value": {
                "generatedName": "TaaInfoTaaRecord",
                "schema": "TAARecord",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "taaInfoTaaRequired",
            "key": "taa_required",
            "schema": {
              "generatedName": "taaInfoTaaRequired",
              "nameOverride": "TAAInfo",
              "title": "TAAInfo",
              "value": {
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TaaInfoTaaRequired",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TaaInfo",
        "nameOverride": "TAAInfo",
        "title": "TAAInfo",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TAARecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "taaRecordDigest",
            "key": "digest",
            "schema": {
              "generatedName": "taaRecordDigest",
              "nameOverride": "TAARecord",
              "title": "TAARecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaRecordDigest",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taaRecordText",
            "key": "text",
            "schema": {
              "generatedName": "taaRecordText",
              "nameOverride": "TAARecord",
              "title": "TAARecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaRecordText",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "taaRecordVersion",
            "key": "version",
            "schema": {
              "generatedName": "taaRecordVersion",
              "nameOverride": "TAARecord",
              "title": "TAARecord",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TaaRecordVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TaaRecord",
        "nameOverride": "TAARecord",
        "title": "TAARecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TAAResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "taaResultResult",
            "key": "result",
            "schema": {
              "generatedName": "taaResultResult",
              "nameOverride": "TAAResult",
              "title": "TAAResult",
              "value": {
                "generatedName": "TaaResultResult",
                "schema": "TAAInfo",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TaaResult",
        "nameOverride": "TAAResult",
        "title": "TAAResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TailsDeleteResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tailsDeleteResponseMessage",
            "key": "message",
            "schema": {
              "generatedName": "tailsDeleteResponseMessage",
              "nameOverride": "TailsDeleteResponse",
              "title": "TailsDeleteResponse",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TailsDeleteResponseMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TailsDeleteResponse",
        "nameOverride": "TailsDeleteResponse",
        "title": "TailsDeleteResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionJobs": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionJobsTransactionMyJob",
            "key": "transaction_my_job",
            "schema": {
              "generatedName": "transactionJobsTransactionMyJob",
              "nameOverride": "TransactionJobs",
              "title": "TransactionJobs",
              "value": {
                "description": "My transaction related job",
                "generatedName": "TransactionJobsTransactionMyJob",
                "values": [
                  {
                    "generatedName": "TRANSACTION_AUTHOR",
                    "value": "TRANSACTION_AUTHOR",
                    "casing": {}
                  },
                  {
                    "generatedName": "TRANSACTION_ENDORSER",
                    "value": "TRANSACTION_ENDORSER",
                    "casing": {}
                  },
                  {
                    "generatedName": "reset",
                    "value": "reset",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionJobsTransactionTheirJob",
            "key": "transaction_their_job",
            "schema": {
              "generatedName": "transactionJobsTransactionTheirJob",
              "nameOverride": "TransactionJobs",
              "title": "TransactionJobs",
              "value": {
                "description": "Their transaction related job",
                "generatedName": "TransactionJobsTransactionTheirJob",
                "values": [
                  {
                    "generatedName": "TRANSACTION_AUTHOR",
                    "value": "TRANSACTION_AUTHOR",
                    "casing": {}
                  },
                  {
                    "generatedName": "TRANSACTION_ENDORSER",
                    "value": "TRANSACTION_ENDORSER",
                    "casing": {}
                  },
                  {
                    "generatedName": "reset",
                    "value": "reset",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionJobs",
        "nameOverride": "TransactionJobs",
        "title": "TransactionJobs",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionListResults",
            "key": "results",
            "schema": {
              "generatedName": "transactionListResults",
              "nameOverride": "TransactionList",
              "title": "TransactionList",
              "value": {
                "description": "List of transaction records",
                "value": {
                  "generatedName": "TransactionListResultsItem",
                  "schema": "TransactionRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TransactionListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionList",
        "nameOverride": "TransactionList",
        "title": "TransactionList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TransactionRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "transactionRecordType",
            "key": "_type",
            "schema": {
              "generatedName": "transactionRecordType",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Transaction type",
                "schema": {
                  "example": "101",
                  "type": "string"
                },
                "generatedName": "TransactionRecordType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "transactionRecordConnectionId",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "The connection identifier for thie particular transaction record",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "TransactionRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "transactionRecordCreatedAt",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "TransactionRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordEndorserWriteTxn",
            "key": "endorser_write_txn",
            "schema": {
              "generatedName": "transactionRecordEndorserWriteTxn",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "If True, Endorser will write the transaction after endorsing it",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "TransactionRecordEndorserWriteTxn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordFormats",
            "key": "formats",
            "schema": {
              "generatedName": "transactionRecordFormats",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TransactionRecordFormatsItemKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "TransactionRecordFormatsItemValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "TransactionRecordFormatsItem",
                  "groupName": [],
                  "type": "map"
                },
                "generatedName": "TransactionRecordFormats",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordMessagesAttach",
            "key": "messages_attach",
            "schema": {
              "generatedName": "transactionRecordMessagesAttach",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "value": {
                  "allOf": [],
                  "properties": [],
                  "allOfPropertyConflicts": [],
                  "generatedName": "TransactionRecordMessagesAttachItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "TransactionRecordMessagesAttach",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordMetaData",
            "key": "meta_data",
            "schema": {
              "generatedName": "transactionRecordMetaData",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "TransactionRecordMetaData",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordSignatureRequest",
            "key": "signature_request",
            "schema": {
              "generatedName": "transactionRecordSignatureRequest",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "value": {
                  "allOf": [],
                  "properties": [],
                  "allOfPropertyConflicts": [],
                  "generatedName": "TransactionRecordSignatureRequestItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "TransactionRecordSignatureRequest",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordSignatureResponse",
            "key": "signature_response",
            "schema": {
              "generatedName": "transactionRecordSignatureResponse",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "value": {
                  "allOf": [],
                  "properties": [],
                  "allOfPropertyConflicts": [],
                  "generatedName": "TransactionRecordSignatureResponseItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "TransactionRecordSignatureResponse",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordState",
            "key": "state",
            "schema": {
              "generatedName": "transactionRecordState",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "TransactionRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "transactionRecordThreadId",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Thread Identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "TransactionRecordThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordTiming",
            "key": "timing",
            "schema": {
              "generatedName": "transactionRecordTiming",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "TransactionRecordTiming",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "transactionRecordTrace",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "TransactionRecordTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordTransactionId",
            "key": "transaction_id",
            "schema": {
              "generatedName": "transactionRecordTransactionId",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Transaction identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "TransactionRecordTransactionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "transactionRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "transactionRecordUpdatedAt",
              "nameOverride": "TransactionRecord",
              "title": "TransactionRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "TransactionRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TransactionRecord",
        "nameOverride": "TransactionRecord",
        "title": "TransactionRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TxnOrCredentialDefinitionSendResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "txnOrCredentialDefinitionSendResultSent",
            "key": "sent",
            "schema": {
              "generatedName": "txnOrCredentialDefinitionSendResultSent",
              "nameOverride": "TxnOrCredentialDefinitionSendResult",
              "title": "TxnOrCredentialDefinitionSendResult",
              "value": {
                "generatedName": "TxnOrCredentialDefinitionSendResultSent",
                "schema": "CredentialDefinitionSendResult",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "txnOrCredentialDefinitionSendResultTxn",
            "key": "txn",
            "schema": {
              "generatedName": "txnOrCredentialDefinitionSendResultTxn",
              "nameOverride": "TxnOrCredentialDefinitionSendResult",
              "title": "TxnOrCredentialDefinitionSendResult",
              "value": {
                "generatedName": "TxnOrCredentialDefinitionSendResultTxn",
                "schema": "TxnOrCredentialDefinitionSendResult_txn",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TxnOrCredentialDefinitionSendResult",
        "nameOverride": "TxnOrCredentialDefinitionSendResult",
        "title": "TxnOrCredentialDefinitionSendResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TxnOrPublishRevocationsResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "txnOrPublishRevocationsResultSent",
            "key": "sent",
            "schema": {
              "generatedName": "txnOrPublishRevocationsResultSent",
              "nameOverride": "TxnOrPublishRevocationsResult",
              "title": "TxnOrPublishRevocationsResult",
              "value": {
                "generatedName": "TxnOrPublishRevocationsResultSent",
                "schema": "PublishRevocations",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "txnOrPublishRevocationsResultTxn",
            "key": "txn",
            "schema": {
              "generatedName": "txnOrPublishRevocationsResultTxn",
              "nameOverride": "TxnOrPublishRevocationsResult",
              "title": "TxnOrPublishRevocationsResult",
              "value": {
                "generatedName": "TxnOrPublishRevocationsResultTxn",
                "schema": "TxnOrPublishRevocationsResult_txn",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TxnOrPublishRevocationsResult",
        "nameOverride": "TxnOrPublishRevocationsResult",
        "title": "TxnOrPublishRevocationsResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TxnOrRegisterLedgerNymResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "txnOrRegisterLedgerNymResponseSuccess",
            "key": "success",
            "schema": {
              "generatedName": "txnOrRegisterLedgerNymResponseSuccess",
              "nameOverride": "TxnOrRegisterLedgerNymResponse",
              "title": "TxnOrRegisterLedgerNymResponse",
              "value": {
                "description": "Success of nym registration operation",
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "TxnOrRegisterLedgerNymResponseSuccess",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "txnOrRegisterLedgerNymResponseTxn",
            "key": "txn",
            "schema": {
              "generatedName": "txnOrRegisterLedgerNymResponseTxn",
              "nameOverride": "TxnOrRegisterLedgerNymResponse",
              "title": "TxnOrRegisterLedgerNymResponse",
              "value": {
                "generatedName": "TxnOrRegisterLedgerNymResponseTxn",
                "schema": "TxnOrRegisterLedgerNymResponse_txn",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TxnOrRegisterLedgerNymResponse",
        "nameOverride": "TxnOrRegisterLedgerNymResponse",
        "title": "TxnOrRegisterLedgerNymResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TxnOrRevRegResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "txnOrRevRegResultSent",
            "key": "sent",
            "schema": {
              "generatedName": "txnOrRevRegResultSent",
              "nameOverride": "TxnOrRevRegResult",
              "title": "TxnOrRevRegResult",
              "value": {
                "generatedName": "TxnOrRevRegResultSent",
                "schema": "RevRegResult",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "txnOrRevRegResultTxn",
            "key": "txn",
            "schema": {
              "generatedName": "txnOrRevRegResultTxn",
              "nameOverride": "TxnOrRevRegResult",
              "title": "TxnOrRevRegResult",
              "value": {
                "generatedName": "TxnOrRevRegResultTxn",
                "schema": "TxnOrRevRegResult_txn",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TxnOrRevRegResult",
        "nameOverride": "TxnOrRevRegResult",
        "title": "TxnOrRevRegResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TxnOrSchemaSendResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "txnOrSchemaSendResultSent",
            "key": "sent",
            "schema": {
              "generatedName": "txnOrSchemaSendResultSent",
              "nameOverride": "TxnOrSchemaSendResult",
              "title": "TxnOrSchemaSendResult",
              "value": {
                "generatedName": "TxnOrSchemaSendResultSent",
                "schema": "TxnOrSchemaSendResult_sent",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "txnOrSchemaSendResultTxn",
            "key": "txn",
            "schema": {
              "generatedName": "txnOrSchemaSendResultTxn",
              "nameOverride": "TxnOrSchemaSendResult",
              "title": "TxnOrSchemaSendResult",
              "value": {
                "generatedName": "TxnOrSchemaSendResultTxn",
                "schema": "TxnOrSchemaSendResult_txn",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TxnOrSchemaSendResult",
        "nameOverride": "TxnOrSchemaSendResult",
        "title": "TxnOrSchemaSendResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpdateWalletRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "updateWalletRequestImageUrl",
            "key": "image_url",
            "schema": {
              "generatedName": "updateWalletRequestImageUrl",
              "nameOverride": "UpdateWalletRequest",
              "title": "UpdateWalletRequest",
              "value": {
                "description": "Image url for this wallet. This image url is publicized            (self-attested) to other agents as part of forming a connection.",
                "schema": {
                  "example": "https://aries.ca/images/sample.png",
                  "type": "string"
                },
                "generatedName": "UpdateWalletRequestImageUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateWalletRequestLabel",
            "key": "label",
            "schema": {
              "generatedName": "updateWalletRequestLabel",
              "nameOverride": "UpdateWalletRequest",
              "title": "UpdateWalletRequest",
              "value": {
                "description": "Label for this wallet. This label is publicized            (self-attested) to other agents as part of forming a connection.",
                "schema": {
                  "example": "Alice",
                  "type": "string"
                },
                "generatedName": "UpdateWalletRequestLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateWalletRequestWalletDispatchType",
            "key": "wallet_dispatch_type",
            "schema": {
              "generatedName": "updateWalletRequestWalletDispatchType",
              "nameOverride": "UpdateWalletRequest",
              "title": "UpdateWalletRequest",
              "value": {
                "description": "Webhook target dispatch type for this wallet.             default - Dispatch only to webhooks associated with this wallet.             base - Dispatch only to webhooks associated with the base wallet.             both - Dispatch to both webhook targets.",
                "generatedName": "UpdateWalletRequestWalletDispatchType",
                "values": [
                  {
                    "generatedName": "default",
                    "value": "default",
                    "casing": {}
                  },
                  {
                    "generatedName": "both",
                    "value": "both",
                    "casing": {}
                  },
                  {
                    "generatedName": "base",
                    "value": "base",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "updateWalletRequestWalletWebhookUrls",
            "key": "wallet_webhook_urls",
            "schema": {
              "generatedName": "updateWalletRequestWalletWebhookUrls",
              "nameOverride": "UpdateWalletRequest",
              "title": "UpdateWalletRequest",
              "value": {
                "description": "List of Webhook URLs associated with this subwallet",
                "value": {
                  "description": "Optional webhook URL to receive webhook messages",
                  "schema": {
                    "example": "http://localhost:8022/webhooks",
                    "type": "string"
                  },
                  "generatedName": "UpdateWalletRequestWalletWebhookUrlsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "UpdateWalletRequestWalletWebhookUrls",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpdateWalletRequest",
        "nameOverride": "UpdateWalletRequest",
        "title": "UpdateWalletRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialBoundOfferRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialBoundOfferRequestCounterProposal",
            "key": "counter_proposal",
            "schema": {
              "generatedName": "v10CredentialBoundOfferRequestCounterProposal",
              "title": "V10CredentialBoundOfferRequest",
              "value": {
                "generatedName": "V10CredentialBoundOfferRequestCounterProposal",
                "schema": "V10CredentialBoundOfferRequest_counter_proposal",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialBoundOfferRequest",
        "title": "V10CredentialBoundOfferRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialConnFreeOfferRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialConnFreeOfferRequestAutoIssue",
            "key": "auto_issue",
            "schema": {
              "generatedName": "v10CredentialConnFreeOfferRequestAutoIssue",
              "title": "V10CredentialConnFreeOfferRequest",
              "value": {
                "description": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialConnFreeOfferRequestAutoIssue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialConnFreeOfferRequestAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v10CredentialConnFreeOfferRequestAutoRemove",
              "title": "V10CredentialConnFreeOfferRequest",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialConnFreeOfferRequestAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialConnFreeOfferRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10CredentialConnFreeOfferRequestComment",
              "title": "V10CredentialConnFreeOfferRequest",
              "value": {
                "generatedName": "V10CredentialConnFreeOfferRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10CredentialConnFreeOfferRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialConnFreeOfferRequestCredDefId",
            "key": "cred_def_id",
            "schema": {
              "description": "Credential definition identifier",
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                "type": "string"
              },
              "generatedName": "V10CredentialConnFreeOfferRequestCredDefId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialConnFreeOfferRequestCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "V10CredentialConnFreeOfferRequestCredentialPreview",
              "schema": "CredentialPreview",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialConnFreeOfferRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10CredentialConnFreeOfferRequestTrace",
              "title": "V10CredentialConnFreeOfferRequest",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialConnFreeOfferRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialConnFreeOfferRequest",
        "title": "V10CredentialConnFreeOfferRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialCreate": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v10CredentialCreateAutoRemove",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialCreateAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10CredentialCreateComment",
              "title": "V10CredentialCreate",
              "value": {
                "generatedName": "V10CredentialCreateComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10CredentialCreateComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "v10CredentialCreateCredDefId",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "V10CredentialCreateCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateCredentialProposal",
            "key": "credential_proposal",
            "schema": {
              "generatedName": "V10CredentialCreateCredentialProposal",
              "schema": "CredentialPreview",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateIssuerDid",
            "key": "issuer_did",
            "schema": {
              "generatedName": "v10CredentialCreateIssuerDid",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Credential issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V10CredentialCreateIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "v10CredentialCreateSchemaId",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialCreateSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateSchemaIssuerDid",
            "key": "schema_issuer_did",
            "schema": {
              "generatedName": "v10CredentialCreateSchemaIssuerDid",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Schema issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V10CredentialCreateSchemaIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateSchemaName",
            "key": "schema_name",
            "schema": {
              "generatedName": "v10CredentialCreateSchemaName",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Schema name",
                "schema": {
                  "example": "preferences",
                  "type": "string"
                },
                "generatedName": "V10CredentialCreateSchemaName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateSchemaVersion",
            "key": "schema_version",
            "schema": {
              "generatedName": "v10CredentialCreateSchemaVersion",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Schema version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialCreateSchemaVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialCreateTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10CredentialCreateTrace",
              "title": "V10CredentialCreate",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialCreateTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialCreate",
        "title": "V10CredentialCreate",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialExchange": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeAutoIssue",
            "key": "auto_issue",
            "schema": {
              "generatedName": "v10CredentialExchangeAutoIssue",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Issuer choice to issue to request in this credential exchange",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10CredentialExchangeAutoIssue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeAutoOffer",
            "key": "auto_offer",
            "schema": {
              "generatedName": "v10CredentialExchangeAutoOffer",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Holder choice to accept offer in this credential exchange",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10CredentialExchangeAutoOffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v10CredentialExchangeAutoRemove",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Issuer choice to remove this credential exchange record when complete",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10CredentialExchangeAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "v10CredentialExchangeConnectionId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v10CredentialExchangeCreatedAt",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredential",
            "key": "credential",
            "schema": {
              "generatedName": "v10CredentialExchangeCredential",
              "title": "V10CredentialExchange",
              "value": {
                "generatedName": "V10CredentialExchangeCredential",
                "schema": "V10CredentialExchange_credential",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialDefinitionId",
            "key": "credential_definition_id",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialDefinitionId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeCredentialDefinitionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialExchangeId",
            "key": "credential_exchange_id",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialExchangeId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Credential exchange identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeCredentialExchangeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialId",
            "key": "credential_id",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Credential identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeCredentialId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialOffer",
            "key": "credential_offer",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialOffer",
              "title": "V10CredentialExchange",
              "value": {
                "generatedName": "V10CredentialExchangeCredentialOffer",
                "schema": "V10CredentialExchange_credential_offer",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialOfferDict",
            "key": "credential_offer_dict",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialOfferDict",
              "title": "V10CredentialExchange",
              "value": {
                "generatedName": "V10CredentialExchangeCredentialOfferDict",
                "schema": "V10CredentialExchange_credential_offer_dict",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialProposalDict",
            "key": "credential_proposal_dict",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialProposalDict",
              "title": "V10CredentialExchange",
              "value": {
                "generatedName": "V10CredentialExchangeCredentialProposalDict",
                "schema": "V10CredentialExchange_credential_proposal_dict",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialRequest",
            "key": "credential_request",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialRequest",
              "title": "V10CredentialExchange",
              "value": {
                "generatedName": "V10CredentialExchangeCredentialRequest",
                "schema": "V10CredentialExchange_credential_request",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeCredentialRequestMetadata",
            "key": "credential_request_metadata",
            "schema": {
              "generatedName": "v10CredentialExchangeCredentialRequestMetadata",
              "title": "V10CredentialExchange",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "(Indy) credential request metadata",
                "generatedName": "V10CredentialExchangeCredentialRequestMetadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeErrorMsg",
            "key": "error_msg",
            "schema": {
              "generatedName": "v10CredentialExchangeErrorMsg",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Error message",
                "schema": {
                  "example": "Credential definition identifier is not set in proposal",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeErrorMsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeInitiator",
            "key": "initiator",
            "schema": {
              "generatedName": "v10CredentialExchangeInitiator",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Issue-credential exchange initiator: self or external",
                "generatedName": "V10CredentialExchangeInitiator",
                "values": [
                  {
                    "generatedName": "self",
                    "value": "self",
                    "casing": {}
                  },
                  {
                    "generatedName": "external",
                    "value": "external",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeParentThreadId",
            "key": "parent_thread_id",
            "schema": {
              "generatedName": "v10CredentialExchangeParentThreadId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Parent thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeParentThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeRawCredential",
            "key": "raw_credential",
            "schema": {
              "generatedName": "v10CredentialExchangeRawCredential",
              "title": "V10CredentialExchange",
              "value": {
                "generatedName": "V10CredentialExchangeRawCredential",
                "schema": "V10CredentialExchange_raw_credential",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeRevocRegId",
            "key": "revoc_reg_id",
            "schema": {
              "generatedName": "v10CredentialExchangeRevocRegId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Revocation registry identifier",
                "schema": {
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeRevocRegId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeRevocationId",
            "key": "revocation_id",
            "schema": {
              "generatedName": "v10CredentialExchangeRevocationId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Credential identifier within revocation registry",
                "schema": {
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeRevocationId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeRole",
            "key": "role",
            "schema": {
              "generatedName": "v10CredentialExchangeRole",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Issue-credential exchange role: holder or issuer",
                "generatedName": "V10CredentialExchangeRole",
                "values": [
                  {
                    "generatedName": "holder",
                    "value": "holder",
                    "casing": {}
                  },
                  {
                    "generatedName": "issuer",
                    "value": "issuer",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "v10CredentialExchangeSchemaId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeState",
            "key": "state",
            "schema": {
              "generatedName": "v10CredentialExchangeState",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Issue-credential exchange state",
                "schema": {
                  "example": "credential_acked",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "v10CredentialExchangeThreadId",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10CredentialExchangeTrace",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialExchangeTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v10CredentialExchangeUpdatedAt",
              "title": "V10CredentialExchange",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V10CredentialExchangeUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialExchange",
        "title": "V10CredentialExchange",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialExchangeListResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialExchangeListResultResults",
            "key": "results",
            "schema": {
              "generatedName": "v10CredentialExchangeListResultResults",
              "title": "V10CredentialExchangeListResult",
              "value": {
                "description": "Aries#0036 v1.0 credential exchange records",
                "value": {
                  "generatedName": "V10CredentialExchangeListResultResultsItem",
                  "schema": "V10CredentialExchange",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "V10CredentialExchangeListResultResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialExchangeListResult",
        "title": "V10CredentialExchangeListResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialFreeOfferRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestAutoIssue",
            "key": "auto_issue",
            "schema": {
              "generatedName": "v10CredentialFreeOfferRequestAutoIssue",
              "title": "V10CredentialFreeOfferRequest",
              "value": {
                "description": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialFreeOfferRequestAutoIssue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v10CredentialFreeOfferRequestAutoRemove",
              "title": "V10CredentialFreeOfferRequest",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialFreeOfferRequestAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10CredentialFreeOfferRequestComment",
              "title": "V10CredentialFreeOfferRequest",
              "value": {
                "generatedName": "V10CredentialFreeOfferRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10CredentialFreeOfferRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V10CredentialFreeOfferRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestCredDefId",
            "key": "cred_def_id",
            "schema": {
              "description": "Credential definition identifier",
              "schema": {
                "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                "type": "string"
              },
              "generatedName": "V10CredentialFreeOfferRequestCredDefId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "V10CredentialFreeOfferRequestCredentialPreview",
              "schema": "CredentialPreview",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialFreeOfferRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10CredentialFreeOfferRequestTrace",
              "title": "V10CredentialFreeOfferRequest",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialFreeOfferRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialFreeOfferRequest",
        "title": "V10CredentialFreeOfferRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialIssueRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialIssueRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10CredentialIssueRequestComment",
              "title": "V10CredentialIssueRequest",
              "value": {
                "generatedName": "V10CredentialIssueRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10CredentialIssueRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialIssueRequest",
        "title": "V10CredentialIssueRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialProblemReportRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialProblemReportRequestDescription",
            "key": "description",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "V10CredentialProblemReportRequestDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialProblemReportRequest",
        "title": "V10CredentialProblemReportRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialProposalRequestMand": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandAutoRemove",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialProposalRequestMandAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandComment",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "generatedName": "V10CredentialProposalRequestMandComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10CredentialProposalRequestMandComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V10CredentialProposalRequestMandConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandCredDefId",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestMandCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandCredentialProposal",
            "key": "credential_proposal",
            "schema": {
              "generatedName": "V10CredentialProposalRequestMandCredentialProposal",
              "schema": "CredentialPreview",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandIssuerDid",
            "key": "issuer_did",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandIssuerDid",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Credential issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestMandIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandSchemaId",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestMandSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandSchemaIssuerDid",
            "key": "schema_issuer_did",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandSchemaIssuerDid",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Schema issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestMandSchemaIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandSchemaName",
            "key": "schema_name",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandSchemaName",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Schema name",
                "schema": {
                  "example": "preferences",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestMandSchemaName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandSchemaVersion",
            "key": "schema_version",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandSchemaVersion",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Schema version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestMandSchemaVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestMandTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10CredentialProposalRequestMandTrace",
              "title": "V10CredentialProposalRequestMand",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialProposalRequestMandTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialProposalRequestMand",
        "title": "V10CredentialProposalRequestMand",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialProposalRequestOpt": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptAutoRemove",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialProposalRequestOptAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptComment",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "generatedName": "V10CredentialProposalRequestOptComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10CredentialProposalRequestOptComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V10CredentialProposalRequestOptConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptCredDefId",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestOptCredDefId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptCredentialProposal",
            "key": "credential_proposal",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptCredentialProposal",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "generatedName": "V10CredentialProposalRequestOptCredentialProposal",
                "schema": "CredentialPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptIssuerDid",
            "key": "issuer_did",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptIssuerDid",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Credential issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestOptIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptSchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptSchemaId",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestOptSchemaId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptSchemaIssuerDid",
            "key": "schema_issuer_did",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptSchemaIssuerDid",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Schema issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestOptSchemaIssuerDid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptSchemaName",
            "key": "schema_name",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptSchemaName",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Schema name",
                "schema": {
                  "example": "preferences",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestOptSchemaName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptSchemaVersion",
            "key": "schema_version",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptSchemaVersion",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Schema version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "V10CredentialProposalRequestOptSchemaVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10CredentialProposalRequestOptTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10CredentialProposalRequestOptTrace",
              "title": "V10CredentialProposalRequestOpt",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10CredentialProposalRequestOptTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialProposalRequestOpt",
        "title": "V10CredentialProposalRequestOpt",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10CredentialStoreRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10CredentialStoreRequestCredentialId",
            "key": "credential_id",
            "schema": {
              "generatedName": "v10CredentialStoreRequestCredentialId",
              "title": "V10CredentialStoreRequest",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "V10CredentialStoreRequestCredentialId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10CredentialStoreRequest",
        "title": "V10CredentialStoreRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10DiscoveryExchangeListResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10DiscoveryExchangeListResultResults",
            "key": "results",
            "schema": {
              "generatedName": "v10DiscoveryExchangeListResultResults",
              "title": "V10DiscoveryExchangeListResult",
              "value": {
                "value": {
                  "generatedName": "V10DiscoveryExchangeListResultResultsItem",
                  "schema": "V10DiscoveryExchangeListResult_results_inner",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "V10DiscoveryExchangeListResultResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10DiscoveryExchangeListResult",
        "title": "V10DiscoveryExchangeListResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10DiscoveryRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "v10DiscoveryRecordConnectionId",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10DiscoveryRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v10DiscoveryRecordCreatedAt",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V10DiscoveryRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordDisclose",
            "key": "disclose",
            "schema": {
              "generatedName": "v10DiscoveryRecordDisclose",
              "title": "V10DiscoveryRecord",
              "value": {
                "generatedName": "V10DiscoveryRecordDisclose",
                "schema": "V10DiscoveryRecord_disclose",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordDiscoveryExchangeId",
            "key": "discovery_exchange_id",
            "schema": {
              "generatedName": "v10DiscoveryRecordDiscoveryExchangeId",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Credential exchange identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10DiscoveryRecordDiscoveryExchangeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordQueryMsg",
            "key": "query_msg",
            "schema": {
              "generatedName": "v10DiscoveryRecordQueryMsg",
              "title": "V10DiscoveryRecord",
              "value": {
                "generatedName": "V10DiscoveryRecordQueryMsg",
                "schema": "V10DiscoveryRecord_query_msg",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordState",
            "key": "state",
            "schema": {
              "generatedName": "v10DiscoveryRecordState",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "V10DiscoveryRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "v10DiscoveryRecordThreadId",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10DiscoveryRecordThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10DiscoveryRecordTrace",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10DiscoveryRecordTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10DiscoveryRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v10DiscoveryRecordUpdatedAt",
              "title": "V10DiscoveryRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V10DiscoveryRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10DiscoveryRecord",
        "title": "V10DiscoveryRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentProofModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "V10PresentProofModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "V10PresentProofModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "V10PresentProofModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "V10PresentationCreateRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationCreateRequestRequestAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v10PresentationCreateRequestRequestAutoVerify",
              "title": "V10PresentationCreateRequestRequest",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationCreateRequestRequestAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationCreateRequestRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10PresentationCreateRequestRequestComment",
              "title": "V10PresentationCreateRequestRequest",
              "value": {
                "generatedName": "V10PresentationCreateRequestRequestComment",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10PresentationCreateRequestRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationCreateRequestRequestProofRequest",
            "key": "proof_request",
            "schema": {
              "generatedName": "V10PresentationCreateRequestRequestProofRequest",
              "schema": "IndyProofRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationCreateRequestRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10PresentationCreateRequestRequestTrace",
              "title": "V10PresentationCreateRequestRequest",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationCreateRequestRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationCreateRequestRequest",
        "title": "V10PresentationCreateRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentationExchange": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeAutoPresent",
            "key": "auto_present",
            "schema": {
              "generatedName": "v10PresentationExchangeAutoPresent",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Prover choice to auto-present proof as verifier requests",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationExchangeAutoPresent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v10PresentationExchangeAutoVerify",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10PresentationExchangeAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "v10PresentationExchangeConnectionId",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangeConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v10PresentationExchangeCreatedAt",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangeCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeErrorMsg",
            "key": "error_msg",
            "schema": {
              "generatedName": "v10PresentationExchangeErrorMsg",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Error message",
                "schema": {
                  "example": "Invalid structure",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangeErrorMsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeInitiator",
            "key": "initiator",
            "schema": {
              "generatedName": "v10PresentationExchangeInitiator",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Present-proof exchange initiator: self or external",
                "generatedName": "V10PresentationExchangeInitiator",
                "values": [
                  {
                    "generatedName": "self",
                    "value": "self",
                    "casing": {}
                  },
                  {
                    "generatedName": "external",
                    "value": "external",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangePresentation",
            "key": "presentation",
            "schema": {
              "generatedName": "v10PresentationExchangePresentation",
              "title": "V10PresentationExchange",
              "value": {
                "generatedName": "V10PresentationExchangePresentation",
                "schema": "V10PresentationExchange_presentation",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangePresentationExchangeId",
            "key": "presentation_exchange_id",
            "schema": {
              "generatedName": "v10PresentationExchangePresentationExchangeId",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Presentation exchange identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangePresentationExchangeId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangePresentationProposalDict",
            "key": "presentation_proposal_dict",
            "schema": {
              "generatedName": "v10PresentationExchangePresentationProposalDict",
              "title": "V10PresentationExchange",
              "value": {
                "generatedName": "V10PresentationExchangePresentationProposalDict",
                "schema": "V10PresentationExchange_presentation_proposal_dict",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangePresentationRequest",
            "key": "presentation_request",
            "schema": {
              "generatedName": "v10PresentationExchangePresentationRequest",
              "title": "V10PresentationExchange",
              "value": {
                "generatedName": "V10PresentationExchangePresentationRequest",
                "schema": "V10PresentationExchange_presentation_request",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangePresentationRequestDict",
            "key": "presentation_request_dict",
            "schema": {
              "generatedName": "v10PresentationExchangePresentationRequestDict",
              "title": "V10PresentationExchange",
              "value": {
                "generatedName": "V10PresentationExchangePresentationRequestDict",
                "schema": "V10PresentationExchange_presentation_request_dict",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeRole",
            "key": "role",
            "schema": {
              "generatedName": "v10PresentationExchangeRole",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Present-proof exchange role: prover or verifier",
                "generatedName": "V10PresentationExchangeRole",
                "values": [
                  {
                    "generatedName": "prover",
                    "value": "prover",
                    "casing": {}
                  },
                  {
                    "generatedName": "verifier",
                    "value": "verifier",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeState",
            "key": "state",
            "schema": {
              "generatedName": "v10PresentationExchangeState",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Present-proof exchange state",
                "schema": {
                  "example": "verified",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangeState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "v10PresentationExchangeThreadId",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangeThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10PresentationExchangeTrace",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10PresentationExchangeTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v10PresentationExchangeUpdatedAt",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V10PresentationExchangeUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeVerified",
            "key": "verified",
            "schema": {
              "generatedName": "v10PresentationExchangeVerified",
              "title": "V10PresentationExchange",
              "value": {
                "description": "Whether presentation is verified: true or false",
                "generatedName": "V10PresentationExchangeVerified",
                "values": [
                  {
                    "generatedName": "true",
                    "value": "true",
                    "casing": {}
                  },
                  {
                    "generatedName": "false",
                    "value": "false",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeVerifiedMsgs",
            "key": "verified_msgs",
            "schema": {
              "generatedName": "v10PresentationExchangeVerifiedMsgs",
              "title": "V10PresentationExchange",
              "value": {
                "value": {
                  "description": "Proof verification warning or error information",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10PresentationExchangeVerifiedMsgsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "V10PresentationExchangeVerifiedMsgs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationExchange",
        "title": "V10PresentationExchange",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentationExchangeList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationExchangeListResults",
            "key": "results",
            "schema": {
              "generatedName": "v10PresentationExchangeListResults",
              "title": "V10PresentationExchangeList",
              "value": {
                "description": "Aries RFC 37 v1.0 presentation exchange records",
                "value": {
                  "generatedName": "V10PresentationExchangeListResultsItem",
                  "schema": "V10PresentationExchange",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "V10PresentationExchangeListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationExchangeList",
        "title": "V10PresentationExchangeList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentationProblemReportRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationProblemReportRequestDescription",
            "key": "description",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "V10PresentationProblemReportRequestDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationProblemReportRequest",
        "title": "V10PresentationProblemReportRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentationProposalRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationProposalRequestAutoPresent",
            "key": "auto_present",
            "schema": {
              "generatedName": "v10PresentationProposalRequestAutoPresent",
              "title": "V10PresentationProposalRequest",
              "value": {
                "description": "Whether to respond automatically to presentation requests, building and presenting requested proof",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V10PresentationProposalRequestAutoPresent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationProposalRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10PresentationProposalRequestComment",
              "title": "V10PresentationProposalRequest",
              "value": {
                "generatedName": "V10PresentationProposalRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10PresentationProposalRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationProposalRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V10PresentationProposalRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationProposalRequestPresentationProposal",
            "key": "presentation_proposal",
            "schema": {
              "generatedName": "V10PresentationProposalRequestPresentationProposal",
              "schema": "IndyPresPreview",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationProposalRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10PresentationProposalRequestTrace",
              "title": "V10PresentationProposalRequest",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationProposalRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationProposalRequest",
        "title": "V10PresentationProposalRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentationSendRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestRequestAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v10PresentationSendRequestRequestAutoVerify",
              "title": "V10PresentationSendRequestRequest",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationSendRequestRequestAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v10PresentationSendRequestRequestComment",
              "title": "V10PresentationSendRequestRequest",
              "value": {
                "generatedName": "V10PresentationSendRequestRequestComment",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V10PresentationSendRequestRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V10PresentationSendRequestRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestRequestProofRequest",
            "key": "proof_request",
            "schema": {
              "generatedName": "V10PresentationSendRequestRequestProofRequest",
              "schema": "IndyProofRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10PresentationSendRequestRequestTrace",
              "title": "V10PresentationSendRequestRequest",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationSendRequestRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationSendRequestRequest",
        "title": "V10PresentationSendRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V10PresentationSendRequestToProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestToProposalAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v10PresentationSendRequestToProposalAutoVerify",
              "title": "V10PresentationSendRequestToProposal",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationSendRequestToProposalAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v10PresentationSendRequestToProposalTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v10PresentationSendRequestToProposalTrace",
              "title": "V10PresentationSendRequestToProposal",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V10PresentationSendRequestToProposalTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V10PresentationSendRequestToProposal",
        "title": "V10PresentationSendRequestToProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredAttrSpec": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredAttrSpecMimeType",
            "key": "mime-type",
            "schema": {
              "generatedName": "v20CredAttrSpecMimeType",
              "title": "V20CredAttrSpec",
              "value": {
                "generatedName": "V20CredAttrSpecMimeType",
                "description": "MIME type: omit for (null) default",
                "value": {
                  "description": "MIME type: omit for (null) default",
                  "schema": {
                    "example": "image/jpeg",
                    "type": "string"
                  },
                  "generatedName": "V20CredAttrSpecMimeType",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredAttrSpecName",
            "key": "name",
            "schema": {
              "description": "Attribute name",
              "schema": {
                "example": "favourite_drink",
                "type": "string"
              },
              "generatedName": "V20CredAttrSpecName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredAttrSpecValue",
            "key": "value",
            "schema": {
              "description": "Attribute value: base64-encode if MIME type is present",
              "schema": {
                "example": "martini",
                "type": "string"
              },
              "generatedName": "V20CredAttrSpecValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredAttrSpec",
        "title": "V20CredAttrSpec",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredBoundOfferRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredBoundOfferRequestCounterPreview",
            "key": "counter_preview",
            "schema": {
              "generatedName": "v20CredBoundOfferRequestCounterPreview",
              "title": "V20CredBoundOfferRequest",
              "value": {
                "generatedName": "V20CredBoundOfferRequestCounterPreview",
                "schema": "V20CredBoundOfferRequest_counter_preview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredBoundOfferRequestFilter",
            "key": "filter",
            "schema": {
              "generatedName": "v20CredBoundOfferRequestFilter",
              "title": "V20CredBoundOfferRequest",
              "value": {
                "generatedName": "V20CredBoundOfferRequestFilter",
                "schema": "V20CredBoundOfferRequest_filter",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredBoundOfferRequest",
        "title": "V20CredBoundOfferRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExFree": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExFreeAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v20CredExFreeAutoRemove",
              "title": "V20CredExFree",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredExFreeAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExFreeComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredExFreeComment",
              "title": "V20CredExFree",
              "value": {
                "generatedName": "V20CredExFreeComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredExFreeComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExFreeConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20CredExFreeConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExFreeCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "v20CredExFreeCredentialPreview",
              "title": "V20CredExFree",
              "value": {
                "generatedName": "V20CredExFreeCredentialPreview",
                "schema": "V20CredPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExFreeFilter",
            "key": "filter",
            "schema": {
              "generatedName": "V20CredExFreeFilter",
              "schema": "V20CredBoundOfferRequest_filter",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExFreeTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20CredExFreeTrace",
              "title": "V20CredExFree",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredExFreeTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExFreeVerificationMethod",
            "key": "verification_method",
            "schema": {
              "generatedName": "v20CredExFreeVerificationMethod",
              "title": "V20CredExFree",
              "value": {
                "generatedName": "V20CredExFreeVerificationMethod",
                "description": "For ld-proofs. Verification method for signing.",
                "value": {
                  "description": "For ld-proofs. Verification method for signing.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredExFreeVerificationMethod",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExFree",
        "title": "V20CredExFree",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExRecordAutoIssue",
            "key": "auto_issue",
            "schema": {
              "generatedName": "v20CredExRecordAutoIssue",
              "title": "V20CredExRecord",
              "value": {
                "description": "Issuer choice to issue to request in this credential exchange",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20CredExRecordAutoIssue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordAutoOffer",
            "key": "auto_offer",
            "schema": {
              "generatedName": "v20CredExRecordAutoOffer",
              "title": "V20CredExRecord",
              "value": {
                "description": "Holder choice to accept offer in this credential exchange",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20CredExRecordAutoOffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v20CredExRecordAutoRemove",
              "title": "V20CredExRecord",
              "value": {
                "description": "Issuer choice to remove this credential exchange record when complete",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20CredExRecordAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordByFormat",
            "key": "by_format",
            "schema": {
              "generatedName": "v20CredExRecordByFormat",
              "title": "V20CredExRecord",
              "value": {
                "generatedName": "V20CredExRecordByFormat",
                "schema": "V20CredExRecord_by_format",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "v20CredExRecordConnectionId",
              "title": "V20CredExRecord",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v20CredExRecordCreatedAt",
              "title": "V20CredExRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCredExId",
            "key": "cred_ex_id",
            "schema": {
              "generatedName": "v20CredExRecordCredExId",
              "title": "V20CredExRecord",
              "value": {
                "description": "Credential exchange identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordCredExId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCredIssue",
            "key": "cred_issue",
            "schema": {
              "generatedName": "v20CredExRecordCredIssue",
              "title": "V20CredExRecord",
              "value": {
                "generatedName": "V20CredExRecordCredIssue",
                "schema": "V20CredExRecord_cred_issue",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCredOffer",
            "key": "cred_offer",
            "schema": {
              "generatedName": "v20CredExRecordCredOffer",
              "title": "V20CredExRecord",
              "value": {
                "generatedName": "V20CredExRecordCredOffer",
                "schema": "V20CredExRecord_cred_offer",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCredPreview",
            "key": "cred_preview",
            "schema": {
              "generatedName": "v20CredExRecordCredPreview",
              "title": "V20CredExRecord",
              "value": {
                "generatedName": "V20CredExRecordCredPreview",
                "schema": "V20CredExRecord_cred_preview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCredProposal",
            "key": "cred_proposal",
            "schema": {
              "generatedName": "v20CredExRecordCredProposal",
              "title": "V20CredExRecord",
              "value": {
                "generatedName": "V20CredExRecordCredProposal",
                "schema": "V20CredExRecord_cred_proposal",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordCredRequest",
            "key": "cred_request",
            "schema": {
              "generatedName": "v20CredExRecordCredRequest",
              "title": "V20CredExRecord",
              "value": {
                "generatedName": "V20CredExRecordCredRequest",
                "schema": "V20CredExRecord_cred_request",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordErrorMsg",
            "key": "error_msg",
            "schema": {
              "generatedName": "v20CredExRecordErrorMsg",
              "title": "V20CredExRecord",
              "value": {
                "description": "Error message",
                "schema": {
                  "example": "The front fell off",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordErrorMsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordInitiator",
            "key": "initiator",
            "schema": {
              "generatedName": "v20CredExRecordInitiator",
              "title": "V20CredExRecord",
              "value": {
                "description": "Issue-credential exchange initiator: self or external",
                "generatedName": "V20CredExRecordInitiator",
                "values": [
                  {
                    "generatedName": "self",
                    "value": "self",
                    "casing": {}
                  },
                  {
                    "generatedName": "external",
                    "value": "external",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordParentThreadId",
            "key": "parent_thread_id",
            "schema": {
              "generatedName": "v20CredExRecordParentThreadId",
              "title": "V20CredExRecord",
              "value": {
                "description": "Parent thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordParentThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordRole",
            "key": "role",
            "schema": {
              "generatedName": "v20CredExRecordRole",
              "title": "V20CredExRecord",
              "value": {
                "description": "Issue-credential exchange role: holder or issuer",
                "generatedName": "V20CredExRecordRole",
                "values": [
                  {
                    "generatedName": "issuer",
                    "value": "issuer",
                    "casing": {}
                  },
                  {
                    "generatedName": "holder",
                    "value": "holder",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordState",
            "key": "state",
            "schema": {
              "generatedName": "v20CredExRecordState",
              "title": "V20CredExRecord",
              "value": {
                "description": "Issue-credential exchange state",
                "generatedName": "V20CredExRecordState",
                "values": [
                  {
                    "generatedName": "ProposalSent",
                    "value": "proposal-sent",
                    "casing": {}
                  },
                  {
                    "generatedName": "ProposalReceived",
                    "value": "proposal-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "OfferSent",
                    "value": "offer-sent",
                    "casing": {}
                  },
                  {
                    "generatedName": "OfferReceived",
                    "value": "offer-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "RequestSent",
                    "value": "request-sent",
                    "casing": {}
                  },
                  {
                    "generatedName": "RequestReceived",
                    "value": "request-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "CredentialIssued",
                    "value": "credential-issued",
                    "casing": {}
                  },
                  {
                    "generatedName": "CredentialReceived",
                    "value": "credential-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "done",
                    "value": "done",
                    "casing": {}
                  },
                  {
                    "generatedName": "CredentialRevoked",
                    "value": "credential-revoked",
                    "casing": {}
                  },
                  {
                    "generatedName": "abandoned",
                    "value": "abandoned",
                    "casing": {}
                  },
                  {
                    "generatedName": "deleted",
                    "value": "deleted",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "v20CredExRecordThreadId",
              "title": "V20CredExRecord",
              "value": {
                "description": "Thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20CredExRecordTrace",
              "title": "V20CredExRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredExRecordTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v20CredExRecordUpdatedAt",
              "title": "V20CredExRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExRecord",
        "title": "V20CredExRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExRecordByFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExRecordByFormatCredIssue",
            "key": "cred_issue",
            "schema": {
              "generatedName": "v20CredExRecordByFormatCredIssue",
              "title": "V20CredExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20CredExRecordByFormatCredIssue",
                "title": "cred_issue",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordByFormatCredOffer",
            "key": "cred_offer",
            "schema": {
              "generatedName": "v20CredExRecordByFormatCredOffer",
              "title": "V20CredExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20CredExRecordByFormatCredOffer",
                "title": "cred_offer",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordByFormatCredProposal",
            "key": "cred_proposal",
            "schema": {
              "generatedName": "v20CredExRecordByFormatCredProposal",
              "title": "V20CredExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20CredExRecordByFormatCredProposal",
                "title": "cred_proposal",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordByFormatCredRequest",
            "key": "cred_request",
            "schema": {
              "generatedName": "v20CredExRecordByFormatCredRequest",
              "title": "V20CredExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20CredExRecordByFormatCredRequest",
                "title": "cred_request",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExRecordByFormat",
        "title": "V20CredExRecordByFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExRecordDetail": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExRecordDetailCredExRecord",
            "key": "cred_ex_record",
            "schema": {
              "generatedName": "v20CredExRecordDetailCredExRecord",
              "title": "V20CredExRecordDetail",
              "value": {
                "generatedName": "V20CredExRecordDetailCredExRecord",
                "schema": "V20CredExRecordDetail_cred_ex_record",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordDetailIndy",
            "key": "indy",
            "schema": {
              "generatedName": "v20CredExRecordDetailIndy",
              "title": "V20CredExRecordDetail",
              "value": {
                "generatedName": "V20CredExRecordDetailIndy",
                "schema": "V20CredExRecordIndy",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordDetailLdProof",
            "key": "ld_proof",
            "schema": {
              "generatedName": "v20CredExRecordDetailLdProof",
              "title": "V20CredExRecordDetail",
              "value": {
                "generatedName": "V20CredExRecordDetailLdProof",
                "schema": "V20CredExRecordLDProof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExRecordDetail",
        "title": "V20CredExRecordDetail",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExRecordIndy": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v20CredExRecordIndyCreatedAt",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyCredExId",
            "key": "cred_ex_id",
            "schema": {
              "generatedName": "v20CredExRecordIndyCredExId",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Corresponding v2.0 credential exchange record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyCredExId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyCredExIndyId",
            "key": "cred_ex_indy_id",
            "schema": {
              "generatedName": "v20CredExRecordIndyCredExIndyId",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyCredExIndyId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyCredIdStored",
            "key": "cred_id_stored",
            "schema": {
              "generatedName": "v20CredExRecordIndyCredIdStored",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Credential identifier stored in wallet",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyCredIdStored",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyCredRequestMetadata",
            "key": "cred_request_metadata",
            "schema": {
              "generatedName": "v20CredExRecordIndyCredRequestMetadata",
              "title": "V20CredExRecordIndy",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Credential request metadata for indy holder",
                "generatedName": "V20CredExRecordIndyCredRequestMetadata",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyCredRevId",
            "key": "cred_rev_id",
            "schema": {
              "generatedName": "v20CredExRecordIndyCredRevId",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Credential revocation identifier within revocation registry",
                "schema": {
                  "pattern": "^[1-9][0-9]*$",
                  "example": "12345",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyCredRevId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyRevRegId",
            "key": "rev_reg_id",
            "schema": {
              "generatedName": "v20CredExRecordIndyRevRegId",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Revocation registry identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)",
                  "example": "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyRevRegId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyState",
            "key": "state",
            "schema": {
              "generatedName": "v20CredExRecordIndyState",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordIndyUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v20CredExRecordIndyUpdatedAt",
              "title": "V20CredExRecordIndy",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordIndyUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExRecordIndy",
        "title": "V20CredExRecordIndy",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExRecordLDProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExRecordLdProofCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v20CredExRecordLdProofCreatedAt",
              "title": "V20CredExRecordLDProof",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordLdProofCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordLdProofCredExId",
            "key": "cred_ex_id",
            "schema": {
              "generatedName": "v20CredExRecordLdProofCredExId",
              "title": "V20CredExRecordLDProof",
              "value": {
                "description": "Corresponding v2.0 credential exchange record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordLdProofCredExId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordLdProofCredExLdProofId",
            "key": "cred_ex_ld_proof_id",
            "schema": {
              "generatedName": "v20CredExRecordLdProofCredExLdProofId",
              "title": "V20CredExRecordLDProof",
              "value": {
                "description": "Record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordLdProofCredExLdProofId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordLdProofCredIdStored",
            "key": "cred_id_stored",
            "schema": {
              "generatedName": "v20CredExRecordLdProofCredIdStored",
              "title": "V20CredExRecordLDProof",
              "value": {
                "description": "Credential identifier stored in wallet",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordLdProofCredIdStored",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordLdProofState",
            "key": "state",
            "schema": {
              "generatedName": "v20CredExRecordLdProofState",
              "title": "V20CredExRecordLDProof",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordLdProofState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredExRecordLdProofUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v20CredExRecordLdProofUpdatedAt",
              "title": "V20CredExRecordLDProof",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20CredExRecordLdProofUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExRecordLdProof",
        "title": "V20CredExRecordLDProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredExRecordListResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredExRecordListResultResults",
            "key": "results",
            "schema": {
              "generatedName": "v20CredExRecordListResultResults",
              "title": "V20CredExRecordListResult",
              "value": {
                "description": "Credential exchange records and corresponding detail records",
                "value": {
                  "generatedName": "V20CredExRecordListResultResultsItem",
                  "schema": "V20CredExRecordDetail",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "V20CredExRecordListResultResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredExRecordListResult",
        "title": "V20CredExRecordListResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredFilter": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndy",
            "key": "indy",
            "schema": {
              "generatedName": "v20CredFilterIndy",
              "title": "V20CredFilter",
              "value": {
                "generatedName": "V20CredFilterIndy",
                "schema": "V20CredFilter_indy",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredFilterLdProof",
            "key": "ld_proof",
            "schema": {
              "generatedName": "v20CredFilterLdProof",
              "title": "V20CredFilter",
              "value": {
                "generatedName": "V20CredFilterLdProof",
                "schema": "V20CredFilter_ld_proof",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredFilter",
        "title": "V20CredFilter",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredFilterIndy": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndyCredDefId",
            "key": "cred_def_id",
            "schema": {
              "generatedName": "v20CredFilterIndyCredDefId",
              "title": "V20CredFilterIndy",
              "value": {
                "description": "Credential definition identifier",
                "schema": {
                  "pattern": "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$",
                  "example": "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
                  "type": "string"
                },
                "generatedName": "V20CredFilterIndyCredDefId",
                "title": "cred_def_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndyIssuerDid",
            "key": "issuer_did",
            "schema": {
              "generatedName": "v20CredFilterIndyIssuerDid",
              "title": "V20CredFilterIndy",
              "value": {
                "description": "Credential issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V20CredFilterIndyIssuerDid",
                "title": "issuer_did",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndySchemaId",
            "key": "schema_id",
            "schema": {
              "generatedName": "v20CredFilterIndySchemaId",
              "title": "V20CredFilterIndy",
              "value": {
                "description": "Schema identifier",
                "schema": {
                  "pattern": "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$",
                  "example": "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
                  "type": "string"
                },
                "generatedName": "V20CredFilterIndySchemaId",
                "title": "schema_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndySchemaIssuerDid",
            "key": "schema_issuer_did",
            "schema": {
              "generatedName": "v20CredFilterIndySchemaIssuerDid",
              "title": "V20CredFilterIndy",
              "value": {
                "description": "Schema issuer DID",
                "schema": {
                  "pattern": "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$",
                  "example": "WgWxqztrNooG92RXvxSTWv",
                  "type": "string"
                },
                "generatedName": "V20CredFilterIndySchemaIssuerDid",
                "title": "schema_issuer_did",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndySchemaName",
            "key": "schema_name",
            "schema": {
              "generatedName": "v20CredFilterIndySchemaName",
              "title": "V20CredFilterIndy",
              "value": {
                "description": "Schema name",
                "schema": {
                  "example": "preferences",
                  "type": "string"
                },
                "generatedName": "V20CredFilterIndySchemaName",
                "title": "schema_name",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredFilterIndySchemaVersion",
            "key": "schema_version",
            "schema": {
              "generatedName": "v20CredFilterIndySchemaVersion",
              "title": "V20CredFilterIndy",
              "value": {
                "description": "Schema version",
                "schema": {
                  "pattern": "^[0-9.]+$",
                  "example": "1.0",
                  "type": "string"
                },
                "generatedName": "V20CredFilterIndySchemaVersion",
                "title": "schema_version",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredFilterIndy",
        "title": "V20CredFilterIndy",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredFilterLDProof": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredFilterLdProofLdProof",
            "key": "ld_proof",
            "schema": {
              "generatedName": "V20CredFilterLdProofLdProof",
              "schema": "V20CredFilter_ld_proof",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredFilterLdProof",
        "title": "V20CredFilterLDProof",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredFormatAttachId",
            "key": "attach_id",
            "schema": {
              "description": "Attachment identifier",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20CredFormatAttachId",
              "title": "attach_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredFormatFormat",
            "key": "format",
            "schema": {
              "description": "Attachment format specifier",
              "schema": {
                "example": "aries/ld-proof-vc-detail@v1.0",
                "type": "string"
              },
              "generatedName": "V20CredFormatFormat",
              "nameOverride": "format",
              "title": "format",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredFormat",
        "title": "V20CredFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredIssue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredIssueId",
            "key": "@id",
            "schema": {
              "generatedName": "v20CredIssueId",
              "title": "V20CredIssue",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredIssueId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredIssueType",
            "key": "@type",
            "schema": {
              "generatedName": "v20CredIssueType",
              "title": "V20CredIssue",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20CredIssueType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20CredIssueComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredIssueComment",
              "title": "V20CredIssue",
              "value": {
                "generatedName": "V20CredIssueComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredIssueComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredIssueCredentialsAttach",
            "key": "credentials~attach",
            "schema": {
              "description": "Credential attachments",
              "value": {
                "generatedName": "V20CredIssueCredentialsAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredIssueCredentialsAttach",
              "title": "credentials~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredIssueFormats",
            "key": "formats",
            "schema": {
              "description": "Acceptable attachment formats",
              "value": {
                "generatedName": "V20CredIssueFormatsItem",
                "schema": "V20CredFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredIssueFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredIssueReplacementId",
            "key": "replacement_id",
            "schema": {
              "generatedName": "v20CredIssueReplacementId",
              "title": "V20CredIssue",
              "value": {
                "description": "Issuer-unique identifier to coordinate credential replacement",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredIssueReplacementId",
                "title": "replacement_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredIssue",
        "title": "V20CredIssue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredIssueProblemReportRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredIssueProblemReportRequestDescription",
            "key": "description",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "V20CredIssueProblemReportRequestDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredIssueProblemReportRequest",
        "title": "V20CredIssueProblemReportRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredIssueRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredIssueRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredIssueRequestComment",
              "title": "V20CredIssueRequest",
              "value": {
                "generatedName": "V20CredIssueRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredIssueRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredIssueRequest",
        "title": "V20CredIssueRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredOffer": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredOfferId",
            "key": "@id",
            "schema": {
              "generatedName": "v20CredOfferId",
              "title": "V20CredOffer",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredOfferId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferType",
            "key": "@type",
            "schema": {
              "generatedName": "v20CredOfferType",
              "title": "V20CredOffer",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20CredOfferType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredOfferComment",
              "title": "V20CredOffer",
              "value": {
                "generatedName": "V20CredOfferComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredOfferComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "v20CredOfferCredentialPreview",
              "title": "V20CredOffer",
              "value": {
                "generatedName": "V20CredOfferCredentialPreview",
                "schema": "V20CredPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferFormats",
            "key": "formats",
            "schema": {
              "description": "Acceptable credential formats",
              "value": {
                "generatedName": "V20CredOfferFormatsItem",
                "schema": "V20CredFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredOfferFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferOffersAttach",
            "key": "offers~attach",
            "schema": {
              "description": "Offer attachments",
              "value": {
                "generatedName": "V20CredOfferOffersAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredOfferOffersAttach",
              "title": "offers~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferReplacementId",
            "key": "replacement_id",
            "schema": {
              "generatedName": "v20CredOfferReplacementId",
              "title": "V20CredOffer",
              "value": {
                "description": "Issuer-unique identifier to coordinate credential replacement",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredOfferReplacementId",
                "title": "replacement_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredOffer",
        "title": "V20CredOffer",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredOfferConnFreeRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredOfferConnFreeRequestAutoIssue",
            "key": "auto_issue",
            "schema": {
              "generatedName": "v20CredOfferConnFreeRequestAutoIssue",
              "title": "V20CredOfferConnFreeRequest",
              "value": {
                "description": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredOfferConnFreeRequestAutoIssue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferConnFreeRequestAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v20CredOfferConnFreeRequestAutoRemove",
              "title": "V20CredOfferConnFreeRequest",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredOfferConnFreeRequestAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferConnFreeRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredOfferConnFreeRequestComment",
              "title": "V20CredOfferConnFreeRequest",
              "value": {
                "generatedName": "V20CredOfferConnFreeRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredOfferConnFreeRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferConnFreeRequestCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "v20CredOfferConnFreeRequestCredentialPreview",
              "title": "V20CredOfferConnFreeRequest",
              "value": {
                "generatedName": "V20CredOfferConnFreeRequestCredentialPreview",
                "schema": "V20CredPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferConnFreeRequestFilter",
            "key": "filter",
            "schema": {
              "generatedName": "V20CredOfferConnFreeRequestFilter",
              "schema": "V20CredBoundOfferRequest_filter",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferConnFreeRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20CredOfferConnFreeRequestTrace",
              "title": "V20CredOfferConnFreeRequest",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredOfferConnFreeRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredOfferConnFreeRequest",
        "title": "V20CredOfferConnFreeRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredOfferRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestAutoIssue",
            "key": "auto_issue",
            "schema": {
              "generatedName": "v20CredOfferRequestAutoIssue",
              "title": "V20CredOfferRequest",
              "value": {
                "description": "Whether to respond automatically to credential requests, creating and issuing requested credentials",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredOfferRequestAutoIssue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v20CredOfferRequestAutoRemove",
              "title": "V20CredOfferRequest",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredOfferRequestAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredOfferRequestComment",
              "title": "V20CredOfferRequest",
              "value": {
                "generatedName": "V20CredOfferRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredOfferRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20CredOfferRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "v20CredOfferRequestCredentialPreview",
              "title": "V20CredOfferRequest",
              "value": {
                "generatedName": "V20CredOfferRequestCredentialPreview",
                "schema": "V20CredPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestFilter",
            "key": "filter",
            "schema": {
              "generatedName": "V20CredOfferRequestFilter",
              "schema": "V20CredBoundOfferRequest_filter",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredOfferRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20CredOfferRequestTrace",
              "title": "V20CredOfferRequest",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredOfferRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredOfferRequest",
        "title": "V20CredOfferRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredPreview": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredPreviewType",
            "key": "@type",
            "schema": {
              "generatedName": "v20CredPreviewType",
              "title": "V20CredPreview",
              "value": {
                "description": "Message type identifier",
                "schema": {
                  "example": "issue-credential/2.0/credential-preview",
                  "type": "string"
                },
                "generatedName": "V20CredPreviewType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredPreviewAttributes",
            "key": "attributes",
            "schema": {
              "value": {
                "generatedName": "V20CredPreviewAttributesItem",
                "schema": "V20CredAttrSpec",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredPreviewAttributes",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredPreview",
        "title": "V20CredPreview",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredProposalId",
            "key": "@id",
            "schema": {
              "generatedName": "v20CredProposalId",
              "title": "V20CredProposal",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredProposalId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredProposalType",
            "key": "@type",
            "schema": {
              "generatedName": "v20CredProposalType",
              "title": "V20CredProposal",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20CredProposalType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20CredProposalComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredProposalComment",
              "title": "V20CredProposal",
              "value": {
                "generatedName": "V20CredProposalComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredProposalComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredProposalCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "v20CredProposalCredentialPreview",
              "title": "V20CredProposal",
              "value": {
                "generatedName": "V20CredProposalCredentialPreview",
                "schema": "V20CredProposal_credential_preview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredProposalFiltersAttach",
            "key": "filters~attach",
            "schema": {
              "description": "Credential filter per acceptable format on corresponding identifier",
              "value": {
                "generatedName": "V20CredProposalFiltersAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredProposalFiltersAttach",
              "title": "filters~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredProposalFormats",
            "key": "formats",
            "schema": {
              "description": "Attachment formats",
              "value": {
                "generatedName": "V20CredProposalFormatsItem",
                "schema": "V20CredFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredProposalFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredProposal",
        "title": "V20CredProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredRequestId",
            "key": "@id",
            "schema": {
              "generatedName": "v20CredRequestId",
              "title": "V20CredRequest",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20CredRequestId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestType",
            "key": "@type",
            "schema": {
              "generatedName": "v20CredRequestType",
              "title": "V20CredRequest",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20CredRequestType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredRequestComment",
              "title": "V20CredRequest",
              "value": {
                "generatedName": "V20CredRequestComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredRequestComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestFormats",
            "key": "formats",
            "schema": {
              "description": "Acceptable attachment formats",
              "value": {
                "generatedName": "V20CredRequestFormatsItem",
                "schema": "V20CredFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredRequestFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestRequestsAttach",
            "key": "requests~attach",
            "schema": {
              "description": "Request attachments",
              "value": {
                "generatedName": "V20CredRequestRequestsAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20CredRequestRequestsAttach",
              "title": "requests~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredRequest",
        "title": "V20CredRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredRequestFree": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredRequestFreeAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v20CredRequestFreeAutoRemove",
              "title": "V20CredRequestFree",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20CredRequestFreeAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestFreeComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20CredRequestFreeComment",
              "title": "V20CredRequestFree",
              "value": {
                "generatedName": "V20CredRequestFreeComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20CredRequestFreeComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestFreeConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20CredRequestFreeConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestFreeFilter",
            "key": "filter",
            "schema": {
              "generatedName": "V20CredRequestFreeFilter",
              "schema": "V20CredRequestFree_filter",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestFreeHolderDid",
            "key": "holder_did",
            "schema": {
              "generatedName": "v20CredRequestFreeHolderDid",
              "title": "V20CredRequestFree",
              "value": {
                "generatedName": "V20CredRequestFreeHolderDid",
                "description": "Holder DID to substitute for the credentialSubject.id",
                "value": {
                  "description": "Holder DID to substitute for the credentialSubject.id",
                  "schema": {
                    "example": "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
                    "type": "string"
                  },
                  "generatedName": "V20CredRequestFreeHolderDid",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20CredRequestFreeTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20CredRequestFreeTrace",
              "title": "V20CredRequestFree",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20CredRequestFreeTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredRequestFree",
        "title": "V20CredRequestFree",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredRequestRequestHolderDid",
            "key": "holder_did",
            "schema": {
              "generatedName": "v20CredRequestRequestHolderDid",
              "title": "V20CredRequestRequest",
              "value": {
                "generatedName": "V20CredRequestRequestHolderDid",
                "description": "Holder DID to substitute for the credentialSubject.id",
                "value": {
                  "description": "Holder DID to substitute for the credentialSubject.id",
                  "schema": {
                    "example": "did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs",
                    "type": "string"
                  },
                  "generatedName": "V20CredRequestRequestHolderDid",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredRequestRequest",
        "title": "V20CredRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20CredStoreRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20CredStoreRequestCredentialId",
            "key": "credential_id",
            "schema": {
              "generatedName": "v20CredStoreRequestCredentialId",
              "title": "V20CredStoreRequest",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "V20CredStoreRequestCredentialId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20CredStoreRequest",
        "title": "V20CredStoreRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20DiscoveryExchangeListResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20DiscoveryExchangeListResultResults",
            "key": "results",
            "schema": {
              "generatedName": "v20DiscoveryExchangeListResultResults",
              "title": "V20DiscoveryExchangeListResult",
              "value": {
                "value": {
                  "generatedName": "V20DiscoveryExchangeListResultResultsItem",
                  "schema": "V20DiscoveryExchangeListResult_results_inner",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "V20DiscoveryExchangeListResultResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20DiscoveryExchangeListResult",
        "title": "V20DiscoveryExchangeListResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20DiscoveryExchangeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20DiscoveryExchangeResultResults",
            "key": "results",
            "schema": {
              "generatedName": "v20DiscoveryExchangeResultResults",
              "title": "V20DiscoveryExchangeResult",
              "value": {
                "generatedName": "V20DiscoveryExchangeResultResults",
                "schema": "V20DiscoveryExchangeListResult_results_inner",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20DiscoveryExchangeResult",
        "title": "V20DiscoveryExchangeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20DiscoveryRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "v20DiscoveryRecordConnectionId",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20DiscoveryRecordConnectionId",
                "title": "connection_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v20DiscoveryRecordCreatedAt",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20DiscoveryRecordCreatedAt",
                "title": "created_at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordDisclosures",
            "key": "disclosures",
            "schema": {
              "generatedName": "v20DiscoveryRecordDisclosures",
              "title": "V20DiscoveryRecord",
              "value": {
                "generatedName": "V20DiscoveryRecordDisclosures",
                "schema": "V20DiscoveryRecord_disclosures",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordDiscoveryExchangeId",
            "key": "discovery_exchange_id",
            "schema": {
              "generatedName": "v20DiscoveryRecordDiscoveryExchangeId",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Credential exchange identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20DiscoveryRecordDiscoveryExchangeId",
                "title": "discovery_exchange_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordQueriesMsg",
            "key": "queries_msg",
            "schema": {
              "generatedName": "v20DiscoveryRecordQueriesMsg",
              "title": "V20DiscoveryRecord",
              "value": {
                "generatedName": "V20DiscoveryRecordQueriesMsg",
                "schema": "V20DiscoveryRecord_queries_msg",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordState",
            "key": "state",
            "schema": {
              "generatedName": "v20DiscoveryRecordState",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "V20DiscoveryRecordState",
                "nameOverride": "state",
                "title": "state",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "v20DiscoveryRecordThreadId",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20DiscoveryRecordThreadId",
                "title": "thread_id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20DiscoveryRecordTrace",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20DiscoveryRecordTrace",
                "nameOverride": "trace",
                "title": "trace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20DiscoveryRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v20DiscoveryRecordUpdatedAt",
              "title": "V20DiscoveryRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20DiscoveryRecordUpdatedAt",
                "title": "updated_at",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20DiscoveryRecord",
        "title": "V20DiscoveryRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20IssueCredSchemaCore": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20IssueCredSchemaCoreAutoRemove",
            "key": "auto_remove",
            "schema": {
              "generatedName": "v20IssueCredSchemaCoreAutoRemove",
              "title": "V20IssueCredSchemaCore",
              "value": {
                "description": "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20IssueCredSchemaCoreAutoRemove",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20IssueCredSchemaCoreComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20IssueCredSchemaCoreComment",
              "title": "V20IssueCredSchemaCore",
              "value": {
                "generatedName": "V20IssueCredSchemaCoreComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20IssueCredSchemaCoreComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20IssueCredSchemaCoreCredentialPreview",
            "key": "credential_preview",
            "schema": {
              "generatedName": "v20IssueCredSchemaCoreCredentialPreview",
              "title": "V20IssueCredSchemaCore",
              "value": {
                "generatedName": "V20IssueCredSchemaCoreCredentialPreview",
                "schema": "V20CredPreview",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20IssueCredSchemaCoreFilter",
            "key": "filter",
            "schema": {
              "generatedName": "V20IssueCredSchemaCoreFilter",
              "schema": "V20CredBoundOfferRequest_filter",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20IssueCredSchemaCoreTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20IssueCredSchemaCoreTrace",
              "title": "V20IssueCredSchemaCore",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20IssueCredSchemaCoreTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20IssueCredSchemaCore",
        "title": "V20IssueCredSchemaCore",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20IssueCredentialModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "V20IssueCredentialModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "V20IssueCredentialModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "V20IssueCredentialModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "V20Pres": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresId",
            "key": "@id",
            "schema": {
              "generatedName": "v20PresId",
              "title": "V20Pres",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20PresId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresType",
            "key": "@type",
            "schema": {
              "generatedName": "v20PresType",
              "title": "V20Pres",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20PresType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20PresComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20PresComment",
              "title": "V20Pres",
              "value": {
                "generatedName": "V20PresComment",
                "nameOverride": "comment",
                "title": "comment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20PresComment",
                  "nameOverride": "comment",
                  "title": "comment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresFormats",
            "key": "formats",
            "schema": {
              "description": "Acceptable attachment formats",
              "value": {
                "generatedName": "V20PresFormatsItem",
                "schema": "V20PresFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20PresFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresPresentationsAttach",
            "key": "presentations~attach",
            "schema": {
              "value": {
                "generatedName": "V20PresPresentationsAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20PresPresentationsAttach",
              "title": "presentations~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20Pres",
        "title": "V20Pres",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresCreateRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresCreateRequestRequestAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v20PresCreateRequestRequestAutoVerify",
              "title": "V20PresCreateRequestRequest",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresCreateRequestRequestAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresCreateRequestRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20PresCreateRequestRequestComment",
              "title": "V20PresCreateRequestRequest",
              "value": {
                "generatedName": "V20PresCreateRequestRequestComment",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20PresCreateRequestRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresCreateRequestRequestPresentationRequest",
            "key": "presentation_request",
            "schema": {
              "generatedName": "V20PresCreateRequestRequestPresentationRequest",
              "schema": "V20PresRequestByFormat",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresCreateRequestRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20PresCreateRequestRequestTrace",
              "title": "V20PresCreateRequestRequest",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresCreateRequestRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresCreateRequestRequest",
        "title": "V20PresCreateRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresExRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresExRecordAutoPresent",
            "key": "auto_present",
            "schema": {
              "generatedName": "v20PresExRecordAutoPresent",
              "title": "V20PresExRecord",
              "value": {
                "description": "Prover choice to auto-present proof as verifier requests",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresExRecordAutoPresent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v20PresExRecordAutoVerify",
              "title": "V20PresExRecord",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20PresExRecordAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordByFormat",
            "key": "by_format",
            "schema": {
              "generatedName": "v20PresExRecordByFormat",
              "title": "V20PresExRecord",
              "value": {
                "generatedName": "V20PresExRecordByFormat",
                "schema": "V20PresExRecord_by_format",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordConnectionId",
            "key": "connection_id",
            "schema": {
              "generatedName": "v20PresExRecordConnectionId",
              "title": "V20PresExRecord",
              "value": {
                "description": "Connection identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20PresExRecordConnectionId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "v20PresExRecordCreatedAt",
              "title": "V20PresExRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20PresExRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordErrorMsg",
            "key": "error_msg",
            "schema": {
              "generatedName": "v20PresExRecordErrorMsg",
              "title": "V20PresExRecord",
              "value": {
                "description": "Error message",
                "schema": {
                  "example": "Invalid structure",
                  "type": "string"
                },
                "generatedName": "V20PresExRecordErrorMsg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordInitiator",
            "key": "initiator",
            "schema": {
              "generatedName": "v20PresExRecordInitiator",
              "title": "V20PresExRecord",
              "value": {
                "description": "Present-proof exchange initiator: self or external",
                "generatedName": "V20PresExRecordInitiator",
                "values": [
                  {
                    "generatedName": "self",
                    "value": "self",
                    "casing": {}
                  },
                  {
                    "generatedName": "external",
                    "value": "external",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordPres",
            "key": "pres",
            "schema": {
              "generatedName": "v20PresExRecordPres",
              "title": "V20PresExRecord",
              "value": {
                "generatedName": "V20PresExRecordPres",
                "schema": "V20PresExRecord_pres",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordPresExId",
            "key": "pres_ex_id",
            "schema": {
              "generatedName": "v20PresExRecordPresExId",
              "title": "V20PresExRecord",
              "value": {
                "description": "Presentation exchange identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20PresExRecordPresExId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordPresProposal",
            "key": "pres_proposal",
            "schema": {
              "generatedName": "v20PresExRecordPresProposal",
              "title": "V20PresExRecord",
              "value": {
                "generatedName": "V20PresExRecordPresProposal",
                "schema": "V20PresExRecord_pres_proposal",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordPresRequest",
            "key": "pres_request",
            "schema": {
              "generatedName": "v20PresExRecordPresRequest",
              "title": "V20PresExRecord",
              "value": {
                "generatedName": "V20PresExRecordPresRequest",
                "schema": "V20PresExRecord_pres_request",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordRole",
            "key": "role",
            "schema": {
              "generatedName": "v20PresExRecordRole",
              "title": "V20PresExRecord",
              "value": {
                "description": "Present-proof exchange role: prover or verifier",
                "generatedName": "V20PresExRecordRole",
                "values": [
                  {
                    "generatedName": "prover",
                    "value": "prover",
                    "casing": {}
                  },
                  {
                    "generatedName": "verifier",
                    "value": "verifier",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordState",
            "key": "state",
            "schema": {
              "generatedName": "v20PresExRecordState",
              "title": "V20PresExRecord",
              "value": {
                "description": "Present-proof exchange state",
                "generatedName": "V20PresExRecordState",
                "values": [
                  {
                    "generatedName": "ProposalSent",
                    "value": "proposal-sent",
                    "casing": {}
                  },
                  {
                    "generatedName": "ProposalReceived",
                    "value": "proposal-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "RequestSent",
                    "value": "request-sent",
                    "casing": {}
                  },
                  {
                    "generatedName": "RequestReceived",
                    "value": "request-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "PresentationSent",
                    "value": "presentation-sent",
                    "casing": {}
                  },
                  {
                    "generatedName": "PresentationReceived",
                    "value": "presentation-received",
                    "casing": {}
                  },
                  {
                    "generatedName": "done",
                    "value": "done",
                    "casing": {}
                  },
                  {
                    "generatedName": "abandoned",
                    "value": "abandoned",
                    "casing": {}
                  },
                  {
                    "generatedName": "deleted",
                    "value": "deleted",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordThreadId",
            "key": "thread_id",
            "schema": {
              "generatedName": "v20PresExRecordThreadId",
              "title": "V20PresExRecord",
              "value": {
                "description": "Thread identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20PresExRecordThreadId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20PresExRecordTrace",
              "title": "V20PresExRecord",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20PresExRecordTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "v20PresExRecordUpdatedAt",
              "title": "V20PresExRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "V20PresExRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordVerified",
            "key": "verified",
            "schema": {
              "generatedName": "v20PresExRecordVerified",
              "title": "V20PresExRecord",
              "value": {
                "description": "Whether presentation is verified: 'true' or 'false'",
                "generatedName": "V20PresExRecordVerified",
                "values": [
                  {
                    "generatedName": "true",
                    "value": "true",
                    "casing": {}
                  },
                  {
                    "generatedName": "false",
                    "value": "false",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordVerifiedMsgs",
            "key": "verified_msgs",
            "schema": {
              "generatedName": "v20PresExRecordVerifiedMsgs",
              "title": "V20PresExRecord",
              "value": {
                "value": {
                  "description": "Proof verification warning or error information",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20PresExRecordVerifiedMsgsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "V20PresExRecordVerifiedMsgs",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresExRecord",
        "title": "V20PresExRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresExRecordByFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresExRecordByFormatPres",
            "key": "pres",
            "schema": {
              "generatedName": "v20PresExRecordByFormatPres",
              "title": "V20PresExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20PresExRecordByFormatPres",
                "nameOverride": "pres",
                "title": "pres",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordByFormatPresProposal",
            "key": "pres_proposal",
            "schema": {
              "generatedName": "v20PresExRecordByFormatPresProposal",
              "title": "V20PresExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20PresExRecordByFormatPresProposal",
                "title": "pres_proposal",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresExRecordByFormatPresRequest",
            "key": "pres_request",
            "schema": {
              "generatedName": "v20PresExRecordByFormatPresRequest",
              "title": "V20PresExRecordByFormat",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "generatedName": "V20PresExRecordByFormatPresRequest",
                "title": "pres_request",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresExRecordByFormat",
        "title": "V20PresExRecordByFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresExRecordList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresExRecordListResults",
            "key": "results",
            "schema": {
              "generatedName": "v20PresExRecordListResults",
              "title": "V20PresExRecordList",
              "value": {
                "description": "Presentation exchange records",
                "value": {
                  "generatedName": "V20PresExRecordListResultsItem",
                  "schema": "V20PresExRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "V20PresExRecordListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresExRecordList",
        "title": "V20PresExRecordList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresFormatAttachId",
            "key": "attach_id",
            "schema": {
              "description": "Attachment identifier",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20PresFormatAttachId",
              "title": "attach_id",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresFormatFormat",
            "key": "format",
            "schema": {
              "description": "Attachment format specifier",
              "schema": {
                "example": "dif/presentation-exchange/submission@v1.0",
                "type": "string"
              },
              "generatedName": "V20PresFormatFormat",
              "nameOverride": "format",
              "title": "format",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresFormat",
        "title": "V20PresFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresProblemReportRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresProblemReportRequestDescription",
            "key": "description",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "V20PresProblemReportRequestDescription",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresProblemReportRequest",
        "title": "V20PresProblemReportRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresProposalId",
            "key": "@id",
            "schema": {
              "generatedName": "v20PresProposalId",
              "title": "V20PresProposal",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20PresProposalId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalType",
            "key": "@type",
            "schema": {
              "generatedName": "v20PresProposalType",
              "title": "V20PresProposal",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20PresProposalType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20PresProposalComment",
              "title": "V20PresProposal",
              "value": {
                "description": "Human-readable comment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "V20PresProposalComment",
                "nameOverride": "comment",
                "title": "comment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalFormats",
            "key": "formats",
            "schema": {
              "value": {
                "generatedName": "V20PresProposalFormatsItem",
                "schema": "V20PresFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20PresProposalFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalProposalsAttach",
            "key": "proposals~attach",
            "schema": {
              "description": "Attachment per acceptable format on corresponding identifier",
              "value": {
                "generatedName": "V20PresProposalProposalsAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20PresProposalProposalsAttach",
              "title": "proposals~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresProposal",
        "title": "V20PresProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresProposalByFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresProposalByFormatDif",
            "key": "dif",
            "schema": {
              "generatedName": "v20PresProposalByFormatDif",
              "title": "V20PresProposalByFormat",
              "value": {
                "generatedName": "V20PresProposalByFormatDif",
                "schema": "V20PresProposalByFormat_dif",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalByFormatIndy",
            "key": "indy",
            "schema": {
              "generatedName": "v20PresProposalByFormatIndy",
              "title": "V20PresProposalByFormat",
              "value": {
                "generatedName": "V20PresProposalByFormatIndy",
                "schema": "V20PresProposalByFormat_indy",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresProposalByFormat",
        "title": "V20PresProposalByFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresProposalRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresProposalRequestAutoPresent",
            "key": "auto_present",
            "schema": {
              "generatedName": "v20PresProposalRequestAutoPresent",
              "title": "V20PresProposalRequest",
              "value": {
                "description": "Whether to respond automatically to presentation requests, building and presenting requested proof",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20PresProposalRequestAutoPresent",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20PresProposalRequestComment",
              "title": "V20PresProposalRequest",
              "value": {
                "generatedName": "V20PresProposalRequestComment",
                "description": "Human-readable comment",
                "value": {
                  "description": "Human-readable comment",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20PresProposalRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20PresProposalRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalRequestPresentationProposal",
            "key": "presentation_proposal",
            "schema": {
              "generatedName": "V20PresProposalRequestPresentationProposal",
              "schema": "V20PresProposalByFormat",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresProposalRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20PresProposalRequestTrace",
              "title": "V20PresProposalRequest",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresProposalRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresProposalRequest",
        "title": "V20PresProposalRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresRequestId",
            "key": "@id",
            "schema": {
              "generatedName": "v20PresRequestId",
              "title": "V20PresRequest",
              "value": {
                "description": "Message identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "V20PresRequestId",
                "title": "@id",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresRequestType",
            "key": "@type",
            "schema": {
              "generatedName": "v20PresRequestType",
              "title": "V20PresRequest",
              "value": {
                "description": "Message type",
                "schema": {
                  "example": "https://didcomm.org/my-family/1.0/my-message-type",
                  "type": "string"
                },
                "generatedName": "V20PresRequestType",
                "title": "@type",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "v20PresRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20PresRequestComment",
              "title": "V20PresRequest",
              "value": {
                "description": "Human-readable comment",
                "schema": {
                  "type": "string"
                },
                "generatedName": "V20PresRequestComment",
                "nameOverride": "comment",
                "title": "comment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresRequestFormats",
            "key": "formats",
            "schema": {
              "value": {
                "generatedName": "V20PresRequestFormatsItem",
                "schema": "V20PresFormat",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20PresRequestFormats",
              "nameOverride": "formats",
              "title": "formats",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresRequestRequestPresentationsAttach",
            "key": "request_presentations~attach",
            "schema": {
              "description": "Attachment per acceptable format on corresponding identifier",
              "value": {
                "generatedName": "V20PresRequestRequestPresentationsAttachItem",
                "schema": "AttachDecorator",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "V20PresRequestRequestPresentationsAttach",
              "title": "request_presentations~attach",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresRequestWillConfirm",
            "key": "will_confirm",
            "schema": {
              "generatedName": "v20PresRequestWillConfirm",
              "title": "V20PresRequest",
              "value": {
                "description": "Whether verifier will send confirmation ack",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20PresRequestWillConfirm",
                "title": "will_confirm",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresRequest",
        "title": "V20PresRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresRequestByFormat": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresRequestByFormatDif",
            "key": "dif",
            "schema": {
              "generatedName": "v20PresRequestByFormatDif",
              "title": "V20PresRequestByFormat",
              "value": {
                "generatedName": "V20PresRequestByFormatDif",
                "schema": "V20PresRequestByFormat_dif",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresRequestByFormatIndy",
            "key": "indy",
            "schema": {
              "generatedName": "v20PresRequestByFormatIndy",
              "title": "V20PresRequestByFormat",
              "value": {
                "generatedName": "V20PresRequestByFormatIndy",
                "schema": "V20PresRequestByFormat_indy",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresRequestByFormat",
        "title": "V20PresRequestByFormat",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresSendRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresSendRequestRequestAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v20PresSendRequestRequestAutoVerify",
              "title": "V20PresSendRequestRequest",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresSendRequestRequestAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresSendRequestRequestComment",
            "key": "comment",
            "schema": {
              "generatedName": "v20PresSendRequestRequestComment",
              "title": "V20PresSendRequestRequest",
              "value": {
                "generatedName": "V20PresSendRequestRequestComment",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "V20PresSendRequestRequestComment",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresSendRequestRequestConnectionId",
            "key": "connection_id",
            "schema": {
              "description": "Connection identifier",
              "schema": {
                "format": "uuid",
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "V20PresSendRequestRequestConnectionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresSendRequestRequestPresentationRequest",
            "key": "presentation_request",
            "schema": {
              "generatedName": "V20PresSendRequestRequestPresentationRequest",
              "schema": "V20PresRequestByFormat",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresSendRequestRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20PresSendRequestRequestTrace",
              "title": "V20PresSendRequestRequest",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresSendRequestRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresSendRequestRequest",
        "title": "V20PresSendRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresSpecByFormatRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresSpecByFormatRequestDif",
            "key": "dif",
            "schema": {
              "generatedName": "v20PresSpecByFormatRequestDif",
              "title": "V20PresSpecByFormatRequest",
              "value": {
                "generatedName": "V20PresSpecByFormatRequestDif",
                "schema": "V20PresSpecByFormatRequest_dif",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresSpecByFormatRequestIndy",
            "key": "indy",
            "schema": {
              "generatedName": "v20PresSpecByFormatRequestIndy",
              "title": "V20PresSpecByFormatRequest",
              "value": {
                "generatedName": "V20PresSpecByFormatRequestIndy",
                "schema": "V20PresSpecByFormatRequest_indy",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "v20PresSpecByFormatRequestTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20PresSpecByFormatRequestTrace",
              "title": "V20PresSpecByFormatRequest",
              "value": {
                "description": "Record trace information, based on agent configuration",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "V20PresSpecByFormatRequestTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresSpecByFormatRequest",
        "title": "V20PresSpecByFormatRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "V20PresentProofModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "V20PresentProofModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "V20PresentProofModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "V20PresentProofModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "V20PresentationSendRequestToProposal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "v20PresentationSendRequestToProposalAutoVerify",
            "key": "auto_verify",
            "schema": {
              "generatedName": "v20PresentationSendRequestToProposalAutoVerify",
              "title": "V20PresentationSendRequestToProposal",
              "value": {
                "description": "Verifier choice to auto-verify proof presentation",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresentationSendRequestToProposalAutoVerify",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "v20PresentationSendRequestToProposalTrace",
            "key": "trace",
            "schema": {
              "generatedName": "v20PresentationSendRequestToProposalTrace",
              "title": "V20PresentationSendRequestToProposal",
              "value": {
                "description": "Whether to trace event (default false)",
                "schema": {
                  "example": false,
                  "type": "boolean"
                },
                "generatedName": "V20PresentationSendRequestToProposalTrace",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "V20PresentationSendRequestToProposal",
        "title": "V20PresentationSendRequestToProposal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VCRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "vcRecordContexts",
            "key": "contexts",
            "schema": {
              "generatedName": "vcRecordContexts",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "value": {
                  "description": "Context",
                  "schema": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    "example": "https://myhost:8021",
                    "type": "string"
                  },
                  "generatedName": "VcRecordContextsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "VcRecordContexts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordCredTags",
            "key": "cred_tags",
            "schema": {
              "generatedName": "vcRecordCredTags",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "VcRecordCredTagsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "description": "Retrieval tag value",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "VcRecordCredTagsValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "VcRecordCredTags",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordCredValue",
            "key": "cred_value",
            "schema": {
              "generatedName": "vcRecordCredValue",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "(JSON-serializable) credential value",
                "generatedName": "VcRecordCredValue",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordExpandedTypes",
            "key": "expanded_types",
            "schema": {
              "generatedName": "vcRecordExpandedTypes",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "value": {
                  "description": "JSON-LD expanded type extracted from type and context",
                  "schema": {
                    "example": "https://w3id.org/citizenship#PermanentResidentCard",
                    "type": "string"
                  },
                  "generatedName": "VcRecordExpandedTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "VcRecordExpandedTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordGivenId",
            "key": "given_id",
            "schema": {
              "generatedName": "vcRecordGivenId",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "description": "Credential identifier",
                "schema": {
                  "example": "http://example.edu/credentials/3732",
                  "type": "string"
                },
                "generatedName": "VcRecordGivenId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordIssuerId",
            "key": "issuer_id",
            "schema": {
              "generatedName": "vcRecordIssuerId",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "description": "Issuer identifier",
                "schema": {
                  "example": "https://example.edu/issuers/14",
                  "type": "string"
                },
                "generatedName": "VcRecordIssuerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordProofTypes",
            "key": "proof_types",
            "schema": {
              "generatedName": "vcRecordProofTypes",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "value": {
                  "description": "Signature suite used for proof",
                  "schema": {
                    "example": "Ed25519Signature2018",
                    "type": "string"
                  },
                  "generatedName": "VcRecordProofTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "VcRecordProofTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordRecordId",
            "key": "record_id",
            "schema": {
              "generatedName": "vcRecordRecordId",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "description": "Record identifier",
                "schema": {
                  "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "type": "string"
                },
                "generatedName": "VcRecordRecordId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordSchemaIds",
            "key": "schema_ids",
            "schema": {
              "generatedName": "vcRecordSchemaIds",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "value": {
                  "description": "Schema identifier",
                  "schema": {
                    "example": "https://example.org/examples/degree.json",
                    "type": "string"
                  },
                  "generatedName": "VcRecordSchemaIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "VcRecordSchemaIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "vcRecordSubjectIds",
            "key": "subject_ids",
            "schema": {
              "generatedName": "vcRecordSubjectIds",
              "nameOverride": "VCRecord",
              "title": "VCRecord",
              "value": {
                "value": {
                  "description": "Subject identifier",
                  "schema": {
                    "example": "did:example:ebfeb1f712ebc6f1c276e12ec21",
                    "type": "string"
                  },
                  "generatedName": "VcRecordSubjectIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "VcRecordSubjectIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "VcRecord",
        "nameOverride": "VCRecord",
        "title": "VCRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VCRecordList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "vcRecordListResults",
            "key": "results",
            "schema": {
              "generatedName": "vcRecordListResults",
              "nameOverride": "VCRecordList",
              "title": "VCRecordList",
              "value": {
                "value": {
                  "generatedName": "VcRecordListResultsItem",
                  "schema": "VCRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "VcRecordListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "VcRecordList",
        "nameOverride": "VCRecordList",
        "title": "VCRecordList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VerifyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "verifyRequestDoc",
            "key": "doc",
            "schema": {
              "generatedName": "VerifyRequestDoc",
              "schema": "VerifyRequest_doc",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "verifyRequestVerkey",
            "key": "verkey",
            "schema": {
              "generatedName": "verifyRequestVerkey",
              "nameOverride": "VerifyRequest",
              "title": "VerifyRequest",
              "value": {
                "description": "Verkey to use for doc verification",
                "schema": {
                  "type": "string"
                },
                "generatedName": "VerifyRequestVerkey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "VerifyRequest",
        "nameOverride": "VerifyRequest",
        "title": "VerifyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "VerifyResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "verifyResponseError",
            "key": "error",
            "schema": {
              "generatedName": "verifyResponseError",
              "nameOverride": "VerifyResponse",
              "title": "VerifyResponse",
              "value": {
                "description": "Error text",
                "schema": {
                  "type": "string"
                },
                "generatedName": "VerifyResponseError",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "verifyResponseValid",
            "key": "valid",
            "schema": {
              "schema": {
                "type": "boolean"
              },
              "generatedName": "VerifyResponseValid",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "VerifyResponse",
        "nameOverride": "VerifyResponse",
        "title": "VerifyResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "W3CCredentialsListRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestContexts",
            "key": "contexts",
            "schema": {
              "generatedName": "w3CCredentialsListRequestContexts",
              "title": "W3CCredentialsListRequest",
              "value": {
                "value": {
                  "description": "Credential context to match",
                  "schema": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    "example": "https://myhost:8021",
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestContextsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "W3CCredentialsListRequestContexts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestGivenId",
            "key": "given_id",
            "schema": {
              "generatedName": "w3CCredentialsListRequestGivenId",
              "title": "W3CCredentialsListRequest",
              "value": {
                "description": "Given credential id to match",
                "schema": {
                  "type": "string"
                },
                "generatedName": "W3CCredentialsListRequestGivenId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestIssuerId",
            "key": "issuer_id",
            "schema": {
              "generatedName": "w3CCredentialsListRequestIssuerId",
              "title": "W3CCredentialsListRequest",
              "value": {
                "description": "Credential issuer identifier to match",
                "schema": {
                  "type": "string"
                },
                "generatedName": "W3CCredentialsListRequestIssuerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestMaxResults",
            "key": "max_results",
            "schema": {
              "generatedName": "w3CCredentialsListRequestMaxResults",
              "title": "W3CCredentialsListRequest",
              "value": {
                "description": "Maximum number of results to return",
                "schema": {
                  "type": "int"
                },
                "generatedName": "W3CCredentialsListRequestMaxResults",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestProofTypes",
            "key": "proof_types",
            "schema": {
              "generatedName": "w3CCredentialsListRequestProofTypes",
              "title": "W3CCredentialsListRequest",
              "value": {
                "value": {
                  "description": "Signature suite used for proof",
                  "schema": {
                    "example": "Ed25519Signature2018",
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestProofTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "W3CCredentialsListRequestProofTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestSchemaIds",
            "key": "schema_ids",
            "schema": {
              "generatedName": "w3CCredentialsListRequestSchemaIds",
              "title": "W3CCredentialsListRequest",
              "value": {
                "description": "Schema identifiers, all of which to match",
                "value": {
                  "description": "Credential schema identifier",
                  "schema": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    "example": "https://myhost:8021",
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestSchemaIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "W3CCredentialsListRequestSchemaIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestSubjectIds",
            "key": "subject_ids",
            "schema": {
              "generatedName": "w3CCredentialsListRequestSubjectIds",
              "title": "W3CCredentialsListRequest",
              "value": {
                "description": "Subject identifiers, all of which to match",
                "value": {
                  "description": "Subject identifier",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestSubjectIdsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "W3CCredentialsListRequestSubjectIds",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestTagQuery",
            "key": "tag_query",
            "schema": {
              "generatedName": "w3CCredentialsListRequestTagQuery",
              "title": "W3CCredentialsListRequest",
              "value": {
                "description": "Tag filter",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestTagQueryKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "description": "Tag value",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestTagQueryValue",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "W3CCredentialsListRequestTagQuery",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "w3CCredentialsListRequestTypes",
            "key": "types",
            "schema": {
              "generatedName": "w3CCredentialsListRequestTypes",
              "title": "W3CCredentialsListRequest",
              "value": {
                "value": {
                  "description": "Credential type to match",
                  "schema": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$",
                    "example": "https://myhost:8021",
                    "type": "string"
                  },
                  "generatedName": "W3CCredentialsListRequestTypesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "W3CCredentialsListRequestTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "W3CCredentialsListRequest",
        "title": "W3CCredentialsListRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WalletList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "walletListResults",
            "key": "results",
            "schema": {
              "generatedName": "walletListResults",
              "nameOverride": "WalletList",
              "title": "WalletList",
              "value": {
                "description": "List of wallet records",
                "value": {
                  "generatedName": "WalletListResultsItem",
                  "schema": "WalletRecord",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WalletListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WalletList",
        "nameOverride": "WalletList",
        "title": "WalletList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WalletModuleResponse": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "WalletModuleResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "WalletModuleResponseValue",
          "type": "unknown"
        },
        "generatedName": "WalletModuleResponse",
        "groupName": [],
        "type": "map"
      },
      "WalletRecord": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "walletRecordCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "walletRecordCreatedAt",
              "nameOverride": "WalletRecord",
              "title": "WalletRecord",
              "value": {
                "description": "Time of record creation",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "WalletRecordCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletRecordKeyManagementMode",
            "key": "key_management_mode",
            "schema": {
              "description": "Mode regarding management of wallet key",
              "generatedName": "WalletRecordKeyManagementMode",
              "values": [
                {
                  "generatedName": "managed",
                  "value": "managed",
                  "casing": {}
                },
                {
                  "generatedName": "unmanaged",
                  "value": "unmanaged",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletRecordSettings",
            "key": "settings",
            "schema": {
              "generatedName": "walletRecordSettings",
              "nameOverride": "WalletRecord",
              "title": "WalletRecord",
              "value": {
                "allOf": [],
                "properties": [],
                "allOfPropertyConflicts": [],
                "description": "Settings for this wallet.",
                "generatedName": "WalletRecordSettings",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletRecordState",
            "key": "state",
            "schema": {
              "generatedName": "walletRecordState",
              "nameOverride": "WalletRecord",
              "title": "WalletRecord",
              "value": {
                "description": "Current record state",
                "schema": {
                  "example": "active",
                  "type": "string"
                },
                "generatedName": "WalletRecordState",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletRecordUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "walletRecordUpdatedAt",
              "nameOverride": "WalletRecord",
              "title": "WalletRecord",
              "value": {
                "description": "Time of last record update",
                "schema": {
                  "pattern": "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$",
                  "example": "2021-12-31 23:59:59+00:00",
                  "type": "string"
                },
                "generatedName": "WalletRecordUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "walletRecordWalletId",
            "key": "wallet_id",
            "schema": {
              "description": "Wallet record ID",
              "schema": {
                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "type": "string"
              },
              "generatedName": "WalletRecordWalletId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WalletRecord",
        "nameOverride": "WalletRecord",
        "title": "WalletRecord",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WriteLedgerRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "writeLedgerRequestLedgerId",
            "key": "ledger_id",
            "schema": {
              "generatedName": "writeLedgerRequestLedgerId",
              "nameOverride": "WriteLedgerRequest",
              "title": "WriteLedgerRequest",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WriteLedgerRequestLedgerId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WriteLedgerRequest",
        "nameOverride": "WriteLedgerRequest",
        "title": "WriteLedgerRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ActionMenuFetchResult_result": {
        "description": "Action menu",
        "generatedName": "ActionMenuFetchResultResult",
        "schema": "Menu",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "AttachDecoratorData_jws": {
        "description": "Detached Java Web Signature",
        "generatedName": "AttachDecoratorDataJws",
        "schema": "AttachDecoratorDataJWS",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "CredDefValue_primary": {
        "description": "Primary value for credential definition",
        "generatedName": "CredDefValuePrimary",
        "schema": "CredDefValuePrimary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "CredDefValue_revocation": {
        "description": "Revocation value for credential definition",
        "generatedName": "CredDefValueRevocation",
        "schema": "CredDefValueRevocation",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "Credential_proof": {
        "description": "The proof of the credential",
        "generatedName": "CredentialProof",
        "schema": "LinkedDataProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "CredentialDefinition_value": {
        "description": "Credential definition primary and revocation values",
        "generatedName": "CredentialDefinitionValue",
        "schema": "CredDefValue",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "DIDCreate_options": {
        "description": "To define a key type and/or a did depending on chosen DID method.",
        "generatedName": "DidCreateOptions",
        "schema": "DIDCreateOptions",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "DIDXRequest_did_doc_attach": {
        "description": "As signed attachment, DID Doc associated with DID",
        "generatedName": "DidxRequestDidDocAttach",
        "schema": "AttachDecorator",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "Doc_options": {
        "description": "Signature options",
        "generatedName": "DocOptions",
        "schema": "SignatureOptions",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyCredAbstract_key_correctness_proof": {
        "description": "Key correctness proof",
        "generatedName": "IndyCredAbstractKeyCorrectnessProof",
        "schema": "IndyKeyCorrectnessProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyCredPrecis_cred_info": {
        "description": "Credential info",
        "generatedName": "IndyCredPrecisCredInfo",
        "schema": "IndyCredInfo",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyCredPrecis_interval": {
        "description": "Non-revocation interval from presentation request",
        "generatedName": "IndyCredPrecisInterval",
        "schema": "IndyNonRevocationInterval",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyCredential_values_value": {
        "description": "Attribute value",
        "generatedName": "IndyCredentialValuesValue",
        "schema": "IndyAttrValue",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyPrimaryProof_eq_proof": {
        "generatedName": "IndyPrimaryProofEqProof",
        "description": "Indy equality proof",
        "value": {
          "generatedName": "IndyPrimaryProofEqProof",
          "schema": "IndyEQProof",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "groupName": [],
        "type": "nullable"
      },
      "IndyProof_proof": {
        "description": "Indy proof.proof content",
        "generatedName": "IndyProofProof",
        "schema": "IndyProofProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyProof_requested_proof": {
        "description": "Indy proof.requested_proof content",
        "generatedName": "IndyProofRequestedProof",
        "schema": "IndyProofRequestedProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyProofProof_aggregated_proof": {
        "description": "Indy proof aggregated proof",
        "generatedName": "IndyProofProofAggregatedProof",
        "schema": "IndyProofProofAggregatedProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyProofProofProofsProof_non_revoc_proof": {
        "generatedName": "IndyProofProofProofsProofNonRevocProof",
        "description": "Indy non-revocation proof",
        "value": {
          "generatedName": "IndyProofProofProofsProofNonRevocProof",
          "schema": "IndyNonRevocProof",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "groupName": [],
        "type": "nullable"
      },
      "IndyProofProofProofsProof_primary_proof": {
        "description": "Indy primary proof",
        "generatedName": "IndyProofProofProofsProofPrimaryProof",
        "schema": "IndyPrimaryProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyProofReqAttrSpec_non_revoked": {
        "generatedName": "IndyProofReqAttrSpecNonRevoked",
        "value": {
          "generatedName": "IndyProofReqAttrSpecNonRevoked",
          "schema": "IndyProofReqAttrSpecNonRevoked",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "groupName": [],
        "type": "nullable"
      },
      "IndyProofReqPredSpec_non_revoked": {
        "generatedName": "IndyProofReqPredSpecNonRevoked",
        "value": {
          "generatedName": "IndyProofReqPredSpecNonRevoked",
          "schema": "IndyProofReqPredSpecNonRevoked",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "groupName": [],
        "type": "nullable"
      },
      "IndyProofRequest_non_revoked": {
        "generatedName": "IndyProofRequestNonRevoked",
        "value": {
          "generatedName": "IndyProofRequestNonRevoked",
          "schema": "IndyProofRequestNonRevoked",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "groupName": [],
        "type": "nullable"
      },
      "IndyRevRegDef_value": {
        "description": "Revocation registry definition value",
        "generatedName": "IndyRevRegDefValue",
        "schema": "IndyRevRegDefValue",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyRevRegDefValue_publicKeys": {
        "description": "Public keys",
        "generatedName": "IndyRevRegDefValuePublicKeys",
        "schema": "IndyRevRegDefValuePublicKeys",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IndyRevRegEntry_value": {
        "description": "Revocation registry entry value",
        "generatedName": "IndyRevRegEntryValue",
        "schema": "IndyRevRegEntryValue",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "InputDescriptors_schema": {
        "description": "Accepts a list of schema or a dict containing filters like oneof_filter.",
        "generatedName": "InputDescriptorsSchema",
        "schema": "SchemasInputDescriptorFilter",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "InvitationRecord_invitation": {
        "description": "Out of band invitation message",
        "generatedName": "InvitationRecordInvitation",
        "schema": "InvitationMessage",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IssuerRevRegRecord_revoc_reg_def": {
        "description": "Revocation registry definition",
        "generatedName": "IssuerRevRegRecordRevocRegDef",
        "schema": "IndyRevRegDef",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "IssuerRevRegRecord_revoc_reg_entry": {
        "description": "Revocation registry entry",
        "generatedName": "IssuerRevRegRecordRevocRegEntry",
        "schema": "IndyRevRegEntry",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "KeylistQuery_paginate": {
        "description": "Pagination info",
        "generatedName": "KeylistQueryPaginate",
        "schema": "KeylistQueryPaginate",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "LDProofVCDetail_credential": {
        "description": "Detail of the JSON-LD Credential to be issued",
        "generatedName": "LdProofVcDetailCredential",
        "schema": "Credential",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "LDProofVCDetail_options": {
        "description": "Options for specifying how the linked data proof is created.",
        "generatedName": "LdProofVcDetailOptions",
        "schema": "LDProofVCDetailOptions",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "LDProofVCDetailOptions_credentialStatus": {
        "description": "The credential status mechanism to use for the credential. Omitting the property indicates the issued credential will not include a credential status",
        "generatedName": "LdProofVcDetailOptionsCredentialStatus",
        "schema": "CredentialStatusOptions",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "SchemaSendResult_schema": {
        "description": "Schema definition",
        "generatedName": "SchemaSendResultSchema",
        "schema": "Schema",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "SendMenu_menu": {
        "description": "Menu to send to connection",
        "generatedName": "SendMenuMenu",
        "schema": "MenuJson",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "SignedDoc_proof": {
        "description": "Linked data proof",
        "generatedName": "SignedDocProof",
        "schema": "SignatureOptions",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "TxnOrCredentialDefinitionSendResult_txn": {
        "description": "Credential definition transaction to endorse",
        "generatedName": "TxnOrCredentialDefinitionSendResultTxn",
        "schema": "TransactionRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "TxnOrPublishRevocationsResult_txn": {
        "description": "Revocation registry revocations transaction to endorse",
        "generatedName": "TxnOrPublishRevocationsResultTxn",
        "schema": "TransactionRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "TxnOrRegisterLedgerNymResponse_txn": {
        "description": "DID transaction to endorse",
        "generatedName": "TxnOrRegisterLedgerNymResponseTxn",
        "schema": "TransactionRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "TxnOrRevRegResult_txn": {
        "description": "Revocation registry definition transaction to endorse",
        "generatedName": "TxnOrRevRegResultTxn",
        "schema": "TransactionRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "TxnOrSchemaSendResult_sent": {
        "description": "Content sent",
        "generatedName": "TxnOrSchemaSendResultSent",
        "schema": "SchemaSendResult",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "TxnOrSchemaSendResult_txn": {
        "description": "Schema transaction to endorse",
        "generatedName": "TxnOrSchemaSendResultTxn",
        "schema": "TransactionRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialBoundOfferRequest_counter_proposal": {
        "description": "Optional counter-proposal",
        "generatedName": "V10CredentialBoundOfferRequestCounterProposal",
        "schema": "CredentialProposal",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialExchange_credential": {
        "description": "Credential as stored",
        "generatedName": "V10CredentialExchangeCredential",
        "schema": "IndyCredInfo",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialExchange_credential_offer": {
        "description": "(Indy) credential offer",
        "generatedName": "V10CredentialExchangeCredentialOffer",
        "schema": "IndyCredAbstract",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialExchange_credential_offer_dict": {
        "description": "Credential offer message",
        "generatedName": "V10CredentialExchangeCredentialOfferDict",
        "schema": "CredentialOffer",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialExchange_credential_proposal_dict": {
        "description": "Credential proposal message",
        "generatedName": "V10CredentialExchangeCredentialProposalDict",
        "schema": "CredentialProposal",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialExchange_credential_request": {
        "description": "(Indy) credential request",
        "generatedName": "V10CredentialExchangeCredentialRequest",
        "schema": "IndyCredRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10CredentialExchange_raw_credential": {
        "description": "Credential as received, prior to storage in holder wallet",
        "generatedName": "V10CredentialExchangeRawCredential",
        "schema": "IndyCredential",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10DiscoveryExchangeListResult_results_inner": {
        "description": "Discover Features v1.0 exchange record",
        "generatedName": "V10DiscoveryExchangeListResultResultsInner",
        "schema": "V10DiscoveryRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10DiscoveryRecord_disclose": {
        "description": "Disclose message",
        "generatedName": "V10DiscoveryRecordDisclose",
        "schema": "Disclose",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10DiscoveryRecord_query_msg": {
        "description": "Query message",
        "generatedName": "V10DiscoveryRecordQueryMsg",
        "schema": "Query",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10PresentationExchange_presentation": {
        "description": "(Indy) presentation (also known as proof)",
        "generatedName": "V10PresentationExchangePresentation",
        "schema": "IndyProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10PresentationExchange_presentation_proposal_dict": {
        "description": "Presentation proposal message",
        "generatedName": "V10PresentationExchangePresentationProposalDict",
        "schema": "PresentationProposal",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10PresentationExchange_presentation_request": {
        "description": "(Indy) presentation request (also known as proof request)",
        "generatedName": "V10PresentationExchangePresentationRequest",
        "schema": "IndyProofRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V10PresentationExchange_presentation_request_dict": {
        "description": "Presentation request message",
        "generatedName": "V10PresentationExchangePresentationRequestDict",
        "schema": "PresentationRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredBoundOfferRequest_counter_preview": {
        "description": "Optional content for counter-proposal",
        "generatedName": "V20CredBoundOfferRequestCounterPreview",
        "schema": "V20CredPreview",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredBoundOfferRequest_filter": {
        "description": "Credential specification criteria by format",
        "generatedName": "V20CredBoundOfferRequestFilter",
        "schema": "V20CredFilter",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecord_by_format": {
        "description": "Attachment content by format for proposal, offer, request, and issue",
        "generatedName": "V20CredExRecordByFormat",
        "schema": "V20CredExRecordByFormat",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecord_cred_issue": {
        "description": "Serialized credential issue message",
        "generatedName": "V20CredExRecordCredIssue",
        "schema": "V20CredIssue",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecord_cred_offer": {
        "description": "Credential offer message",
        "generatedName": "V20CredExRecordCredOffer",
        "schema": "V20CredOffer",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecord_cred_preview": {
        "description": "Credential preview from credential proposal",
        "generatedName": "V20CredExRecordCredPreview",
        "schema": "V20CredPreview",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecord_cred_proposal": {
        "description": "Credential proposal message",
        "generatedName": "V20CredExRecordCredProposal",
        "schema": "V20CredProposal",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecord_cred_request": {
        "description": "Serialized credential request message",
        "generatedName": "V20CredExRecordCredRequest",
        "schema": "V20CredRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredExRecordDetail_cred_ex_record": {
        "description": "Credential exchange record",
        "generatedName": "V20CredExRecordDetailCredExRecord",
        "schema": "V20CredExRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredFilter_indy": {
        "description": "Credential filter for indy",
        "generatedName": "V20CredFilterIndy",
        "schema": "V20CredFilterIndy",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredFilter_ld_proof": {
        "description": "Credential filter for linked data proof",
        "generatedName": "V20CredFilterLdProof",
        "schema": "LDProofVCDetail",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredProposal_credential_preview": {
        "description": "Credential preview",
        "generatedName": "V20CredProposalCredentialPreview",
        "schema": "V20CredPreview",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20CredRequestFree_filter": {
        "description": "Credential specification criteria by format",
        "generatedName": "V20CredRequestFreeFilter",
        "schema": "V20CredFilterLDProof",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20DiscoveryExchangeListResult_results_inner": {
        "description": "Discover Features v2.0 exchange record",
        "generatedName": "V20DiscoveryExchangeListResultResultsInner",
        "schema": "V20DiscoveryRecord",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20DiscoveryRecord_disclosures": {
        "description": "Disclosures message",
        "generatedName": "V20DiscoveryRecordDisclosures",
        "schema": "Disclosures",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20DiscoveryRecord_queries_msg": {
        "description": "Queries message",
        "generatedName": "V20DiscoveryRecordQueriesMsg",
        "schema": "Queries",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresExRecord_by_format": {
        "description": "Attachment content by format for proposal, request, and presentation",
        "generatedName": "V20PresExRecordByFormat",
        "schema": "V20PresExRecordByFormat",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresExRecord_pres": {
        "description": "Presentation message",
        "generatedName": "V20PresExRecordPres",
        "schema": "V20Pres",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresExRecord_pres_proposal": {
        "description": "Presentation proposal message",
        "generatedName": "V20PresExRecordPresProposal",
        "schema": "V20PresProposal",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresExRecord_pres_request": {
        "description": "Presentation request message",
        "generatedName": "V20PresExRecordPresRequest",
        "schema": "V20PresRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresProposalByFormat_dif": {
        "description": "Presentation proposal for DIF",
        "generatedName": "V20PresProposalByFormatDif",
        "schema": "DIFProofProposal",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresProposalByFormat_indy": {
        "description": "Presentation proposal for indy",
        "generatedName": "V20PresProposalByFormatIndy",
        "schema": "IndyProofRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresRequestByFormat_dif": {
        "description": "Presentation request for DIF",
        "generatedName": "V20PresRequestByFormatDif",
        "schema": "DIFProofRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresRequestByFormat_indy": {
        "description": "Presentation request for indy",
        "generatedName": "V20PresRequestByFormatIndy",
        "schema": "IndyProofRequest",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresSpecByFormatRequest_dif": {
        "description": "Optional Presentation specification for DIF, overrides the PresentionExchange record's PresRequest",
        "generatedName": "V20PresSpecByFormatRequestDif",
        "schema": "DIFPresSpec",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "V20PresSpecByFormatRequest_indy": {
        "description": "Presentation specification for indy",
        "generatedName": "V20PresSpecByFormatRequestIndy",
        "schema": "IndyPresSpec",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "VerifyRequest_doc": {
        "description": "Signed document",
        "generatedName": "VerifyRequestDoc",
        "schema": "SignedDoc",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "AuthorizationHeader": {
      "headerName": "Authorization",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}