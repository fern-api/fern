{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "AccountDetails": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "category": "optional<CategoryEnum>",
              "end_user_email_address": {
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "end_user_organization_name": "optional<string>",
              "end_user_origin_id": "optional<string>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "integration": "optional<string>",
              "integration_slug": "optional<string>",
              "is_duplicate": {
                "docs": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                "type": "optional<boolean>",
              },
              "status": "optional<string>",
              "webhook_listener_url": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccountDetailsAndActions": {
            "docs": "# The LinkedAccount Object
### Description
The `LinkedAccount` object is used to represent an end user's link with a specific integration.

### Usage Example
View a list of your organization's `LinkedAccount` objects.",
            "inline": undefined,
            "properties": {
              "category": "optional<CategoryEnum>",
              "end_user_email_address": "string",
              "end_user_organization_name": "string",
              "end_user_origin_id": "optional<string>",
              "id": "string",
              "integration": "optional<AccountDetailsAndActionsIntegration>",
              "is_duplicate": {
                "docs": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                "type": "optional<boolean>",
              },
              "status": "AccountDetailsAndActionsStatusEnum",
              "status_detail": "optional<string>",
              "webhook_listener_url": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccountDetailsAndActionsIntegration": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "available_model_operations": "optional<list<ModelOperation>>",
              "categories": "list<CategoriesEnum>",
              "color": "string",
              "image": "optional<string>",
              "name": "string",
              "passthrough_available": "boolean",
              "slug": "string",
              "square_image": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccountDetailsAndActionsStatusEnum": {
            "docs": "* `COMPLETE` - COMPLETE
* `INCOMPLETE` - INCOMPLETE
* `RELINK_NEEDED` - RELINK_NEEDED",
            "enum": [
              "COMPLETE",
              "INCOMPLETE",
              "RELINK_NEEDED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccountIntegration": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "api_endpoints_to_documentation_urls": {
                "docs": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}",
                "type": "optional<map<string, unknown>>",
              },
              "categories": {
                "docs": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
                "type": "optional<list<CategoriesEnum>>",
              },
              "color": {
                "docs": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 18,
                  "minLength": undefined,
                  "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                },
              },
              "image": {
                "docs": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "is_in_beta": {
                "docs": "If checked, this integration will not appear in the linking flow, and will appear elsewhere with a Beta tag.",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "Company name.",
                "type": "string",
              },
              "slug": "optional<string>",
              "square_image": {
                "docs": "Company logo in square shape. <b>Upload an image with a white background.</b>",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccountToken": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account_token": "string",
              "integration": "AccountIntegration",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccountTypeEnum": {
            "docs": "* `SAVINGS` - SAVINGS
* `CHECKING` - CHECKING",
            "enum": [
              "SAVINGS",
              "CHECKING",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AvailableActions": {
            "docs": "# The AvailableActions Object
### Description
The `Activity` object is used to see all available model/operation combinations for an integration.

### Usage Example
Fetch all the actions available for the `Zenefits` integration.",
            "inline": undefined,
            "properties": {
              "available_model_operations": "optional<list<ModelOperation>>",
              "integration": "AccountIntegration",
              "passthrough_available": "boolean",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BankInfo": {
            "docs": "# The BankInfo Object
### Description
The `BankInfo` object is used to represent the Bank Account information for an Employee.

### Usage Example
Fetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.",
            "inline": undefined,
            "properties": {
              "account_number": {
                "docs": "The account number.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "account_type": {
                "docs": "The bank account type

* `SAVINGS` - SAVINGS
* `CHECKING` - CHECKING",
                "type": "optional<AccountTypeEnum>",
              },
              "bank_name": {
                "docs": "The bank name.",
                "type": "optional<string>",
              },
              "employee": {
                "docs": "The employee with this bank account.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "remote_created_at": {
                "docs": "When the matching bank object was created in the third party system.",
                "type": "optional<datetime>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "routing_number": {
                "docs": "The routing number.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Benefit": {
            "docs": "# The Benefit Object
### Description
The `Benefit` object is used to represent a benefit that an employee has enrolled in.

### Usage Example
Fetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.",
            "inline": undefined,
            "properties": {
              "benefit_plan_type": {
                "docs": "The type of benefit plan",
                "type": "optional<string>",
              },
              "company_contribution": {
                "docs": "The company's contribution.",
                "type": "optional<double>",
              },
              "employee": {
                "docs": "The employee on the plan.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employee_contribution": {
                "docs": "The employee's contribution.",
                "type": "optional<double>",
              },
              "end_date": {
                "docs": "The day and time the benefit ended.",
                "type": "optional<datetime>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "provider_name": {
                "docs": "The name of the benefit provider.",
                "type": "optional<string>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "start_date": {
                "docs": "The day and time the benefit started.",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CategoriesEnum": {
            "docs": "* `hris` - hris
* `ats` - ats
* `accounting` - accounting
* `ticketing` - ticketing
* `crm` - crm
* `mktg` - mktg
* `filestorage` - filestorage",
            "enum": [
              "hris",
              "ats",
              "accounting",
              "ticketing",
              "crm",
              "mktg",
              "filestorage",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CategoryEnum": {
            "docs": "* `hris` - hris
* `ats` - ats
* `accounting` - accounting
* `ticketing` - ticketing
* `crm` - crm
* `mktg` - mktg
* `filestorage` - filestorage",
            "enum": [
              "hris",
              "ats",
              "accounting",
              "ticketing",
              "crm",
              "mktg",
              "filestorage",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CommonModelScopesBodyRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "disabled_fields": "list<string>",
              "enabled_actions": "list<EnabledActionsEnum>",
              "model_id": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Company": {
            "docs": "# The Company Object
### Description
The `Company` object is used to represent a company within the HRIS / Payroll system.

### Usage Example
Fetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.",
            "inline": undefined,
            "properties": {
              "display_name": {
                "docs": "The company's display name.",
                "type": "optional<string>",
              },
              "eins": {
                "docs": "The company's Employer Identification Numbers.",
                "type": "optional<list<optional<string>>>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "legal_name": {
                "docs": "The company's legal name.",
                "type": "optional<string>",
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConditionSchema": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "common_model": {
                "docs": "The common model for which a condition schema is defined.",
                "type": "optional<string>",
              },
              "condition_type": {
                "docs": "The type of value(s) that can be set for this condition.

* `BOOLEAN` - BOOLEAN
* `DATE` - DATE
* `DATE_TIME` - DATE_TIME
* `INTEGER` - INTEGER
* `FLOAT` - FLOAT
* `STRING` - STRING
* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
                "type": "ConditionTypeEnum",
              },
              "field_name": {
                "docs": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. "location_type".",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "is_unique": {
                "docs": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times.",
                "type": "optional<boolean>",
              },
              "native_name": {
                "docs": "User-facing *native condition* name. e.g. "Skip Manager".",
                "type": "optional<string>",
              },
              "operators": {
                "docs": "The schemas for the operators that can be used on a condition.",
                "type": "list<OperatorSchema>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConditionTypeEnum": {
            "docs": "* `BOOLEAN` - BOOLEAN
* `DATE` - DATE
* `DATE_TIME` - DATE_TIME
* `INTEGER` - INTEGER
* `FLOAT` - FLOAT
* `STRING` - STRING
* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
            "enum": [
              "BOOLEAN",
              "DATE",
              "DATE_TIME",
              "INTEGER",
              "FLOAT",
              "STRING",
              "LIST_OF_STRINGS",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CountryEnum": {
            "docs": "* `AF` - Afghanistan
* `AX` - Åland Islands
* `AL` - Albania
* `DZ` - Algeria
* `AS` - American Samoa
* `AD` - Andorra
* `AO` - Angola
* `AI` - Anguilla
* `AQ` - Antarctica
* `AG` - Antigua and Barbuda
* `AR` - Argentina
* `AM` - Armenia
* `AW` - Aruba
* `AU` - Australia
* `AT` - Austria
* `AZ` - Azerbaijan
* `BS` - Bahamas
* `BH` - Bahrain
* `BD` - Bangladesh
* `BB` - Barbados
* `BY` - Belarus
* `BE` - Belgium
* `BZ` - Belize
* `BJ` - Benin
* `BM` - Bermuda
* `BT` - Bhutan
* `BO` - Bolivia
* `BQ` - Bonaire, Sint Eustatius and Saba
* `BA` - Bosnia and Herzegovina
* `BW` - Botswana
* `BV` - Bouvet Island
* `BR` - Brazil
* `IO` - British Indian Ocean Territory
* `BN` - Brunei
* `BG` - Bulgaria
* `BF` - Burkina Faso
* `BI` - Burundi
* `CV` - Cabo Verde
* `KH` - Cambodia
* `CM` - Cameroon
* `CA` - Canada
* `KY` - Cayman Islands
* `CF` - Central African Republic
* `TD` - Chad
* `CL` - Chile
* `CN` - China
* `CX` - Christmas Island
* `CC` - Cocos (Keeling) Islands
* `CO` - Colombia
* `KM` - Comoros
* `CG` - Congo
* `CD` - Congo (the Democratic Republic of the)
* `CK` - Cook Islands
* `CR` - Costa Rica
* `CI` - Côte d'Ivoire
* `HR` - Croatia
* `CU` - Cuba
* `CW` - Curaçao
* `CY` - Cyprus
* `CZ` - Czechia
* `DK` - Denmark
* `DJ` - Djibouti
* `DM` - Dominica
* `DO` - Dominican Republic
* `EC` - Ecuador
* `EG` - Egypt
* `SV` - El Salvador
* `GQ` - Equatorial Guinea
* `ER` - Eritrea
* `EE` - Estonia
* `SZ` - Eswatini
* `ET` - Ethiopia
* `FK` - Falkland Islands (Malvinas)
* `FO` - Faroe Islands
* `FJ` - Fiji
* `FI` - Finland
* `FR` - France
* `GF` - French Guiana
* `PF` - French Polynesia
* `TF` - French Southern Territories
* `GA` - Gabon
* `GM` - Gambia
* `GE` - Georgia
* `DE` - Germany
* `GH` - Ghana
* `GI` - Gibraltar
* `GR` - Greece
* `GL` - Greenland
* `GD` - Grenada
* `GP` - Guadeloupe
* `GU` - Guam
* `GT` - Guatemala
* `GG` - Guernsey
* `GN` - Guinea
* `GW` - Guinea-Bissau
* `GY` - Guyana
* `HT` - Haiti
* `HM` - Heard Island and McDonald Islands
* `VA` - Holy See
* `HN` - Honduras
* `HK` - Hong Kong
* `HU` - Hungary
* `IS` - Iceland
* `IN` - India
* `ID` - Indonesia
* `IR` - Iran
* `IQ` - Iraq
* `IE` - Ireland
* `IM` - Isle of Man
* `IL` - Israel
* `IT` - Italy
* `JM` - Jamaica
* `JP` - Japan
* `JE` - Jersey
* `JO` - Jordan
* `KZ` - Kazakhstan
* `KE` - Kenya
* `KI` - Kiribati
* `KW` - Kuwait
* `KG` - Kyrgyzstan
* `LA` - Laos
* `LV` - Latvia
* `LB` - Lebanon
* `LS` - Lesotho
* `LR` - Liberia
* `LY` - Libya
* `LI` - Liechtenstein
* `LT` - Lithuania
* `LU` - Luxembourg
* `MO` - Macao
* `MG` - Madagascar
* `MW` - Malawi
* `MY` - Malaysia
* `MV` - Maldives
* `ML` - Mali
* `MT` - Malta
* `MH` - Marshall Islands
* `MQ` - Martinique
* `MR` - Mauritania
* `MU` - Mauritius
* `YT` - Mayotte
* `MX` - Mexico
* `FM` - Micronesia (Federated States of)
* `MD` - Moldova
* `MC` - Monaco
* `MN` - Mongolia
* `ME` - Montenegro
* `MS` - Montserrat
* `MA` - Morocco
* `MZ` - Mozambique
* `MM` - Myanmar
* `NA` - Namibia
* `NR` - Nauru
* `NP` - Nepal
* `NL` - Netherlands
* `NC` - New Caledonia
* `NZ` - New Zealand
* `NI` - Nicaragua
* `NE` - Niger
* `NG` - Nigeria
* `NU` - Niue
* `NF` - Norfolk Island
* `KP` - North Korea
* `MK` - North Macedonia
* `MP` - Northern Mariana Islands
* `NO` - Norway
* `OM` - Oman
* `PK` - Pakistan
* `PW` - Palau
* `PS` - Palestine, State of
* `PA` - Panama
* `PG` - Papua New Guinea
* `PY` - Paraguay
* `PE` - Peru
* `PH` - Philippines
* `PN` - Pitcairn
* `PL` - Poland
* `PT` - Portugal
* `PR` - Puerto Rico
* `QA` - Qatar
* `RE` - Réunion
* `RO` - Romania
* `RU` - Russia
* `RW` - Rwanda
* `BL` - Saint Barthélemy
* `SH` - Saint Helena, Ascension and Tristan da Cunha
* `KN` - Saint Kitts and Nevis
* `LC` - Saint Lucia
* `MF` - Saint Martin (French part)
* `PM` - Saint Pierre and Miquelon
* `VC` - Saint Vincent and the Grenadines
* `WS` - Samoa
* `SM` - San Marino
* `ST` - Sao Tome and Principe
* `SA` - Saudi Arabia
* `SN` - Senegal
* `RS` - Serbia
* `SC` - Seychelles
* `SL` - Sierra Leone
* `SG` - Singapore
* `SX` - Sint Maarten (Dutch part)
* `SK` - Slovakia
* `SI` - Slovenia
* `SB` - Solomon Islands
* `SO` - Somalia
* `ZA` - South Africa
* `GS` - South Georgia and the South Sandwich Islands
* `KR` - South Korea
* `SS` - South Sudan
* `ES` - Spain
* `LK` - Sri Lanka
* `SD` - Sudan
* `SR` - Suriname
* `SJ` - Svalbard and Jan Mayen
* `SE` - Sweden
* `CH` - Switzerland
* `SY` - Syria
* `TW` - Taiwan
* `TJ` - Tajikistan
* `TZ` - Tanzania
* `TH` - Thailand
* `TL` - Timor-Leste
* `TG` - Togo
* `TK` - Tokelau
* `TO` - Tonga
* `TT` - Trinidad and Tobago
* `TN` - Tunisia
* `TR` - Turkey
* `TM` - Turkmenistan
* `TC` - Turks and Caicos Islands
* `TV` - Tuvalu
* `UG` - Uganda
* `UA` - Ukraine
* `AE` - United Arab Emirates
* `GB` - United Kingdom
* `UM` - United States Minor Outlying Islands
* `US` - United States of America
* `UY` - Uruguay
* `UZ` - Uzbekistan
* `VU` - Vanuatu
* `VE` - Venezuela
* `VN` - Vietnam
* `VG` - Virgin Islands (British)
* `VI` - Virgin Islands (U.S.)
* `WF` - Wallis and Futuna
* `EH` - Western Sahara
* `YE` - Yemen
* `ZM` - Zambia
* `ZW` - Zimbabwe",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "CV",
              "KH",
              "CM",
              "CA",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "KP",
              "MK",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "KR",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "UM",
              "US",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataPassthroughRequest": {
            "docs": "# The DataPassthrough Object
### Description
The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.

### Usage Example
Create a `DataPassthrough` to get team hierarchies from your Rippling integration.",
            "inline": undefined,
            "properties": {
              "base_url_override": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "data": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "headers": {
                "docs": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                "type": "optional<map<string, unknown>>",
              },
              "method": "MethodEnum",
              "multipart_form_data": {
                "docs": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.",
                "type": "optional<list<MultipartFormFieldRequest>>",
              },
              "normalize_response": {
                "docs": "Optional. If true, the response will always be an object of the form `{"type": T, "value": ...}` where `T` will be one of `string, boolean, number, null, array, object`.",
                "type": "optional<boolean>",
              },
              "path": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "request_format": "optional<RequestFormatEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DebugModeLog": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "dashboard_view": "string",
              "log_id": "string",
              "log_summary": "DebugModelLogSummary",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DebugModelLogSummary": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "method": "string",
              "status_code": "integer",
              "url": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Deduction": {
            "docs": "# The Deduction Object
### Description
The `Deduction` object is used to represent an array of the wages withheld from total earnings for the purpose of paying taxes.

### Usage Example
Fetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.",
            "inline": undefined,
            "properties": {
              "company_deduction": {
                "docs": "The amount of money that is withheld on behalf of an employee by the company.",
                "type": "optional<double>",
              },
              "employee_deduction": {
                "docs": "The amount of money that is withheld from an employee's gross pay by the employee.",
                "type": "optional<double>",
              },
              "employee_payroll_run": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "name": {
                "docs": "The deduction's name.",
                "type": "optional<string>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Earning": {
            "docs": "# The Earning Object
### Description
The `Earning` object is used to represent an array of different compensations that an employee receives within specific wage categories.

### Usage Example
Fetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.",
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "The amount earned.",
                "type": "optional<double>",
              },
              "employee_payroll_run": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "type": {
                "docs": "The type of earning.

* `SALARY` - SALARY
* `REIMBURSEMENT` - REIMBURSEMENT
* `OVERTIME` - OVERTIME
* `BONUS` - BONUS",
                "type": "optional<EarningTypeEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EarningTypeEnum": {
            "docs": "* `SALARY` - SALARY
* `REIMBURSEMENT` - REIMBURSEMENT
* `OVERTIME` - OVERTIME
* `BONUS` - BONUS",
            "enum": [
              "SALARY",
              "REIMBURSEMENT",
              "OVERTIME",
              "BONUS",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Employee": {
            "docs": "# The Employee Object
### Description
The `Employee` object is used to represent any person who has been employed by a company.

### Usage Example
Fetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
            "inline": undefined,
            "properties": {
              "avatar": {
                "docs": "The URL of the employee's avatar image.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": 2000,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "company": {
                "docs": "The ID of the employee's company.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "custom_fields": {
                "docs": "Custom fields configured for a given model.",
                "type": "optional<map<string, unknown>>",
              },
              "date_of_birth": {
                "docs": "The employee's date of birth.",
                "type": "optional<datetime>",
              },
              "display_full_name": {
                "docs": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
                "type": "optional<string>",
              },
              "employee_number": {
                "docs": "The employee's number that appears in the third-party integration's UI.",
                "type": "optional<string>",
              },
              "employment_status": {
                "docs": "The employment status of the employee.

* `ACTIVE` - ACTIVE
* `PENDING` - PENDING
* `INACTIVE` - INACTIVE",
                "type": "optional<EmploymentStatusEnum>",
              },
              "employments": {
                "docs": "Array of `Employment` IDs for this Employee.",
                "type": "optional<list<optional<string>>>",
              },
              "ethnicity": {
                "docs": "The employee's ethnicity.

* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE
* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT
* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN
* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO
* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES
* `WHITE` - WHITE
* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "type": "optional<EthnicityEnum>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "first_name": {
                "docs": "The employee's first name.",
                "type": "optional<string>",
              },
              "gender": {
                "docs": "The employee's gender.

* `MALE` - MALE
* `FEMALE` - FEMALE
* `NON-BINARY` - NON-BINARY
* `OTHER` - OTHER
* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "type": "optional<GenderEnum>",
              },
              "groups": "optional<list<optional<string>>>",
              "hire_date": {
                "availability": "deprecated",
                "docs": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
                "type": "optional<datetime>",
              },
              "home_location": {
                "docs": "The employee's home address.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "last_name": {
                "docs": "The employee's last name.",
                "type": "optional<string>",
              },
              "manager": {
                "docs": "The employee ID of the employee's manager.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "marital_status": {
                "docs": "The employee's filing status as related to marital status.

* `SINGLE` - SINGLE
* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY
* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY
* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD
* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
                "type": "optional<MaritalStatusEnum>",
              },
              "mobile_phone_number": {
                "docs": "The employee's mobile phone number.",
                "type": "optional<string>",
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "pay_group": {
                "docs": "The employee's pay group",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "personal_email": {
                "docs": "The employee's personal email.",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": 254,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "remote_created_at": {
                "docs": "When the third party's employee was created.",
                "type": "optional<datetime>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": "optional<boolean>",
              "ssn": {
                "docs": "The employee's social security number.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "start_date": {
                "docs": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
                "type": "optional<datetime>",
              },
              "team": {
                "docs": "The employee's team.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "termination_date": {
                "docs": "The employee's termination date.",
                "type": "optional<datetime>",
              },
              "username": {
                "docs": "The employee's username that appears in the remote UI.",
                "type": "optional<string>",
              },
              "work_email": {
                "docs": "The employee's work email.",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": 254,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "work_location": {
                "docs": "The employee's work address.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeEndpointRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "model": "EmployeeRequest",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeePayrollRun": {
            "docs": "# The EmployeePayrollRun Object
### Description
The `EmployeePayrollRun` object is used to represent an employee's pay statement for a specific payroll run.

### Usage Example
Fetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.",
            "inline": undefined,
            "properties": {
              "check_date": {
                "docs": "The day and time the payroll run was checked.",
                "type": "optional<datetime>",
              },
              "deductions": "optional<list<Deduction>>",
              "earnings": "optional<list<Earning>>",
              "employee": {
                "docs": "The employee whose payroll is being run.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "end_date": {
                "docs": "The day and time the payroll run ended.",
                "type": "optional<datetime>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "gross_pay": {
                "docs": "The total earnings throughout a given period for an employee before any deductions are made.",
                "type": "optional<double>",
              },
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "net_pay": {
                "docs": "The take-home pay throughout a given period for an employee after deductions are made.",
                "type": "optional<double>",
              },
              "payroll_run": {
                "docs": "The payroll being run.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "start_date": {
                "docs": "The day and time the payroll run started.",
                "type": "optional<datetime>",
              },
              "taxes": "optional<list<Tax>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeRequest": {
            "docs": "# The Employee Object
### Description
The `Employee` object is used to represent any person who has been employed by a company.

### Usage Example
Fetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
            "inline": undefined,
            "properties": {
              "avatar": {
                "docs": "The URL of the employee's avatar image.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": 2000,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "company": {
                "docs": "The ID of the employee's company.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "date_of_birth": {
                "docs": "The employee's date of birth.",
                "type": "optional<datetime>",
              },
              "display_full_name": {
                "docs": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
                "type": "optional<string>",
              },
              "employee_number": {
                "docs": "The employee's number that appears in the third-party integration's UI.",
                "type": "optional<string>",
              },
              "employment_status": {
                "docs": "The employment status of the employee.

* `ACTIVE` - ACTIVE
* `PENDING` - PENDING
* `INACTIVE` - INACTIVE",
                "type": "optional<EmploymentStatusEnum>",
              },
              "employments": {
                "docs": "Array of `Employment` IDs for this Employee.",
                "type": "optional<list<optional<string>>>",
              },
              "ethnicity": {
                "docs": "The employee's ethnicity.

* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE
* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT
* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN
* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO
* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES
* `WHITE` - WHITE
* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "type": "optional<EthnicityEnum>",
              },
              "first_name": {
                "docs": "The employee's first name.",
                "type": "optional<string>",
              },
              "gender": {
                "docs": "The employee's gender.

* `MALE` - MALE
* `FEMALE` - FEMALE
* `NON-BINARY` - NON-BINARY
* `OTHER` - OTHER
* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
                "type": "optional<GenderEnum>",
              },
              "groups": "optional<list<optional<string>>>",
              "hire_date": {
                "availability": "deprecated",
                "docs": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
                "type": "optional<datetime>",
              },
              "home_location": {
                "docs": "The employee's home address.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "integration_params": "optional<map<string, unknown>>",
              "last_name": {
                "docs": "The employee's last name.",
                "type": "optional<string>",
              },
              "linked_account_params": "optional<map<string, unknown>>",
              "manager": {
                "docs": "The employee ID of the employee's manager.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "marital_status": {
                "docs": "The employee's filing status as related to marital status.

* `SINGLE` - SINGLE
* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY
* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY
* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD
* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
                "type": "optional<MaritalStatusEnum>",
              },
              "mobile_phone_number": {
                "docs": "The employee's mobile phone number.",
                "type": "optional<string>",
              },
              "pay_group": {
                "docs": "The employee's pay group",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "personal_email": {
                "docs": "The employee's personal email.",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": 254,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "ssn": {
                "docs": "The employee's social security number.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "start_date": {
                "docs": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
                "type": "optional<datetime>",
              },
              "team": {
                "docs": "The employee's team.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "termination_date": {
                "docs": "The employee's termination date.",
                "type": "optional<datetime>",
              },
              "username": {
                "docs": "The employee's username that appears in the remote UI.",
                "type": "optional<string>",
              },
              "work_email": {
                "docs": "The employee's work email.",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": 254,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "work_location": {
                "docs": "The employee's work address.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeeResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": "list<ErrorValidationProblem>",
              "logs": "optional<list<DebugModeLog>>",
              "model": "Employee",
              "warnings": "list<WarningValidationProblem>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Employment": {
            "docs": "# The Employment Object
### Description
The `Employment` object is used to represent a job position at a company.

Please note: When there is a change in pay or title, integrations with historical data will create new Employment objects while integrations without historical data will update existing ones.

### Usage Example
Fetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.",
            "inline": undefined,
            "properties": {
              "effective_date": {
                "docs": "The position's effective date.",
                "type": "optional<datetime>",
              },
              "employee": {
                "docs": "The employee holding this position.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employment_type": {
                "docs": "The position's type of employment.

* `FULL_TIME` - FULL_TIME
* `PART_TIME` - PART_TIME
* `INTERN` - INTERN
* `CONTRACTOR` - CONTRACTOR
* `FREELANCE` - FREELANCE",
                "type": "optional<EmploymentTypeEnum>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "flsa_status": {
                "docs": "The position's FLSA status.

* `EXEMPT` - EXEMPT
* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT
* `NONEXEMPT` - NONEXEMPT
* `OWNER` - OWNER",
                "type": "optional<FlsaStatusEnum>",
              },
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "job_title": {
                "docs": "The position's title.",
                "type": "optional<string>",
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "pay_currency": {
                "docs": "The position's currency code.

* `XUA` - ADB Unit of Account
* `AFN` - Afghan Afghani
* `AFA` - Afghan Afghani (1927–2002)
* `ALL` - Albanian Lek
* `ALK` - Albanian Lek (1946–1965)
* `DZD` - Algerian Dinar
* `ADP` - Andorran Peseta
* `AOA` - Angolan Kwanza
* `AOK` - Angolan Kwanza (1977–1991)
* `AON` - Angolan New Kwanza (1990–2000)
* `AOR` - Angolan Readjusted Kwanza (1995–1999)
* `ARA` - Argentine Austral
* `ARS` - Argentine Peso
* `ARM` - Argentine Peso (1881–1970)
* `ARP` - Argentine Peso (1983–1985)
* `ARL` - Argentine Peso Ley (1970–1983)
* `AMD` - Armenian Dram
* `AWG` - Aruban Florin
* `AUD` - Australian Dollar
* `ATS` - Austrian Schilling
* `AZN` - Azerbaijani Manat
* `AZM` - Azerbaijani Manat (1993–2006)
* `BSD` - Bahamian Dollar
* `BHD` - Bahraini Dinar
* `BDT` - Bangladeshi Taka
* `BBD` - Barbadian Dollar
* `BYN` - Belarusian Ruble
* `BYB` - Belarusian Ruble (1994–1999)
* `BYR` - Belarusian Ruble (2000–2016)
* `BEF` - Belgian Franc
* `BEC` - Belgian Franc (convertible)
* `BEL` - Belgian Franc (financial)
* `BZD` - Belize Dollar
* `BMD` - Bermudan Dollar
* `BTN` - Bhutanese Ngultrum
* `BOB` - Bolivian Boliviano
* `BOL` - Bolivian Boliviano (1863–1963)
* `BOV` - Bolivian Mvdol
* `BOP` - Bolivian Peso
* `BAM` - Bosnia-Herzegovina Convertible Mark
* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
* `BWP` - Botswanan Pula
* `BRC` - Brazilian Cruzado (1986–1989)
* `BRZ` - Brazilian Cruzeiro (1942–1967)
* `BRE` - Brazilian Cruzeiro (1990–1993)
* `BRR` - Brazilian Cruzeiro (1993–1994)
* `BRN` - Brazilian New Cruzado (1989–1990)
* `BRB` - Brazilian New Cruzeiro (1967–1986)
* `BRL` - Brazilian Real
* `GBP` - British Pound
* `BND` - Brunei Dollar
* `BGL` - Bulgarian Hard Lev
* `BGN` - Bulgarian Lev
* `BGO` - Bulgarian Lev (1879–1952)
* `BGM` - Bulgarian Socialist Lev
* `BUK` - Burmese Kyat
* `BIF` - Burundian Franc
* `XPF` - CFP Franc
* `KHR` - Cambodian Riel
* `CAD` - Canadian Dollar
* `CVE` - Cape Verdean Escudo
* `KYD` - Cayman Islands Dollar
* `XAF` - Central African CFA Franc
* `CLE` - Chilean Escudo
* `CLP` - Chilean Peso
* `CLF` - Chilean Unit of Account (UF)
* `CNX` - Chinese People’s Bank Dollar
* `CNY` - Chinese Yuan
* `CNH` - Chinese Yuan (offshore)
* `COP` - Colombian Peso
* `COU` - Colombian Real Value Unit
* `KMF` - Comorian Franc
* `CDF` - Congolese Franc
* `CRC` - Costa Rican Colón
* `HRD` - Croatian Dinar
* `HRK` - Croatian Kuna
* `CUC` - Cuban Convertible Peso
* `CUP` - Cuban Peso
* `CYP` - Cypriot Pound
* `CZK` - Czech Koruna
* `CSK` - Czechoslovak Hard Koruna
* `DKK` - Danish Krone
* `DJF` - Djiboutian Franc
* `DOP` - Dominican Peso
* `NLG` - Dutch Guilder
* `XCD` - East Caribbean Dollar
* `DDM` - East German Mark
* `ECS` - Ecuadorian Sucre
* `ECV` - Ecuadorian Unit of Constant Value
* `EGP` - Egyptian Pound
* `GQE` - Equatorial Guinean Ekwele
* `ERN` - Eritrean Nakfa
* `EEK` - Estonian Kroon
* `ETB` - Ethiopian Birr
* `EUR` - Euro
* `XBA` - European Composite Unit
* `XEU` - European Currency Unit
* `XBB` - European Monetary Unit
* `XBC` - European Unit of Account (XBC)
* `XBD` - European Unit of Account (XBD)
* `FKP` - Falkland Islands Pound
* `FJD` - Fijian Dollar
* `FIM` - Finnish Markka
* `FRF` - French Franc
* `XFO` - French Gold Franc
* `XFU` - French UIC-Franc
* `GMD` - Gambian Dalasi
* `GEK` - Georgian Kupon Larit
* `GEL` - Georgian Lari
* `DEM` - German Mark
* `GHS` - Ghanaian Cedi
* `GHC` - Ghanaian Cedi (1979–2007)
* `GIP` - Gibraltar Pound
* `XAU` - Gold
* `GRD` - Greek Drachma
* `GTQ` - Guatemalan Quetzal
* `GWP` - Guinea-Bissau Peso
* `GNF` - Guinean Franc
* `GNS` - Guinean Syli
* `GYD` - Guyanaese Dollar
* `HTG` - Haitian Gourde
* `HNL` - Honduran Lempira
* `HKD` - Hong Kong Dollar
* `HUF` - Hungarian Forint
* `IMP` - IMP
* `ISK` - Icelandic Króna
* `ISJ` - Icelandic Króna (1918–1981)
* `INR` - Indian Rupee
* `IDR` - Indonesian Rupiah
* `IRR` - Iranian Rial
* `IQD` - Iraqi Dinar
* `IEP` - Irish Pound
* `ILS` - Israeli New Shekel
* `ILP` - Israeli Pound
* `ILR` - Israeli Shekel (1980–1985)
* `ITL` - Italian Lira
* `JMD` - Jamaican Dollar
* `JPY` - Japanese Yen
* `JOD` - Jordanian Dinar
* `KZT` - Kazakhstani Tenge
* `KES` - Kenyan Shilling
* `KWD` - Kuwaiti Dinar
* `KGS` - Kyrgystani Som
* `LAK` - Laotian Kip
* `LVL` - Latvian Lats
* `LVR` - Latvian Ruble
* `LBP` - Lebanese Pound
* `LSL` - Lesotho Loti
* `LRD` - Liberian Dollar
* `LYD` - Libyan Dinar
* `LTL` - Lithuanian Litas
* `LTT` - Lithuanian Talonas
* `LUL` - Luxembourg Financial Franc
* `LUC` - Luxembourgian Convertible Franc
* `LUF` - Luxembourgian Franc
* `MOP` - Macanese Pataca
* `MKD` - Macedonian Denar
* `MKN` - Macedonian Denar (1992–1993)
* `MGA` - Malagasy Ariary
* `MGF` - Malagasy Franc
* `MWK` - Malawian Kwacha
* `MYR` - Malaysian Ringgit
* `MVR` - Maldivian Rufiyaa
* `MVP` - Maldivian Rupee (1947–1981)
* `MLF` - Malian Franc
* `MTL` - Maltese Lira
* `MTP` - Maltese Pound
* `MRU` - Mauritanian Ouguiya
* `MRO` - Mauritanian Ouguiya (1973–2017)
* `MUR` - Mauritian Rupee
* `MXV` - Mexican Investment Unit
* `MXN` - Mexican Peso
* `MXP` - Mexican Silver Peso (1861–1992)
* `MDC` - Moldovan Cupon
* `MDL` - Moldovan Leu
* `MCF` - Monegasque Franc
* `MNT` - Mongolian Tugrik
* `MAD` - Moroccan Dirham
* `MAF` - Moroccan Franc
* `MZE` - Mozambican Escudo
* `MZN` - Mozambican Metical
* `MZM` - Mozambican Metical (1980–2006)
* `MMK` - Myanmar Kyat
* `NAD` - Namibian Dollar
* `NPR` - Nepalese Rupee
* `ANG` - Netherlands Antillean Guilder
* `TWD` - New Taiwan Dollar
* `NZD` - New Zealand Dollar
* `NIO` - Nicaraguan Córdoba
* `NIC` - Nicaraguan Córdoba (1988–1991)
* `NGN` - Nigerian Naira
* `KPW` - North Korean Won
* `NOK` - Norwegian Krone
* `OMR` - Omani Rial
* `PKR` - Pakistani Rupee
* `XPD` - Palladium
* `PAB` - Panamanian Balboa
* `PGK` - Papua New Guinean Kina
* `PYG` - Paraguayan Guarani
* `PEI` - Peruvian Inti
* `PEN` - Peruvian Sol
* `PES` - Peruvian Sol (1863–1965)
* `PHP` - Philippine Peso
* `XPT` - Platinum
* `PLN` - Polish Zloty
* `PLZ` - Polish Zloty (1950–1995)
* `PTE` - Portuguese Escudo
* `GWE` - Portuguese Guinea Escudo
* `QAR` - Qatari Rial
* `XRE` - RINET Funds
* `RHD` - Rhodesian Dollar
* `RON` - Romanian Leu
* `ROL` - Romanian Leu (1952–2006)
* `RUB` - Russian Ruble
* `RUR` - Russian Ruble (1991–1998)
* `RWF` - Rwandan Franc
* `SVC` - Salvadoran Colón
* `WST` - Samoan Tala
* `SAR` - Saudi Riyal
* `RSD` - Serbian Dinar
* `CSD` - Serbian Dinar (2002–2006)
* `SCR` - Seychellois Rupee
* `SLL` - Sierra Leonean Leone
* `XAG` - Silver
* `SGD` - Singapore Dollar
* `SKK` - Slovak Koruna
* `SIT` - Slovenian Tolar
* `SBD` - Solomon Islands Dollar
* `SOS` - Somali Shilling
* `ZAR` - South African Rand
* `ZAL` - South African Rand (financial)
* `KRH` - South Korean Hwan (1953–1962)
* `KRW` - South Korean Won
* `KRO` - South Korean Won (1945–1953)
* `SSP` - South Sudanese Pound
* `SUR` - Soviet Rouble
* `ESP` - Spanish Peseta
* `ESA` - Spanish Peseta (A account)
* `ESB` - Spanish Peseta (convertible account)
* `XDR` - Special Drawing Rights
* `LKR` - Sri Lankan Rupee
* `SHP` - St. Helena Pound
* `XSU` - Sucre
* `SDD` - Sudanese Dinar (1992–2007)
* `SDG` - Sudanese Pound
* `SDP` - Sudanese Pound (1957–1998)
* `SRD` - Surinamese Dollar
* `SRG` - Surinamese Guilder
* `SZL` - Swazi Lilangeni
* `SEK` - Swedish Krona
* `CHF` - Swiss Franc
* `SYP` - Syrian Pound
* `STN` - São Tomé & Príncipe Dobra
* `STD` - São Tomé & Príncipe Dobra (1977–2017)
* `TVD` - TVD
* `TJR` - Tajikistani Ruble
* `TJS` - Tajikistani Somoni
* `TZS` - Tanzanian Shilling
* `XTS` - Testing Currency Code
* `THB` - Thai Baht
* `XXX` - The codes assigned for transactions where no currency is involved
* `TPE` - Timorese Escudo
* `TOP` - Tongan Paʻanga
* `TTD` - Trinidad & Tobago Dollar
* `TND` - Tunisian Dinar
* `TRY` - Turkish Lira
* `TRL` - Turkish Lira (1922–2005)
* `TMT` - Turkmenistani Manat
* `TMM` - Turkmenistani Manat (1993–2009)
* `USD` - US Dollar
* `USN` - US Dollar (Next day)
* `USS` - US Dollar (Same day)
* `UGX` - Ugandan Shilling
* `UGS` - Ugandan Shilling (1966–1987)
* `UAH` - Ukrainian Hryvnia
* `UAK` - Ukrainian Karbovanets
* `AED` - United Arab Emirates Dirham
* `UYW` - Uruguayan Nominal Wage Index Unit
* `UYU` - Uruguayan Peso
* `UYP` - Uruguayan Peso (1975–1993)
* `UYI` - Uruguayan Peso (Indexed Units)
* `UZS` - Uzbekistani Som
* `VUV` - Vanuatu Vatu
* `VES` - Venezuelan Bolívar
* `VEB` - Venezuelan Bolívar (1871–2008)
* `VEF` - Venezuelan Bolívar (2008–2018)
* `VND` - Vietnamese Dong
* `VNN` - Vietnamese Dong (1978–1985)
* `CHE` - WIR Euro
* `CHW` - WIR Franc
* `XOF` - West African CFA Franc
* `YDD` - Yemeni Dinar
* `YER` - Yemeni Rial
* `YUN` - Yugoslavian Convertible Dinar (1990–1992)
* `YUD` - Yugoslavian Hard Dinar (1966–1990)
* `YUM` - Yugoslavian New Dinar (1994–2002)
* `YUR` - Yugoslavian Reformed Dinar (1992–1993)
* `ZWN` - ZWN
* `ZRN` - Zairean New Zaire (1993–1998)
* `ZRZ` - Zairean Zaire (1971–1993)
* `ZMW` - Zambian Kwacha
* `ZMK` - Zambian Kwacha (1968–2012)
* `ZWD` - Zimbabwean Dollar (1980–2008)
* `ZWR` - Zimbabwean Dollar (2008)
* `ZWL` - Zimbabwean Dollar (2009)",
                "type": "optional<PayCurrencyEnum>",
              },
              "pay_frequency": {
                "docs": "The position's pay frequency.

* `WEEKLY` - WEEKLY
* `BIWEEKLY` - BIWEEKLY
* `MONTHLY` - MONTHLY
* `QUARTERLY` - QUARTERLY
* `SEMIANNUALLY` - SEMIANNUALLY
* `ANNUALLY` - ANNUALLY
* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY
* `PRO_RATA` - PRO_RATA
* `SEMIMONTHLY` - SEMIMONTHLY",
                "type": "optional<PayFrequencyEnum>",
              },
              "pay_group": {
                "docs": "The employment's pay group",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "pay_period": {
                "docs": "The time period this pay rate encompasses.

* `HOUR` - HOUR
* `DAY` - DAY
* `WEEK` - WEEK
* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS
* `SEMIMONTHLY` - SEMIMONTHLY
* `MONTH` - MONTH
* `QUARTER` - QUARTER
* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS
* `YEAR` - YEAR",
                "type": "optional<PayPeriodEnum>",
              },
              "pay_rate": {
                "docs": "The position's pay rate in dollars.",
                "type": "optional<double>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentStatusEnum": {
            "docs": "* `ACTIVE` - ACTIVE
* `PENDING` - PENDING
* `INACTIVE` - INACTIVE",
            "enum": [
              "ACTIVE",
              "PENDING",
              "INACTIVE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentTypeEnum": {
            "docs": "* `FULL_TIME` - FULL_TIME
* `PART_TIME` - PART_TIME
* `INTERN` - INTERN
* `CONTRACTOR` - CONTRACTOR
* `FREELANCE` - FREELANCE",
            "enum": [
              "FULL_TIME",
              "PART_TIME",
              "INTERN",
              "CONTRACTOR",
              "FREELANCE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EnabledActionsEnum": {
            "docs": "* `READ` - READ
* `WRITE` - WRITE",
            "enum": [
              "READ",
              "WRITE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EncodingEnum": {
            "docs": "* `RAW` - RAW
* `BASE64` - BASE64
* `GZIP_BASE64` - GZIP_BASE64",
            "enum": [
              "RAW",
              "BASE64",
              "GZIP_BASE64",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EndUserDetailsRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "categories": {
                "docs": "The integration categories to show in Merge Link.",
                "type": "list<CategoriesEnum>",
              },
              "common_models": {
                "docs": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
                "type": "optional<list<CommonModelScopesBodyRequest>>",
              },
              "end_user_email_address": {
                "docs": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "end_user_organization_name": {
                "docs": "Your end user's organization.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "end_user_origin_id": {
                "docs": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "integration": {
                "docs": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "link_expiry_mins": {
                "default": 30,
                "docs": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 10080,
                  "min": 30,
                  "multipleOf": undefined,
                },
              },
              "should_create_magic_link_url": {
                "default": false,
                "docs": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ErrorValidationProblem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": "string",
              "problem_type": "string",
              "source": "optional<ValidationProblemSource>",
              "title": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EthnicityEnum": {
            "docs": "* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE
* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT
* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN
* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO
* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES
* `WHITE` - WHITE
* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "enum": [
              "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
              "ASIAN_OR_INDIAN_SUBCONTINENT",
              "BLACK_OR_AFRICAN_AMERICAN",
              "HISPANIC_OR_LATINO",
              "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
              "TWO_OR_MORE_RACES",
              "WHITE",
              "PREFER_NOT_TO_DISCLOSE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FlsaStatusEnum": {
            "docs": "* `EXEMPT` - EXEMPT
* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT
* `NONEXEMPT` - NONEXEMPT
* `OWNER` - OWNER",
            "enum": [
              "EXEMPT",
              "SALARIED_NONEXEMPT",
              "NONEXEMPT",
              "OWNER",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenderEnum": {
            "docs": "* `MALE` - MALE
* `FEMALE` - FEMALE
* `NON-BINARY` - NON-BINARY
* `OTHER` - OTHER
* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "enum": [
              "MALE",
              "FEMALE",
              {
                "name": "NonBinary",
                "value": "NON-BINARY",
              },
              "OTHER",
              "PREFER_NOT_TO_DISCLOSE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRemoteKeyRequest": {
            "docs": "# The GenerateRemoteKey Object
### Description
The `GenerateRemoteKey` object is used to represent a request for a new remote key.

### Usage Example
Post a `GenerateRemoteKey` to create a new remote key.",
            "inline": undefined,
            "properties": {
              "name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Group": {
            "docs": "# The Group Object
### Description
The `Group` object is used to represent any subset of employees, such as `PayGroup` or `Team`. Employees can be in multiple Groups.

### Usage Example
Fetch from the `LIST Employee` endpoint and expand groups to view an employee's groups.",
            "inline": undefined,
            "properties": {
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "name": {
                "docs": "The group name.",
                "type": "optional<string>",
              },
              "parent_group": {
                "docs": "The parent group for this group.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "type": {
                "docs": "The group type

* `TEAM` - TEAM
* `DEPARTMENT` - DEPARTMENT
* `COST_CENTER` - COST_CENTER
* `BUSINESS_UNIT` - BUSINESS_UNIT
* `GROUP` - GROUP",
                "type": "optional<GroupTypeEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GroupTypeEnum": {
            "docs": "* `TEAM` - TEAM
* `DEPARTMENT` - DEPARTMENT
* `COST_CENTER` - COST_CENTER
* `BUSINESS_UNIT` - BUSINESS_UNIT
* `GROUP` - GROUP",
            "enum": [
              "TEAM",
              "DEPARTMENT",
              "COST_CENTER",
              "BUSINESS_UNIT",
              "GROUP",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IgnoreCommonModelRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 256,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "reason": "ReasonEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Issue": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "end_user": "optional<map<string, unknown>>",
              "error_description": "string",
              "error_details": "optional<list<string>>",
              "first_incident_time": "optional<datetime>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "is_muted": "optional<boolean>",
              "last_incident_time": "optional<datetime>",
              "status": {
                "docs": "Status of the issue. Options: ('ONGOING', 'RESOLVED')

* `ONGOING` - ONGOING
* `RESOLVED` - RESOLVED",
                "type": "optional<IssueStatusEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IssueStatusEnum": {
            "docs": "* `ONGOING` - ONGOING
* `RESOLVED` - RESOLVED",
            "enum": [
              "ONGOING",
              "RESOLVED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkToken": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "integration_name": "optional<string>",
              "link_token": "string",
              "magic_link_url": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedAccountCondition": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "common_model": {
                "docs": "The common model for a specific condition.",
                "type": "optional<string>",
              },
              "condition_schema_id": {
                "docs": "The ID indicating which condition schema to use for a specific condition.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "field_name": {
                "docs": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. "location_type".",
                "type": "optional<string>",
              },
              "native_name": {
                "docs": "User-facing *native condition* name. e.g. "Skip Manager".",
                "type": "optional<string>",
              },
              "operator": {
                "docs": "The operator for a specific condition.",
                "type": "string",
              },
              "value": "optional<unknown>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedAccountConditionRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "condition_schema_id": {
                "docs": "The ID indicating which condition schema to use for a specific condition.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "operator": {
                "docs": "The operator for a specific condition.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "value": "unknown",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedAccountSelectiveSyncConfiguration": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "linked_account_conditions": {
                "docs": "The conditions belonging to a selective sync.",
                "type": "optional<list<LinkedAccountCondition>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedAccountSelectiveSyncConfigurationRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "linked_account_conditions": {
                "docs": "The conditions belonging to a selective sync.",
                "type": "list<LinkedAccountConditionRequest>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedAccountStatus": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "can_make_request": "boolean",
              "linked_account_status": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Location": {
            "docs": "# The Location Object
### Description
The `Location` object is used to represent an address that can be associated with an employee.

### Usage Example
Fetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.",
            "inline": undefined,
            "properties": {
              "city": {
                "docs": "The location's city.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The location's country.

* `AF` - Afghanistan
* `AX` - Åland Islands
* `AL` - Albania
* `DZ` - Algeria
* `AS` - American Samoa
* `AD` - Andorra
* `AO` - Angola
* `AI` - Anguilla
* `AQ` - Antarctica
* `AG` - Antigua and Barbuda
* `AR` - Argentina
* `AM` - Armenia
* `AW` - Aruba
* `AU` - Australia
* `AT` - Austria
* `AZ` - Azerbaijan
* `BS` - Bahamas
* `BH` - Bahrain
* `BD` - Bangladesh
* `BB` - Barbados
* `BY` - Belarus
* `BE` - Belgium
* `BZ` - Belize
* `BJ` - Benin
* `BM` - Bermuda
* `BT` - Bhutan
* `BO` - Bolivia
* `BQ` - Bonaire, Sint Eustatius and Saba
* `BA` - Bosnia and Herzegovina
* `BW` - Botswana
* `BV` - Bouvet Island
* `BR` - Brazil
* `IO` - British Indian Ocean Territory
* `BN` - Brunei
* `BG` - Bulgaria
* `BF` - Burkina Faso
* `BI` - Burundi
* `CV` - Cabo Verde
* `KH` - Cambodia
* `CM` - Cameroon
* `CA` - Canada
* `KY` - Cayman Islands
* `CF` - Central African Republic
* `TD` - Chad
* `CL` - Chile
* `CN` - China
* `CX` - Christmas Island
* `CC` - Cocos (Keeling) Islands
* `CO` - Colombia
* `KM` - Comoros
* `CG` - Congo
* `CD` - Congo (the Democratic Republic of the)
* `CK` - Cook Islands
* `CR` - Costa Rica
* `CI` - Côte d'Ivoire
* `HR` - Croatia
* `CU` - Cuba
* `CW` - Curaçao
* `CY` - Cyprus
* `CZ` - Czechia
* `DK` - Denmark
* `DJ` - Djibouti
* `DM` - Dominica
* `DO` - Dominican Republic
* `EC` - Ecuador
* `EG` - Egypt
* `SV` - El Salvador
* `GQ` - Equatorial Guinea
* `ER` - Eritrea
* `EE` - Estonia
* `SZ` - Eswatini
* `ET` - Ethiopia
* `FK` - Falkland Islands (Malvinas)
* `FO` - Faroe Islands
* `FJ` - Fiji
* `FI` - Finland
* `FR` - France
* `GF` - French Guiana
* `PF` - French Polynesia
* `TF` - French Southern Territories
* `GA` - Gabon
* `GM` - Gambia
* `GE` - Georgia
* `DE` - Germany
* `GH` - Ghana
* `GI` - Gibraltar
* `GR` - Greece
* `GL` - Greenland
* `GD` - Grenada
* `GP` - Guadeloupe
* `GU` - Guam
* `GT` - Guatemala
* `GG` - Guernsey
* `GN` - Guinea
* `GW` - Guinea-Bissau
* `GY` - Guyana
* `HT` - Haiti
* `HM` - Heard Island and McDonald Islands
* `VA` - Holy See
* `HN` - Honduras
* `HK` - Hong Kong
* `HU` - Hungary
* `IS` - Iceland
* `IN` - India
* `ID` - Indonesia
* `IR` - Iran
* `IQ` - Iraq
* `IE` - Ireland
* `IM` - Isle of Man
* `IL` - Israel
* `IT` - Italy
* `JM` - Jamaica
* `JP` - Japan
* `JE` - Jersey
* `JO` - Jordan
* `KZ` - Kazakhstan
* `KE` - Kenya
* `KI` - Kiribati
* `KW` - Kuwait
* `KG` - Kyrgyzstan
* `LA` - Laos
* `LV` - Latvia
* `LB` - Lebanon
* `LS` - Lesotho
* `LR` - Liberia
* `LY` - Libya
* `LI` - Liechtenstein
* `LT` - Lithuania
* `LU` - Luxembourg
* `MO` - Macao
* `MG` - Madagascar
* `MW` - Malawi
* `MY` - Malaysia
* `MV` - Maldives
* `ML` - Mali
* `MT` - Malta
* `MH` - Marshall Islands
* `MQ` - Martinique
* `MR` - Mauritania
* `MU` - Mauritius
* `YT` - Mayotte
* `MX` - Mexico
* `FM` - Micronesia (Federated States of)
* `MD` - Moldova
* `MC` - Monaco
* `MN` - Mongolia
* `ME` - Montenegro
* `MS` - Montserrat
* `MA` - Morocco
* `MZ` - Mozambique
* `MM` - Myanmar
* `NA` - Namibia
* `NR` - Nauru
* `NP` - Nepal
* `NL` - Netherlands
* `NC` - New Caledonia
* `NZ` - New Zealand
* `NI` - Nicaragua
* `NE` - Niger
* `NG` - Nigeria
* `NU` - Niue
* `NF` - Norfolk Island
* `KP` - North Korea
* `MK` - North Macedonia
* `MP` - Northern Mariana Islands
* `NO` - Norway
* `OM` - Oman
* `PK` - Pakistan
* `PW` - Palau
* `PS` - Palestine, State of
* `PA` - Panama
* `PG` - Papua New Guinea
* `PY` - Paraguay
* `PE` - Peru
* `PH` - Philippines
* `PN` - Pitcairn
* `PL` - Poland
* `PT` - Portugal
* `PR` - Puerto Rico
* `QA` - Qatar
* `RE` - Réunion
* `RO` - Romania
* `RU` - Russia
* `RW` - Rwanda
* `BL` - Saint Barthélemy
* `SH` - Saint Helena, Ascension and Tristan da Cunha
* `KN` - Saint Kitts and Nevis
* `LC` - Saint Lucia
* `MF` - Saint Martin (French part)
* `PM` - Saint Pierre and Miquelon
* `VC` - Saint Vincent and the Grenadines
* `WS` - Samoa
* `SM` - San Marino
* `ST` - Sao Tome and Principe
* `SA` - Saudi Arabia
* `SN` - Senegal
* `RS` - Serbia
* `SC` - Seychelles
* `SL` - Sierra Leone
* `SG` - Singapore
* `SX` - Sint Maarten (Dutch part)
* `SK` - Slovakia
* `SI` - Slovenia
* `SB` - Solomon Islands
* `SO` - Somalia
* `ZA` - South Africa
* `GS` - South Georgia and the South Sandwich Islands
* `KR` - South Korea
* `SS` - South Sudan
* `ES` - Spain
* `LK` - Sri Lanka
* `SD` - Sudan
* `SR` - Suriname
* `SJ` - Svalbard and Jan Mayen
* `SE` - Sweden
* `CH` - Switzerland
* `SY` - Syria
* `TW` - Taiwan
* `TJ` - Tajikistan
* `TZ` - Tanzania
* `TH` - Thailand
* `TL` - Timor-Leste
* `TG` - Togo
* `TK` - Tokelau
* `TO` - Tonga
* `TT` - Trinidad and Tobago
* `TN` - Tunisia
* `TR` - Turkey
* `TM` - Turkmenistan
* `TC` - Turks and Caicos Islands
* `TV` - Tuvalu
* `UG` - Uganda
* `UA` - Ukraine
* `AE` - United Arab Emirates
* `GB` - United Kingdom
* `UM` - United States Minor Outlying Islands
* `US` - United States of America
* `UY` - Uruguay
* `UZ` - Uzbekistan
* `VU` - Vanuatu
* `VE` - Venezuela
* `VN` - Vietnam
* `VG` - Virgin Islands (British)
* `VI` - Virgin Islands (U.S.)
* `WF` - Wallis and Futuna
* `EH` - Western Sahara
* `YE` - Yemen
* `ZM` - Zambia
* `ZW` - Zimbabwe",
                "type": "optional<CountryEnum>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "location_type": {
                "docs": "The location's type. Can be either WORK or HOME

* `HOME` - HOME
* `WORK` - WORK",
                "type": "optional<LocationTypeEnum>",
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "name": {
                "docs": "The location's name.",
                "type": "optional<string>",
              },
              "phone_number": {
                "docs": "The location's phone number.",
                "type": "optional<string>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "state": {
                "docs": "The location's state. Represents a region if outside of the US.",
                "type": "optional<string>",
              },
              "street_1": {
                "docs": "Line 1 of the location's street address.",
                "type": "optional<string>",
              },
              "street_2": {
                "docs": "Line 2 of the location's street address.",
                "type": "optional<string>",
              },
              "zip_code": {
                "docs": "The location's zip code or postal code.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LocationTypeEnum": {
            "docs": "* `HOME` - HOME
* `WORK` - WORK",
            "enum": [
              "HOME",
              "WORK",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MaritalStatusEnum": {
            "docs": "* `SINGLE` - SINGLE
* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY
* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY
* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD
* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "enum": [
              "SINGLE",
              "MARRIED_FILING_JOINTLY",
              "MARRIED_FILING_SEPARATELY",
              "HEAD_OF_HOUSEHOLD",
              "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MetaResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "has_conditional_params": "boolean",
              "has_required_linked_account_params": "boolean",
              "remote_field_classes": "optional<map<string, unknown>>",
              "request_schema": "map<string, unknown>",
              "status": "optional<LinkedAccountStatus>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MethodEnum": {
            "docs": "* `GET` - GET
* `OPTIONS` - OPTIONS
* `HEAD` - HEAD
* `POST` - POST
* `PUT` - PUT
* `PATCH` - PATCH
* `DELETE` - DELETE",
            "enum": [
              "GET",
              "OPTIONS",
              "HEAD",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelOperation": {
            "docs": "# The ModelOperation Object
### Description
The `ModelOperation` object is used to represent the operations that are currently supported for a given model.

### Usage Example
View what operations are supported for the `Candidate` endpoint.",
            "inline": undefined,
            "properties": {
              "available_operations": "list<string>",
              "model_name": "string",
              "required_post_parameters": "list<string>",
              "supported_fields": "list<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MultipartFormFieldRequest": {
            "docs": "# The MultipartFormField Object
### Description
The `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.

### Usage Example
Create a `MultipartFormField` to define a multipart form entry.",
            "inline": undefined,
            "properties": {
              "content_type": {
                "docs": "The MIME type of the file, if the field is for a file.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "data": {
                "docs": "The data for the form field.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "encoding": {
                "docs": "The encoding of the value of `data`. Defaults to `RAW` if not defined.

* `RAW` - RAW
* `BASE64` - BASE64
* `GZIP_BASE64` - GZIP_BASE64",
                "type": "optional<EncodingEnum>",
              },
              "file_name": {
                "docs": "The file name of the form field, if the field is for a file.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "name": {
                "docs": "The name of the form field",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OperatorSchema": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "is_unique": {
                "docs": "Whether the operator can be repeated multiple times.",
                "type": "optional<boolean>",
              },
              "operator": {
                "docs": "The operator for which an operator schema is defined.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedAccountDetailsAndActionsList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<AccountDetailsAndActions>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedBankInfoList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<BankInfo>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedBenefitList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Benefit>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedCompanyList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Company>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedConditionSchemaList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<ConditionSchema>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedEmployeeList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Employee>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedEmployeePayrollRunList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<EmployeePayrollRun>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedEmploymentList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Employment>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedGroupList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Group>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedIssueList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Issue>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedLocationList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Location>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedPayGroupList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<PayGroup>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedPayrollRunList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<PayrollRun>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedSyncStatusList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<SyncStatus>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedTeamList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<Team>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedTimeOffBalanceList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<TimeOffBalance>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedTimeOffList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": "optional<string>",
              "previous": "optional<string>",
              "results": "optional<list<TimeOff>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayCurrencyEnum": {
            "docs": "* `XUA` - ADB Unit of Account
* `AFN` - Afghan Afghani
* `AFA` - Afghan Afghani (1927–2002)
* `ALL` - Albanian Lek
* `ALK` - Albanian Lek (1946–1965)
* `DZD` - Algerian Dinar
* `ADP` - Andorran Peseta
* `AOA` - Angolan Kwanza
* `AOK` - Angolan Kwanza (1977–1991)
* `AON` - Angolan New Kwanza (1990–2000)
* `AOR` - Angolan Readjusted Kwanza (1995–1999)
* `ARA` - Argentine Austral
* `ARS` - Argentine Peso
* `ARM` - Argentine Peso (1881–1970)
* `ARP` - Argentine Peso (1983–1985)
* `ARL` - Argentine Peso Ley (1970–1983)
* `AMD` - Armenian Dram
* `AWG` - Aruban Florin
* `AUD` - Australian Dollar
* `ATS` - Austrian Schilling
* `AZN` - Azerbaijani Manat
* `AZM` - Azerbaijani Manat (1993–2006)
* `BSD` - Bahamian Dollar
* `BHD` - Bahraini Dinar
* `BDT` - Bangladeshi Taka
* `BBD` - Barbadian Dollar
* `BYN` - Belarusian Ruble
* `BYB` - Belarusian Ruble (1994–1999)
* `BYR` - Belarusian Ruble (2000–2016)
* `BEF` - Belgian Franc
* `BEC` - Belgian Franc (convertible)
* `BEL` - Belgian Franc (financial)
* `BZD` - Belize Dollar
* `BMD` - Bermudan Dollar
* `BTN` - Bhutanese Ngultrum
* `BOB` - Bolivian Boliviano
* `BOL` - Bolivian Boliviano (1863–1963)
* `BOV` - Bolivian Mvdol
* `BOP` - Bolivian Peso
* `BAM` - Bosnia-Herzegovina Convertible Mark
* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
* `BWP` - Botswanan Pula
* `BRC` - Brazilian Cruzado (1986–1989)
* `BRZ` - Brazilian Cruzeiro (1942–1967)
* `BRE` - Brazilian Cruzeiro (1990–1993)
* `BRR` - Brazilian Cruzeiro (1993–1994)
* `BRN` - Brazilian New Cruzado (1989–1990)
* `BRB` - Brazilian New Cruzeiro (1967–1986)
* `BRL` - Brazilian Real
* `GBP` - British Pound
* `BND` - Brunei Dollar
* `BGL` - Bulgarian Hard Lev
* `BGN` - Bulgarian Lev
* `BGO` - Bulgarian Lev (1879–1952)
* `BGM` - Bulgarian Socialist Lev
* `BUK` - Burmese Kyat
* `BIF` - Burundian Franc
* `XPF` - CFP Franc
* `KHR` - Cambodian Riel
* `CAD` - Canadian Dollar
* `CVE` - Cape Verdean Escudo
* `KYD` - Cayman Islands Dollar
* `XAF` - Central African CFA Franc
* `CLE` - Chilean Escudo
* `CLP` - Chilean Peso
* `CLF` - Chilean Unit of Account (UF)
* `CNX` - Chinese People’s Bank Dollar
* `CNY` - Chinese Yuan
* `CNH` - Chinese Yuan (offshore)
* `COP` - Colombian Peso
* `COU` - Colombian Real Value Unit
* `KMF` - Comorian Franc
* `CDF` - Congolese Franc
* `CRC` - Costa Rican Colón
* `HRD` - Croatian Dinar
* `HRK` - Croatian Kuna
* `CUC` - Cuban Convertible Peso
* `CUP` - Cuban Peso
* `CYP` - Cypriot Pound
* `CZK` - Czech Koruna
* `CSK` - Czechoslovak Hard Koruna
* `DKK` - Danish Krone
* `DJF` - Djiboutian Franc
* `DOP` - Dominican Peso
* `NLG` - Dutch Guilder
* `XCD` - East Caribbean Dollar
* `DDM` - East German Mark
* `ECS` - Ecuadorian Sucre
* `ECV` - Ecuadorian Unit of Constant Value
* `EGP` - Egyptian Pound
* `GQE` - Equatorial Guinean Ekwele
* `ERN` - Eritrean Nakfa
* `EEK` - Estonian Kroon
* `ETB` - Ethiopian Birr
* `EUR` - Euro
* `XBA` - European Composite Unit
* `XEU` - European Currency Unit
* `XBB` - European Monetary Unit
* `XBC` - European Unit of Account (XBC)
* `XBD` - European Unit of Account (XBD)
* `FKP` - Falkland Islands Pound
* `FJD` - Fijian Dollar
* `FIM` - Finnish Markka
* `FRF` - French Franc
* `XFO` - French Gold Franc
* `XFU` - French UIC-Franc
* `GMD` - Gambian Dalasi
* `GEK` - Georgian Kupon Larit
* `GEL` - Georgian Lari
* `DEM` - German Mark
* `GHS` - Ghanaian Cedi
* `GHC` - Ghanaian Cedi (1979–2007)
* `GIP` - Gibraltar Pound
* `XAU` - Gold
* `GRD` - Greek Drachma
* `GTQ` - Guatemalan Quetzal
* `GWP` - Guinea-Bissau Peso
* `GNF` - Guinean Franc
* `GNS` - Guinean Syli
* `GYD` - Guyanaese Dollar
* `HTG` - Haitian Gourde
* `HNL` - Honduran Lempira
* `HKD` - Hong Kong Dollar
* `HUF` - Hungarian Forint
* `IMP` - IMP
* `ISK` - Icelandic Króna
* `ISJ` - Icelandic Króna (1918–1981)
* `INR` - Indian Rupee
* `IDR` - Indonesian Rupiah
* `IRR` - Iranian Rial
* `IQD` - Iraqi Dinar
* `IEP` - Irish Pound
* `ILS` - Israeli New Shekel
* `ILP` - Israeli Pound
* `ILR` - Israeli Shekel (1980–1985)
* `ITL` - Italian Lira
* `JMD` - Jamaican Dollar
* `JPY` - Japanese Yen
* `JOD` - Jordanian Dinar
* `KZT` - Kazakhstani Tenge
* `KES` - Kenyan Shilling
* `KWD` - Kuwaiti Dinar
* `KGS` - Kyrgystani Som
* `LAK` - Laotian Kip
* `LVL` - Latvian Lats
* `LVR` - Latvian Ruble
* `LBP` - Lebanese Pound
* `LSL` - Lesotho Loti
* `LRD` - Liberian Dollar
* `LYD` - Libyan Dinar
* `LTL` - Lithuanian Litas
* `LTT` - Lithuanian Talonas
* `LUL` - Luxembourg Financial Franc
* `LUC` - Luxembourgian Convertible Franc
* `LUF` - Luxembourgian Franc
* `MOP` - Macanese Pataca
* `MKD` - Macedonian Denar
* `MKN` - Macedonian Denar (1992–1993)
* `MGA` - Malagasy Ariary
* `MGF` - Malagasy Franc
* `MWK` - Malawian Kwacha
* `MYR` - Malaysian Ringgit
* `MVR` - Maldivian Rufiyaa
* `MVP` - Maldivian Rupee (1947–1981)
* `MLF` - Malian Franc
* `MTL` - Maltese Lira
* `MTP` - Maltese Pound
* `MRU` - Mauritanian Ouguiya
* `MRO` - Mauritanian Ouguiya (1973–2017)
* `MUR` - Mauritian Rupee
* `MXV` - Mexican Investment Unit
* `MXN` - Mexican Peso
* `MXP` - Mexican Silver Peso (1861–1992)
* `MDC` - Moldovan Cupon
* `MDL` - Moldovan Leu
* `MCF` - Monegasque Franc
* `MNT` - Mongolian Tugrik
* `MAD` - Moroccan Dirham
* `MAF` - Moroccan Franc
* `MZE` - Mozambican Escudo
* `MZN` - Mozambican Metical
* `MZM` - Mozambican Metical (1980–2006)
* `MMK` - Myanmar Kyat
* `NAD` - Namibian Dollar
* `NPR` - Nepalese Rupee
* `ANG` - Netherlands Antillean Guilder
* `TWD` - New Taiwan Dollar
* `NZD` - New Zealand Dollar
* `NIO` - Nicaraguan Córdoba
* `NIC` - Nicaraguan Córdoba (1988–1991)
* `NGN` - Nigerian Naira
* `KPW` - North Korean Won
* `NOK` - Norwegian Krone
* `OMR` - Omani Rial
* `PKR` - Pakistani Rupee
* `XPD` - Palladium
* `PAB` - Panamanian Balboa
* `PGK` - Papua New Guinean Kina
* `PYG` - Paraguayan Guarani
* `PEI` - Peruvian Inti
* `PEN` - Peruvian Sol
* `PES` - Peruvian Sol (1863–1965)
* `PHP` - Philippine Peso
* `XPT` - Platinum
* `PLN` - Polish Zloty
* `PLZ` - Polish Zloty (1950–1995)
* `PTE` - Portuguese Escudo
* `GWE` - Portuguese Guinea Escudo
* `QAR` - Qatari Rial
* `XRE` - RINET Funds
* `RHD` - Rhodesian Dollar
* `RON` - Romanian Leu
* `ROL` - Romanian Leu (1952–2006)
* `RUB` - Russian Ruble
* `RUR` - Russian Ruble (1991–1998)
* `RWF` - Rwandan Franc
* `SVC` - Salvadoran Colón
* `WST` - Samoan Tala
* `SAR` - Saudi Riyal
* `RSD` - Serbian Dinar
* `CSD` - Serbian Dinar (2002–2006)
* `SCR` - Seychellois Rupee
* `SLL` - Sierra Leonean Leone
* `XAG` - Silver
* `SGD` - Singapore Dollar
* `SKK` - Slovak Koruna
* `SIT` - Slovenian Tolar
* `SBD` - Solomon Islands Dollar
* `SOS` - Somali Shilling
* `ZAR` - South African Rand
* `ZAL` - South African Rand (financial)
* `KRH` - South Korean Hwan (1953–1962)
* `KRW` - South Korean Won
* `KRO` - South Korean Won (1945–1953)
* `SSP` - South Sudanese Pound
* `SUR` - Soviet Rouble
* `ESP` - Spanish Peseta
* `ESA` - Spanish Peseta (A account)
* `ESB` - Spanish Peseta (convertible account)
* `XDR` - Special Drawing Rights
* `LKR` - Sri Lankan Rupee
* `SHP` - St. Helena Pound
* `XSU` - Sucre
* `SDD` - Sudanese Dinar (1992–2007)
* `SDG` - Sudanese Pound
* `SDP` - Sudanese Pound (1957–1998)
* `SRD` - Surinamese Dollar
* `SRG` - Surinamese Guilder
* `SZL` - Swazi Lilangeni
* `SEK` - Swedish Krona
* `CHF` - Swiss Franc
* `SYP` - Syrian Pound
* `STN` - São Tomé & Príncipe Dobra
* `STD` - São Tomé & Príncipe Dobra (1977–2017)
* `TVD` - TVD
* `TJR` - Tajikistani Ruble
* `TJS` - Tajikistani Somoni
* `TZS` - Tanzanian Shilling
* `XTS` - Testing Currency Code
* `THB` - Thai Baht
* `XXX` - The codes assigned for transactions where no currency is involved
* `TPE` - Timorese Escudo
* `TOP` - Tongan Paʻanga
* `TTD` - Trinidad & Tobago Dollar
* `TND` - Tunisian Dinar
* `TRY` - Turkish Lira
* `TRL` - Turkish Lira (1922–2005)
* `TMT` - Turkmenistani Manat
* `TMM` - Turkmenistani Manat (1993–2009)
* `USD` - US Dollar
* `USN` - US Dollar (Next day)
* `USS` - US Dollar (Same day)
* `UGX` - Ugandan Shilling
* `UGS` - Ugandan Shilling (1966–1987)
* `UAH` - Ukrainian Hryvnia
* `UAK` - Ukrainian Karbovanets
* `AED` - United Arab Emirates Dirham
* `UYW` - Uruguayan Nominal Wage Index Unit
* `UYU` - Uruguayan Peso
* `UYP` - Uruguayan Peso (1975–1993)
* `UYI` - Uruguayan Peso (Indexed Units)
* `UZS` - Uzbekistani Som
* `VUV` - Vanuatu Vatu
* `VES` - Venezuelan Bolívar
* `VEB` - Venezuelan Bolívar (1871–2008)
* `VEF` - Venezuelan Bolívar (2008–2018)
* `VND` - Vietnamese Dong
* `VNN` - Vietnamese Dong (1978–1985)
* `CHE` - WIR Euro
* `CHW` - WIR Franc
* `XOF` - West African CFA Franc
* `YDD` - Yemeni Dinar
* `YER` - Yemeni Rial
* `YUN` - Yugoslavian Convertible Dinar (1990–1992)
* `YUD` - Yugoslavian Hard Dinar (1966–1990)
* `YUM` - Yugoslavian New Dinar (1994–2002)
* `YUR` - Yugoslavian Reformed Dinar (1992–1993)
* `ZWN` - ZWN
* `ZRN` - Zairean New Zaire (1993–1998)
* `ZRZ` - Zairean Zaire (1971–1993)
* `ZMW` - Zambian Kwacha
* `ZMK` - Zambian Kwacha (1968–2012)
* `ZWD` - Zimbabwean Dollar (1980–2008)
* `ZWR` - Zimbabwean Dollar (2008)
* `ZWL` - Zimbabwean Dollar (2009)",
            "enum": [
              "XUA",
              "AFN",
              "AFA",
              "ALL",
              "ALK",
              "DZD",
              "ADP",
              "AOA",
              "AOK",
              "AON",
              "AOR",
              "ARA",
              "ARS",
              "ARM",
              "ARP",
              "ARL",
              "AMD",
              "AWG",
              "AUD",
              "ATS",
              "AZN",
              "AZM",
              "BSD",
              "BHD",
              "BDT",
              "BBD",
              "BYN",
              "BYB",
              "BYR",
              "BEF",
              "BEC",
              "BEL",
              "BZD",
              "BMD",
              "BTN",
              "BOB",
              "BOL",
              "BOV",
              "BOP",
              "BAM",
              "BAD",
              "BAN",
              "BWP",
              "BRC",
              "BRZ",
              "BRE",
              "BRR",
              "BRN",
              "BRB",
              "BRL",
              "GBP",
              "BND",
              "BGL",
              "BGN",
              "BGO",
              "BGM",
              "BUK",
              "BIF",
              "XPF",
              "KHR",
              "CAD",
              "CVE",
              "KYD",
              "XAF",
              "CLE",
              "CLP",
              "CLF",
              "CNX",
              "CNY",
              "CNH",
              "COP",
              "COU",
              "KMF",
              "CDF",
              "CRC",
              "HRD",
              "HRK",
              "CUC",
              "CUP",
              "CYP",
              "CZK",
              "CSK",
              "DKK",
              "DJF",
              "DOP",
              "NLG",
              "XCD",
              "DDM",
              "ECS",
              "ECV",
              "EGP",
              "GQE",
              "ERN",
              "EEK",
              "ETB",
              "EUR",
              "XBA",
              "XEU",
              "XBB",
              "XBC",
              "XBD",
              "FKP",
              "FJD",
              "FIM",
              "FRF",
              "XFO",
              "XFU",
              "GMD",
              "GEK",
              "GEL",
              "DEM",
              "GHS",
              "GHC",
              "GIP",
              "XAU",
              "GRD",
              "GTQ",
              "GWP",
              "GNF",
              "GNS",
              "GYD",
              "HTG",
              "HNL",
              "HKD",
              "HUF",
              "IMP",
              "ISK",
              "ISJ",
              "INR",
              "IDR",
              "IRR",
              "IQD",
              "IEP",
              "ILS",
              "ILP",
              "ILR",
              "ITL",
              "JMD",
              "JPY",
              "JOD",
              "KZT",
              "KES",
              "KWD",
              "KGS",
              "LAK",
              "LVL",
              "LVR",
              "LBP",
              "LSL",
              "LRD",
              "LYD",
              "LTL",
              "LTT",
              "LUL",
              "LUC",
              "LUF",
              "MOP",
              "MKD",
              "MKN",
              "MGA",
              "MGF",
              "MWK",
              "MYR",
              "MVR",
              "MVP",
              "MLF",
              "MTL",
              "MTP",
              "MRU",
              "MRO",
              "MUR",
              "MXV",
              "MXN",
              "MXP",
              "MDC",
              "MDL",
              "MCF",
              "MNT",
              "MAD",
              "MAF",
              "MZE",
              "MZN",
              "MZM",
              "MMK",
              "NAD",
              "NPR",
              "ANG",
              "TWD",
              "NZD",
              "NIO",
              "NIC",
              "NGN",
              "KPW",
              "NOK",
              "OMR",
              "PKR",
              "XPD",
              "PAB",
              "PGK",
              "PYG",
              "PEI",
              "PEN",
              "PES",
              "PHP",
              "XPT",
              "PLN",
              "PLZ",
              "PTE",
              "GWE",
              "QAR",
              "XRE",
              "RHD",
              "RON",
              "ROL",
              "RUB",
              "RUR",
              "RWF",
              "SVC",
              "WST",
              "SAR",
              "RSD",
              "CSD",
              "SCR",
              "SLL",
              "XAG",
              "SGD",
              "SKK",
              "SIT",
              "SBD",
              "SOS",
              "ZAR",
              "ZAL",
              "KRH",
              "KRW",
              "KRO",
              "SSP",
              "SUR",
              "ESP",
              "ESA",
              "ESB",
              "XDR",
              "LKR",
              "SHP",
              "XSU",
              "SDD",
              "SDG",
              "SDP",
              "SRD",
              "SRG",
              "SZL",
              "SEK",
              "CHF",
              "SYP",
              "STN",
              "STD",
              "TVD",
              "TJR",
              "TJS",
              "TZS",
              "XTS",
              "THB",
              "XXX",
              "TPE",
              "TOP",
              "TTD",
              "TND",
              "TRY",
              "TRL",
              "TMT",
              "TMM",
              "USD",
              "USN",
              "USS",
              "UGX",
              "UGS",
              "UAH",
              "UAK",
              "AED",
              "UYW",
              "UYU",
              "UYP",
              "UYI",
              "UZS",
              "VUV",
              "VES",
              "VEB",
              "VEF",
              "VND",
              "VNN",
              "CHE",
              "CHW",
              "XOF",
              "YDD",
              "YER",
              "YUN",
              "YUD",
              "YUM",
              "YUR",
              "ZWN",
              "ZRN",
              "ZRZ",
              "ZMW",
              "ZMK",
              "ZWD",
              "ZWR",
              "ZWL",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayFrequencyEnum": {
            "docs": "* `WEEKLY` - WEEKLY
* `BIWEEKLY` - BIWEEKLY
* `MONTHLY` - MONTHLY
* `QUARTERLY` - QUARTERLY
* `SEMIANNUALLY` - SEMIANNUALLY
* `ANNUALLY` - ANNUALLY
* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY
* `PRO_RATA` - PRO_RATA
* `SEMIMONTHLY` - SEMIMONTHLY",
            "enum": [
              "WEEKLY",
              "BIWEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "SEMIANNUALLY",
              "ANNUALLY",
              {
                "name": "ThirteenMonthly",
                "value": "THIRTEEN-MONTHLY",
              },
              "PRO_RATA",
              "SEMIMONTHLY",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayGroup": {
            "docs": "# The PayGroup Object
### Description
The `PayGroup` object is used to represent a subset of employees that are put together for payroll processing purposes.

### Usage Example
Fetch from the `LIST PayGroup` endpoint and filter by `ID` to show all pay group information.",
            "inline": undefined,
            "properties": {
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "pay_group_name": {
                "docs": "The pay group name.",
                "type": "optional<string>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayPeriodEnum": {
            "docs": "* `HOUR` - HOUR
* `DAY` - DAY
* `WEEK` - WEEK
* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS
* `SEMIMONTHLY` - SEMIMONTHLY
* `MONTH` - MONTH
* `QUARTER` - QUARTER
* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS
* `YEAR` - YEAR",
            "enum": [
              "HOUR",
              "DAY",
              "WEEK",
              "EVERY_TWO_WEEKS",
              "SEMIMONTHLY",
              "MONTH",
              "QUARTER",
              "EVERY_SIX_MONTHS",
              "YEAR",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayrollRun": {
            "docs": "# The PayrollRun Object
### Description
The `PayrollRun` object is used to represent a group of pay statements for a specific pay schedule.

### Usage Example
Fetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.",
            "inline": undefined,
            "properties": {
              "check_date": {
                "docs": "The day and time the payroll run was checked.",
                "type": "optional<datetime>",
              },
              "end_date": {
                "docs": "The day and time the payroll run ended.",
                "type": "optional<datetime>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "run_state": {
                "docs": "The state of the payroll run

* `PAID` - PAID
* `DRAFT` - DRAFT
* `APPROVED` - APPROVED
* `FAILED` - FAILED
* `CLOSED` - CLOSED",
                "type": "optional<RunStateEnum>",
              },
              "run_type": {
                "docs": "The type of the payroll run

* `REGULAR` - REGULAR
* `OFF_CYCLE` - OFF_CYCLE
* `CORRECTION` - CORRECTION
* `TERMINATION` - TERMINATION
* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
                "type": "optional<RunTypeEnum>",
              },
              "start_date": {
                "docs": "The day and time the payroll run started.",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PolicyTypeEnum": {
            "docs": "* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
            "enum": [
              "VACATION",
              "SICK",
              "PERSONAL",
              "JURY_DUTY",
              "VOLUNTEER",
              "BEREAVEMENT",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ReasonEnum": {
            "docs": "* `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST
* `GDPR` - GDPR
* `OTHER` - OTHER",
            "enum": [
              "GENERAL_CUSTOMER_REQUEST",
              "GDPR",
              "OTHER",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RemoteData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<map<string, unknown>>",
              "path": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RemoteKey": {
            "docs": "# The RemoteKey Object
### Description
The `RemoteKey` object is used to represent a request for a new remote key.

### Usage Example
Post a `GenerateRemoteKey` to receive a new `RemoteKey`.",
            "inline": undefined,
            "properties": {
              "key": "string",
              "name": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RemoteKeyForRegenerationRequest": {
            "docs": "# The RemoteKeyForRegeneration Object
### Description
The `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one

### Usage Example
Post a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
            "inline": undefined,
            "properties": {
              "name": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RemoteResponse": {
            "docs": "# The RemoteResponse Object
### Description
The `RemoteResponse` object is used to represent information returned from a third-party endpoint.

### Usage Example
View the `RemoteResponse` returned from your `DataPassthrough`.",
            "inline": undefined,
            "properties": {
              "headers": "optional<map<string, unknown>>",
              "method": "string",
              "path": "string",
              "response": "unknown",
              "response_headers": "optional<map<string, unknown>>",
              "response_type": "optional<ResponseTypeEnum>",
              "status": "integer",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestFormatEnum": {
            "docs": "* `JSON` - JSON
* `XML` - XML
* `MULTIPART` - MULTIPART",
            "enum": [
              "JSON",
              "XML",
              "MULTIPART",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RequestTypeEnum": {
            "docs": "* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
            "enum": [
              "VACATION",
              "SICK",
              "PERSONAL",
              "JURY_DUTY",
              "VOLUNTEER",
              "BEREAVEMENT",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResponseTypeEnum": {
            "docs": "* `JSON` - JSON
* `BASE64_GZIP` - BASE64_GZIP",
            "enum": [
              "JSON",
              "BASE64_GZIP",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RunStateEnum": {
            "docs": "* `PAID` - PAID
* `DRAFT` - DRAFT
* `APPROVED` - APPROVED
* `FAILED` - FAILED
* `CLOSED` - CLOSED",
            "enum": [
              "PAID",
              "DRAFT",
              "APPROVED",
              "FAILED",
              "CLOSED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RunTypeEnum": {
            "docs": "* `REGULAR` - REGULAR
* `OFF_CYCLE` - OFF_CYCLE
* `CORRECTION` - CORRECTION
* `TERMINATION` - TERMINATION
* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
            "enum": [
              "REGULAR",
              "OFF_CYCLE",
              "CORRECTION",
              "TERMINATION",
              "SIGN_ON_BONUS",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SelectiveSyncConfigurationsUsageEnum": {
            "docs": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC
* `IN_LAST_SYNC` - IN_LAST_SYNC",
            "enum": [
              "IN_NEXT_SYNC",
              "IN_LAST_SYNC",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SyncStatus": {
            "docs": "# The SyncStatus Object
### Description
The `SyncStatus` object is used to represent the syncing state of an account

### Usage Example
View the `SyncStatus` for an account to see how recently its models were synced.",
            "inline": undefined,
            "properties": {
              "is_initial_sync": "boolean",
              "last_sync_start": "optional<datetime>",
              "model_id": "string",
              "model_name": "string",
              "next_sync_start": "optional<datetime>",
              "selective_sync_configurations_usage": "optional<SelectiveSyncConfigurationsUsageEnum>",
              "status": "SyncStatusStatusEnum",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SyncStatusStatusEnum": {
            "docs": "* `SYNCING` - SYNCING
* `DONE` - DONE
* `FAILED` - FAILED
* `DISABLED` - DISABLED
* `PAUSED` - PAUSED
* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
            "enum": [
              "SYNCING",
              "DONE",
              "FAILED",
              "DISABLED",
              "PAUSED",
              "PARTIALLY_SYNCED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Tax": {
            "docs": "# The Tax Object
### Description
The `Tax` object is used to represent an array of the tax deductions for a given employee's payroll run.

### Usage Example
Fetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.",
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "The tax amount.",
                "type": "optional<double>",
              },
              "employee_payroll_run": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employer_tax": {
                "docs": "Whether or not the employer is responsible for paying the tax.",
                "type": "optional<boolean>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "name": {
                "docs": "The tax's name.",
                "type": "optional<string>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Team": {
            "docs": "# The Team Object
### Description
The `Team` object is used to represent a subdivision of the company, usually a department. Each employee will be grouped into one specific Team.

### Usage Example
If you're building a way to filter by `Team`, you'd hit the `GET Teams` endpoint to fetch the `Teams`, and then use the `ID` of the team your user selects to filter the `GET Employees` endpoint.",
            "inline": undefined,
            "properties": {
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "name": {
                "docs": "The team's name.",
                "type": "optional<string>",
              },
              "parent_team": {
                "docs": "The team's parent team.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOff": {
            "docs": "# The TimeOff Object
### Description
The `TimeOff` object is used to represent all employees' Time Off entries.

### Usage Example
Fetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "The time off quantity measured by the prescribed “units”.",
                "type": "optional<double>",
              },
              "approver": {
                "docs": "The Merge ID of the employee with the ability to approve the time off request.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employee": {
                "docs": "The employee requesting time off.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employee_note": {
                "docs": "The employee note for this time off request.",
                "type": "optional<string>",
              },
              "end_time": {
                "docs": "The day and time of the end of the time requested off.",
                "type": "optional<datetime>",
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": "optional<boolean>",
              "request_type": {
                "docs": "The type of time off request.

* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
                "type": "optional<RequestTypeEnum>",
              },
              "start_time": {
                "docs": "The day and time of the start of the time requested off.",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of this time off request.

* `REQUESTED` - REQUESTED
* `APPROVED` - APPROVED
* `DECLINED` - DECLINED
* `CANCELLED` - CANCELLED
* `DELETED` - DELETED",
                "type": "optional<TimeOffStatusEnum>",
              },
              "units": {
                "docs": "The measurement that the third-party integration uses to count time requested.

* `HOURS` - HOURS
* `DAYS` - DAYS",
                "type": "optional<UnitsEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffBalance": {
            "docs": "# The TimeOffBalance Object
### Description
The `TimeOffBalance` object is used to represent current balances for an employee's Time Off plan.

### Usage Example
Fetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show all time off balances.",
            "inline": undefined,
            "properties": {
              "balance": {
                "docs": "The current remaining PTO balance, always measured in terms of hours.",
                "type": "optional<double>",
              },
              "employee": {
                "docs": "The employee the balance belongs to.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "field_mappings": "optional<map<string, unknown>>",
              "id": {
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "modified_at": {
                "docs": "This is the datetime that this object was last updated by Merge",
                "type": "optional<datetime>",
              },
              "policy_type": {
                "docs": "The policy type of this time off balance.

* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
                "type": "optional<PolicyTypeEnum>",
              },
              "remote_data": "optional<list<RemoteData>>",
              "remote_id": {
                "docs": "The third-party API ID of the matching object.",
                "type": "optional<string>",
              },
              "remote_was_deleted": {
                "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
                "type": "optional<boolean>",
              },
              "used": {
                "docs": "The amount of PTO used in terms of hours.",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffEndpointRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "model": "TimeOffRequest",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffRequest": {
            "docs": "# The TimeOff Object
### Description
The `TimeOff` object is used to represent all employees' Time Off entries.

### Usage Example
Fetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
            "inline": undefined,
            "properties": {
              "amount": {
                "docs": "The time off quantity measured by the prescribed “units”.",
                "type": "optional<double>",
              },
              "approver": {
                "docs": "The Merge ID of the employee with the ability to approve the time off request.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employee": {
                "docs": "The employee requesting time off.",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "employee_note": {
                "docs": "The employee note for this time off request.",
                "type": "optional<string>",
              },
              "end_time": {
                "docs": "The day and time of the end of the time requested off.",
                "type": "optional<datetime>",
              },
              "integration_params": "optional<map<string, unknown>>",
              "linked_account_params": "optional<map<string, unknown>>",
              "request_type": {
                "docs": "The type of time off request.

* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
                "type": "optional<RequestTypeEnum>",
              },
              "start_time": {
                "docs": "The day and time of the start of the time requested off.",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of this time off request.

* `REQUESTED` - REQUESTED
* `APPROVED` - APPROVED
* `DECLINED` - DECLINED
* `CANCELLED` - CANCELLED
* `DELETED` - DELETED",
                "type": "optional<TimeOffStatusEnum>",
              },
              "units": {
                "docs": "The measurement that the third-party integration uses to count time requested.

* `HOURS` - HOURS
* `DAYS` - DAYS",
                "type": "optional<UnitsEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": "list<ErrorValidationProblem>",
              "logs": "optional<list<DebugModeLog>>",
              "model": "TimeOff",
              "warnings": "list<WarningValidationProblem>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffStatusEnum": {
            "docs": "* `REQUESTED` - REQUESTED
* `APPROVED` - APPROVED
* `DECLINED` - DECLINED
* `CANCELLED` - CANCELLED
* `DELETED` - DELETED",
            "enum": [
              "REQUESTED",
              "APPROVED",
              "DECLINED",
              "CANCELLED",
              "DELETED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UnitsEnum": {
            "docs": "* `HOURS` - HOURS
* `DAYS` - DAYS",
            "enum": [
              "HOURS",
              "DAYS",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValidationProblemSource": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "pointer": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WarningValidationProblem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": "string",
              "problem_type": "string",
              "source": "optional<ValidationProblemSource>",
              "title": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhookReceiver": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "event": "string",
              "is_active": "boolean",
              "key": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhookReceiverRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "event": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "is_active": "boolean",
              "key": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  AccountDetails:
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      integration: optional<string>
      integration_slug: optional<string>
      category: optional<CategoryEnum>
      end_user_origin_id: optional<string>
      end_user_organization_name: optional<string>
      end_user_email_address:
        type: optional<string>
        validation:
          format: email
      status: optional<string>
      webhook_listener_url:
        type: optional<string>
        validation:
          format: uri
      is_duplicate:
        type: optional<boolean>
        docs: >-
          Whether a Production Linked Account's credentials match another
          existing Production Linked Account. This field is `null` for Test
          Linked Accounts, incomplete Production Linked Accounts, and ignored
          duplicate Production Linked Account sets.
    source:
      openapi: ../openapi.yml
  AccountDetailsAndActions:
    docs: >-
      # The LinkedAccount Object

      ### Description

      The `LinkedAccount` object is used to represent an end user's link with a
      specific integration.


      ### Usage Example

      View a list of your organization's `LinkedAccount` objects.
    properties:
      id: string
      category: optional<CategoryEnum>
      status: AccountDetailsAndActionsStatusEnum
      status_detail: optional<string>
      end_user_origin_id: optional<string>
      end_user_organization_name: string
      end_user_email_address: string
      webhook_listener_url: string
      is_duplicate:
        type: optional<boolean>
        docs: >-
          Whether a Production Linked Account's credentials match another
          existing Production Linked Account. This field is `null` for Test
          Linked Accounts, incomplete Production Linked Accounts, and ignored
          duplicate Production Linked Account sets.
      integration: optional<AccountDetailsAndActionsIntegration>
    source:
      openapi: ../openapi.yml
  AccountDetailsAndActionsIntegration:
    properties:
      name: string
      categories: list<CategoriesEnum>
      image: optional<string>
      square_image: optional<string>
      color: string
      slug: string
      passthrough_available: boolean
      available_model_operations: optional<list<ModelOperation>>
    source:
      openapi: ../openapi.yml
  AccountDetailsAndActionsStatusEnum:
    enum:
      - COMPLETE
      - INCOMPLETE
      - RELINK_NEEDED
    docs: |-
      * `COMPLETE` - COMPLETE
      * `INCOMPLETE` - INCOMPLETE
      * `RELINK_NEEDED` - RELINK_NEEDED
    source:
      openapi: ../openapi.yml
  AccountIntegration:
    properties:
      name:
        type: string
        docs: Company name.
      categories:
        type: optional<list<CategoriesEnum>>
        docs: >-
          Category or categories this integration belongs to. Multiple
          categories should be comma separated, i.e. [ats, hris].
      image:
        type: optional<string>
        docs: >-
          Company logo in rectangular shape. <b>Upload an image with a clear
          background.</b>
        validation:
          format: uri
      square_image:
        type: optional<string>
        docs: >-
          Company logo in square shape. <b>Upload an image with a white
          background.</b>
        validation:
          format: uri
      color:
        type: optional<string>
        docs: >-
          The color of this integration used for buttons and text throughout the
          app and landing pages. <b>Choose a darker, saturated color.</b>
        validation:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 18
      slug: optional<string>
      is_in_beta:
        type: optional<boolean>
        docs: >-
          If checked, this integration will not appear in the linking flow, and
          will appear elsewhere with a Beta tag.
      api_endpoints_to_documentation_urls:
        type: optional<map<string, unknown>>
        docs: >-
          Mapping of API endpoints to documentation urls for support. Example:
          {'GET': [['/common-model-scopes',
          'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions',
          'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']],
          'POST': []}
    source:
      openapi: ../openapi.yml
  AccountToken:
    properties:
      account_token: string
      integration: AccountIntegration
    source:
      openapi: ../openapi.yml
  AccountTypeEnum:
    enum:
      - SAVINGS
      - CHECKING
    docs: |-
      * `SAVINGS` - SAVINGS
      * `CHECKING` - CHECKING
    source:
      openapi: ../openapi.yml
  AvailableActions:
    docs: >-
      # The AvailableActions Object

      ### Description

      The `Activity` object is used to see all available model/operation
      combinations for an integration.


      ### Usage Example

      Fetch all the actions available for the `Zenefits` integration.
    properties:
      integration: AccountIntegration
      passthrough_available: boolean
      available_model_operations: optional<list<ModelOperation>>
    source:
      openapi: ../openapi.yml
  BankInfo:
    docs: >-
      # The BankInfo Object

      ### Description

      The `BankInfo` object is used to represent the Bank Account information
      for an Employee.


      ### Usage Example

      Fetch from the `LIST BankInfo` endpoint and filter by `ID` to show all
      bank information.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee:
        type: optional<string>
        docs: The employee with this bank account.
        validation:
          format: uuid
      account_number:
        type: optional<string>
        docs: The account number.
        validation:
          maxLength: 100
      routing_number:
        type: optional<string>
        docs: The routing number.
      bank_name:
        type: optional<string>
        docs: The bank name.
      account_type:
        type: optional<AccountTypeEnum>
        docs: |-
          The bank account type

          * `SAVINGS` - SAVINGS
          * `CHECKING` - CHECKING
      remote_created_at:
        type: optional<datetime>
        docs: When the matching bank object was created in the third party system.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  Benefit:
    docs: >-
      # The Benefit Object

      ### Description

      The `Benefit` object is used to represent a benefit that an employee has
      enrolled in.


      ### Usage Example

      Fetch from the `LIST Benefits` endpoint and filter by `ID` to show all
      benefits.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee:
        type: optional<string>
        docs: The employee on the plan.
        validation:
          format: uuid
      provider_name:
        type: optional<string>
        docs: The name of the benefit provider.
      benefit_plan_type:
        type: optional<string>
        docs: The type of benefit plan
      employee_contribution:
        type: optional<double>
        docs: The employee's contribution.
      company_contribution:
        type: optional<double>
        docs: The company's contribution.
      start_date:
        type: optional<datetime>
        docs: The day and time the benefit started.
      end_date:
        type: optional<datetime>
        docs: The day and time the benefit ended.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  CategoriesEnum:
    enum:
      - hris
      - ats
      - accounting
      - ticketing
      - crm
      - mktg
      - filestorage
    docs: |-
      * `hris` - hris
      * `ats` - ats
      * `accounting` - accounting
      * `ticketing` - ticketing
      * `crm` - crm
      * `mktg` - mktg
      * `filestorage` - filestorage
    source:
      openapi: ../openapi.yml
  CategoryEnum:
    enum:
      - hris
      - ats
      - accounting
      - ticketing
      - crm
      - mktg
      - filestorage
    docs: |-
      * `hris` - hris
      * `ats` - ats
      * `accounting` - accounting
      * `ticketing` - ticketing
      * `crm` - crm
      * `mktg` - mktg
      * `filestorage` - filestorage
    source:
      openapi: ../openapi.yml
  CommonModelScopesBodyRequest:
    properties:
      model_id:
        type: string
        validation:
          minLength: 1
      enabled_actions: list<EnabledActionsEnum>
      disabled_fields: list<string>
    source:
      openapi: ../openapi.yml
  Company:
    docs: >-
      # The Company Object

      ### Description

      The `Company` object is used to represent a company within the HRIS /
      Payroll system.


      ### Usage Example

      Fetch from the `LIST Companies` endpoint and filter by `ID` to show all
      companies.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      legal_name:
        type: optional<string>
        docs: The company's legal name.
      display_name:
        type: optional<string>
        docs: The company's display name.
      eins:
        type: optional<list<optional<string>>>
        docs: The company's Employer Identification Numbers.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  ConditionSchema:
    properties:
      id:
        type: string
        docs: >-
          The ID of the condition schema. This ID is used when updating
          selective syncs for a linked account.
        validation:
          format: uuid
      common_model:
        type: optional<string>
        docs: The common model for which a condition schema is defined.
      native_name:
        type: optional<string>
        docs: User-facing *native condition* name. e.g. "Skip Manager".
      field_name:
        type: optional<string>
        docs: >-
          The name of the field on the common model that this condition
          corresponds to, if they conceptually match. e.g. "location_type".
      is_unique:
        type: optional<boolean>
        docs: >-
          Whether this condition can only be applied once. If false, the
          condition can be AND'd together multiple times.
      condition_type:
        type: ConditionTypeEnum
        docs: |-
          The type of value(s) that can be set for this condition.

          * `BOOLEAN` - BOOLEAN
          * `DATE` - DATE
          * `DATE_TIME` - DATE_TIME
          * `INTEGER` - INTEGER
          * `FLOAT` - FLOAT
          * `STRING` - STRING
          * `LIST_OF_STRINGS` - LIST_OF_STRINGS
      operators:
        docs: The schemas for the operators that can be used on a condition.
        type: list<OperatorSchema>
    source:
      openapi: ../openapi.yml
  ConditionTypeEnum:
    enum:
      - BOOLEAN
      - DATE
      - DATE_TIME
      - INTEGER
      - FLOAT
      - STRING
      - LIST_OF_STRINGS
    docs: |-
      * `BOOLEAN` - BOOLEAN
      * `DATE` - DATE
      * `DATE_TIME` - DATE_TIME
      * `INTEGER` - INTEGER
      * `FLOAT` - FLOAT
      * `STRING` - STRING
      * `LIST_OF_STRINGS` - LIST_OF_STRINGS
    source:
      openapi: ../openapi.yml
  CountryEnum:
    enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
    docs: |-
      * `AF` - Afghanistan
      * `AX` - Åland Islands
      * `AL` - Albania
      * `DZ` - Algeria
      * `AS` - American Samoa
      * `AD` - Andorra
      * `AO` - Angola
      * `AI` - Anguilla
      * `AQ` - Antarctica
      * `AG` - Antigua and Barbuda
      * `AR` - Argentina
      * `AM` - Armenia
      * `AW` - Aruba
      * `AU` - Australia
      * `AT` - Austria
      * `AZ` - Azerbaijan
      * `BS` - Bahamas
      * `BH` - Bahrain
      * `BD` - Bangladesh
      * `BB` - Barbados
      * `BY` - Belarus
      * `BE` - Belgium
      * `BZ` - Belize
      * `BJ` - Benin
      * `BM` - Bermuda
      * `BT` - Bhutan
      * `BO` - Bolivia
      * `BQ` - Bonaire, Sint Eustatius and Saba
      * `BA` - Bosnia and Herzegovina
      * `BW` - Botswana
      * `BV` - Bouvet Island
      * `BR` - Brazil
      * `IO` - British Indian Ocean Territory
      * `BN` - Brunei
      * `BG` - Bulgaria
      * `BF` - Burkina Faso
      * `BI` - Burundi
      * `CV` - Cabo Verde
      * `KH` - Cambodia
      * `CM` - Cameroon
      * `CA` - Canada
      * `KY` - Cayman Islands
      * `CF` - Central African Republic
      * `TD` - Chad
      * `CL` - Chile
      * `CN` - China
      * `CX` - Christmas Island
      * `CC` - Cocos (Keeling) Islands
      * `CO` - Colombia
      * `KM` - Comoros
      * `CG` - Congo
      * `CD` - Congo (the Democratic Republic of the)
      * `CK` - Cook Islands
      * `CR` - Costa Rica
      * `CI` - Côte d'Ivoire
      * `HR` - Croatia
      * `CU` - Cuba
      * `CW` - Curaçao
      * `CY` - Cyprus
      * `CZ` - Czechia
      * `DK` - Denmark
      * `DJ` - Djibouti
      * `DM` - Dominica
      * `DO` - Dominican Republic
      * `EC` - Ecuador
      * `EG` - Egypt
      * `SV` - El Salvador
      * `GQ` - Equatorial Guinea
      * `ER` - Eritrea
      * `EE` - Estonia
      * `SZ` - Eswatini
      * `ET` - Ethiopia
      * `FK` - Falkland Islands (Malvinas)
      * `FO` - Faroe Islands
      * `FJ` - Fiji
      * `FI` - Finland
      * `FR` - France
      * `GF` - French Guiana
      * `PF` - French Polynesia
      * `TF` - French Southern Territories
      * `GA` - Gabon
      * `GM` - Gambia
      * `GE` - Georgia
      * `DE` - Germany
      * `GH` - Ghana
      * `GI` - Gibraltar
      * `GR` - Greece
      * `GL` - Greenland
      * `GD` - Grenada
      * `GP` - Guadeloupe
      * `GU` - Guam
      * `GT` - Guatemala
      * `GG` - Guernsey
      * `GN` - Guinea
      * `GW` - Guinea-Bissau
      * `GY` - Guyana
      * `HT` - Haiti
      * `HM` - Heard Island and McDonald Islands
      * `VA` - Holy See
      * `HN` - Honduras
      * `HK` - Hong Kong
      * `HU` - Hungary
      * `IS` - Iceland
      * `IN` - India
      * `ID` - Indonesia
      * `IR` - Iran
      * `IQ` - Iraq
      * `IE` - Ireland
      * `IM` - Isle of Man
      * `IL` - Israel
      * `IT` - Italy
      * `JM` - Jamaica
      * `JP` - Japan
      * `JE` - Jersey
      * `JO` - Jordan
      * `KZ` - Kazakhstan
      * `KE` - Kenya
      * `KI` - Kiribati
      * `KW` - Kuwait
      * `KG` - Kyrgyzstan
      * `LA` - Laos
      * `LV` - Latvia
      * `LB` - Lebanon
      * `LS` - Lesotho
      * `LR` - Liberia
      * `LY` - Libya
      * `LI` - Liechtenstein
      * `LT` - Lithuania
      * `LU` - Luxembourg
      * `MO` - Macao
      * `MG` - Madagascar
      * `MW` - Malawi
      * `MY` - Malaysia
      * `MV` - Maldives
      * `ML` - Mali
      * `MT` - Malta
      * `MH` - Marshall Islands
      * `MQ` - Martinique
      * `MR` - Mauritania
      * `MU` - Mauritius
      * `YT` - Mayotte
      * `MX` - Mexico
      * `FM` - Micronesia (Federated States of)
      * `MD` - Moldova
      * `MC` - Monaco
      * `MN` - Mongolia
      * `ME` - Montenegro
      * `MS` - Montserrat
      * `MA` - Morocco
      * `MZ` - Mozambique
      * `MM` - Myanmar
      * `NA` - Namibia
      * `NR` - Nauru
      * `NP` - Nepal
      * `NL` - Netherlands
      * `NC` - New Caledonia
      * `NZ` - New Zealand
      * `NI` - Nicaragua
      * `NE` - Niger
      * `NG` - Nigeria
      * `NU` - Niue
      * `NF` - Norfolk Island
      * `KP` - North Korea
      * `MK` - North Macedonia
      * `MP` - Northern Mariana Islands
      * `NO` - Norway
      * `OM` - Oman
      * `PK` - Pakistan
      * `PW` - Palau
      * `PS` - Palestine, State of
      * `PA` - Panama
      * `PG` - Papua New Guinea
      * `PY` - Paraguay
      * `PE` - Peru
      * `PH` - Philippines
      * `PN` - Pitcairn
      * `PL` - Poland
      * `PT` - Portugal
      * `PR` - Puerto Rico
      * `QA` - Qatar
      * `RE` - Réunion
      * `RO` - Romania
      * `RU` - Russia
      * `RW` - Rwanda
      * `BL` - Saint Barthélemy
      * `SH` - Saint Helena, Ascension and Tristan da Cunha
      * `KN` - Saint Kitts and Nevis
      * `LC` - Saint Lucia
      * `MF` - Saint Martin (French part)
      * `PM` - Saint Pierre and Miquelon
      * `VC` - Saint Vincent and the Grenadines
      * `WS` - Samoa
      * `SM` - San Marino
      * `ST` - Sao Tome and Principe
      * `SA` - Saudi Arabia
      * `SN` - Senegal
      * `RS` - Serbia
      * `SC` - Seychelles
      * `SL` - Sierra Leone
      * `SG` - Singapore
      * `SX` - Sint Maarten (Dutch part)
      * `SK` - Slovakia
      * `SI` - Slovenia
      * `SB` - Solomon Islands
      * `SO` - Somalia
      * `ZA` - South Africa
      * `GS` - South Georgia and the South Sandwich Islands
      * `KR` - South Korea
      * `SS` - South Sudan
      * `ES` - Spain
      * `LK` - Sri Lanka
      * `SD` - Sudan
      * `SR` - Suriname
      * `SJ` - Svalbard and Jan Mayen
      * `SE` - Sweden
      * `CH` - Switzerland
      * `SY` - Syria
      * `TW` - Taiwan
      * `TJ` - Tajikistan
      * `TZ` - Tanzania
      * `TH` - Thailand
      * `TL` - Timor-Leste
      * `TG` - Togo
      * `TK` - Tokelau
      * `TO` - Tonga
      * `TT` - Trinidad and Tobago
      * `TN` - Tunisia
      * `TR` - Turkey
      * `TM` - Turkmenistan
      * `TC` - Turks and Caicos Islands
      * `TV` - Tuvalu
      * `UG` - Uganda
      * `UA` - Ukraine
      * `AE` - United Arab Emirates
      * `GB` - United Kingdom
      * `UM` - United States Minor Outlying Islands
      * `US` - United States of America
      * `UY` - Uruguay
      * `UZ` - Uzbekistan
      * `VU` - Vanuatu
      * `VE` - Venezuela
      * `VN` - Vietnam
      * `VG` - Virgin Islands (British)
      * `VI` - Virgin Islands (U.S.)
      * `WF` - Wallis and Futuna
      * `EH` - Western Sahara
      * `YE` - Yemen
      * `ZM` - Zambia
      * `ZW` - Zimbabwe
    source:
      openapi: ../openapi.yml
  DataPassthroughRequest:
    docs: >-
      # The DataPassthrough Object

      ### Description

      The `DataPassthrough` object is used to send information to an
      otherwise-unsupported third-party endpoint.


      ### Usage Example

      Create a `DataPassthrough` to get team hierarchies from your Rippling
      integration.
    properties:
      method: MethodEnum
      path:
        type: string
        validation:
          minLength: 1
      base_url_override:
        type: optional<string>
        validation:
          minLength: 1
      data:
        type: optional<string>
        validation:
          minLength: 1
      multipart_form_data:
        type: optional<list<MultipartFormFieldRequest>>
        docs: >-
          Pass an array of `MultipartFormField` objects in here instead of using
          the `data` param if `request_format` is set to `MULTIPART`.
      headers:
        type: optional<map<string, unknown>>
        docs: >-
          The headers to use for the request (Merge will handle the account's
          authorization headers). `Content-Type` header is required for
          passthrough. Choose content type corresponding to expected format of
          receiving server.
      request_format: optional<RequestFormatEnum>
      normalize_response:
        type: optional<boolean>
        docs: >-
          Optional. If true, the response will always be an object of the form
          `{"type": T, "value": ...}` where `T` will be one of `string, boolean,
          number, null, array, object`.
    source:
      openapi: ../openapi.yml
  DebugModeLog:
    properties:
      log_id: string
      dashboard_view: string
      log_summary: DebugModelLogSummary
    source:
      openapi: ../openapi.yml
  DebugModelLogSummary:
    properties:
      url: string
      method: string
      status_code: integer
    source:
      openapi: ../openapi.yml
  Deduction:
    docs: >-
      # The Deduction Object

      ### Description

      The `Deduction` object is used to represent an array of the wages withheld
      from total earnings for the purpose of paying taxes.


      ### Usage Example

      Fetch from the `LIST Deductions` endpoint and filter by `ID` to show all
      deductions.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee_payroll_run:
        type: optional<string>
        validation:
          format: uuid
      name:
        type: optional<string>
        docs: The deduction's name.
      employee_deduction:
        type: optional<double>
        docs: >-
          The amount of money that is withheld from an employee's gross pay by
          the employee.
      company_deduction:
        type: optional<double>
        docs: >-
          The amount of money that is withheld on behalf of an employee by the
          company.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  Earning:
    docs: >-
      # The Earning Object

      ### Description

      The `Earning` object is used to represent an array of different
      compensations that an employee receives within specific wage categories.


      ### Usage Example

      Fetch from the `LIST Earnings` endpoint and filter by `ID` to show all
      earnings.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee_payroll_run:
        type: optional<string>
        validation:
          format: uuid
      amount:
        type: optional<double>
        docs: The amount earned.
      type:
        type: optional<EarningTypeEnum>
        docs: |-
          The type of earning.

          * `SALARY` - SALARY
          * `REIMBURSEMENT` - REIMBURSEMENT
          * `OVERTIME` - OVERTIME
          * `BONUS` - BONUS
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  EarningTypeEnum:
    enum:
      - SALARY
      - REIMBURSEMENT
      - OVERTIME
      - BONUS
    docs: |-
      * `SALARY` - SALARY
      * `REIMBURSEMENT` - REIMBURSEMENT
      * `OVERTIME` - OVERTIME
      * `BONUS` - BONUS
    source:
      openapi: ../openapi.yml
  Employee:
    docs: >-
      # The Employee Object

      ### Description

      The `Employee` object is used to represent any person who has been
      employed by a company.


      ### Usage Example

      Fetch from the `LIST Employee` endpoint and filter by `ID` to show all
      employees.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee_number:
        type: optional<string>
        docs: >-
          The employee's number that appears in the third-party integration's
          UI.
      company:
        type: optional<string>
        docs: The ID of the employee's company.
        validation:
          format: uuid
      first_name:
        type: optional<string>
        docs: The employee's first name.
      last_name:
        type: optional<string>
        docs: The employee's last name.
      display_full_name:
        type: optional<string>
        docs: >-
          The employee's full name, to use for display purposes. If a preferred
          first name is available, the full name will include the preferred
          first name.
      username:
        type: optional<string>
        docs: The employee's username that appears in the remote UI.
      groups: optional<list<optional<string>>>
      work_email:
        type: optional<string>
        docs: The employee's work email.
        validation:
          format: email
          maxLength: 254
      personal_email:
        type: optional<string>
        docs: The employee's personal email.
        validation:
          format: email
          maxLength: 254
      mobile_phone_number:
        type: optional<string>
        docs: The employee's mobile phone number.
      employments:
        type: optional<list<optional<string>>>
        docs: Array of `Employment` IDs for this Employee.
      home_location:
        type: optional<string>
        docs: The employee's home address.
        validation:
          format: uuid
      work_location:
        type: optional<string>
        docs: The employee's work address.
        validation:
          format: uuid
      manager:
        type: optional<string>
        docs: The employee ID of the employee's manager.
        validation:
          format: uuid
      team:
        type: optional<string>
        docs: The employee's team.
        validation:
          format: uuid
      pay_group:
        type: optional<string>
        docs: The employee's pay group
        validation:
          format: uuid
      ssn:
        type: optional<string>
        docs: The employee's social security number.
        validation:
          maxLength: 100
      gender:
        type: optional<GenderEnum>
        docs: |-
          The employee's gender.

          * `MALE` - MALE
          * `FEMALE` - FEMALE
          * `NON-BINARY` - NON-BINARY
          * `OTHER` - OTHER
          * `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE
      ethnicity:
        type: optional<EthnicityEnum>
        docs: >-
          The employee's ethnicity.


          * `AMERICAN_INDIAN_OR_ALASKA_NATIVE` -
          AMERICAN_INDIAN_OR_ALASKA_NATIVE

          * `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT

          * `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN

          * `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO

          * `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` -
          NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER

          * `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES

          * `WHITE` - WHITE

          * `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE
      marital_status:
        type: optional<MaritalStatusEnum>
        docs: >-
          The employee's filing status as related to marital status.


          * `SINGLE` - SINGLE

          * `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY

          * `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY

          * `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD

          * `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` -
          QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD
      date_of_birth:
        type: optional<datetime>
        docs: The employee's date of birth.
      hire_date:
        type: optional<datetime>
        docs: >-
          The date that the employee was hired, usually the day that an offer
          letter is signed. If an employee has multiple hire dates from previous
          employments, this represents the most recent hire date. Note: If
          you're looking for the employee's start date, refer to the start_date
          field.
        availability: deprecated
      start_date:
        type: optional<datetime>
        docs: >-
          The date that the employee started working. If an employee was
          rehired, the most recent start date will be returned.
      remote_created_at:
        type: optional<datetime>
        docs: When the third party's employee was created.
      employment_status:
        type: optional<EmploymentStatusEnum>
        docs: |-
          The employment status of the employee.

          * `ACTIVE` - ACTIVE
          * `PENDING` - PENDING
          * `INACTIVE` - INACTIVE
      termination_date:
        type: optional<datetime>
        docs: The employee's termination date.
      avatar:
        type: optional<string>
        docs: The URL of the employee's avatar image.
        validation:
          format: uri
          maxLength: 2000
      custom_fields:
        type: optional<map<string, unknown>>
        docs: Custom fields configured for a given model.
      remote_was_deleted: optional<boolean>
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  EmployeeEndpointRequest:
    properties:
      model: EmployeeRequest
    source:
      openapi: ../openapi.yml
  EmployeePayrollRun:
    docs: >-
      # The EmployeePayrollRun Object

      ### Description

      The `EmployeePayrollRun` object is used to represent an employee's pay
      statement for a specific payroll run.


      ### Usage Example

      Fetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to
      show all employee payroll runs.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee:
        type: optional<string>
        docs: The employee whose payroll is being run.
        validation:
          format: uuid
      payroll_run:
        type: optional<string>
        docs: The payroll being run.
        validation:
          format: uuid
      gross_pay:
        type: optional<double>
        docs: >-
          The total earnings throughout a given period for an employee before
          any deductions are made.
      net_pay:
        type: optional<double>
        docs: >-
          The take-home pay throughout a given period for an employee after
          deductions are made.
      start_date:
        type: optional<datetime>
        docs: The day and time the payroll run started.
      end_date:
        type: optional<datetime>
        docs: The day and time the payroll run ended.
      check_date:
        type: optional<datetime>
        docs: The day and time the payroll run was checked.
      earnings: optional<list<Earning>>
      deductions: optional<list<Deduction>>
      taxes: optional<list<Tax>>
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  EmployeeRequest:
    docs: >-
      # The Employee Object

      ### Description

      The `Employee` object is used to represent any person who has been
      employed by a company.


      ### Usage Example

      Fetch from the `LIST Employee` endpoint and filter by `ID` to show all
      employees.
    properties:
      employee_number:
        type: optional<string>
        docs: >-
          The employee's number that appears in the third-party integration's
          UI.
      company:
        type: optional<string>
        docs: The ID of the employee's company.
        validation:
          format: uuid
      first_name:
        type: optional<string>
        docs: The employee's first name.
      last_name:
        type: optional<string>
        docs: The employee's last name.
      display_full_name:
        type: optional<string>
        docs: >-
          The employee's full name, to use for display purposes. If a preferred
          first name is available, the full name will include the preferred
          first name.
      username:
        type: optional<string>
        docs: The employee's username that appears in the remote UI.
      groups: optional<list<optional<string>>>
      work_email:
        type: optional<string>
        docs: The employee's work email.
        validation:
          format: email
          maxLength: 254
      personal_email:
        type: optional<string>
        docs: The employee's personal email.
        validation:
          format: email
          maxLength: 254
      mobile_phone_number:
        type: optional<string>
        docs: The employee's mobile phone number.
      employments:
        type: optional<list<optional<string>>>
        docs: Array of `Employment` IDs for this Employee.
      home_location:
        type: optional<string>
        docs: The employee's home address.
        validation:
          format: uuid
      work_location:
        type: optional<string>
        docs: The employee's work address.
        validation:
          format: uuid
      manager:
        type: optional<string>
        docs: The employee ID of the employee's manager.
        validation:
          format: uuid
      team:
        type: optional<string>
        docs: The employee's team.
        validation:
          format: uuid
      pay_group:
        type: optional<string>
        docs: The employee's pay group
        validation:
          format: uuid
      ssn:
        type: optional<string>
        docs: The employee's social security number.
        validation:
          maxLength: 100
      gender:
        type: optional<GenderEnum>
        docs: |-
          The employee's gender.

          * `MALE` - MALE
          * `FEMALE` - FEMALE
          * `NON-BINARY` - NON-BINARY
          * `OTHER` - OTHER
          * `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE
      ethnicity:
        type: optional<EthnicityEnum>
        docs: >-
          The employee's ethnicity.


          * `AMERICAN_INDIAN_OR_ALASKA_NATIVE` -
          AMERICAN_INDIAN_OR_ALASKA_NATIVE

          * `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT

          * `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN

          * `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO

          * `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` -
          NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER

          * `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES

          * `WHITE` - WHITE

          * `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE
      marital_status:
        type: optional<MaritalStatusEnum>
        docs: >-
          The employee's filing status as related to marital status.


          * `SINGLE` - SINGLE

          * `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY

          * `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY

          * `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD

          * `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` -
          QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD
      date_of_birth:
        type: optional<datetime>
        docs: The employee's date of birth.
      hire_date:
        type: optional<datetime>
        docs: >-
          The date that the employee was hired, usually the day that an offer
          letter is signed. If an employee has multiple hire dates from previous
          employments, this represents the most recent hire date. Note: If
          you're looking for the employee's start date, refer to the start_date
          field.
        availability: deprecated
      start_date:
        type: optional<datetime>
        docs: >-
          The date that the employee started working. If an employee was
          rehired, the most recent start date will be returned.
      employment_status:
        type: optional<EmploymentStatusEnum>
        docs: |-
          The employment status of the employee.

          * `ACTIVE` - ACTIVE
          * `PENDING` - PENDING
          * `INACTIVE` - INACTIVE
      termination_date:
        type: optional<datetime>
        docs: The employee's termination date.
      avatar:
        type: optional<string>
        docs: The URL of the employee's avatar image.
        validation:
          format: uri
          maxLength: 2000
      integration_params: optional<map<string, unknown>>
      linked_account_params: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  EmployeeResponse:
    properties:
      model: Employee
      warnings: list<WarningValidationProblem>
      errors: list<ErrorValidationProblem>
      logs: optional<list<DebugModeLog>>
    source:
      openapi: ../openapi.yml
  Employment:
    docs: >-
      # The Employment Object

      ### Description

      The `Employment` object is used to represent a job position at a company.


      Please note: When there is a change in pay or title, integrations with
      historical data will create new Employment objects while integrations
      without historical data will update existing ones.


      ### Usage Example

      Fetch from the `LIST Employments` endpoint and filter by `ID` to show all
      employees.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee:
        type: optional<string>
        docs: The employee holding this position.
        validation:
          format: uuid
      job_title:
        type: optional<string>
        docs: The position's title.
      pay_rate:
        type: optional<double>
        docs: The position's pay rate in dollars.
      pay_period:
        type: optional<PayPeriodEnum>
        docs: |-
          The time period this pay rate encompasses.

          * `HOUR` - HOUR
          * `DAY` - DAY
          * `WEEK` - WEEK
          * `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS
          * `SEMIMONTHLY` - SEMIMONTHLY
          * `MONTH` - MONTH
          * `QUARTER` - QUARTER
          * `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS
          * `YEAR` - YEAR
      pay_frequency:
        type: optional<PayFrequencyEnum>
        docs: |-
          The position's pay frequency.

          * `WEEKLY` - WEEKLY
          * `BIWEEKLY` - BIWEEKLY
          * `MONTHLY` - MONTHLY
          * `QUARTERLY` - QUARTERLY
          * `SEMIANNUALLY` - SEMIANNUALLY
          * `ANNUALLY` - ANNUALLY
          * `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY
          * `PRO_RATA` - PRO_RATA
          * `SEMIMONTHLY` - SEMIMONTHLY
      pay_currency:
        type: optional<PayCurrencyEnum>
        docs: >-
          The position's currency code.


          * `XUA` - ADB Unit of Account

          * `AFN` - Afghan Afghani

          * `AFA` - Afghan Afghani (1927–2002)

          * `ALL` - Albanian Lek

          * `ALK` - Albanian Lek (1946–1965)

          * `DZD` - Algerian Dinar

          * `ADP` - Andorran Peseta

          * `AOA` - Angolan Kwanza

          * `AOK` - Angolan Kwanza (1977–1991)

          * `AON` - Angolan New Kwanza (1990–2000)

          * `AOR` - Angolan Readjusted Kwanza (1995–1999)

          * `ARA` - Argentine Austral

          * `ARS` - Argentine Peso

          * `ARM` - Argentine Peso (1881–1970)

          * `ARP` - Argentine Peso (1983–1985)

          * `ARL` - Argentine Peso Ley (1970–1983)

          * `AMD` - Armenian Dram

          * `AWG` - Aruban Florin

          * `AUD` - Australian Dollar

          * `ATS` - Austrian Schilling

          * `AZN` - Azerbaijani Manat

          * `AZM` - Azerbaijani Manat (1993–2006)

          * `BSD` - Bahamian Dollar

          * `BHD` - Bahraini Dinar

          * `BDT` - Bangladeshi Taka

          * `BBD` - Barbadian Dollar

          * `BYN` - Belarusian Ruble

          * `BYB` - Belarusian Ruble (1994–1999)

          * `BYR` - Belarusian Ruble (2000–2016)

          * `BEF` - Belgian Franc

          * `BEC` - Belgian Franc (convertible)

          * `BEL` - Belgian Franc (financial)

          * `BZD` - Belize Dollar

          * `BMD` - Bermudan Dollar

          * `BTN` - Bhutanese Ngultrum

          * `BOB` - Bolivian Boliviano

          * `BOL` - Bolivian Boliviano (1863–1963)

          * `BOV` - Bolivian Mvdol

          * `BOP` - Bolivian Peso

          * `BAM` - Bosnia-Herzegovina Convertible Mark

          * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)

          * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)

          * `BWP` - Botswanan Pula

          * `BRC` - Brazilian Cruzado (1986–1989)

          * `BRZ` - Brazilian Cruzeiro (1942–1967)

          * `BRE` - Brazilian Cruzeiro (1990–1993)

          * `BRR` - Brazilian Cruzeiro (1993–1994)

          * `BRN` - Brazilian New Cruzado (1989–1990)

          * `BRB` - Brazilian New Cruzeiro (1967–1986)

          * `BRL` - Brazilian Real

          * `GBP` - British Pound

          * `BND` - Brunei Dollar

          * `BGL` - Bulgarian Hard Lev

          * `BGN` - Bulgarian Lev

          * `BGO` - Bulgarian Lev (1879–1952)

          * `BGM` - Bulgarian Socialist Lev

          * `BUK` - Burmese Kyat

          * `BIF` - Burundian Franc

          * `XPF` - CFP Franc

          * `KHR` - Cambodian Riel

          * `CAD` - Canadian Dollar

          * `CVE` - Cape Verdean Escudo

          * `KYD` - Cayman Islands Dollar

          * `XAF` - Central African CFA Franc

          * `CLE` - Chilean Escudo

          * `CLP` - Chilean Peso

          * `CLF` - Chilean Unit of Account (UF)

          * `CNX` - Chinese People’s Bank Dollar

          * `CNY` - Chinese Yuan

          * `CNH` - Chinese Yuan (offshore)

          * `COP` - Colombian Peso

          * `COU` - Colombian Real Value Unit

          * `KMF` - Comorian Franc

          * `CDF` - Congolese Franc

          * `CRC` - Costa Rican Colón

          * `HRD` - Croatian Dinar

          * `HRK` - Croatian Kuna

          * `CUC` - Cuban Convertible Peso

          * `CUP` - Cuban Peso

          * `CYP` - Cypriot Pound

          * `CZK` - Czech Koruna

          * `CSK` - Czechoslovak Hard Koruna

          * `DKK` - Danish Krone

          * `DJF` - Djiboutian Franc

          * `DOP` - Dominican Peso

          * `NLG` - Dutch Guilder

          * `XCD` - East Caribbean Dollar

          * `DDM` - East German Mark

          * `ECS` - Ecuadorian Sucre

          * `ECV` - Ecuadorian Unit of Constant Value

          * `EGP` - Egyptian Pound

          * `GQE` - Equatorial Guinean Ekwele

          * `ERN` - Eritrean Nakfa

          * `EEK` - Estonian Kroon

          * `ETB` - Ethiopian Birr

          * `EUR` - Euro

          * `XBA` - European Composite Unit

          * `XEU` - European Currency Unit

          * `XBB` - European Monetary Unit

          * `XBC` - European Unit of Account (XBC)

          * `XBD` - European Unit of Account (XBD)

          * `FKP` - Falkland Islands Pound

          * `FJD` - Fijian Dollar

          * `FIM` - Finnish Markka

          * `FRF` - French Franc

          * `XFO` - French Gold Franc

          * `XFU` - French UIC-Franc

          * `GMD` - Gambian Dalasi

          * `GEK` - Georgian Kupon Larit

          * `GEL` - Georgian Lari

          * `DEM` - German Mark

          * `GHS` - Ghanaian Cedi

          * `GHC` - Ghanaian Cedi (1979–2007)

          * `GIP` - Gibraltar Pound

          * `XAU` - Gold

          * `GRD` - Greek Drachma

          * `GTQ` - Guatemalan Quetzal

          * `GWP` - Guinea-Bissau Peso

          * `GNF` - Guinean Franc

          * `GNS` - Guinean Syli

          * `GYD` - Guyanaese Dollar

          * `HTG` - Haitian Gourde

          * `HNL` - Honduran Lempira

          * `HKD` - Hong Kong Dollar

          * `HUF` - Hungarian Forint

          * `IMP` - IMP

          * `ISK` - Icelandic Króna

          * `ISJ` - Icelandic Króna (1918–1981)

          * `INR` - Indian Rupee

          * `IDR` - Indonesian Rupiah

          * `IRR` - Iranian Rial

          * `IQD` - Iraqi Dinar

          * `IEP` - Irish Pound

          * `ILS` - Israeli New Shekel

          * `ILP` - Israeli Pound

          * `ILR` - Israeli Shekel (1980–1985)

          * `ITL` - Italian Lira

          * `JMD` - Jamaican Dollar

          * `JPY` - Japanese Yen

          * `JOD` - Jordanian Dinar

          * `KZT` - Kazakhstani Tenge

          * `KES` - Kenyan Shilling

          * `KWD` - Kuwaiti Dinar

          * `KGS` - Kyrgystani Som

          * `LAK` - Laotian Kip

          * `LVL` - Latvian Lats

          * `LVR` - Latvian Ruble

          * `LBP` - Lebanese Pound

          * `LSL` - Lesotho Loti

          * `LRD` - Liberian Dollar

          * `LYD` - Libyan Dinar

          * `LTL` - Lithuanian Litas

          * `LTT` - Lithuanian Talonas

          * `LUL` - Luxembourg Financial Franc

          * `LUC` - Luxembourgian Convertible Franc

          * `LUF` - Luxembourgian Franc

          * `MOP` - Macanese Pataca

          * `MKD` - Macedonian Denar

          * `MKN` - Macedonian Denar (1992–1993)

          * `MGA` - Malagasy Ariary

          * `MGF` - Malagasy Franc

          * `MWK` - Malawian Kwacha

          * `MYR` - Malaysian Ringgit

          * `MVR` - Maldivian Rufiyaa

          * `MVP` - Maldivian Rupee (1947–1981)

          * `MLF` - Malian Franc

          * `MTL` - Maltese Lira

          * `MTP` - Maltese Pound

          * `MRU` - Mauritanian Ouguiya

          * `MRO` - Mauritanian Ouguiya (1973–2017)

          * `MUR` - Mauritian Rupee

          * `MXV` - Mexican Investment Unit

          * `MXN` - Mexican Peso

          * `MXP` - Mexican Silver Peso (1861–1992)

          * `MDC` - Moldovan Cupon

          * `MDL` - Moldovan Leu

          * `MCF` - Monegasque Franc

          * `MNT` - Mongolian Tugrik

          * `MAD` - Moroccan Dirham

          * `MAF` - Moroccan Franc

          * `MZE` - Mozambican Escudo

          * `MZN` - Mozambican Metical

          * `MZM` - Mozambican Metical (1980–2006)

          * `MMK` - Myanmar Kyat

          * `NAD` - Namibian Dollar

          * `NPR` - Nepalese Rupee

          * `ANG` - Netherlands Antillean Guilder

          * `TWD` - New Taiwan Dollar

          * `NZD` - New Zealand Dollar

          * `NIO` - Nicaraguan Córdoba

          * `NIC` - Nicaraguan Córdoba (1988–1991)

          * `NGN` - Nigerian Naira

          * `KPW` - North Korean Won

          * `NOK` - Norwegian Krone

          * `OMR` - Omani Rial

          * `PKR` - Pakistani Rupee

          * `XPD` - Palladium

          * `PAB` - Panamanian Balboa

          * `PGK` - Papua New Guinean Kina

          * `PYG` - Paraguayan Guarani

          * `PEI` - Peruvian Inti

          * `PEN` - Peruvian Sol

          * `PES` - Peruvian Sol (1863–1965)

          * `PHP` - Philippine Peso

          * `XPT` - Platinum

          * `PLN` - Polish Zloty

          * `PLZ` - Polish Zloty (1950–1995)

          * `PTE` - Portuguese Escudo

          * `GWE` - Portuguese Guinea Escudo

          * `QAR` - Qatari Rial

          * `XRE` - RINET Funds

          * `RHD` - Rhodesian Dollar

          * `RON` - Romanian Leu

          * `ROL` - Romanian Leu (1952–2006)

          * `RUB` - Russian Ruble

          * `RUR` - Russian Ruble (1991–1998)

          * `RWF` - Rwandan Franc

          * `SVC` - Salvadoran Colón

          * `WST` - Samoan Tala

          * `SAR` - Saudi Riyal

          * `RSD` - Serbian Dinar

          * `CSD` - Serbian Dinar (2002–2006)

          * `SCR` - Seychellois Rupee

          * `SLL` - Sierra Leonean Leone

          * `XAG` - Silver

          * `SGD` - Singapore Dollar

          * `SKK` - Slovak Koruna

          * `SIT` - Slovenian Tolar

          * `SBD` - Solomon Islands Dollar

          * `SOS` - Somali Shilling

          * `ZAR` - South African Rand

          * `ZAL` - South African Rand (financial)

          * `KRH` - South Korean Hwan (1953–1962)

          * `KRW` - South Korean Won

          * `KRO` - South Korean Won (1945–1953)

          * `SSP` - South Sudanese Pound

          * `SUR` - Soviet Rouble

          * `ESP` - Spanish Peseta

          * `ESA` - Spanish Peseta (A account)

          * `ESB` - Spanish Peseta (convertible account)

          * `XDR` - Special Drawing Rights

          * `LKR` - Sri Lankan Rupee

          * `SHP` - St. Helena Pound

          * `XSU` - Sucre

          * `SDD` - Sudanese Dinar (1992–2007)

          * `SDG` - Sudanese Pound

          * `SDP` - Sudanese Pound (1957–1998)

          * `SRD` - Surinamese Dollar

          * `SRG` - Surinamese Guilder

          * `SZL` - Swazi Lilangeni

          * `SEK` - Swedish Krona

          * `CHF` - Swiss Franc

          * `SYP` - Syrian Pound

          * `STN` - São Tomé & Príncipe Dobra

          * `STD` - São Tomé & Príncipe Dobra (1977–2017)

          * `TVD` - TVD

          * `TJR` - Tajikistani Ruble

          * `TJS` - Tajikistani Somoni

          * `TZS` - Tanzanian Shilling

          * `XTS` - Testing Currency Code

          * `THB` - Thai Baht

          * `XXX` - The codes assigned for transactions where no currency is
          involved

          * `TPE` - Timorese Escudo

          * `TOP` - Tongan Paʻanga

          * `TTD` - Trinidad & Tobago Dollar

          * `TND` - Tunisian Dinar

          * `TRY` - Turkish Lira

          * `TRL` - Turkish Lira (1922–2005)

          * `TMT` - Turkmenistani Manat

          * `TMM` - Turkmenistani Manat (1993–2009)

          * `USD` - US Dollar

          * `USN` - US Dollar (Next day)

          * `USS` - US Dollar (Same day)

          * `UGX` - Ugandan Shilling

          * `UGS` - Ugandan Shilling (1966–1987)

          * `UAH` - Ukrainian Hryvnia

          * `UAK` - Ukrainian Karbovanets

          * `AED` - United Arab Emirates Dirham

          * `UYW` - Uruguayan Nominal Wage Index Unit

          * `UYU` - Uruguayan Peso

          * `UYP` - Uruguayan Peso (1975–1993)

          * `UYI` - Uruguayan Peso (Indexed Units)

          * `UZS` - Uzbekistani Som

          * `VUV` - Vanuatu Vatu

          * `VES` - Venezuelan Bolívar

          * `VEB` - Venezuelan Bolívar (1871–2008)

          * `VEF` - Venezuelan Bolívar (2008–2018)

          * `VND` - Vietnamese Dong

          * `VNN` - Vietnamese Dong (1978–1985)

          * `CHE` - WIR Euro

          * `CHW` - WIR Franc

          * `XOF` - West African CFA Franc

          * `YDD` - Yemeni Dinar

          * `YER` - Yemeni Rial

          * `YUN` - Yugoslavian Convertible Dinar (1990–1992)

          * `YUD` - Yugoslavian Hard Dinar (1966–1990)

          * `YUM` - Yugoslavian New Dinar (1994–2002)

          * `YUR` - Yugoslavian Reformed Dinar (1992–1993)

          * `ZWN` - ZWN

          * `ZRN` - Zairean New Zaire (1993–1998)

          * `ZRZ` - Zairean Zaire (1971–1993)

          * `ZMW` - Zambian Kwacha

          * `ZMK` - Zambian Kwacha (1968–2012)

          * `ZWD` - Zimbabwean Dollar (1980–2008)

          * `ZWR` - Zimbabwean Dollar (2008)

          * `ZWL` - Zimbabwean Dollar (2009)
      pay_group:
        type: optional<string>
        docs: The employment's pay group
        validation:
          format: uuid
      flsa_status:
        type: optional<FlsaStatusEnum>
        docs: |-
          The position's FLSA status.

          * `EXEMPT` - EXEMPT
          * `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT
          * `NONEXEMPT` - NONEXEMPT
          * `OWNER` - OWNER
      effective_date:
        type: optional<datetime>
        docs: The position's effective date.
      employment_type:
        type: optional<EmploymentTypeEnum>
        docs: |-
          The position's type of employment.

          * `FULL_TIME` - FULL_TIME
          * `PART_TIME` - PART_TIME
          * `INTERN` - INTERN
          * `CONTRACTOR` - CONTRACTOR
          * `FREELANCE` - FREELANCE
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  EmploymentStatusEnum:
    enum:
      - ACTIVE
      - PENDING
      - INACTIVE
    docs: |-
      * `ACTIVE` - ACTIVE
      * `PENDING` - PENDING
      * `INACTIVE` - INACTIVE
    source:
      openapi: ../openapi.yml
  EmploymentTypeEnum:
    enum:
      - FULL_TIME
      - PART_TIME
      - INTERN
      - CONTRACTOR
      - FREELANCE
    docs: |-
      * `FULL_TIME` - FULL_TIME
      * `PART_TIME` - PART_TIME
      * `INTERN` - INTERN
      * `CONTRACTOR` - CONTRACTOR
      * `FREELANCE` - FREELANCE
    source:
      openapi: ../openapi.yml
  EnabledActionsEnum:
    enum:
      - READ
      - WRITE
    docs: |-
      * `READ` - READ
      * `WRITE` - WRITE
    source:
      openapi: ../openapi.yml
  EncodingEnum:
    enum:
      - RAW
      - BASE64
      - GZIP_BASE64
    docs: |-
      * `RAW` - RAW
      * `BASE64` - BASE64
      * `GZIP_BASE64` - GZIP_BASE64
    source:
      openapi: ../openapi.yml
  EndUserDetailsRequest:
    properties:
      end_user_email_address:
        type: string
        docs: >-
          Your end user's email address. This is purely for identification
          purposes - setting this value will not cause any emails to be sent.
        validation:
          minLength: 1
          maxLength: 100
      end_user_organization_name:
        type: string
        docs: Your end user's organization.
        validation:
          minLength: 1
          maxLength: 100
      end_user_origin_id:
        type: string
        docs: >-
          This unique identifier typically represents the ID for your end user
          in your product's database. This value must be distinct from other
          Linked Accounts' unique identifiers.
        validation:
          minLength: 1
          maxLength: 100
      categories:
        docs: The integration categories to show in Merge Link.
        type: list<CategoriesEnum>
      integration:
        type: optional<string>
        docs: >-
          The slug of a specific pre-selected integration for this linking flow
          token. For examples of slugs, see
          https://www.merge.dev/docs/basics/integration-metadata/.
        validation:
          minLength: 1
      link_expiry_mins:
        type: optional<integer>
        docs: >-
          An integer number of minutes between [30, 720 or 10080 if for a Magic
          Link URL] for how long this token is valid. Defaults to 30.
        default: 30
        validation:
          min: 30
          max: 10080
      should_create_magic_link_url:
        type: optional<boolean>
        docs: >-
          Whether to generate a Magic Link URL. Defaults to false. For more
          information on Magic Link, see
          https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.
        default: false
      common_models:
        type: optional<list<CommonModelScopesBodyRequest>>
        docs: >-
          An array of objects to specify the models and fields that will be
          disabled for a given Linked Account. Each object uses model_id,
          enabled_actions, and disabled_fields to specify the model, method, and
          fields that are scoped for a given Linked Account.
    source:
      openapi: ../openapi.yml
  ErrorValidationProblem:
    properties:
      source: optional<ValidationProblemSource>
      title: string
      detail: string
      problem_type: string
    source:
      openapi: ../openapi.yml
  EthnicityEnum:
    enum:
      - AMERICAN_INDIAN_OR_ALASKA_NATIVE
      - ASIAN_OR_INDIAN_SUBCONTINENT
      - BLACK_OR_AFRICAN_AMERICAN
      - HISPANIC_OR_LATINO
      - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
      - TWO_OR_MORE_RACES
      - WHITE
      - PREFER_NOT_TO_DISCLOSE
    docs: >-
      * `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE

      * `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT

      * `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN

      * `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO

      * `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` -
      NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER

      * `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES

      * `WHITE` - WHITE

      * `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE
    source:
      openapi: ../openapi.yml
  FlsaStatusEnum:
    enum:
      - EXEMPT
      - SALARIED_NONEXEMPT
      - NONEXEMPT
      - OWNER
    docs: |-
      * `EXEMPT` - EXEMPT
      * `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT
      * `NONEXEMPT` - NONEXEMPT
      * `OWNER` - OWNER
    source:
      openapi: ../openapi.yml
  GenderEnum:
    enum:
      - MALE
      - FEMALE
      - value: NON-BINARY
        name: NonBinary
      - OTHER
      - PREFER_NOT_TO_DISCLOSE
    docs: |-
      * `MALE` - MALE
      * `FEMALE` - FEMALE
      * `NON-BINARY` - NON-BINARY
      * `OTHER` - OTHER
      * `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE
    source:
      openapi: ../openapi.yml
  GenerateRemoteKeyRequest:
    docs: >-
      # The GenerateRemoteKey Object

      ### Description

      The `GenerateRemoteKey` object is used to represent a request for a new
      remote key.


      ### Usage Example

      Post a `GenerateRemoteKey` to create a new remote key.
    properties:
      name:
        type: string
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  Group:
    docs: >-
      # The Group Object

      ### Description

      The `Group` object is used to represent any subset of employees, such as
      `PayGroup` or `Team`. Employees can be in multiple Groups.


      ### Usage Example

      Fetch from the `LIST Employee` endpoint and expand groups to view an
      employee's groups.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      parent_group:
        type: optional<string>
        docs: The parent group for this group.
        validation:
          format: uuid
      name:
        type: optional<string>
        docs: The group name.
      type:
        type: optional<GroupTypeEnum>
        docs: |-
          The group type

          * `TEAM` - TEAM
          * `DEPARTMENT` - DEPARTMENT
          * `COST_CENTER` - COST_CENTER
          * `BUSINESS_UNIT` - BUSINESS_UNIT
          * `GROUP` - GROUP
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  GroupTypeEnum:
    enum:
      - TEAM
      - DEPARTMENT
      - COST_CENTER
      - BUSINESS_UNIT
      - GROUP
    docs: |-
      * `TEAM` - TEAM
      * `DEPARTMENT` - DEPARTMENT
      * `COST_CENTER` - COST_CENTER
      * `BUSINESS_UNIT` - BUSINESS_UNIT
      * `GROUP` - GROUP
    source:
      openapi: ../openapi.yml
  IgnoreCommonModelRequest:
    properties:
      reason: ReasonEnum
      message:
        type: optional<string>
        validation:
          minLength: 1
          maxLength: 256
    source:
      openapi: ../openapi.yml
  Issue:
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      status:
        type: optional<IssueStatusEnum>
        docs: |-
          Status of the issue. Options: ('ONGOING', 'RESOLVED')

          * `ONGOING` - ONGOING
          * `RESOLVED` - RESOLVED
      error_description: string
      end_user: optional<map<string, unknown>>
      first_incident_time: optional<datetime>
      last_incident_time: optional<datetime>
      is_muted: optional<boolean>
      error_details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  IssueStatusEnum:
    enum:
      - ONGOING
      - RESOLVED
    docs: |-
      * `ONGOING` - ONGOING
      * `RESOLVED` - RESOLVED
    source:
      openapi: ../openapi.yml
  LinkToken:
    properties:
      link_token: string
      integration_name: optional<string>
      magic_link_url: optional<string>
    source:
      openapi: ../openapi.yml
  LinkedAccountCondition:
    properties:
      condition_schema_id:
        type: string
        docs: >-
          The ID indicating which condition schema to use for a specific
          condition.
        validation:
          format: uuid
      common_model:
        type: optional<string>
        docs: The common model for a specific condition.
      native_name:
        type: optional<string>
        docs: User-facing *native condition* name. e.g. "Skip Manager".
      operator:
        type: string
        docs: The operator for a specific condition.
      value: optional<unknown>
      field_name:
        type: optional<string>
        docs: >-
          The name of the field on the common model that this condition
          corresponds to, if they conceptually match. e.g. "location_type".
    source:
      openapi: ../openapi.yml
  LinkedAccountConditionRequest:
    properties:
      condition_schema_id:
        type: string
        docs: >-
          The ID indicating which condition schema to use for a specific
          condition.
        validation:
          format: uuid
      operator:
        type: string
        docs: The operator for a specific condition.
        validation:
          minLength: 1
      value: unknown
    source:
      openapi: ../openapi.yml
  LinkedAccountSelectiveSyncConfiguration:
    properties:
      linked_account_conditions:
        type: optional<list<LinkedAccountCondition>>
        docs: The conditions belonging to a selective sync.
    source:
      openapi: ../openapi.yml
  LinkedAccountSelectiveSyncConfigurationRequest:
    properties:
      linked_account_conditions:
        docs: The conditions belonging to a selective sync.
        type: list<LinkedAccountConditionRequest>
    source:
      openapi: ../openapi.yml
  LinkedAccountStatus:
    properties:
      linked_account_status: string
      can_make_request: boolean
    source:
      openapi: ../openapi.yml
  Location:
    docs: >-
      # The Location Object

      ### Description

      The `Location` object is used to represent an address that can be
      associated with an employee.


      ### Usage Example

      Fetch from the `LIST Locations` endpoint and filter by `ID` to show all
      office locations.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      name:
        type: optional<string>
        docs: The location's name.
      phone_number:
        type: optional<string>
        docs: The location's phone number.
      street_1:
        type: optional<string>
        docs: Line 1 of the location's street address.
      street_2:
        type: optional<string>
        docs: Line 2 of the location's street address.
      city:
        type: optional<string>
        docs: The location's city.
      state:
        type: optional<string>
        docs: The location's state. Represents a region if outside of the US.
      zip_code:
        type: optional<string>
        docs: The location's zip code or postal code.
      country:
        type: optional<CountryEnum>
        docs: |-
          The location's country.

          * `AF` - Afghanistan
          * `AX` - Åland Islands
          * `AL` - Albania
          * `DZ` - Algeria
          * `AS` - American Samoa
          * `AD` - Andorra
          * `AO` - Angola
          * `AI` - Anguilla
          * `AQ` - Antarctica
          * `AG` - Antigua and Barbuda
          * `AR` - Argentina
          * `AM` - Armenia
          * `AW` - Aruba
          * `AU` - Australia
          * `AT` - Austria
          * `AZ` - Azerbaijan
          * `BS` - Bahamas
          * `BH` - Bahrain
          * `BD` - Bangladesh
          * `BB` - Barbados
          * `BY` - Belarus
          * `BE` - Belgium
          * `BZ` - Belize
          * `BJ` - Benin
          * `BM` - Bermuda
          * `BT` - Bhutan
          * `BO` - Bolivia
          * `BQ` - Bonaire, Sint Eustatius and Saba
          * `BA` - Bosnia and Herzegovina
          * `BW` - Botswana
          * `BV` - Bouvet Island
          * `BR` - Brazil
          * `IO` - British Indian Ocean Territory
          * `BN` - Brunei
          * `BG` - Bulgaria
          * `BF` - Burkina Faso
          * `BI` - Burundi
          * `CV` - Cabo Verde
          * `KH` - Cambodia
          * `CM` - Cameroon
          * `CA` - Canada
          * `KY` - Cayman Islands
          * `CF` - Central African Republic
          * `TD` - Chad
          * `CL` - Chile
          * `CN` - China
          * `CX` - Christmas Island
          * `CC` - Cocos (Keeling) Islands
          * `CO` - Colombia
          * `KM` - Comoros
          * `CG` - Congo
          * `CD` - Congo (the Democratic Republic of the)
          * `CK` - Cook Islands
          * `CR` - Costa Rica
          * `CI` - Côte d'Ivoire
          * `HR` - Croatia
          * `CU` - Cuba
          * `CW` - Curaçao
          * `CY` - Cyprus
          * `CZ` - Czechia
          * `DK` - Denmark
          * `DJ` - Djibouti
          * `DM` - Dominica
          * `DO` - Dominican Republic
          * `EC` - Ecuador
          * `EG` - Egypt
          * `SV` - El Salvador
          * `GQ` - Equatorial Guinea
          * `ER` - Eritrea
          * `EE` - Estonia
          * `SZ` - Eswatini
          * `ET` - Ethiopia
          * `FK` - Falkland Islands (Malvinas)
          * `FO` - Faroe Islands
          * `FJ` - Fiji
          * `FI` - Finland
          * `FR` - France
          * `GF` - French Guiana
          * `PF` - French Polynesia
          * `TF` - French Southern Territories
          * `GA` - Gabon
          * `GM` - Gambia
          * `GE` - Georgia
          * `DE` - Germany
          * `GH` - Ghana
          * `GI` - Gibraltar
          * `GR` - Greece
          * `GL` - Greenland
          * `GD` - Grenada
          * `GP` - Guadeloupe
          * `GU` - Guam
          * `GT` - Guatemala
          * `GG` - Guernsey
          * `GN` - Guinea
          * `GW` - Guinea-Bissau
          * `GY` - Guyana
          * `HT` - Haiti
          * `HM` - Heard Island and McDonald Islands
          * `VA` - Holy See
          * `HN` - Honduras
          * `HK` - Hong Kong
          * `HU` - Hungary
          * `IS` - Iceland
          * `IN` - India
          * `ID` - Indonesia
          * `IR` - Iran
          * `IQ` - Iraq
          * `IE` - Ireland
          * `IM` - Isle of Man
          * `IL` - Israel
          * `IT` - Italy
          * `JM` - Jamaica
          * `JP` - Japan
          * `JE` - Jersey
          * `JO` - Jordan
          * `KZ` - Kazakhstan
          * `KE` - Kenya
          * `KI` - Kiribati
          * `KW` - Kuwait
          * `KG` - Kyrgyzstan
          * `LA` - Laos
          * `LV` - Latvia
          * `LB` - Lebanon
          * `LS` - Lesotho
          * `LR` - Liberia
          * `LY` - Libya
          * `LI` - Liechtenstein
          * `LT` - Lithuania
          * `LU` - Luxembourg
          * `MO` - Macao
          * `MG` - Madagascar
          * `MW` - Malawi
          * `MY` - Malaysia
          * `MV` - Maldives
          * `ML` - Mali
          * `MT` - Malta
          * `MH` - Marshall Islands
          * `MQ` - Martinique
          * `MR` - Mauritania
          * `MU` - Mauritius
          * `YT` - Mayotte
          * `MX` - Mexico
          * `FM` - Micronesia (Federated States of)
          * `MD` - Moldova
          * `MC` - Monaco
          * `MN` - Mongolia
          * `ME` - Montenegro
          * `MS` - Montserrat
          * `MA` - Morocco
          * `MZ` - Mozambique
          * `MM` - Myanmar
          * `NA` - Namibia
          * `NR` - Nauru
          * `NP` - Nepal
          * `NL` - Netherlands
          * `NC` - New Caledonia
          * `NZ` - New Zealand
          * `NI` - Nicaragua
          * `NE` - Niger
          * `NG` - Nigeria
          * `NU` - Niue
          * `NF` - Norfolk Island
          * `KP` - North Korea
          * `MK` - North Macedonia
          * `MP` - Northern Mariana Islands
          * `NO` - Norway
          * `OM` - Oman
          * `PK` - Pakistan
          * `PW` - Palau
          * `PS` - Palestine, State of
          * `PA` - Panama
          * `PG` - Papua New Guinea
          * `PY` - Paraguay
          * `PE` - Peru
          * `PH` - Philippines
          * `PN` - Pitcairn
          * `PL` - Poland
          * `PT` - Portugal
          * `PR` - Puerto Rico
          * `QA` - Qatar
          * `RE` - Réunion
          * `RO` - Romania
          * `RU` - Russia
          * `RW` - Rwanda
          * `BL` - Saint Barthélemy
          * `SH` - Saint Helena, Ascension and Tristan da Cunha
          * `KN` - Saint Kitts and Nevis
          * `LC` - Saint Lucia
          * `MF` - Saint Martin (French part)
          * `PM` - Saint Pierre and Miquelon
          * `VC` - Saint Vincent and the Grenadines
          * `WS` - Samoa
          * `SM` - San Marino
          * `ST` - Sao Tome and Principe
          * `SA` - Saudi Arabia
          * `SN` - Senegal
          * `RS` - Serbia
          * `SC` - Seychelles
          * `SL` - Sierra Leone
          * `SG` - Singapore
          * `SX` - Sint Maarten (Dutch part)
          * `SK` - Slovakia
          * `SI` - Slovenia
          * `SB` - Solomon Islands
          * `SO` - Somalia
          * `ZA` - South Africa
          * `GS` - South Georgia and the South Sandwich Islands
          * `KR` - South Korea
          * `SS` - South Sudan
          * `ES` - Spain
          * `LK` - Sri Lanka
          * `SD` - Sudan
          * `SR` - Suriname
          * `SJ` - Svalbard and Jan Mayen
          * `SE` - Sweden
          * `CH` - Switzerland
          * `SY` - Syria
          * `TW` - Taiwan
          * `TJ` - Tajikistan
          * `TZ` - Tanzania
          * `TH` - Thailand
          * `TL` - Timor-Leste
          * `TG` - Togo
          * `TK` - Tokelau
          * `TO` - Tonga
          * `TT` - Trinidad and Tobago
          * `TN` - Tunisia
          * `TR` - Turkey
          * `TM` - Turkmenistan
          * `TC` - Turks and Caicos Islands
          * `TV` - Tuvalu
          * `UG` - Uganda
          * `UA` - Ukraine
          * `AE` - United Arab Emirates
          * `GB` - United Kingdom
          * `UM` - United States Minor Outlying Islands
          * `US` - United States of America
          * `UY` - Uruguay
          * `UZ` - Uzbekistan
          * `VU` - Vanuatu
          * `VE` - Venezuela
          * `VN` - Vietnam
          * `VG` - Virgin Islands (British)
          * `VI` - Virgin Islands (U.S.)
          * `WF` - Wallis and Futuna
          * `EH` - Western Sahara
          * `YE` - Yemen
          * `ZM` - Zambia
          * `ZW` - Zimbabwe
      location_type:
        type: optional<LocationTypeEnum>
        docs: |-
          The location's type. Can be either WORK or HOME

          * `HOME` - HOME
          * `WORK` - WORK
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  LocationTypeEnum:
    enum:
      - HOME
      - WORK
    docs: |-
      * `HOME` - HOME
      * `WORK` - WORK
    source:
      openapi: ../openapi.yml
  MaritalStatusEnum:
    enum:
      - SINGLE
      - MARRIED_FILING_JOINTLY
      - MARRIED_FILING_SEPARATELY
      - HEAD_OF_HOUSEHOLD
      - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD
    docs: >-
      * `SINGLE` - SINGLE

      * `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY

      * `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY

      * `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD

      * `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` -
      QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD
    source:
      openapi: ../openapi.yml
  MetaResponse:
    properties:
      request_schema: map<string, unknown>
      remote_field_classes: optional<map<string, unknown>>
      status: optional<LinkedAccountStatus>
      has_conditional_params: boolean
      has_required_linked_account_params: boolean
    source:
      openapi: ../openapi.yml
  MethodEnum:
    enum:
      - GET
      - OPTIONS
      - HEAD
      - POST
      - PUT
      - PATCH
      - DELETE
    docs: |-
      * `GET` - GET
      * `OPTIONS` - OPTIONS
      * `HEAD` - HEAD
      * `POST` - POST
      * `PUT` - PUT
      * `PATCH` - PATCH
      * `DELETE` - DELETE
    source:
      openapi: ../openapi.yml
  ModelOperation:
    docs: >-
      # The ModelOperation Object

      ### Description

      The `ModelOperation` object is used to represent the operations that are
      currently supported for a given model.


      ### Usage Example

      View what operations are supported for the `Candidate` endpoint.
    properties:
      model_name: string
      available_operations: list<string>
      required_post_parameters: list<string>
      supported_fields: list<string>
    source:
      openapi: ../openapi.yml
  MultipartFormFieldRequest:
    docs: >-
      # The MultipartFormField Object

      ### Description

      The `MultipartFormField` object is used to represent fields in an HTTP
      request using `multipart/form-data`.


      ### Usage Example

      Create a `MultipartFormField` to define a multipart form entry.
    properties:
      name:
        type: string
        docs: The name of the form field
        validation:
          minLength: 1
      data:
        type: string
        docs: The data for the form field.
        validation:
          minLength: 1
      encoding:
        type: optional<EncodingEnum>
        docs: |-
          The encoding of the value of `data`. Defaults to `RAW` if not defined.

          * `RAW` - RAW
          * `BASE64` - BASE64
          * `GZIP_BASE64` - GZIP_BASE64
      file_name:
        type: optional<string>
        docs: The file name of the form field, if the field is for a file.
        validation:
          minLength: 1
      content_type:
        type: optional<string>
        docs: The MIME type of the file, if the field is for a file.
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  OperatorSchema:
    properties:
      operator:
        type: optional<string>
        docs: The operator for which an operator schema is defined.
      is_unique:
        type: optional<boolean>
        docs: Whether the operator can be repeated multiple times.
    source:
      openapi: ../openapi.yml
  PaginatedAccountDetailsAndActionsList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<AccountDetailsAndActions>>
    source:
      openapi: ../openapi.yml
  PaginatedBankInfoList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<BankInfo>>
    source:
      openapi: ../openapi.yml
  PaginatedBenefitList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Benefit>>
    source:
      openapi: ../openapi.yml
  PaginatedCompanyList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Company>>
    source:
      openapi: ../openapi.yml
  PaginatedConditionSchemaList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<ConditionSchema>>
    source:
      openapi: ../openapi.yml
  PaginatedEmployeeList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Employee>>
    source:
      openapi: ../openapi.yml
  PaginatedEmployeePayrollRunList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<EmployeePayrollRun>>
    source:
      openapi: ../openapi.yml
  PaginatedEmploymentList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Employment>>
    source:
      openapi: ../openapi.yml
  PaginatedGroupList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Group>>
    source:
      openapi: ../openapi.yml
  PaginatedIssueList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Issue>>
    source:
      openapi: ../openapi.yml
  PaginatedLocationList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Location>>
    source:
      openapi: ../openapi.yml
  PaginatedPayGroupList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<PayGroup>>
    source:
      openapi: ../openapi.yml
  PaginatedPayrollRunList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<PayrollRun>>
    source:
      openapi: ../openapi.yml
  PaginatedSyncStatusList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<SyncStatus>>
    source:
      openapi: ../openapi.yml
  PaginatedTeamList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<Team>>
    source:
      openapi: ../openapi.yml
  PaginatedTimeOffBalanceList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<TimeOffBalance>>
    source:
      openapi: ../openapi.yml
  PaginatedTimeOffList:
    properties:
      next: optional<string>
      previous: optional<string>
      results: optional<list<TimeOff>>
    source:
      openapi: ../openapi.yml
  PayCurrencyEnum:
    enum:
      - XUA
      - AFN
      - AFA
      - ALL
      - ALK
      - DZD
      - ADP
      - AOA
      - AOK
      - AON
      - AOR
      - ARA
      - ARS
      - ARM
      - ARP
      - ARL
      - AMD
      - AWG
      - AUD
      - ATS
      - AZN
      - AZM
      - BSD
      - BHD
      - BDT
      - BBD
      - BYN
      - BYB
      - BYR
      - BEF
      - BEC
      - BEL
      - BZD
      - BMD
      - BTN
      - BOB
      - BOL
      - BOV
      - BOP
      - BAM
      - BAD
      - BAN
      - BWP
      - BRC
      - BRZ
      - BRE
      - BRR
      - BRN
      - BRB
      - BRL
      - GBP
      - BND
      - BGL
      - BGN
      - BGO
      - BGM
      - BUK
      - BIF
      - XPF
      - KHR
      - CAD
      - CVE
      - KYD
      - XAF
      - CLE
      - CLP
      - CLF
      - CNX
      - CNY
      - CNH
      - COP
      - COU
      - KMF
      - CDF
      - CRC
      - HRD
      - HRK
      - CUC
      - CUP
      - CYP
      - CZK
      - CSK
      - DKK
      - DJF
      - DOP
      - NLG
      - XCD
      - DDM
      - ECS
      - ECV
      - EGP
      - GQE
      - ERN
      - EEK
      - ETB
      - EUR
      - XBA
      - XEU
      - XBB
      - XBC
      - XBD
      - FKP
      - FJD
      - FIM
      - FRF
      - XFO
      - XFU
      - GMD
      - GEK
      - GEL
      - DEM
      - GHS
      - GHC
      - GIP
      - XAU
      - GRD
      - GTQ
      - GWP
      - GNF
      - GNS
      - GYD
      - HTG
      - HNL
      - HKD
      - HUF
      - IMP
      - ISK
      - ISJ
      - INR
      - IDR
      - IRR
      - IQD
      - IEP
      - ILS
      - ILP
      - ILR
      - ITL
      - JMD
      - JPY
      - JOD
      - KZT
      - KES
      - KWD
      - KGS
      - LAK
      - LVL
      - LVR
      - LBP
      - LSL
      - LRD
      - LYD
      - LTL
      - LTT
      - LUL
      - LUC
      - LUF
      - MOP
      - MKD
      - MKN
      - MGA
      - MGF
      - MWK
      - MYR
      - MVR
      - MVP
      - MLF
      - MTL
      - MTP
      - MRU
      - MRO
      - MUR
      - MXV
      - MXN
      - MXP
      - MDC
      - MDL
      - MCF
      - MNT
      - MAD
      - MAF
      - MZE
      - MZN
      - MZM
      - MMK
      - NAD
      - NPR
      - ANG
      - TWD
      - NZD
      - NIO
      - NIC
      - NGN
      - KPW
      - NOK
      - OMR
      - PKR
      - XPD
      - PAB
      - PGK
      - PYG
      - PEI
      - PEN
      - PES
      - PHP
      - XPT
      - PLN
      - PLZ
      - PTE
      - GWE
      - QAR
      - XRE
      - RHD
      - RON
      - ROL
      - RUB
      - RUR
      - RWF
      - SVC
      - WST
      - SAR
      - RSD
      - CSD
      - SCR
      - SLL
      - XAG
      - SGD
      - SKK
      - SIT
      - SBD
      - SOS
      - ZAR
      - ZAL
      - KRH
      - KRW
      - KRO
      - SSP
      - SUR
      - ESP
      - ESA
      - ESB
      - XDR
      - LKR
      - SHP
      - XSU
      - SDD
      - SDG
      - SDP
      - SRD
      - SRG
      - SZL
      - SEK
      - CHF
      - SYP
      - STN
      - STD
      - TVD
      - TJR
      - TJS
      - TZS
      - XTS
      - THB
      - XXX
      - TPE
      - TOP
      - TTD
      - TND
      - TRY
      - TRL
      - TMT
      - TMM
      - USD
      - USN
      - USS
      - UGX
      - UGS
      - UAH
      - UAK
      - AED
      - UYW
      - UYU
      - UYP
      - UYI
      - UZS
      - VUV
      - VES
      - VEB
      - VEF
      - VND
      - VNN
      - CHE
      - CHW
      - XOF
      - YDD
      - YER
      - YUN
      - YUD
      - YUM
      - YUR
      - ZWN
      - ZRN
      - ZRZ
      - ZMW
      - ZMK
      - ZWD
      - ZWR
      - ZWL
    docs: >-
      * `XUA` - ADB Unit of Account

      * `AFN` - Afghan Afghani

      * `AFA` - Afghan Afghani (1927–2002)

      * `ALL` - Albanian Lek

      * `ALK` - Albanian Lek (1946–1965)

      * `DZD` - Algerian Dinar

      * `ADP` - Andorran Peseta

      * `AOA` - Angolan Kwanza

      * `AOK` - Angolan Kwanza (1977–1991)

      * `AON` - Angolan New Kwanza (1990–2000)

      * `AOR` - Angolan Readjusted Kwanza (1995–1999)

      * `ARA` - Argentine Austral

      * `ARS` - Argentine Peso

      * `ARM` - Argentine Peso (1881–1970)

      * `ARP` - Argentine Peso (1983–1985)

      * `ARL` - Argentine Peso Ley (1970–1983)

      * `AMD` - Armenian Dram

      * `AWG` - Aruban Florin

      * `AUD` - Australian Dollar

      * `ATS` - Austrian Schilling

      * `AZN` - Azerbaijani Manat

      * `AZM` - Azerbaijani Manat (1993–2006)

      * `BSD` - Bahamian Dollar

      * `BHD` - Bahraini Dinar

      * `BDT` - Bangladeshi Taka

      * `BBD` - Barbadian Dollar

      * `BYN` - Belarusian Ruble

      * `BYB` - Belarusian Ruble (1994–1999)

      * `BYR` - Belarusian Ruble (2000–2016)

      * `BEF` - Belgian Franc

      * `BEC` - Belgian Franc (convertible)

      * `BEL` - Belgian Franc (financial)

      * `BZD` - Belize Dollar

      * `BMD` - Bermudan Dollar

      * `BTN` - Bhutanese Ngultrum

      * `BOB` - Bolivian Boliviano

      * `BOL` - Bolivian Boliviano (1863–1963)

      * `BOV` - Bolivian Mvdol

      * `BOP` - Bolivian Peso

      * `BAM` - Bosnia-Herzegovina Convertible Mark

      * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)

      * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)

      * `BWP` - Botswanan Pula

      * `BRC` - Brazilian Cruzado (1986–1989)

      * `BRZ` - Brazilian Cruzeiro (1942–1967)

      * `BRE` - Brazilian Cruzeiro (1990–1993)

      * `BRR` - Brazilian Cruzeiro (1993–1994)

      * `BRN` - Brazilian New Cruzado (1989–1990)

      * `BRB` - Brazilian New Cruzeiro (1967–1986)

      * `BRL` - Brazilian Real

      * `GBP` - British Pound

      * `BND` - Brunei Dollar

      * `BGL` - Bulgarian Hard Lev

      * `BGN` - Bulgarian Lev

      * `BGO` - Bulgarian Lev (1879–1952)

      * `BGM` - Bulgarian Socialist Lev

      * `BUK` - Burmese Kyat

      * `BIF` - Burundian Franc

      * `XPF` - CFP Franc

      * `KHR` - Cambodian Riel

      * `CAD` - Canadian Dollar

      * `CVE` - Cape Verdean Escudo

      * `KYD` - Cayman Islands Dollar

      * `XAF` - Central African CFA Franc

      * `CLE` - Chilean Escudo

      * `CLP` - Chilean Peso

      * `CLF` - Chilean Unit of Account (UF)

      * `CNX` - Chinese People’s Bank Dollar

      * `CNY` - Chinese Yuan

      * `CNH` - Chinese Yuan (offshore)

      * `COP` - Colombian Peso

      * `COU` - Colombian Real Value Unit

      * `KMF` - Comorian Franc

      * `CDF` - Congolese Franc

      * `CRC` - Costa Rican Colón

      * `HRD` - Croatian Dinar

      * `HRK` - Croatian Kuna

      * `CUC` - Cuban Convertible Peso

      * `CUP` - Cuban Peso

      * `CYP` - Cypriot Pound

      * `CZK` - Czech Koruna

      * `CSK` - Czechoslovak Hard Koruna

      * `DKK` - Danish Krone

      * `DJF` - Djiboutian Franc

      * `DOP` - Dominican Peso

      * `NLG` - Dutch Guilder

      * `XCD` - East Caribbean Dollar

      * `DDM` - East German Mark

      * `ECS` - Ecuadorian Sucre

      * `ECV` - Ecuadorian Unit of Constant Value

      * `EGP` - Egyptian Pound

      * `GQE` - Equatorial Guinean Ekwele

      * `ERN` - Eritrean Nakfa

      * `EEK` - Estonian Kroon

      * `ETB` - Ethiopian Birr

      * `EUR` - Euro

      * `XBA` - European Composite Unit

      * `XEU` - European Currency Unit

      * `XBB` - European Monetary Unit

      * `XBC` - European Unit of Account (XBC)

      * `XBD` - European Unit of Account (XBD)

      * `FKP` - Falkland Islands Pound

      * `FJD` - Fijian Dollar

      * `FIM` - Finnish Markka

      * `FRF` - French Franc

      * `XFO` - French Gold Franc

      * `XFU` - French UIC-Franc

      * `GMD` - Gambian Dalasi

      * `GEK` - Georgian Kupon Larit

      * `GEL` - Georgian Lari

      * `DEM` - German Mark

      * `GHS` - Ghanaian Cedi

      * `GHC` - Ghanaian Cedi (1979–2007)

      * `GIP` - Gibraltar Pound

      * `XAU` - Gold

      * `GRD` - Greek Drachma

      * `GTQ` - Guatemalan Quetzal

      * `GWP` - Guinea-Bissau Peso

      * `GNF` - Guinean Franc

      * `GNS` - Guinean Syli

      * `GYD` - Guyanaese Dollar

      * `HTG` - Haitian Gourde

      * `HNL` - Honduran Lempira

      * `HKD` - Hong Kong Dollar

      * `HUF` - Hungarian Forint

      * `IMP` - IMP

      * `ISK` - Icelandic Króna

      * `ISJ` - Icelandic Króna (1918–1981)

      * `INR` - Indian Rupee

      * `IDR` - Indonesian Rupiah

      * `IRR` - Iranian Rial

      * `IQD` - Iraqi Dinar

      * `IEP` - Irish Pound

      * `ILS` - Israeli New Shekel

      * `ILP` - Israeli Pound

      * `ILR` - Israeli Shekel (1980–1985)

      * `ITL` - Italian Lira

      * `JMD` - Jamaican Dollar

      * `JPY` - Japanese Yen

      * `JOD` - Jordanian Dinar

      * `KZT` - Kazakhstani Tenge

      * `KES` - Kenyan Shilling

      * `KWD` - Kuwaiti Dinar

      * `KGS` - Kyrgystani Som

      * `LAK` - Laotian Kip

      * `LVL` - Latvian Lats

      * `LVR` - Latvian Ruble

      * `LBP` - Lebanese Pound

      * `LSL` - Lesotho Loti

      * `LRD` - Liberian Dollar

      * `LYD` - Libyan Dinar

      * `LTL` - Lithuanian Litas

      * `LTT` - Lithuanian Talonas

      * `LUL` - Luxembourg Financial Franc

      * `LUC` - Luxembourgian Convertible Franc

      * `LUF` - Luxembourgian Franc

      * `MOP` - Macanese Pataca

      * `MKD` - Macedonian Denar

      * `MKN` - Macedonian Denar (1992–1993)

      * `MGA` - Malagasy Ariary

      * `MGF` - Malagasy Franc

      * `MWK` - Malawian Kwacha

      * `MYR` - Malaysian Ringgit

      * `MVR` - Maldivian Rufiyaa

      * `MVP` - Maldivian Rupee (1947–1981)

      * `MLF` - Malian Franc

      * `MTL` - Maltese Lira

      * `MTP` - Maltese Pound

      * `MRU` - Mauritanian Ouguiya

      * `MRO` - Mauritanian Ouguiya (1973–2017)

      * `MUR` - Mauritian Rupee

      * `MXV` - Mexican Investment Unit

      * `MXN` - Mexican Peso

      * `MXP` - Mexican Silver Peso (1861–1992)

      * `MDC` - Moldovan Cupon

      * `MDL` - Moldovan Leu

      * `MCF` - Monegasque Franc

      * `MNT` - Mongolian Tugrik

      * `MAD` - Moroccan Dirham

      * `MAF` - Moroccan Franc

      * `MZE` - Mozambican Escudo

      * `MZN` - Mozambican Metical

      * `MZM` - Mozambican Metical (1980–2006)

      * `MMK` - Myanmar Kyat

      * `NAD` - Namibian Dollar

      * `NPR` - Nepalese Rupee

      * `ANG` - Netherlands Antillean Guilder

      * `TWD` - New Taiwan Dollar

      * `NZD` - New Zealand Dollar

      * `NIO` - Nicaraguan Córdoba

      * `NIC` - Nicaraguan Córdoba (1988–1991)

      * `NGN` - Nigerian Naira

      * `KPW` - North Korean Won

      * `NOK` - Norwegian Krone

      * `OMR` - Omani Rial

      * `PKR` - Pakistani Rupee

      * `XPD` - Palladium

      * `PAB` - Panamanian Balboa

      * `PGK` - Papua New Guinean Kina

      * `PYG` - Paraguayan Guarani

      * `PEI` - Peruvian Inti

      * `PEN` - Peruvian Sol

      * `PES` - Peruvian Sol (1863–1965)

      * `PHP` - Philippine Peso

      * `XPT` - Platinum

      * `PLN` - Polish Zloty

      * `PLZ` - Polish Zloty (1950–1995)

      * `PTE` - Portuguese Escudo

      * `GWE` - Portuguese Guinea Escudo

      * `QAR` - Qatari Rial

      * `XRE` - RINET Funds

      * `RHD` - Rhodesian Dollar

      * `RON` - Romanian Leu

      * `ROL` - Romanian Leu (1952–2006)

      * `RUB` - Russian Ruble

      * `RUR` - Russian Ruble (1991–1998)

      * `RWF` - Rwandan Franc

      * `SVC` - Salvadoran Colón

      * `WST` - Samoan Tala

      * `SAR` - Saudi Riyal

      * `RSD` - Serbian Dinar

      * `CSD` - Serbian Dinar (2002–2006)

      * `SCR` - Seychellois Rupee

      * `SLL` - Sierra Leonean Leone

      * `XAG` - Silver

      * `SGD` - Singapore Dollar

      * `SKK` - Slovak Koruna

      * `SIT` - Slovenian Tolar

      * `SBD` - Solomon Islands Dollar

      * `SOS` - Somali Shilling

      * `ZAR` - South African Rand

      * `ZAL` - South African Rand (financial)

      * `KRH` - South Korean Hwan (1953–1962)

      * `KRW` - South Korean Won

      * `KRO` - South Korean Won (1945–1953)

      * `SSP` - South Sudanese Pound

      * `SUR` - Soviet Rouble

      * `ESP` - Spanish Peseta

      * `ESA` - Spanish Peseta (A account)

      * `ESB` - Spanish Peseta (convertible account)

      * `XDR` - Special Drawing Rights

      * `LKR` - Sri Lankan Rupee

      * `SHP` - St. Helena Pound

      * `XSU` - Sucre

      * `SDD` - Sudanese Dinar (1992–2007)

      * `SDG` - Sudanese Pound

      * `SDP` - Sudanese Pound (1957–1998)

      * `SRD` - Surinamese Dollar

      * `SRG` - Surinamese Guilder

      * `SZL` - Swazi Lilangeni

      * `SEK` - Swedish Krona

      * `CHF` - Swiss Franc

      * `SYP` - Syrian Pound

      * `STN` - São Tomé & Príncipe Dobra

      * `STD` - São Tomé & Príncipe Dobra (1977–2017)

      * `TVD` - TVD

      * `TJR` - Tajikistani Ruble

      * `TJS` - Tajikistani Somoni

      * `TZS` - Tanzanian Shilling

      * `XTS` - Testing Currency Code

      * `THB` - Thai Baht

      * `XXX` - The codes assigned for transactions where no currency is
      involved

      * `TPE` - Timorese Escudo

      * `TOP` - Tongan Paʻanga

      * `TTD` - Trinidad & Tobago Dollar

      * `TND` - Tunisian Dinar

      * `TRY` - Turkish Lira

      * `TRL` - Turkish Lira (1922–2005)

      * `TMT` - Turkmenistani Manat

      * `TMM` - Turkmenistani Manat (1993–2009)

      * `USD` - US Dollar

      * `USN` - US Dollar (Next day)

      * `USS` - US Dollar (Same day)

      * `UGX` - Ugandan Shilling

      * `UGS` - Ugandan Shilling (1966–1987)

      * `UAH` - Ukrainian Hryvnia

      * `UAK` - Ukrainian Karbovanets

      * `AED` - United Arab Emirates Dirham

      * `UYW` - Uruguayan Nominal Wage Index Unit

      * `UYU` - Uruguayan Peso

      * `UYP` - Uruguayan Peso (1975–1993)

      * `UYI` - Uruguayan Peso (Indexed Units)

      * `UZS` - Uzbekistani Som

      * `VUV` - Vanuatu Vatu

      * `VES` - Venezuelan Bolívar

      * `VEB` - Venezuelan Bolívar (1871–2008)

      * `VEF` - Venezuelan Bolívar (2008–2018)

      * `VND` - Vietnamese Dong

      * `VNN` - Vietnamese Dong (1978–1985)

      * `CHE` - WIR Euro

      * `CHW` - WIR Franc

      * `XOF` - West African CFA Franc

      * `YDD` - Yemeni Dinar

      * `YER` - Yemeni Rial

      * `YUN` - Yugoslavian Convertible Dinar (1990–1992)

      * `YUD` - Yugoslavian Hard Dinar (1966–1990)

      * `YUM` - Yugoslavian New Dinar (1994–2002)

      * `YUR` - Yugoslavian Reformed Dinar (1992–1993)

      * `ZWN` - ZWN

      * `ZRN` - Zairean New Zaire (1993–1998)

      * `ZRZ` - Zairean Zaire (1971–1993)

      * `ZMW` - Zambian Kwacha

      * `ZMK` - Zambian Kwacha (1968–2012)

      * `ZWD` - Zimbabwean Dollar (1980–2008)

      * `ZWR` - Zimbabwean Dollar (2008)

      * `ZWL` - Zimbabwean Dollar (2009)
    source:
      openapi: ../openapi.yml
  PayFrequencyEnum:
    enum:
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
      - QUARTERLY
      - SEMIANNUALLY
      - ANNUALLY
      - value: THIRTEEN-MONTHLY
        name: ThirteenMonthly
      - PRO_RATA
      - SEMIMONTHLY
    docs: |-
      * `WEEKLY` - WEEKLY
      * `BIWEEKLY` - BIWEEKLY
      * `MONTHLY` - MONTHLY
      * `QUARTERLY` - QUARTERLY
      * `SEMIANNUALLY` - SEMIANNUALLY
      * `ANNUALLY` - ANNUALLY
      * `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY
      * `PRO_RATA` - PRO_RATA
      * `SEMIMONTHLY` - SEMIMONTHLY
    source:
      openapi: ../openapi.yml
  PayGroup:
    docs: >-
      # The PayGroup Object

      ### Description

      The `PayGroup` object is used to represent a subset of employees that are
      put together for payroll processing purposes.


      ### Usage Example

      Fetch from the `LIST PayGroup` endpoint and filter by `ID` to show all pay
      group information.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      pay_group_name:
        type: optional<string>
        docs: The pay group name.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  PayPeriodEnum:
    enum:
      - HOUR
      - DAY
      - WEEK
      - EVERY_TWO_WEEKS
      - SEMIMONTHLY
      - MONTH
      - QUARTER
      - EVERY_SIX_MONTHS
      - YEAR
    docs: |-
      * `HOUR` - HOUR
      * `DAY` - DAY
      * `WEEK` - WEEK
      * `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS
      * `SEMIMONTHLY` - SEMIMONTHLY
      * `MONTH` - MONTH
      * `QUARTER` - QUARTER
      * `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS
      * `YEAR` - YEAR
    source:
      openapi: ../openapi.yml
  PayrollRun:
    docs: >-
      # The PayrollRun Object

      ### Description

      The `PayrollRun` object is used to represent a group of pay statements for
      a specific pay schedule.


      ### Usage Example

      Fetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all
      payroll runs.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      run_state:
        type: optional<RunStateEnum>
        docs: |-
          The state of the payroll run

          * `PAID` - PAID
          * `DRAFT` - DRAFT
          * `APPROVED` - APPROVED
          * `FAILED` - FAILED
          * `CLOSED` - CLOSED
      run_type:
        type: optional<RunTypeEnum>
        docs: |-
          The type of the payroll run

          * `REGULAR` - REGULAR
          * `OFF_CYCLE` - OFF_CYCLE
          * `CORRECTION` - CORRECTION
          * `TERMINATION` - TERMINATION
          * `SIGN_ON_BONUS` - SIGN_ON_BONUS
      start_date:
        type: optional<datetime>
        docs: The day and time the payroll run started.
      end_date:
        type: optional<datetime>
        docs: The day and time the payroll run ended.
      check_date:
        type: optional<datetime>
        docs: The day and time the payroll run was checked.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  PolicyTypeEnum:
    enum:
      - VACATION
      - SICK
      - PERSONAL
      - JURY_DUTY
      - VOLUNTEER
      - BEREAVEMENT
    docs: |-
      * `VACATION` - VACATION
      * `SICK` - SICK
      * `PERSONAL` - PERSONAL
      * `JURY_DUTY` - JURY_DUTY
      * `VOLUNTEER` - VOLUNTEER
      * `BEREAVEMENT` - BEREAVEMENT
    source:
      openapi: ../openapi.yml
  ReasonEnum:
    enum:
      - GENERAL_CUSTOMER_REQUEST
      - GDPR
      - OTHER
    docs: |-
      * `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST
      * `GDPR` - GDPR
      * `OTHER` - OTHER
    source:
      openapi: ../openapi.yml
  RemoteData:
    properties:
      path: string
      data: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  RemoteKey:
    docs: >-
      # The RemoteKey Object

      ### Description

      The `RemoteKey` object is used to represent a request for a new remote
      key.


      ### Usage Example

      Post a `GenerateRemoteKey` to receive a new `RemoteKey`.
    properties:
      name: string
      key: string
    source:
      openapi: ../openapi.yml
  RemoteKeyForRegenerationRequest:
    docs: >-
      # The RemoteKeyForRegeneration Object

      ### Description

      The `RemoteKeyForRegeneration` object is used to exchange an old remote
      key for a new one


      ### Usage Example

      Post a `RemoteKeyForRegeneration` to swap out an old remote key for a new
      one
    properties:
      name:
        type: string
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  RemoteResponse:
    docs: >-
      # The RemoteResponse Object

      ### Description

      The `RemoteResponse` object is used to represent information returned from
      a third-party endpoint.


      ### Usage Example

      View the `RemoteResponse` returned from your `DataPassthrough`.
    properties:
      method: string
      path: string
      status: integer
      response: unknown
      response_headers: optional<map<string, unknown>>
      response_type: optional<ResponseTypeEnum>
      headers: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  RequestFormatEnum:
    enum:
      - JSON
      - XML
      - MULTIPART
    docs: |-
      * `JSON` - JSON
      * `XML` - XML
      * `MULTIPART` - MULTIPART
    source:
      openapi: ../openapi.yml
  RequestTypeEnum:
    enum:
      - VACATION
      - SICK
      - PERSONAL
      - JURY_DUTY
      - VOLUNTEER
      - BEREAVEMENT
    docs: |-
      * `VACATION` - VACATION
      * `SICK` - SICK
      * `PERSONAL` - PERSONAL
      * `JURY_DUTY` - JURY_DUTY
      * `VOLUNTEER` - VOLUNTEER
      * `BEREAVEMENT` - BEREAVEMENT
    source:
      openapi: ../openapi.yml
  ResponseTypeEnum:
    enum:
      - JSON
      - BASE64_GZIP
    docs: |-
      * `JSON` - JSON
      * `BASE64_GZIP` - BASE64_GZIP
    source:
      openapi: ../openapi.yml
  RunStateEnum:
    enum:
      - PAID
      - DRAFT
      - APPROVED
      - FAILED
      - CLOSED
    docs: |-
      * `PAID` - PAID
      * `DRAFT` - DRAFT
      * `APPROVED` - APPROVED
      * `FAILED` - FAILED
      * `CLOSED` - CLOSED
    source:
      openapi: ../openapi.yml
  RunTypeEnum:
    enum:
      - REGULAR
      - OFF_CYCLE
      - CORRECTION
      - TERMINATION
      - SIGN_ON_BONUS
    docs: |-
      * `REGULAR` - REGULAR
      * `OFF_CYCLE` - OFF_CYCLE
      * `CORRECTION` - CORRECTION
      * `TERMINATION` - TERMINATION
      * `SIGN_ON_BONUS` - SIGN_ON_BONUS
    source:
      openapi: ../openapi.yml
  SelectiveSyncConfigurationsUsageEnum:
    enum:
      - IN_NEXT_SYNC
      - IN_LAST_SYNC
    docs: |-
      * `IN_NEXT_SYNC` - IN_NEXT_SYNC
      * `IN_LAST_SYNC` - IN_LAST_SYNC
    source:
      openapi: ../openapi.yml
  SyncStatus:
    docs: >-
      # The SyncStatus Object

      ### Description

      The `SyncStatus` object is used to represent the syncing state of an
      account


      ### Usage Example

      View the `SyncStatus` for an account to see how recently its models were
      synced.
    properties:
      model_name: string
      model_id: string
      last_sync_start: optional<datetime>
      next_sync_start: optional<datetime>
      status: SyncStatusStatusEnum
      is_initial_sync: boolean
      selective_sync_configurations_usage: optional<SelectiveSyncConfigurationsUsageEnum>
    source:
      openapi: ../openapi.yml
  SyncStatusStatusEnum:
    enum:
      - SYNCING
      - DONE
      - FAILED
      - DISABLED
      - PAUSED
      - PARTIALLY_SYNCED
    docs: |-
      * `SYNCING` - SYNCING
      * `DONE` - DONE
      * `FAILED` - FAILED
      * `DISABLED` - DISABLED
      * `PAUSED` - PAUSED
      * `PARTIALLY_SYNCED` - PARTIALLY_SYNCED
    source:
      openapi: ../openapi.yml
  Tax:
    docs: >-
      # The Tax Object

      ### Description

      The `Tax` object is used to represent an array of the tax deductions for a
      given employee's payroll run.


      ### Usage Example

      Fetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee_payroll_run:
        type: optional<string>
        validation:
          format: uuid
      name:
        type: optional<string>
        docs: The tax's name.
      amount:
        type: optional<double>
        docs: The tax amount.
      employer_tax:
        type: optional<boolean>
        docs: Whether or not the employer is responsible for paying the tax.
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  Team:
    docs: >-
      # The Team Object

      ### Description

      The `Team` object is used to represent a subdivision of the company,
      usually a department. Each employee will be grouped into one specific
      Team.


      ### Usage Example

      If you're building a way to filter by `Team`, you'd hit the `GET Teams`
      endpoint to fetch the `Teams`, and then use the `ID` of the team your user
      selects to filter the `GET Employees` endpoint.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      name:
        type: optional<string>
        docs: The team's name.
      parent_team:
        type: optional<string>
        docs: The team's parent team.
        validation:
          format: uuid
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  TimeOff:
    docs: >-
      # The TimeOff Object

      ### Description

      The `TimeOff` object is used to represent all employees' Time Off entries.


      ### Usage Example

      Fetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all
      time off requests.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee:
        type: optional<string>
        docs: The employee requesting time off.
        validation:
          format: uuid
      approver:
        type: optional<string>
        docs: >-
          The Merge ID of the employee with the ability to approve the time off
          request.
        validation:
          format: uuid
      status:
        type: optional<TimeOffStatusEnum>
        docs: |-
          The status of this time off request.

          * `REQUESTED` - REQUESTED
          * `APPROVED` - APPROVED
          * `DECLINED` - DECLINED
          * `CANCELLED` - CANCELLED
          * `DELETED` - DELETED
      employee_note:
        type: optional<string>
        docs: The employee note for this time off request.
      units:
        type: optional<UnitsEnum>
        docs: >-
          The measurement that the third-party integration uses to count time
          requested.


          * `HOURS` - HOURS

          * `DAYS` - DAYS
      amount:
        type: optional<double>
        docs: The time off quantity measured by the prescribed “units”.
      request_type:
        type: optional<RequestTypeEnum>
        docs: |-
          The type of time off request.

          * `VACATION` - VACATION
          * `SICK` - SICK
          * `PERSONAL` - PERSONAL
          * `JURY_DUTY` - JURY_DUTY
          * `VOLUNTEER` - VOLUNTEER
          * `BEREAVEMENT` - BEREAVEMENT
      start_time:
        type: optional<datetime>
        docs: The day and time of the start of the time requested off.
      end_time:
        type: optional<datetime>
        docs: The day and time of the end of the time requested off.
      remote_was_deleted: optional<boolean>
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  TimeOffBalance:
    docs: >-
      # The TimeOffBalance Object

      ### Description

      The `TimeOffBalance` object is used to represent current balances for an
      employee's Time Off plan.


      ### Usage Example

      Fetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show
      all time off balances.
    properties:
      id:
        type: optional<string>
        validation:
          format: uuid
      remote_id:
        type: optional<string>
        docs: The third-party API ID of the matching object.
      employee:
        type: optional<string>
        docs: The employee the balance belongs to.
        validation:
          format: uuid
      balance:
        type: optional<double>
        docs: The current remaining PTO balance, always measured in terms of hours.
      used:
        type: optional<double>
        docs: The amount of PTO used in terms of hours.
      policy_type:
        type: optional<PolicyTypeEnum>
        docs: |-
          The policy type of this time off balance.

          * `VACATION` - VACATION
          * `SICK` - SICK
          * `PERSONAL` - PERSONAL
          * `JURY_DUTY` - JURY_DUTY
          * `VOLUNTEER` - VOLUNTEER
          * `BEREAVEMENT` - BEREAVEMENT
      remote_was_deleted:
        type: optional<boolean>
        docs: >-
          Indicates whether or not this object has been deleted by third party
          webhooks.
      modified_at:
        type: optional<datetime>
        docs: This is the datetime that this object was last updated by Merge
      field_mappings: optional<map<string, unknown>>
      remote_data: optional<list<RemoteData>>
    source:
      openapi: ../openapi.yml
  TimeOffEndpointRequest:
    properties:
      model: TimeOffRequest
    source:
      openapi: ../openapi.yml
  TimeOffRequest:
    docs: >-
      # The TimeOff Object

      ### Description

      The `TimeOff` object is used to represent all employees' Time Off entries.


      ### Usage Example

      Fetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all
      time off requests.
    properties:
      employee:
        type: optional<string>
        docs: The employee requesting time off.
        validation:
          format: uuid
      approver:
        type: optional<string>
        docs: >-
          The Merge ID of the employee with the ability to approve the time off
          request.
        validation:
          format: uuid
      status:
        type: optional<TimeOffStatusEnum>
        docs: |-
          The status of this time off request.

          * `REQUESTED` - REQUESTED
          * `APPROVED` - APPROVED
          * `DECLINED` - DECLINED
          * `CANCELLED` - CANCELLED
          * `DELETED` - DELETED
      employee_note:
        type: optional<string>
        docs: The employee note for this time off request.
      units:
        type: optional<UnitsEnum>
        docs: >-
          The measurement that the third-party integration uses to count time
          requested.


          * `HOURS` - HOURS

          * `DAYS` - DAYS
      amount:
        type: optional<double>
        docs: The time off quantity measured by the prescribed “units”.
      request_type:
        type: optional<RequestTypeEnum>
        docs: |-
          The type of time off request.

          * `VACATION` - VACATION
          * `SICK` - SICK
          * `PERSONAL` - PERSONAL
          * `JURY_DUTY` - JURY_DUTY
          * `VOLUNTEER` - VOLUNTEER
          * `BEREAVEMENT` - BEREAVEMENT
      start_time:
        type: optional<datetime>
        docs: The day and time of the start of the time requested off.
      end_time:
        type: optional<datetime>
        docs: The day and time of the end of the time requested off.
      integration_params: optional<map<string, unknown>>
      linked_account_params: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  TimeOffResponse:
    properties:
      model: TimeOff
      warnings: list<WarningValidationProblem>
      errors: list<ErrorValidationProblem>
      logs: optional<list<DebugModeLog>>
    source:
      openapi: ../openapi.yml
  TimeOffStatusEnum:
    enum:
      - REQUESTED
      - APPROVED
      - DECLINED
      - CANCELLED
      - DELETED
    docs: |-
      * `REQUESTED` - REQUESTED
      * `APPROVED` - APPROVED
      * `DECLINED` - DECLINED
      * `CANCELLED` - CANCELLED
      * `DELETED` - DELETED
    source:
      openapi: ../openapi.yml
  UnitsEnum:
    enum:
      - HOURS
      - DAYS
    docs: |-
      * `HOURS` - HOURS
      * `DAYS` - DAYS
    source:
      openapi: ../openapi.yml
  ValidationProblemSource:
    properties:
      pointer: string
    source:
      openapi: ../openapi.yml
  WarningValidationProblem:
    properties:
      source: optional<ValidationProblemSource>
      title: string
      detail: string
      problem_type: string
    source:
      openapi: ../openapi.yml
  WebhookReceiver:
    properties:
      event: string
      is_active: boolean
      key: optional<string>
    source:
      openapi: ../openapi.yml
  WebhookReceiverRequest:
    properties:
      event:
        type: string
        validation:
          minLength: 1
      is_active: boolean
      key:
        type: optional<string>
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
",
    },
    "accountDetails.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "retrieve": {
              "auth": true,
              "docs": "Get details for a linked account.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "category": "hris",
                      "end_user_email_address": "kendall.roy@waystar-royco.com",
                      "end_user_organization_name": "Waystar Royco",
                      "end_user_origin_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "id": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                      "integration": "BambooHR",
                      "integration_slug": "bamboohr",
                      "is_duplicate": true,
                      "status": "COMPLETE",
                      "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account-details",
              "response": {
                "docs": "",
                "type": "root.AccountDetails",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieve:
      path: /account-details
      method: GET
      auth: true
      docs: Get details for a linked account.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: root.AccountDetails
      examples:
        - headers: {}
          response:
            body:
              id: 0496d4c2-42e6-4072-80b3-7b69bfdc76fd
              integration: BambooHR
              integration_slug: bamboohr
              category: hris
              end_user_origin_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              end_user_organization_name: Waystar Royco
              end_user_email_address: kendall.roy@waystar-royco.com
              status: COMPLETE
              webhook_listener_url: >-
                https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4
              is_duplicate: true
  source:
    openapi: ../openapi.yml
",
    },
    "accountToken.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "retrieve": {
              "auth": true,
              "docs": "Returns the account token for the end user with the provided public token.",
              "examples": [
                {
                  "path-parameters": {
                    "public_token": "public_token",
                  },
                  "response": {
                    "body": {
                      "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                      "integration": {
                        "api_endpoints_to_documentation_urls": {
                          "key": "value",
                        },
                        "categories": [
                          "hris",
                        ],
                        "color": "color",
                        "image": "image",
                        "is_in_beta": true,
                        "name": "name",
                        "slug": "slug",
                        "square_image": "square_image",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account-token/{public_token}",
              "path-parameters": {
                "public_token": "string",
              },
              "response": {
                "docs": "",
                "type": "root.AccountToken",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieve:
      path: /account-token/{public_token}
      method: GET
      auth: true
      docs: >-
        Returns the account token for the end user with the provided public
        token.
      source:
        openapi: ../openapi.yml
      path-parameters:
        public_token: string
      response:
        docs: ''
        type: root.AccountToken
      examples:
        - path-parameters:
            public_token: public_token
          response:
            body:
              account_token: T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB
              integration:
                name: name
                categories:
                  - hris
                image: image
                square_image: square_image
                color: color
                slug: slug
                is_in_beta: true
                api_endpoints_to_documentation_urls:
                  key: value
  source:
    openapi: ../openapi.yml
",
    },
    "availableActions.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "retrieve": {
              "auth": true,
              "docs": "Returns a list of models and actions available for an account.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "available_model_operations": [
                        {
                          "available_operations": [
                            "FETCH",
                            "CREATE",
                          ],
                          "model_name": "Candidate",
                          "required_post_parameters": [
                            "remote_user_id",
                          ],
                          "supported_fields": [
                            "first_name",
                            "last_name",
                            "company",
                            "title",
                          ],
                        },
                      ],
                      "integration": {
                        "api_endpoints_to_documentation_urls": {
                          "key": "value",
                        },
                        "categories": [
                          "hris",
                        ],
                        "color": "color",
                        "image": "image",
                        "is_in_beta": true,
                        "name": "name",
                        "slug": "slug",
                        "square_image": "square_image",
                      },
                      "passthrough_available": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/available-actions",
              "response": {
                "docs": "",
                "type": "root.AvailableActions",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieve:
      path: /available-actions
      method: GET
      auth: true
      docs: Returns a list of models and actions available for an account.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: root.AvailableActions
      examples:
        - headers: {}
          response:
            body:
              integration:
                name: name
                categories:
                  - hris
                image: image
                square_image: square_image
                color: color
                slug: slug
                is_in_beta: true
                api_endpoints_to_documentation_urls:
                  key: value
              passthrough_available: true
              available_model_operations:
                - model_name: Candidate
                  available_operations:
                    - FETCH
                    - CREATE
                  required_post_parameters:
                    - remote_user_id
                  supported_fields:
                    - first_name
                    - last_name
                    - company
                    - title
  source:
    openapi: ../openapi.yml
",
    },
    "bankInfo.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `BankInfo` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "account_number": "439291590",
                          "account_type": "SAVINGS",
                          "bank_name": "Chase",
                          "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "remote_created_at": "2021-12-06T10:11:26Z",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/bank-info",
                            },
                          ],
                          "remote_id": "123234",
                          "remote_was_deleted": true,
                          "routing_number": "089690059",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bank-info",
              "request": {
                "name": "BankInfoListRequest",
                "query-parameters": {
                  "account_type": {
                    "docs": "If provided, will only return BankInfo's with this account type. Options: ('SAVINGS', 'CHECKING')

* `SAVINGS` - SAVINGS
* `CHECKING` - CHECKING",
                    "type": "optional<BankInfoListRequestAccountType>",
                  },
                  "bank_name": {
                    "docs": "If provided, will only return BankInfo's with this bank name.",
                    "type": "optional<string>",
                  },
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "employee_id": {
                    "docs": "If provided, will only return bank accounts for this employee.",
                    "type": "optional<string>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"employee">>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "order_by": {
                    "docs": "Overrides the default ordering for this endpoint.",
                    "type": "optional<BankInfoListRequestOrderBy>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"account_type">>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"account_type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedBankInfoList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `BankInfo` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "account_number": "439291590",
                      "account_type": "SAVINGS",
                      "bank_name": "Chase",
                      "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "remote_created_at": "2021-12-06T10:11:26Z",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/bank-info",
                        },
                      ],
                      "remote_id": "123234",
                      "remote_was_deleted": true,
                      "routing_number": "089690059",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bank-info/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "BankInfoRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"employee">>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"account_type">>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"account_type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.BankInfo",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "BankInfoListRequestAccountType": {
            "enum": [
              "CHECKING",
              "SAVINGS",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BankInfoListRequestOrderBy": {
            "enum": [
              {
                "name": "RemoteCreatedAtDescending",
                "value": "-remote_created_at",
              },
              {
                "name": "RemoteCreatedAtAscending",
                "value": "remote_created_at",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  BankInfoListRequestAccountType:
    enum:
      - CHECKING
      - SAVINGS
    source:
      openapi: ../openapi.yml
  BankInfoListRequestOrderBy:
    enum:
      - value: '-remote_created_at'
        name: RemoteCreatedAtDescending
      - value: remote_created_at
        name: RemoteCreatedAtAscending
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /bank-info
      method: GET
      auth: true
      docs: Returns a list of `BankInfo` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: BankInfoListRequest
        query-parameters:
          account_type:
            type: optional<BankInfoListRequestAccountType>
            docs: >-
              If provided, will only return BankInfo's with this account type.
              Options: ('SAVINGS', 'CHECKING')


              * `SAVINGS` - SAVINGS

              * `CHECKING` - CHECKING
          bank_name:
            type: optional<string>
            docs: If provided, will only return BankInfo's with this bank name.
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          employee_id:
            type: optional<string>
            docs: If provided, will only return bank accounts for this employee.
          expand:
            type: optional<literal<"employee">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          order_by:
            type: optional<BankInfoListRequestOrderBy>
            docs: Overrides the default ordering for this endpoint.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_fields:
            type: optional<literal<"account_type">>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          show_enum_origins:
            type: optional<literal<"account_type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.PaginatedBankInfoList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: fd1e0fb5-8f92-4ec9-9f32-179cf732867d
                  remote_id: '123234'
                  employee: a3617eb4-dfe3-426f-921e-a65fc1661e10
                  account_number: '439291590'
                  routing_number: '089690059'
                  bank_name: Chase
                  account_type: SAVINGS
                  remote_created_at: '2021-12-06T10:11:26Z'
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /bank-info
                      data:
                        '0': Varies by platform
    retrieve:
      path: /bank-info/{id}
      method: GET
      auth: true
      docs: Returns a `BankInfo` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: BankInfoRetrieveRequest
        query-parameters:
          expand:
            type: optional<literal<"employee">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<literal<"account_type">>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<literal<"account_type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.BankInfo
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: fd1e0fb5-8f92-4ec9-9f32-179cf732867d
              remote_id: '123234'
              employee: a3617eb4-dfe3-426f-921e-a65fc1661e10
              account_number: '439291590'
              routing_number: '089690059'
              bank_name: Chase
              account_type: SAVINGS
              remote_created_at: '2021-12-06T10:11:26Z'
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /bank-info
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "benefits.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `Benefit` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "benefit_plan_type": "benefit_plan_type",
                          "company_contribution": 150,
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "employee_contribution": 23.65,
                          "end_date": "2021-10-15T00:23:25Z",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "provider_name": "Blue Shield of California",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/benefits",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                          "start_date": "2020-11-15T00:59:25Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/benefits",
              "request": {
                "name": "BenefitsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "employee_id": {
                    "docs": "If provided, will return the benefits associated with the employee.",
                    "type": "optional<string>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"employee">>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedBenefitList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `Benefit` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "benefit_plan_type": "benefit_plan_type",
                      "company_contribution": 150,
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "employee_contribution": 23.65,
                      "end_date": "2021-10-15T00:23:25Z",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "provider_name": "Blue Shield of California",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/benefits",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                      "start_date": "2020-11-15T00:59:25Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/benefits/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "BenefitsRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"employee">>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Benefit",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /benefits
      method: GET
      auth: true
      docs: Returns a list of `Benefit` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: BenefitsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          employee_id:
            type: optional<string>
            docs: >-
              If provided, will return the benefits associated with the
              employee.
          expand:
            type: optional<literal<"employee">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
      response:
        docs: ''
        type: root.PaginatedBenefitList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 3fe5ae7a-f1ba-4529-b7af-84e86dc6d232
                  remote_id: '19202938'
                  employee: d2f972d0-2526-434b-9409-4c3b468e08f0
                  provider_name: Blue Shield of California
                  benefit_plan_type: benefit_plan_type
                  employee_contribution: 23.65
                  company_contribution: 150
                  start_date: '2020-11-15T00:59:25Z'
                  end_date: '2021-10-15T00:23:25Z'
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /benefits
                      data:
                        '0': Varies by platform
    retrieve:
      path: /benefits/{id}
      method: GET
      auth: true
      docs: Returns a `Benefit` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: BenefitsRetrieveRequest
        query-parameters:
          expand:
            type: optional<literal<"employee">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
      response:
        docs: ''
        type: root.Benefit
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 3fe5ae7a-f1ba-4529-b7af-84e86dc6d232
              remote_id: '19202938'
              employee: d2f972d0-2526-434b-9409-4c3b468e08f0
              provider_name: Blue Shield of California
              benefit_plan_type: benefit_plan_type
              employee_contribution: 23.65
              company_contribution: 150
              start_date: '2020-11-15T00:59:25Z'
              end_date: '2021-10-15T00:23:25Z'
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /benefits
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "companies.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `Company` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "display_name": "Waystar Royco",
                          "eins": [
                            "12-3456789",
                            "12-3451111",
                            "11-0011000",
                          ],
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "legal_name": "Waystar Royco, Inc.",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/companies",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies",
              "request": {
                "name": "CompaniesListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedCompanyList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `Company` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "display_name": "Waystar Royco",
                      "eins": [
                        "12-3456789",
                        "12-3451111",
                        "11-0011000",
                      ],
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "legal_name": "Waystar Royco, Inc.",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/companies",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "CompaniesRetrieveRequest",
                "query-parameters": {
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /companies
      method: GET
      auth: true
      docs: Returns a list of `Company` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: CompaniesListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
      response:
        docs: ''
        type: root.PaginatedCompanyList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 1b998423-db0a-4037-a4cf-f79c60cb67b3
                  remote_id: '19202938'
                  legal_name: Waystar Royco, Inc.
                  display_name: Waystar Royco
                  eins:
                    - 12-3456789
                    - 12-3451111
                    - 11-0011000
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /companies
                      data:
                        '0': Varies by platform
    retrieve:
      path: /companies/{id}
      method: GET
      auth: true
      docs: Returns a `Company` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: CompaniesRetrieveRequest
        query-parameters:
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
      response:
        docs: ''
        type: root.Company
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 1b998423-db0a-4037-a4cf-f79c60cb67b3
              remote_id: '19202938'
              legal_name: Waystar Royco, Inc.
              display_name: Waystar Royco
              eins:
                - 12-3456789
                - 12-3451111
                - 11-0011000
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /companies
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "deleteAccount.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Delete a linked account.",
              "examples": [
                {
                  "headers": {},
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/delete-account",
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /delete-account
      method: POST
      auth: true
      docs: Delete a linked account.
      source:
        openapi: ../openapi.yml
      examples:
        - headers: {}
  source:
    openapi: ../openapi.yml
",
    },
    "employeePayrollRuns.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `EmployeePayrollRun` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "check_date": "2020-11-10T00:00:00Z",
                          "deductions": [
                            {
                              "company_deduction": 78.78,
                              "employee_deduction": 34.54,
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "id": "5fd439fc-1b64-4755-b275-64918936c365",
                              "modified_at": "2021-10-16T00:00:00Z",
                              "name": "Social Security",
                            },
                          ],
                          "earnings": [
                            {
                              "amount": 1002.34,
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "id": "babbced6-3a81-4775-8da2-490dc6385259",
                              "modified_at": "2021-10-16T00:00:00Z",
                              "type": "SALARY",
                            },
                            {
                              "amount": 8342.34,
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "id": "babbced6-3a81-4775-8da2-490dc6385259",
                              "modified_at": "2021-10-16T00:00:00Z",
                              "type": "OVERTIME",
                            },
                          ],
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "end_date": "2020-11-09T00:00:00Z",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "gross_pay": 1342.67,
                          "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "net_pay": 865.78,
                          "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/employee-payroll",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                          "start_date": "2020-11-08T00:00:00Z",
                          "taxes": [
                            {
                              "amount": 100.25,
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "employer_tax": true,
                              "id": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                              "modified_at": "2021-10-16T00:00:00Z",
                              "name": "California State Income Tax",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employee-payroll-runs",
              "request": {
                "name": "EmployeePayrollRunsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "employee_id": {
                    "docs": "If provided, will only return employee payroll runs for this employee.",
                    "type": "optional<string>",
                  },
                  "ended_after": {
                    "docs": "If provided, will only return employee payroll runs ended after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "ended_before": {
                    "docs": "If provided, will only return employee payroll runs ended before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<EmployeePayrollRunsListRequestExpand>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "payroll_run_id": {
                    "docs": "If provided, will only return employee payroll runs for this employee.",
                    "type": "optional<string>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "started_after": {
                    "docs": "If provided, will only return employee payroll runs started after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "started_before": {
                    "docs": "If provided, will only return employee payroll runs started before this datetime.",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedEmployeePayrollRunList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns an `EmployeePayrollRun` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "check_date": "2020-11-10T00:00:00Z",
                      "deductions": [
                        {
                          "company_deduction": 78.78,
                          "employee_deduction": 34.54,
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "5fd439fc-1b64-4755-b275-64918936c365",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "name": "Social Security",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/payroll-deduction",
                            },
                          ],
                          "remote_id": "93478612",
                          "remote_was_deleted": true,
                        },
                      ],
                      "earnings": [
                        {
                          "amount": 1002.34,
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "babbced6-3a81-4775-8da2-490dc6385259",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "remote_data": [
                            {
                              "path": "path",
                            },
                          ],
                          "remote_id": "52802",
                          "remote_was_deleted": true,
                          "type": "SALARY",
                        },
                        {
                          "amount": 8342.34,
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "babbced6-3a81-4775-8da2-490dc6385259",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "remote_data": [
                            {
                              "path": "path",
                            },
                          ],
                          "remote_id": "52802",
                          "remote_was_deleted": true,
                          "type": "OVERTIME",
                        },
                      ],
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "end_date": "2020-11-09T00:00:00Z",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "gross_pay": 1342.67,
                      "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "net_pay": 865.78,
                      "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/employee-payroll",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                      "start_date": "2020-11-08T00:00:00Z",
                      "taxes": [
                        {
                          "amount": 100.25,
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "employer_tax": true,
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "name": "California State Income Tax",
                          "remote_data": [
                            {
                              "path": "path",
                            },
                          ],
                          "remote_id": "26806834",
                          "remote_was_deleted": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employee-payroll-runs/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "EmployeePayrollRunsRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<EmployeePayrollRunsRetrieveRequestExpand>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.EmployeePayrollRun",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EmployeePayrollRunsListRequestExpand": {
            "enum": [
              "employee",
              {
                "name": "EmployeePayrollRun",
                "value": "employee,payroll_run",
              },
              "payroll_run",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeePayrollRunsRetrieveRequestExpand": {
            "enum": [
              "employee",
              {
                "name": "EmployeePayrollRun",
                "value": "employee,payroll_run",
              },
              "payroll_run",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  EmployeePayrollRunsListRequestExpand:
    enum:
      - employee
      - value: employee,payroll_run
        name: EmployeePayrollRun
      - payroll_run
    source:
      openapi: ../openapi.yml
  EmployeePayrollRunsRetrieveRequestExpand:
    enum:
      - employee
      - value: employee,payroll_run
        name: EmployeePayrollRun
      - payroll_run
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /employee-payroll-runs
      method: GET
      auth: true
      docs: Returns a list of `EmployeePayrollRun` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: EmployeePayrollRunsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          employee_id:
            type: optional<string>
            docs: >-
              If provided, will only return employee payroll runs for this
              employee.
          ended_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return employee payroll runs ended after
              this datetime.
          ended_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return employee payroll runs ended before
              this datetime.
          expand:
            type: optional<EmployeePayrollRunsListRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          payroll_run_id:
            type: optional<string>
            docs: >-
              If provided, will only return employee payroll runs for this
              employee.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          started_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return employee payroll runs started after
              this datetime.
          started_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return employee payroll runs started before
              this datetime.
      response:
        docs: ''
        type: root.PaginatedEmployeePayrollRunList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: fb8c55b6-1cb8-4b4c-9fb6-17924231619d
                  remote_id: '19202938'
                  employee: d2f972d0-2526-434b-9409-4c3b468e08f0
                  payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                  gross_pay: 1342.67
                  net_pay: 865.78
                  start_date: '2020-11-08T00:00:00Z'
                  end_date: '2020-11-09T00:00:00Z'
                  check_date: '2020-11-10T00:00:00Z'
                  earnings:
                    - id: babbced6-3a81-4775-8da2-490dc6385259
                      employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                      amount: 1002.34
                      type: SALARY
                      modified_at: '2021-10-16T00:00:00Z'
                    - id: babbced6-3a81-4775-8da2-490dc6385259
                      employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                      amount: 8342.34
                      type: OVERTIME
                      modified_at: '2021-10-16T00:00:00Z'
                  deductions:
                    - id: 5fd439fc-1b64-4755-b275-64918936c365
                      employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                      name: Social Security
                      employee_deduction: 34.54
                      company_deduction: 78.78
                      modified_at: '2021-10-16T00:00:00Z'
                  taxes:
                    - id: e3a825fd-c38d-4095-a717-df98c4cb9ebc
                      employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                      name: California State Income Tax
                      amount: 100.25
                      employer_tax: true
                      modified_at: '2021-10-16T00:00:00Z'
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /employee-payroll
                      data:
                        '0': Varies by platform
    retrieve:
      path: /employee-payroll-runs/{id}
      method: GET
      auth: true
      docs: Returns an `EmployeePayrollRun` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: EmployeePayrollRunsRetrieveRequest
        query-parameters:
          expand:
            type: optional<EmployeePayrollRunsRetrieveRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
      response:
        docs: ''
        type: root.EmployeePayrollRun
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: fb8c55b6-1cb8-4b4c-9fb6-17924231619d
              remote_id: '19202938'
              employee: d2f972d0-2526-434b-9409-4c3b468e08f0
              payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
              gross_pay: 1342.67
              net_pay: 865.78
              start_date: '2020-11-08T00:00:00Z'
              end_date: '2020-11-09T00:00:00Z'
              check_date: '2020-11-10T00:00:00Z'
              earnings:
                - id: babbced6-3a81-4775-8da2-490dc6385259
                  remote_id: '52802'
                  employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                  amount: 1002.34
                  type: SALARY
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: path
                - id: babbced6-3a81-4775-8da2-490dc6385259
                  remote_id: '52802'
                  employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                  amount: 8342.34
                  type: OVERTIME
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: path
              deductions:
                - id: 5fd439fc-1b64-4755-b275-64918936c365
                  remote_id: '93478612'
                  employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                  name: Social Security
                  employee_deduction: 34.54
                  company_deduction: 78.78
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /payroll-deduction
                      data:
                        '0': Varies by platform
              taxes:
                - id: e3a825fd-c38d-4095-a717-df98c4cb9ebc
                  remote_id: '26806834'
                  employee_payroll_run: 35347df1-95e7-46e2-93cc-66f1191edca5
                  name: California State Income Tax
                  amount: 100.25
                  employer_tax: true
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: path
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /employee-payroll
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "employees.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Creates an `Employee` object with the given values.",
              "examples": [
                {
                  "headers": {},
                  "request": {
                    "model": {},
                  },
                  "response": {
                    "body": {
                      "errors": [
                        {
                          "detail": "custom_fields is a required field on model.",
                          "problem_type": "MISSING_REQUIRED_FIELD",
                          "source": {
                            "pointer": "pointer",
                          },
                          "title": "Missing Required Field",
                        },
                      ],
                      "logs": [
                        {
                          "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_summary": {
                            "method": "POST",
                            "status_code": 200,
                            "url": "https://harvest.greenhouse.io/v1/candidates/",
                          },
                        },
                      ],
                      "model": {
                        "avatar": "http://alturl.com/h2h8m",
                        "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        "custom_fields": {
                          "key": "value",
                        },
                        "date_of_birth": "1990-11-10T00:00:00Z",
                        "display_full_name": "Cousin Greg Hirsch",
                        "employee_number": "2",
                        "employment_status": "ACTIVE",
                        "employments": [
                          "17a54124-287f-494d-965e-3c5b330c9a68",
                        ],
                        "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                        "field_mappings": {
                          "linked_account_defined_targets": {
                            "custom_key": "custom_value",
                          },
                          "organization_defined_targets": {
                            "custom_key": "custom_value",
                          },
                        },
                        "first_name": "Greg",
                        "gender": "MALE",
                        "groups": [
                          "21a54124-397f-494d-985e-3c5b330b8a68",
                        ],
                        "hire_date": "2020-10-10T00:00:00Z",
                        "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "last_name": "Hirsch",
                        "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                        "marital_status": "SINGLE",
                        "mobile_phone_number": "+1234567890",
                        "modified_at": "2021-10-16T00:00:00Z",
                        "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                        "personal_email": "greg@gmail.com",
                        "remote_created_at": "2020-10-11T00:00:00Z",
                        "remote_data": [
                          {
                            "data": {
                              "0": "Varies by platform",
                            },
                            "path": "/people",
                          },
                        ],
                        "remote_id": "19202938",
                        "remote_was_deleted": true,
                        "ssn": "1234567890",
                        "start_date": "2020-10-11T00:00:00Z",
                        "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                        "termination_date": "2021-10-12T00:00:00Z",
                        "username": "cousingreg",
                        "work_email": "greg@merge.dev",
                        "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      },
                      "warnings": [
                        {
                          "detail": "An unrecognized field, age, was passed in with request data.",
                          "problem_type": "UNRECOGNIZED_FIELD",
                          "source": {
                            "pointer": "pointer",
                          },
                          "title": "Unrecognized Field",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/employees",
              "request": {
                "body": "root.EmployeeEndpointRequest",
                "content-type": "application/x-www-form-urlencoded",
                "name": "EmployeesCreateRequest",
                "query-parameters": {
                  "is_debug_mode": {
                    "docs": "Whether to include debug fields (such as log file links) in the response.",
                    "type": "optional<boolean>",
                  },
                  "run_async": {
                    "docs": "Whether or not third-party updates should be run asynchronously.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.EmployeeResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "ignoreCreate": {
              "auth": true,
              "docs": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The "reason" and "message" fields in the request body will be stored for audit purposes.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "model_id": "model_id",
                  },
                  "request": {
                    "reason": "GENERAL_CUSTOMER_REQUEST",
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/employees/ignore/{model_id}",
              "path-parameters": {
                "model_id": "string",
              },
              "request": {
                "body": "root.IgnoreCommonModelRequest",
                "content-type": "application/x-www-form-urlencoded",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "docs": "Returns a list of `Employee` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "avatar": "http://alturl.com/h2h8m",
                          "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                          "custom_fields": {
                            "key": "value",
                          },
                          "date_of_birth": "1990-11-10T00:00:00Z",
                          "display_full_name": "Cousin Greg Hirsch",
                          "employee_number": "2",
                          "employment_status": "ACTIVE",
                          "employments": [
                            "17a54124-287f-494d-965e-3c5b330c9a68",
                          ],
                          "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "first_name": "Greg",
                          "gender": "MALE",
                          "groups": [
                            "21a54124-397f-494d-985e-3c5b330b8a68",
                          ],
                          "hire_date": "2020-10-10T00:00:00Z",
                          "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "last_name": "Hirsch",
                          "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                          "marital_status": "SINGLE",
                          "mobile_phone_number": "+1234567890",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                          "personal_email": "greg@gmail.com",
                          "remote_created_at": "2020-10-11T00:00:00Z",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/people",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                          "ssn": "1234567890",
                          "start_date": "2020-10-11T00:00:00Z",
                          "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                          "termination_date": "2021-10-12T00:00:00Z",
                          "username": "cousingreg",
                          "work_email": "greg@merge.dev",
                          "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employees",
              "request": {
                "name": "EmployeesListRequest",
                "query-parameters": {
                  "company_id": {
                    "docs": "If provided, will only return employees for this company.",
                    "type": "optional<string>",
                  },
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "display_full_name": {
                    "docs": "If provided, will only return employees with this display name.",
                    "type": "optional<string>",
                  },
                  "employment_status": {
                    "docs": "If provided, will only return employees with this employment status.

* `ACTIVE` - ACTIVE
* `PENDING` - PENDING
* `INACTIVE` - INACTIVE",
                    "type": "optional<EmployeesListRequestEmploymentStatus>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<EmployeesListRequestExpand>",
                  },
                  "first_name": {
                    "docs": "If provided, will only return employees with this first name.",
                    "type": "optional<string>",
                  },
                  "groups": {
                    "docs": "If provided, will only return employees matching the group ids; multiple groups can be separated by commas.",
                    "type": "optional<string>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "include_sensitive_fields": {
                    "docs": "Whether to include sensitive fields (such as social security numbers) in the response.",
                    "type": "optional<boolean>",
                  },
                  "last_name": {
                    "docs": "If provided, will only return employees with this last name.",
                    "type": "optional<string>",
                  },
                  "manager_id": {
                    "docs": "If provided, will only return employees for this manager.",
                    "type": "optional<string>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "pay_group_id": {
                    "docs": "If provided, will only return employees for this pay group",
                    "type": "optional<string>",
                  },
                  "personal_email": {
                    "docs": "If provided, will only return Employees with this personal email",
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<EmployeesListRequestRemoteFields>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<EmployeesListRequestShowEnumOrigins>",
                  },
                  "started_after": {
                    "docs": "If provided, will only return employees that started after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "started_before": {
                    "docs": "If provided, will only return employees that started before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "team_id": {
                    "docs": "If provided, will only return employees for this team.",
                    "type": "optional<string>",
                  },
                  "terminated_after": {
                    "docs": "If provided, will only return employees that were terminated after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "terminated_before": {
                    "docs": "If provided, will only return employees that were terminated before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "work_email": {
                    "docs": "If provided, will only return Employees with this work email",
                    "type": "optional<string>",
                    "validation": {
                      "format": "email",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "work_location_id": {
                    "docs": "If provided, will only return employees for this location.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedEmployeeList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "metaPostRetrieve": {
              "auth": true,
              "docs": "Returns metadata for `Employee` POSTs.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "has_conditional_params": true,
                      "has_required_linked_account_params": true,
                      "remote_field_classes": {
                        "key": "value",
                      },
                      "request_schema": {
                        "key": "value",
                      },
                      "status": {
                        "can_make_request": true,
                        "linked_account_status": "linked_account_status",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employees/meta/post",
              "response": {
                "docs": "",
                "type": "root.MetaResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns an `Employee` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "avatar": "http://alturl.com/h2h8m",
                      "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                      "custom_fields": {
                        "key": "value",
                      },
                      "date_of_birth": "1990-11-10T00:00:00Z",
                      "display_full_name": "Cousin Greg Hirsch",
                      "employee_number": "2",
                      "employment_status": "ACTIVE",
                      "employments": [
                        "17a54124-287f-494d-965e-3c5b330c9a68",
                      ],
                      "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "first_name": "Greg",
                      "gender": "MALE",
                      "groups": [
                        "21a54124-397f-494d-985e-3c5b330b8a68",
                      ],
                      "hire_date": "2020-10-10T00:00:00Z",
                      "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "last_name": "Hirsch",
                      "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                      "marital_status": "SINGLE",
                      "mobile_phone_number": "+1234567890",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                      "personal_email": "greg@gmail.com",
                      "remote_created_at": "2020-10-11T00:00:00Z",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/people",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                      "ssn": "1234567890",
                      "start_date": "2020-10-11T00:00:00Z",
                      "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                      "termination_date": "2021-10-12T00:00:00Z",
                      "username": "cousingreg",
                      "work_email": "greg@merge.dev",
                      "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employees/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "EmployeesRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<EmployeesRetrieveRequestExpand>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "include_sensitive_fields": {
                    "docs": "Whether to include sensitive fields (such as social security numbers) in the response.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<EmployeesRetrieveRequestRemoteFields>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<EmployeesRetrieveRequestShowEnumOrigins>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Employee",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EmployeesListRequestEmploymentStatus": {
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeesListRequestExpand": {
            "enum": [
              "company",
              {
                "name": "CompanyPayGroup",
                "value": "company,pay_group",
              },
              "employments",
              {
                "name": "EmploymentsCompany",
                "value": "employments,company",
              },
              {
                "name": "EmploymentsCompanyPayGroup",
                "value": "employments,company,pay_group",
              },
              {
                "name": "EmploymentsGroups",
                "value": "employments,groups",
              },
              {
                "name": "EmploymentsGroupsCompany",
                "value": "employments,groups,company",
              },
              {
                "name": "EmploymentsGroupsCompanyPayGroup",
                "value": "employments,groups,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocation",
                "value": "employments,groups,home_location",
              },
              {
                "name": "EmploymentsGroupsHomeLocationCompany",
                "value": "employments,groups,home_location,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationCompanyPayGroup",
                "value": "employments,groups,home_location,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManager",
                "value": "employments,groups,home_location,manager",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerCompany",
                "value": "employments,groups,home_location,manager,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerCompanyPayGroup",
                "value": "employments,groups,home_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerPayGroup",
                "value": "employments,groups,home_location,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeam",
                "value": "employments,groups,home_location,manager,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeamCompany",
                "value": "employments,groups,home_location,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup",
                "value": "employments,groups,home_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeamPayGroup",
                "value": "employments,groups,home_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationPayGroup",
                "value": "employments,groups,home_location,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeam",
                "value": "employments,groups,home_location,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeamCompany",
                "value": "employments,groups,home_location,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeamCompanyPayGroup",
                "value": "employments,groups,home_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeamPayGroup",
                "value": "employments,groups,home_location,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocation",
                "value": "employments,groups,home_location,work_location",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationCompany",
                "value": "employments,groups,home_location,work_location,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManager",
                "value": "employments,groups,home_location,work_location,manager",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompany",
                "value": "employments,groups,home_location,work_location,manager,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup",
                "value": "employments,groups,home_location,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeam",
                "value": "employments,groups,home_location,work_location,manager,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany",
                "value": "employments,groups,home_location,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup",
                "value": "employments,groups,home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationPayGroup",
                "value": "employments,groups,home_location,work_location,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeam",
                "value": "employments,groups,home_location,work_location,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompany",
                "value": "employments,groups,home_location,work_location,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup",
                "value": "employments,groups,home_location,work_location,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsManager",
                "value": "employments,groups,manager",
              },
              {
                "name": "EmploymentsGroupsManagerCompany",
                "value": "employments,groups,manager,company",
              },
              {
                "name": "EmploymentsGroupsManagerCompanyPayGroup",
                "value": "employments,groups,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsManagerPayGroup",
                "value": "employments,groups,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsManagerTeam",
                "value": "employments,groups,manager,team",
              },
              {
                "name": "EmploymentsGroupsManagerTeamCompany",
                "value": "employments,groups,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsManagerTeamCompanyPayGroup",
                "value": "employments,groups,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsManagerTeamPayGroup",
                "value": "employments,groups,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsPayGroup",
                "value": "employments,groups,pay_group",
              },
              {
                "name": "EmploymentsGroupsTeam",
                "value": "employments,groups,team",
              },
              {
                "name": "EmploymentsGroupsTeamCompany",
                "value": "employments,groups,team,company",
              },
              {
                "name": "EmploymentsGroupsTeamCompanyPayGroup",
                "value": "employments,groups,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsTeamPayGroup",
                "value": "employments,groups,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocation",
                "value": "employments,groups,work_location",
              },
              {
                "name": "EmploymentsGroupsWorkLocationCompany",
                "value": "employments,groups,work_location,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationCompanyPayGroup",
                "value": "employments,groups,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManager",
                "value": "employments,groups,work_location,manager",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerCompany",
                "value": "employments,groups,work_location,manager,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerCompanyPayGroup",
                "value": "employments,groups,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerPayGroup",
                "value": "employments,groups,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeam",
                "value": "employments,groups,work_location,manager,team",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeamCompany",
                "value": "employments,groups,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,groups,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeamPayGroup",
                "value": "employments,groups,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationPayGroup",
                "value": "employments,groups,work_location,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeam",
                "value": "employments,groups,work_location,team",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeamCompany",
                "value": "employments,groups,work_location,team,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeamCompanyPayGroup",
                "value": "employments,groups,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeamPayGroup",
                "value": "employments,groups,work_location,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocation",
                "value": "employments,home_location",
              },
              {
                "name": "EmploymentsHomeLocationCompany",
                "value": "employments,home_location,company",
              },
              {
                "name": "EmploymentsHomeLocationCompanyPayGroup",
                "value": "employments,home_location,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManager",
                "value": "employments,home_location,manager",
              },
              {
                "name": "EmploymentsHomeLocationManagerCompany",
                "value": "employments,home_location,manager,company",
              },
              {
                "name": "EmploymentsHomeLocationManagerCompanyPayGroup",
                "value": "employments,home_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManagerPayGroup",
                "value": "employments,home_location,manager,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeam",
                "value": "employments,home_location,manager,team",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeamCompany",
                "value": "employments,home_location,manager,team,company",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeamCompanyPayGroup",
                "value": "employments,home_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeamPayGroup",
                "value": "employments,home_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationPayGroup",
                "value": "employments,home_location,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationTeam",
                "value": "employments,home_location,team",
              },
              {
                "name": "EmploymentsHomeLocationTeamCompany",
                "value": "employments,home_location,team,company",
              },
              {
                "name": "EmploymentsHomeLocationTeamCompanyPayGroup",
                "value": "employments,home_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationTeamPayGroup",
                "value": "employments,home_location,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocation",
                "value": "employments,home_location,work_location",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationCompany",
                "value": "employments,home_location,work_location,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationCompanyPayGroup",
                "value": "employments,home_location,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManager",
                "value": "employments,home_location,work_location,manager",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerCompany",
                "value": "employments,home_location,work_location,manager,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "employments,home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerPayGroup",
                "value": "employments,home_location,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeam",
                "value": "employments,home_location,work_location,manager,team",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompany",
                "value": "employments,home_location,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeamPayGroup",
                "value": "employments,home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationPayGroup",
                "value": "employments,home_location,work_location,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeam",
                "value": "employments,home_location,work_location,team",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeamCompany",
                "value": "employments,home_location,work_location,team,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "employments,home_location,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeamPayGroup",
                "value": "employments,home_location,work_location,team,pay_group",
              },
              {
                "name": "EmploymentsManager",
                "value": "employments,manager",
              },
              {
                "name": "EmploymentsManagerCompany",
                "value": "employments,manager,company",
              },
              {
                "name": "EmploymentsManagerCompanyPayGroup",
                "value": "employments,manager,company,pay_group",
              },
              {
                "name": "EmploymentsManagerPayGroup",
                "value": "employments,manager,pay_group",
              },
              {
                "name": "EmploymentsManagerTeam",
                "value": "employments,manager,team",
              },
              {
                "name": "EmploymentsManagerTeamCompany",
                "value": "employments,manager,team,company",
              },
              {
                "name": "EmploymentsManagerTeamCompanyPayGroup",
                "value": "employments,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsManagerTeamPayGroup",
                "value": "employments,manager,team,pay_group",
              },
              {
                "name": "EmploymentsPayGroup",
                "value": "employments,pay_group",
              },
              {
                "name": "EmploymentsTeam",
                "value": "employments,team",
              },
              {
                "name": "EmploymentsTeamCompany",
                "value": "employments,team,company",
              },
              {
                "name": "EmploymentsTeamCompanyPayGroup",
                "value": "employments,team,company,pay_group",
              },
              {
                "name": "EmploymentsTeamPayGroup",
                "value": "employments,team,pay_group",
              },
              {
                "name": "EmploymentsWorkLocation",
                "value": "employments,work_location",
              },
              {
                "name": "EmploymentsWorkLocationCompany",
                "value": "employments,work_location,company",
              },
              {
                "name": "EmploymentsWorkLocationCompanyPayGroup",
                "value": "employments,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManager",
                "value": "employments,work_location,manager",
              },
              {
                "name": "EmploymentsWorkLocationManagerCompany",
                "value": "employments,work_location,manager,company",
              },
              {
                "name": "EmploymentsWorkLocationManagerCompanyPayGroup",
                "value": "employments,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManagerPayGroup",
                "value": "employments,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeam",
                "value": "employments,work_location,manager,team",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeamCompany",
                "value": "employments,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeamPayGroup",
                "value": "employments,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationPayGroup",
                "value": "employments,work_location,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationTeam",
                "value": "employments,work_location,team",
              },
              {
                "name": "EmploymentsWorkLocationTeamCompany",
                "value": "employments,work_location,team,company",
              },
              {
                "name": "EmploymentsWorkLocationTeamCompanyPayGroup",
                "value": "employments,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationTeamPayGroup",
                "value": "employments,work_location,team,pay_group",
              },
              "groups",
              {
                "name": "GroupsCompany",
                "value": "groups,company",
              },
              {
                "name": "GroupsCompanyPayGroup",
                "value": "groups,company,pay_group",
              },
              {
                "name": "GroupsHomeLocation",
                "value": "groups,home_location",
              },
              {
                "name": "GroupsHomeLocationCompany",
                "value": "groups,home_location,company",
              },
              {
                "name": "GroupsHomeLocationCompanyPayGroup",
                "value": "groups,home_location,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationManager",
                "value": "groups,home_location,manager",
              },
              {
                "name": "GroupsHomeLocationManagerCompany",
                "value": "groups,home_location,manager,company",
              },
              {
                "name": "GroupsHomeLocationManagerCompanyPayGroup",
                "value": "groups,home_location,manager,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationManagerPayGroup",
                "value": "groups,home_location,manager,pay_group",
              },
              {
                "name": "GroupsHomeLocationManagerTeam",
                "value": "groups,home_location,manager,team",
              },
              {
                "name": "GroupsHomeLocationManagerTeamCompany",
                "value": "groups,home_location,manager,team,company",
              },
              {
                "name": "GroupsHomeLocationManagerTeamCompanyPayGroup",
                "value": "groups,home_location,manager,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationManagerTeamPayGroup",
                "value": "groups,home_location,manager,team,pay_group",
              },
              {
                "name": "GroupsHomeLocationPayGroup",
                "value": "groups,home_location,pay_group",
              },
              {
                "name": "GroupsHomeLocationTeam",
                "value": "groups,home_location,team",
              },
              {
                "name": "GroupsHomeLocationTeamCompany",
                "value": "groups,home_location,team,company",
              },
              {
                "name": "GroupsHomeLocationTeamCompanyPayGroup",
                "value": "groups,home_location,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationTeamPayGroup",
                "value": "groups,home_location,team,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocation",
                "value": "groups,home_location,work_location",
              },
              {
                "name": "GroupsHomeLocationWorkLocationCompany",
                "value": "groups,home_location,work_location,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationCompanyPayGroup",
                "value": "groups,home_location,work_location,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManager",
                "value": "groups,home_location,work_location,manager",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerCompany",
                "value": "groups,home_location,work_location,manager,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "groups,home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerPayGroup",
                "value": "groups,home_location,work_location,manager,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeam",
                "value": "groups,home_location,work_location,manager,team",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeamCompany",
                "value": "groups,home_location,work_location,manager,team,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "groups,home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeamPayGroup",
                "value": "groups,home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationPayGroup",
                "value": "groups,home_location,work_location,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeam",
                "value": "groups,home_location,work_location,team",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeamCompany",
                "value": "groups,home_location,work_location,team,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "groups,home_location,work_location,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeamPayGroup",
                "value": "groups,home_location,work_location,team,pay_group",
              },
              {
                "name": "GroupsManager",
                "value": "groups,manager",
              },
              {
                "name": "GroupsManagerCompany",
                "value": "groups,manager,company",
              },
              {
                "name": "GroupsManagerCompanyPayGroup",
                "value": "groups,manager,company,pay_group",
              },
              {
                "name": "GroupsManagerPayGroup",
                "value": "groups,manager,pay_group",
              },
              {
                "name": "GroupsManagerTeam",
                "value": "groups,manager,team",
              },
              {
                "name": "GroupsManagerTeamCompany",
                "value": "groups,manager,team,company",
              },
              {
                "name": "GroupsManagerTeamCompanyPayGroup",
                "value": "groups,manager,team,company,pay_group",
              },
              {
                "name": "GroupsManagerTeamPayGroup",
                "value": "groups,manager,team,pay_group",
              },
              {
                "name": "GroupsPayGroup",
                "value": "groups,pay_group",
              },
              {
                "name": "GroupsTeam",
                "value": "groups,team",
              },
              {
                "name": "GroupsTeamCompany",
                "value": "groups,team,company",
              },
              {
                "name": "GroupsTeamCompanyPayGroup",
                "value": "groups,team,company,pay_group",
              },
              {
                "name": "GroupsTeamPayGroup",
                "value": "groups,team,pay_group",
              },
              {
                "name": "GroupsWorkLocation",
                "value": "groups,work_location",
              },
              {
                "name": "GroupsWorkLocationCompany",
                "value": "groups,work_location,company",
              },
              {
                "name": "GroupsWorkLocationCompanyPayGroup",
                "value": "groups,work_location,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationManager",
                "value": "groups,work_location,manager",
              },
              {
                "name": "GroupsWorkLocationManagerCompany",
                "value": "groups,work_location,manager,company",
              },
              {
                "name": "GroupsWorkLocationManagerCompanyPayGroup",
                "value": "groups,work_location,manager,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationManagerPayGroup",
                "value": "groups,work_location,manager,pay_group",
              },
              {
                "name": "GroupsWorkLocationManagerTeam",
                "value": "groups,work_location,manager,team",
              },
              {
                "name": "GroupsWorkLocationManagerTeamCompany",
                "value": "groups,work_location,manager,team,company",
              },
              {
                "name": "GroupsWorkLocationManagerTeamCompanyPayGroup",
                "value": "groups,work_location,manager,team,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationManagerTeamPayGroup",
                "value": "groups,work_location,manager,team,pay_group",
              },
              {
                "name": "GroupsWorkLocationPayGroup",
                "value": "groups,work_location,pay_group",
              },
              {
                "name": "GroupsWorkLocationTeam",
                "value": "groups,work_location,team",
              },
              {
                "name": "GroupsWorkLocationTeamCompany",
                "value": "groups,work_location,team,company",
              },
              {
                "name": "GroupsWorkLocationTeamCompanyPayGroup",
                "value": "groups,work_location,team,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationTeamPayGroup",
                "value": "groups,work_location,team,pay_group",
              },
              "home_location",
              {
                "name": "HomeLocationCompany",
                "value": "home_location,company",
              },
              {
                "name": "HomeLocationCompanyPayGroup",
                "value": "home_location,company,pay_group",
              },
              {
                "name": "HomeLocationManager",
                "value": "home_location,manager",
              },
              {
                "name": "HomeLocationManagerCompany",
                "value": "home_location,manager,company",
              },
              {
                "name": "HomeLocationManagerCompanyPayGroup",
                "value": "home_location,manager,company,pay_group",
              },
              {
                "name": "HomeLocationManagerPayGroup",
                "value": "home_location,manager,pay_group",
              },
              {
                "name": "HomeLocationManagerTeam",
                "value": "home_location,manager,team",
              },
              {
                "name": "HomeLocationManagerTeamCompany",
                "value": "home_location,manager,team,company",
              },
              {
                "name": "HomeLocationManagerTeamCompanyPayGroup",
                "value": "home_location,manager,team,company,pay_group",
              },
              {
                "name": "HomeLocationManagerTeamPayGroup",
                "value": "home_location,manager,team,pay_group",
              },
              {
                "name": "HomeLocationPayGroup",
                "value": "home_location,pay_group",
              },
              {
                "name": "HomeLocationTeam",
                "value": "home_location,team",
              },
              {
                "name": "HomeLocationTeamCompany",
                "value": "home_location,team,company",
              },
              {
                "name": "HomeLocationTeamCompanyPayGroup",
                "value": "home_location,team,company,pay_group",
              },
              {
                "name": "HomeLocationTeamPayGroup",
                "value": "home_location,team,pay_group",
              },
              {
                "name": "HomeLocationWorkLocation",
                "value": "home_location,work_location",
              },
              {
                "name": "HomeLocationWorkLocationCompany",
                "value": "home_location,work_location,company",
              },
              {
                "name": "HomeLocationWorkLocationCompanyPayGroup",
                "value": "home_location,work_location,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManager",
                "value": "home_location,work_location,manager",
              },
              {
                "name": "HomeLocationWorkLocationManagerCompany",
                "value": "home_location,work_location,manager,company",
              },
              {
                "name": "HomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManagerPayGroup",
                "value": "home_location,work_location,manager,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeam",
                "value": "home_location,work_location,manager,team",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeamCompany",
                "value": "home_location,work_location,manager,team,company",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeamPayGroup",
                "value": "home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationPayGroup",
                "value": "home_location,work_location,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationTeam",
                "value": "home_location,work_location,team",
              },
              {
                "name": "HomeLocationWorkLocationTeamCompany",
                "value": "home_location,work_location,team,company",
              },
              {
                "name": "HomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "home_location,work_location,team,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationTeamPayGroup",
                "value": "home_location,work_location,team,pay_group",
              },
              "manager",
              {
                "name": "ManagerCompany",
                "value": "manager,company",
              },
              {
                "name": "ManagerCompanyPayGroup",
                "value": "manager,company,pay_group",
              },
              {
                "name": "ManagerPayGroup",
                "value": "manager,pay_group",
              },
              {
                "name": "ManagerTeam",
                "value": "manager,team",
              },
              {
                "name": "ManagerTeamCompany",
                "value": "manager,team,company",
              },
              {
                "name": "ManagerTeamCompanyPayGroup",
                "value": "manager,team,company,pay_group",
              },
              {
                "name": "ManagerTeamPayGroup",
                "value": "manager,team,pay_group",
              },
              "pay_group",
              "team",
              {
                "name": "TeamCompany",
                "value": "team,company",
              },
              {
                "name": "TeamCompanyPayGroup",
                "value": "team,company,pay_group",
              },
              {
                "name": "TeamPayGroup",
                "value": "team,pay_group",
              },
              "work_location",
              {
                "name": "WorkLocationCompany",
                "value": "work_location,company",
              },
              {
                "name": "WorkLocationCompanyPayGroup",
                "value": "work_location,company,pay_group",
              },
              {
                "name": "WorkLocationManager",
                "value": "work_location,manager",
              },
              {
                "name": "WorkLocationManagerCompany",
                "value": "work_location,manager,company",
              },
              {
                "name": "WorkLocationManagerCompanyPayGroup",
                "value": "work_location,manager,company,pay_group",
              },
              {
                "name": "WorkLocationManagerPayGroup",
                "value": "work_location,manager,pay_group",
              },
              {
                "name": "WorkLocationManagerTeam",
                "value": "work_location,manager,team",
              },
              {
                "name": "WorkLocationManagerTeamCompany",
                "value": "work_location,manager,team,company",
              },
              {
                "name": "WorkLocationManagerTeamCompanyPayGroup",
                "value": "work_location,manager,team,company,pay_group",
              },
              {
                "name": "WorkLocationManagerTeamPayGroup",
                "value": "work_location,manager,team,pay_group",
              },
              {
                "name": "WorkLocationPayGroup",
                "value": "work_location,pay_group",
              },
              {
                "name": "WorkLocationTeam",
                "value": "work_location,team",
              },
              {
                "name": "WorkLocationTeamCompany",
                "value": "work_location,team,company",
              },
              {
                "name": "WorkLocationTeamCompanyPayGroup",
                "value": "work_location,team,company,pay_group",
              },
              {
                "name": "WorkLocationTeamPayGroup",
                "value": "work_location,team,pay_group",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeesListRequestRemoteFields": {
            "enum": [
              "employment_status",
              {
                "name": "EmploymentStatusEthnicity",
                "value": "employment_status,ethnicity",
              },
              {
                "name": "EmploymentStatusEthnicityGender",
                "value": "employment_status,ethnicity,gender",
              },
              {
                "name": "EmploymentStatusEthnicityGenderMaritalStatus",
                "value": "employment_status,ethnicity,gender,marital_status",
              },
              {
                "name": "EmploymentStatusEthnicityMaritalStatus",
                "value": "employment_status,ethnicity,marital_status",
              },
              {
                "name": "EmploymentStatusGender",
                "value": "employment_status,gender",
              },
              {
                "name": "EmploymentStatusGenderMaritalStatus",
                "value": "employment_status,gender,marital_status",
              },
              {
                "name": "EmploymentStatusMaritalStatus",
                "value": "employment_status,marital_status",
              },
              "ethnicity",
              {
                "name": "EthnicityGender",
                "value": "ethnicity,gender",
              },
              {
                "name": "EthnicityGenderMaritalStatus",
                "value": "ethnicity,gender,marital_status",
              },
              {
                "name": "EthnicityMaritalStatus",
                "value": "ethnicity,marital_status",
              },
              "gender",
              {
                "name": "GenderMaritalStatus",
                "value": "gender,marital_status",
              },
              "marital_status",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeesListRequestShowEnumOrigins": {
            "enum": [
              "employment_status",
              {
                "name": "EmploymentStatusEthnicity",
                "value": "employment_status,ethnicity",
              },
              {
                "name": "EmploymentStatusEthnicityGender",
                "value": "employment_status,ethnicity,gender",
              },
              {
                "name": "EmploymentStatusEthnicityGenderMaritalStatus",
                "value": "employment_status,ethnicity,gender,marital_status",
              },
              {
                "name": "EmploymentStatusEthnicityMaritalStatus",
                "value": "employment_status,ethnicity,marital_status",
              },
              {
                "name": "EmploymentStatusGender",
                "value": "employment_status,gender",
              },
              {
                "name": "EmploymentStatusGenderMaritalStatus",
                "value": "employment_status,gender,marital_status",
              },
              {
                "name": "EmploymentStatusMaritalStatus",
                "value": "employment_status,marital_status",
              },
              "ethnicity",
              {
                "name": "EthnicityGender",
                "value": "ethnicity,gender",
              },
              {
                "name": "EthnicityGenderMaritalStatus",
                "value": "ethnicity,gender,marital_status",
              },
              {
                "name": "EthnicityMaritalStatus",
                "value": "ethnicity,marital_status",
              },
              "gender",
              {
                "name": "GenderMaritalStatus",
                "value": "gender,marital_status",
              },
              "marital_status",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeesRetrieveRequestExpand": {
            "enum": [
              "company",
              {
                "name": "CompanyPayGroup",
                "value": "company,pay_group",
              },
              "employments",
              {
                "name": "EmploymentsCompany",
                "value": "employments,company",
              },
              {
                "name": "EmploymentsCompanyPayGroup",
                "value": "employments,company,pay_group",
              },
              {
                "name": "EmploymentsGroups",
                "value": "employments,groups",
              },
              {
                "name": "EmploymentsGroupsCompany",
                "value": "employments,groups,company",
              },
              {
                "name": "EmploymentsGroupsCompanyPayGroup",
                "value": "employments,groups,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocation",
                "value": "employments,groups,home_location",
              },
              {
                "name": "EmploymentsGroupsHomeLocationCompany",
                "value": "employments,groups,home_location,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationCompanyPayGroup",
                "value": "employments,groups,home_location,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManager",
                "value": "employments,groups,home_location,manager",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerCompany",
                "value": "employments,groups,home_location,manager,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerCompanyPayGroup",
                "value": "employments,groups,home_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerPayGroup",
                "value": "employments,groups,home_location,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeam",
                "value": "employments,groups,home_location,manager,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeamCompany",
                "value": "employments,groups,home_location,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup",
                "value": "employments,groups,home_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationManagerTeamPayGroup",
                "value": "employments,groups,home_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationPayGroup",
                "value": "employments,groups,home_location,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeam",
                "value": "employments,groups,home_location,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeamCompany",
                "value": "employments,groups,home_location,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeamCompanyPayGroup",
                "value": "employments,groups,home_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationTeamPayGroup",
                "value": "employments,groups,home_location,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocation",
                "value": "employments,groups,home_location,work_location",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationCompany",
                "value": "employments,groups,home_location,work_location,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManager",
                "value": "employments,groups,home_location,work_location,manager",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompany",
                "value": "employments,groups,home_location,work_location,manager,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup",
                "value": "employments,groups,home_location,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeam",
                "value": "employments,groups,home_location,work_location,manager,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany",
                "value": "employments,groups,home_location,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup",
                "value": "employments,groups,home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationPayGroup",
                "value": "employments,groups,home_location,work_location,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeam",
                "value": "employments,groups,home_location,work_location,team",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompany",
                "value": "employments,groups,home_location,work_location,team,company",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "employments,groups,home_location,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup",
                "value": "employments,groups,home_location,work_location,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsManager",
                "value": "employments,groups,manager",
              },
              {
                "name": "EmploymentsGroupsManagerCompany",
                "value": "employments,groups,manager,company",
              },
              {
                "name": "EmploymentsGroupsManagerCompanyPayGroup",
                "value": "employments,groups,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsManagerPayGroup",
                "value": "employments,groups,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsManagerTeam",
                "value": "employments,groups,manager,team",
              },
              {
                "name": "EmploymentsGroupsManagerTeamCompany",
                "value": "employments,groups,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsManagerTeamCompanyPayGroup",
                "value": "employments,groups,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsManagerTeamPayGroup",
                "value": "employments,groups,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsPayGroup",
                "value": "employments,groups,pay_group",
              },
              {
                "name": "EmploymentsGroupsTeam",
                "value": "employments,groups,team",
              },
              {
                "name": "EmploymentsGroupsTeamCompany",
                "value": "employments,groups,team,company",
              },
              {
                "name": "EmploymentsGroupsTeamCompanyPayGroup",
                "value": "employments,groups,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsTeamPayGroup",
                "value": "employments,groups,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocation",
                "value": "employments,groups,work_location",
              },
              {
                "name": "EmploymentsGroupsWorkLocationCompany",
                "value": "employments,groups,work_location,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationCompanyPayGroup",
                "value": "employments,groups,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManager",
                "value": "employments,groups,work_location,manager",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerCompany",
                "value": "employments,groups,work_location,manager,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerCompanyPayGroup",
                "value": "employments,groups,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerPayGroup",
                "value": "employments,groups,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeam",
                "value": "employments,groups,work_location,manager,team",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeamCompany",
                "value": "employments,groups,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,groups,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationManagerTeamPayGroup",
                "value": "employments,groups,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationPayGroup",
                "value": "employments,groups,work_location,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeam",
                "value": "employments,groups,work_location,team",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeamCompany",
                "value": "employments,groups,work_location,team,company",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeamCompanyPayGroup",
                "value": "employments,groups,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsGroupsWorkLocationTeamPayGroup",
                "value": "employments,groups,work_location,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocation",
                "value": "employments,home_location",
              },
              {
                "name": "EmploymentsHomeLocationCompany",
                "value": "employments,home_location,company",
              },
              {
                "name": "EmploymentsHomeLocationCompanyPayGroup",
                "value": "employments,home_location,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManager",
                "value": "employments,home_location,manager",
              },
              {
                "name": "EmploymentsHomeLocationManagerCompany",
                "value": "employments,home_location,manager,company",
              },
              {
                "name": "EmploymentsHomeLocationManagerCompanyPayGroup",
                "value": "employments,home_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManagerPayGroup",
                "value": "employments,home_location,manager,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeam",
                "value": "employments,home_location,manager,team",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeamCompany",
                "value": "employments,home_location,manager,team,company",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeamCompanyPayGroup",
                "value": "employments,home_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationManagerTeamPayGroup",
                "value": "employments,home_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationPayGroup",
                "value": "employments,home_location,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationTeam",
                "value": "employments,home_location,team",
              },
              {
                "name": "EmploymentsHomeLocationTeamCompany",
                "value": "employments,home_location,team,company",
              },
              {
                "name": "EmploymentsHomeLocationTeamCompanyPayGroup",
                "value": "employments,home_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationTeamPayGroup",
                "value": "employments,home_location,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocation",
                "value": "employments,home_location,work_location",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationCompany",
                "value": "employments,home_location,work_location,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationCompanyPayGroup",
                "value": "employments,home_location,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManager",
                "value": "employments,home_location,work_location,manager",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerCompany",
                "value": "employments,home_location,work_location,manager,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "employments,home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerPayGroup",
                "value": "employments,home_location,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeam",
                "value": "employments,home_location,work_location,manager,team",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompany",
                "value": "employments,home_location,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationManagerTeamPayGroup",
                "value": "employments,home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationPayGroup",
                "value": "employments,home_location,work_location,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeam",
                "value": "employments,home_location,work_location,team",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeamCompany",
                "value": "employments,home_location,work_location,team,company",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "employments,home_location,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsHomeLocationWorkLocationTeamPayGroup",
                "value": "employments,home_location,work_location,team,pay_group",
              },
              {
                "name": "EmploymentsManager",
                "value": "employments,manager",
              },
              {
                "name": "EmploymentsManagerCompany",
                "value": "employments,manager,company",
              },
              {
                "name": "EmploymentsManagerCompanyPayGroup",
                "value": "employments,manager,company,pay_group",
              },
              {
                "name": "EmploymentsManagerPayGroup",
                "value": "employments,manager,pay_group",
              },
              {
                "name": "EmploymentsManagerTeam",
                "value": "employments,manager,team",
              },
              {
                "name": "EmploymentsManagerTeamCompany",
                "value": "employments,manager,team,company",
              },
              {
                "name": "EmploymentsManagerTeamCompanyPayGroup",
                "value": "employments,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsManagerTeamPayGroup",
                "value": "employments,manager,team,pay_group",
              },
              {
                "name": "EmploymentsPayGroup",
                "value": "employments,pay_group",
              },
              {
                "name": "EmploymentsTeam",
                "value": "employments,team",
              },
              {
                "name": "EmploymentsTeamCompany",
                "value": "employments,team,company",
              },
              {
                "name": "EmploymentsTeamCompanyPayGroup",
                "value": "employments,team,company,pay_group",
              },
              {
                "name": "EmploymentsTeamPayGroup",
                "value": "employments,team,pay_group",
              },
              {
                "name": "EmploymentsWorkLocation",
                "value": "employments,work_location",
              },
              {
                "name": "EmploymentsWorkLocationCompany",
                "value": "employments,work_location,company",
              },
              {
                "name": "EmploymentsWorkLocationCompanyPayGroup",
                "value": "employments,work_location,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManager",
                "value": "employments,work_location,manager",
              },
              {
                "name": "EmploymentsWorkLocationManagerCompany",
                "value": "employments,work_location,manager,company",
              },
              {
                "name": "EmploymentsWorkLocationManagerCompanyPayGroup",
                "value": "employments,work_location,manager,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManagerPayGroup",
                "value": "employments,work_location,manager,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeam",
                "value": "employments,work_location,manager,team",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeamCompany",
                "value": "employments,work_location,manager,team,company",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeamCompanyPayGroup",
                "value": "employments,work_location,manager,team,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationManagerTeamPayGroup",
                "value": "employments,work_location,manager,team,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationPayGroup",
                "value": "employments,work_location,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationTeam",
                "value": "employments,work_location,team",
              },
              {
                "name": "EmploymentsWorkLocationTeamCompany",
                "value": "employments,work_location,team,company",
              },
              {
                "name": "EmploymentsWorkLocationTeamCompanyPayGroup",
                "value": "employments,work_location,team,company,pay_group",
              },
              {
                "name": "EmploymentsWorkLocationTeamPayGroup",
                "value": "employments,work_location,team,pay_group",
              },
              "groups",
              {
                "name": "GroupsCompany",
                "value": "groups,company",
              },
              {
                "name": "GroupsCompanyPayGroup",
                "value": "groups,company,pay_group",
              },
              {
                "name": "GroupsHomeLocation",
                "value": "groups,home_location",
              },
              {
                "name": "GroupsHomeLocationCompany",
                "value": "groups,home_location,company",
              },
              {
                "name": "GroupsHomeLocationCompanyPayGroup",
                "value": "groups,home_location,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationManager",
                "value": "groups,home_location,manager",
              },
              {
                "name": "GroupsHomeLocationManagerCompany",
                "value": "groups,home_location,manager,company",
              },
              {
                "name": "GroupsHomeLocationManagerCompanyPayGroup",
                "value": "groups,home_location,manager,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationManagerPayGroup",
                "value": "groups,home_location,manager,pay_group",
              },
              {
                "name": "GroupsHomeLocationManagerTeam",
                "value": "groups,home_location,manager,team",
              },
              {
                "name": "GroupsHomeLocationManagerTeamCompany",
                "value": "groups,home_location,manager,team,company",
              },
              {
                "name": "GroupsHomeLocationManagerTeamCompanyPayGroup",
                "value": "groups,home_location,manager,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationManagerTeamPayGroup",
                "value": "groups,home_location,manager,team,pay_group",
              },
              {
                "name": "GroupsHomeLocationPayGroup",
                "value": "groups,home_location,pay_group",
              },
              {
                "name": "GroupsHomeLocationTeam",
                "value": "groups,home_location,team",
              },
              {
                "name": "GroupsHomeLocationTeamCompany",
                "value": "groups,home_location,team,company",
              },
              {
                "name": "GroupsHomeLocationTeamCompanyPayGroup",
                "value": "groups,home_location,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationTeamPayGroup",
                "value": "groups,home_location,team,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocation",
                "value": "groups,home_location,work_location",
              },
              {
                "name": "GroupsHomeLocationWorkLocationCompany",
                "value": "groups,home_location,work_location,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationCompanyPayGroup",
                "value": "groups,home_location,work_location,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManager",
                "value": "groups,home_location,work_location,manager",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerCompany",
                "value": "groups,home_location,work_location,manager,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "groups,home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerPayGroup",
                "value": "groups,home_location,work_location,manager,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeam",
                "value": "groups,home_location,work_location,manager,team",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeamCompany",
                "value": "groups,home_location,work_location,manager,team,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "groups,home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationManagerTeamPayGroup",
                "value": "groups,home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationPayGroup",
                "value": "groups,home_location,work_location,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeam",
                "value": "groups,home_location,work_location,team",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeamCompany",
                "value": "groups,home_location,work_location,team,company",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "groups,home_location,work_location,team,company,pay_group",
              },
              {
                "name": "GroupsHomeLocationWorkLocationTeamPayGroup",
                "value": "groups,home_location,work_location,team,pay_group",
              },
              {
                "name": "GroupsManager",
                "value": "groups,manager",
              },
              {
                "name": "GroupsManagerCompany",
                "value": "groups,manager,company",
              },
              {
                "name": "GroupsManagerCompanyPayGroup",
                "value": "groups,manager,company,pay_group",
              },
              {
                "name": "GroupsManagerPayGroup",
                "value": "groups,manager,pay_group",
              },
              {
                "name": "GroupsManagerTeam",
                "value": "groups,manager,team",
              },
              {
                "name": "GroupsManagerTeamCompany",
                "value": "groups,manager,team,company",
              },
              {
                "name": "GroupsManagerTeamCompanyPayGroup",
                "value": "groups,manager,team,company,pay_group",
              },
              {
                "name": "GroupsManagerTeamPayGroup",
                "value": "groups,manager,team,pay_group",
              },
              {
                "name": "GroupsPayGroup",
                "value": "groups,pay_group",
              },
              {
                "name": "GroupsTeam",
                "value": "groups,team",
              },
              {
                "name": "GroupsTeamCompany",
                "value": "groups,team,company",
              },
              {
                "name": "GroupsTeamCompanyPayGroup",
                "value": "groups,team,company,pay_group",
              },
              {
                "name": "GroupsTeamPayGroup",
                "value": "groups,team,pay_group",
              },
              {
                "name": "GroupsWorkLocation",
                "value": "groups,work_location",
              },
              {
                "name": "GroupsWorkLocationCompany",
                "value": "groups,work_location,company",
              },
              {
                "name": "GroupsWorkLocationCompanyPayGroup",
                "value": "groups,work_location,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationManager",
                "value": "groups,work_location,manager",
              },
              {
                "name": "GroupsWorkLocationManagerCompany",
                "value": "groups,work_location,manager,company",
              },
              {
                "name": "GroupsWorkLocationManagerCompanyPayGroup",
                "value": "groups,work_location,manager,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationManagerPayGroup",
                "value": "groups,work_location,manager,pay_group",
              },
              {
                "name": "GroupsWorkLocationManagerTeam",
                "value": "groups,work_location,manager,team",
              },
              {
                "name": "GroupsWorkLocationManagerTeamCompany",
                "value": "groups,work_location,manager,team,company",
              },
              {
                "name": "GroupsWorkLocationManagerTeamCompanyPayGroup",
                "value": "groups,work_location,manager,team,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationManagerTeamPayGroup",
                "value": "groups,work_location,manager,team,pay_group",
              },
              {
                "name": "GroupsWorkLocationPayGroup",
                "value": "groups,work_location,pay_group",
              },
              {
                "name": "GroupsWorkLocationTeam",
                "value": "groups,work_location,team",
              },
              {
                "name": "GroupsWorkLocationTeamCompany",
                "value": "groups,work_location,team,company",
              },
              {
                "name": "GroupsWorkLocationTeamCompanyPayGroup",
                "value": "groups,work_location,team,company,pay_group",
              },
              {
                "name": "GroupsWorkLocationTeamPayGroup",
                "value": "groups,work_location,team,pay_group",
              },
              "home_location",
              {
                "name": "HomeLocationCompany",
                "value": "home_location,company",
              },
              {
                "name": "HomeLocationCompanyPayGroup",
                "value": "home_location,company,pay_group",
              },
              {
                "name": "HomeLocationManager",
                "value": "home_location,manager",
              },
              {
                "name": "HomeLocationManagerCompany",
                "value": "home_location,manager,company",
              },
              {
                "name": "HomeLocationManagerCompanyPayGroup",
                "value": "home_location,manager,company,pay_group",
              },
              {
                "name": "HomeLocationManagerPayGroup",
                "value": "home_location,manager,pay_group",
              },
              {
                "name": "HomeLocationManagerTeam",
                "value": "home_location,manager,team",
              },
              {
                "name": "HomeLocationManagerTeamCompany",
                "value": "home_location,manager,team,company",
              },
              {
                "name": "HomeLocationManagerTeamCompanyPayGroup",
                "value": "home_location,manager,team,company,pay_group",
              },
              {
                "name": "HomeLocationManagerTeamPayGroup",
                "value": "home_location,manager,team,pay_group",
              },
              {
                "name": "HomeLocationPayGroup",
                "value": "home_location,pay_group",
              },
              {
                "name": "HomeLocationTeam",
                "value": "home_location,team",
              },
              {
                "name": "HomeLocationTeamCompany",
                "value": "home_location,team,company",
              },
              {
                "name": "HomeLocationTeamCompanyPayGroup",
                "value": "home_location,team,company,pay_group",
              },
              {
                "name": "HomeLocationTeamPayGroup",
                "value": "home_location,team,pay_group",
              },
              {
                "name": "HomeLocationWorkLocation",
                "value": "home_location,work_location",
              },
              {
                "name": "HomeLocationWorkLocationCompany",
                "value": "home_location,work_location,company",
              },
              {
                "name": "HomeLocationWorkLocationCompanyPayGroup",
                "value": "home_location,work_location,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManager",
                "value": "home_location,work_location,manager",
              },
              {
                "name": "HomeLocationWorkLocationManagerCompany",
                "value": "home_location,work_location,manager,company",
              },
              {
                "name": "HomeLocationWorkLocationManagerCompanyPayGroup",
                "value": "home_location,work_location,manager,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManagerPayGroup",
                "value": "home_location,work_location,manager,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeam",
                "value": "home_location,work_location,manager,team",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeamCompany",
                "value": "home_location,work_location,manager,team,company",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeamCompanyPayGroup",
                "value": "home_location,work_location,manager,team,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationManagerTeamPayGroup",
                "value": "home_location,work_location,manager,team,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationPayGroup",
                "value": "home_location,work_location,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationTeam",
                "value": "home_location,work_location,team",
              },
              {
                "name": "HomeLocationWorkLocationTeamCompany",
                "value": "home_location,work_location,team,company",
              },
              {
                "name": "HomeLocationWorkLocationTeamCompanyPayGroup",
                "value": "home_location,work_location,team,company,pay_group",
              },
              {
                "name": "HomeLocationWorkLocationTeamPayGroup",
                "value": "home_location,work_location,team,pay_group",
              },
              "manager",
              {
                "name": "ManagerCompany",
                "value": "manager,company",
              },
              {
                "name": "ManagerCompanyPayGroup",
                "value": "manager,company,pay_group",
              },
              {
                "name": "ManagerPayGroup",
                "value": "manager,pay_group",
              },
              {
                "name": "ManagerTeam",
                "value": "manager,team",
              },
              {
                "name": "ManagerTeamCompany",
                "value": "manager,team,company",
              },
              {
                "name": "ManagerTeamCompanyPayGroup",
                "value": "manager,team,company,pay_group",
              },
              {
                "name": "ManagerTeamPayGroup",
                "value": "manager,team,pay_group",
              },
              "pay_group",
              "team",
              {
                "name": "TeamCompany",
                "value": "team,company",
              },
              {
                "name": "TeamCompanyPayGroup",
                "value": "team,company,pay_group",
              },
              {
                "name": "TeamPayGroup",
                "value": "team,pay_group",
              },
              "work_location",
              {
                "name": "WorkLocationCompany",
                "value": "work_location,company",
              },
              {
                "name": "WorkLocationCompanyPayGroup",
                "value": "work_location,company,pay_group",
              },
              {
                "name": "WorkLocationManager",
                "value": "work_location,manager",
              },
              {
                "name": "WorkLocationManagerCompany",
                "value": "work_location,manager,company",
              },
              {
                "name": "WorkLocationManagerCompanyPayGroup",
                "value": "work_location,manager,company,pay_group",
              },
              {
                "name": "WorkLocationManagerPayGroup",
                "value": "work_location,manager,pay_group",
              },
              {
                "name": "WorkLocationManagerTeam",
                "value": "work_location,manager,team",
              },
              {
                "name": "WorkLocationManagerTeamCompany",
                "value": "work_location,manager,team,company",
              },
              {
                "name": "WorkLocationManagerTeamCompanyPayGroup",
                "value": "work_location,manager,team,company,pay_group",
              },
              {
                "name": "WorkLocationManagerTeamPayGroup",
                "value": "work_location,manager,team,pay_group",
              },
              {
                "name": "WorkLocationPayGroup",
                "value": "work_location,pay_group",
              },
              {
                "name": "WorkLocationTeam",
                "value": "work_location,team",
              },
              {
                "name": "WorkLocationTeamCompany",
                "value": "work_location,team,company",
              },
              {
                "name": "WorkLocationTeamCompanyPayGroup",
                "value": "work_location,team,company,pay_group",
              },
              {
                "name": "WorkLocationTeamPayGroup",
                "value": "work_location,team,pay_group",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeesRetrieveRequestRemoteFields": {
            "enum": [
              "employment_status",
              {
                "name": "EmploymentStatusEthnicity",
                "value": "employment_status,ethnicity",
              },
              {
                "name": "EmploymentStatusEthnicityGender",
                "value": "employment_status,ethnicity,gender",
              },
              {
                "name": "EmploymentStatusEthnicityGenderMaritalStatus",
                "value": "employment_status,ethnicity,gender,marital_status",
              },
              {
                "name": "EmploymentStatusEthnicityMaritalStatus",
                "value": "employment_status,ethnicity,marital_status",
              },
              {
                "name": "EmploymentStatusGender",
                "value": "employment_status,gender",
              },
              {
                "name": "EmploymentStatusGenderMaritalStatus",
                "value": "employment_status,gender,marital_status",
              },
              {
                "name": "EmploymentStatusMaritalStatus",
                "value": "employment_status,marital_status",
              },
              "ethnicity",
              {
                "name": "EthnicityGender",
                "value": "ethnicity,gender",
              },
              {
                "name": "EthnicityGenderMaritalStatus",
                "value": "ethnicity,gender,marital_status",
              },
              {
                "name": "EthnicityMaritalStatus",
                "value": "ethnicity,marital_status",
              },
              "gender",
              {
                "name": "GenderMaritalStatus",
                "value": "gender,marital_status",
              },
              "marital_status",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmployeesRetrieveRequestShowEnumOrigins": {
            "enum": [
              "employment_status",
              {
                "name": "EmploymentStatusEthnicity",
                "value": "employment_status,ethnicity",
              },
              {
                "name": "EmploymentStatusEthnicityGender",
                "value": "employment_status,ethnicity,gender",
              },
              {
                "name": "EmploymentStatusEthnicityGenderMaritalStatus",
                "value": "employment_status,ethnicity,gender,marital_status",
              },
              {
                "name": "EmploymentStatusEthnicityMaritalStatus",
                "value": "employment_status,ethnicity,marital_status",
              },
              {
                "name": "EmploymentStatusGender",
                "value": "employment_status,gender",
              },
              {
                "name": "EmploymentStatusGenderMaritalStatus",
                "value": "employment_status,gender,marital_status",
              },
              {
                "name": "EmploymentStatusMaritalStatus",
                "value": "employment_status,marital_status",
              },
              "ethnicity",
              {
                "name": "EthnicityGender",
                "value": "ethnicity,gender",
              },
              {
                "name": "EthnicityGenderMaritalStatus",
                "value": "ethnicity,gender,marital_status",
              },
              {
                "name": "EthnicityMaritalStatus",
                "value": "ethnicity,marital_status",
              },
              "gender",
              {
                "name": "GenderMaritalStatus",
                "value": "gender,marital_status",
              },
              "marital_status",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  EmployeesListRequestEmploymentStatus:
    enum:
      - ACTIVE
      - INACTIVE
      - PENDING
    source:
      openapi: ../openapi.yml
  EmployeesListRequestExpand:
    enum:
      - company
      - value: company,pay_group
        name: CompanyPayGroup
      - employments
      - value: employments,company
        name: EmploymentsCompany
      - value: employments,company,pay_group
        name: EmploymentsCompanyPayGroup
      - value: employments,groups
        name: EmploymentsGroups
      - value: employments,groups,company
        name: EmploymentsGroupsCompany
      - value: employments,groups,company,pay_group
        name: EmploymentsGroupsCompanyPayGroup
      - value: employments,groups,home_location
        name: EmploymentsGroupsHomeLocation
      - value: employments,groups,home_location,company
        name: EmploymentsGroupsHomeLocationCompany
      - value: employments,groups,home_location,company,pay_group
        name: EmploymentsGroupsHomeLocationCompanyPayGroup
      - value: employments,groups,home_location,manager
        name: EmploymentsGroupsHomeLocationManager
      - value: employments,groups,home_location,manager,company
        name: EmploymentsGroupsHomeLocationManagerCompany
      - value: employments,groups,home_location,manager,company,pay_group
        name: EmploymentsGroupsHomeLocationManagerCompanyPayGroup
      - value: employments,groups,home_location,manager,pay_group
        name: EmploymentsGroupsHomeLocationManagerPayGroup
      - value: employments,groups,home_location,manager,team
        name: EmploymentsGroupsHomeLocationManagerTeam
      - value: employments,groups,home_location,manager,team,company
        name: EmploymentsGroupsHomeLocationManagerTeamCompany
      - value: employments,groups,home_location,manager,team,company,pay_group
        name: EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup
      - value: employments,groups,home_location,manager,team,pay_group
        name: EmploymentsGroupsHomeLocationManagerTeamPayGroup
      - value: employments,groups,home_location,pay_group
        name: EmploymentsGroupsHomeLocationPayGroup
      - value: employments,groups,home_location,team
        name: EmploymentsGroupsHomeLocationTeam
      - value: employments,groups,home_location,team,company
        name: EmploymentsGroupsHomeLocationTeamCompany
      - value: employments,groups,home_location,team,company,pay_group
        name: EmploymentsGroupsHomeLocationTeamCompanyPayGroup
      - value: employments,groups,home_location,team,pay_group
        name: EmploymentsGroupsHomeLocationTeamPayGroup
      - value: employments,groups,home_location,work_location
        name: EmploymentsGroupsHomeLocationWorkLocation
      - value: employments,groups,home_location,work_location,company
        name: EmploymentsGroupsHomeLocationWorkLocationCompany
      - value: employments,groups,home_location,work_location,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup
      - value: employments,groups,home_location,work_location,manager
        name: EmploymentsGroupsHomeLocationWorkLocationManager
      - value: employments,groups,home_location,work_location,manager,company
        name: EmploymentsGroupsHomeLocationWorkLocationManagerCompany
      - value: >-
          employments,groups,home_location,work_location,manager,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup
      - value: employments,groups,home_location,work_location,manager,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup
      - value: employments,groups,home_location,work_location,manager,team
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeam
      - value: employments,groups,home_location,work_location,manager,team,company
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany
      - value: >-
          employments,groups,home_location,work_location,manager,team,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: employments,groups,home_location,work_location,manager,team,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup
      - value: employments,groups,home_location,work_location,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationPayGroup
      - value: employments,groups,home_location,work_location,team
        name: EmploymentsGroupsHomeLocationWorkLocationTeam
      - value: employments,groups,home_location,work_location,team,company
        name: EmploymentsGroupsHomeLocationWorkLocationTeamCompany
      - value: employments,groups,home_location,work_location,team,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup
      - value: employments,groups,home_location,work_location,team,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup
      - value: employments,groups,manager
        name: EmploymentsGroupsManager
      - value: employments,groups,manager,company
        name: EmploymentsGroupsManagerCompany
      - value: employments,groups,manager,company,pay_group
        name: EmploymentsGroupsManagerCompanyPayGroup
      - value: employments,groups,manager,pay_group
        name: EmploymentsGroupsManagerPayGroup
      - value: employments,groups,manager,team
        name: EmploymentsGroupsManagerTeam
      - value: employments,groups,manager,team,company
        name: EmploymentsGroupsManagerTeamCompany
      - value: employments,groups,manager,team,company,pay_group
        name: EmploymentsGroupsManagerTeamCompanyPayGroup
      - value: employments,groups,manager,team,pay_group
        name: EmploymentsGroupsManagerTeamPayGroup
      - value: employments,groups,pay_group
        name: EmploymentsGroupsPayGroup
      - value: employments,groups,team
        name: EmploymentsGroupsTeam
      - value: employments,groups,team,company
        name: EmploymentsGroupsTeamCompany
      - value: employments,groups,team,company,pay_group
        name: EmploymentsGroupsTeamCompanyPayGroup
      - value: employments,groups,team,pay_group
        name: EmploymentsGroupsTeamPayGroup
      - value: employments,groups,work_location
        name: EmploymentsGroupsWorkLocation
      - value: employments,groups,work_location,company
        name: EmploymentsGroupsWorkLocationCompany
      - value: employments,groups,work_location,company,pay_group
        name: EmploymentsGroupsWorkLocationCompanyPayGroup
      - value: employments,groups,work_location,manager
        name: EmploymentsGroupsWorkLocationManager
      - value: employments,groups,work_location,manager,company
        name: EmploymentsGroupsWorkLocationManagerCompany
      - value: employments,groups,work_location,manager,company,pay_group
        name: EmploymentsGroupsWorkLocationManagerCompanyPayGroup
      - value: employments,groups,work_location,manager,pay_group
        name: EmploymentsGroupsWorkLocationManagerPayGroup
      - value: employments,groups,work_location,manager,team
        name: EmploymentsGroupsWorkLocationManagerTeam
      - value: employments,groups,work_location,manager,team,company
        name: EmploymentsGroupsWorkLocationManagerTeamCompany
      - value: employments,groups,work_location,manager,team,company,pay_group
        name: EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup
      - value: employments,groups,work_location,manager,team,pay_group
        name: EmploymentsGroupsWorkLocationManagerTeamPayGroup
      - value: employments,groups,work_location,pay_group
        name: EmploymentsGroupsWorkLocationPayGroup
      - value: employments,groups,work_location,team
        name: EmploymentsGroupsWorkLocationTeam
      - value: employments,groups,work_location,team,company
        name: EmploymentsGroupsWorkLocationTeamCompany
      - value: employments,groups,work_location,team,company,pay_group
        name: EmploymentsGroupsWorkLocationTeamCompanyPayGroup
      - value: employments,groups,work_location,team,pay_group
        name: EmploymentsGroupsWorkLocationTeamPayGroup
      - value: employments,home_location
        name: EmploymentsHomeLocation
      - value: employments,home_location,company
        name: EmploymentsHomeLocationCompany
      - value: employments,home_location,company,pay_group
        name: EmploymentsHomeLocationCompanyPayGroup
      - value: employments,home_location,manager
        name: EmploymentsHomeLocationManager
      - value: employments,home_location,manager,company
        name: EmploymentsHomeLocationManagerCompany
      - value: employments,home_location,manager,company,pay_group
        name: EmploymentsHomeLocationManagerCompanyPayGroup
      - value: employments,home_location,manager,pay_group
        name: EmploymentsHomeLocationManagerPayGroup
      - value: employments,home_location,manager,team
        name: EmploymentsHomeLocationManagerTeam
      - value: employments,home_location,manager,team,company
        name: EmploymentsHomeLocationManagerTeamCompany
      - value: employments,home_location,manager,team,company,pay_group
        name: EmploymentsHomeLocationManagerTeamCompanyPayGroup
      - value: employments,home_location,manager,team,pay_group
        name: EmploymentsHomeLocationManagerTeamPayGroup
      - value: employments,home_location,pay_group
        name: EmploymentsHomeLocationPayGroup
      - value: employments,home_location,team
        name: EmploymentsHomeLocationTeam
      - value: employments,home_location,team,company
        name: EmploymentsHomeLocationTeamCompany
      - value: employments,home_location,team,company,pay_group
        name: EmploymentsHomeLocationTeamCompanyPayGroup
      - value: employments,home_location,team,pay_group
        name: EmploymentsHomeLocationTeamPayGroup
      - value: employments,home_location,work_location
        name: EmploymentsHomeLocationWorkLocation
      - value: employments,home_location,work_location,company
        name: EmploymentsHomeLocationWorkLocationCompany
      - value: employments,home_location,work_location,company,pay_group
        name: EmploymentsHomeLocationWorkLocationCompanyPayGroup
      - value: employments,home_location,work_location,manager
        name: EmploymentsHomeLocationWorkLocationManager
      - value: employments,home_location,work_location,manager,company
        name: EmploymentsHomeLocationWorkLocationManagerCompany
      - value: employments,home_location,work_location,manager,company,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup
      - value: employments,home_location,work_location,manager,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerPayGroup
      - value: employments,home_location,work_location,manager,team
        name: EmploymentsHomeLocationWorkLocationManagerTeam
      - value: employments,home_location,work_location,manager,team,company
        name: EmploymentsHomeLocationWorkLocationManagerTeamCompany
      - value: employments,home_location,work_location,manager,team,company,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: employments,home_location,work_location,manager,team,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerTeamPayGroup
      - value: employments,home_location,work_location,pay_group
        name: EmploymentsHomeLocationWorkLocationPayGroup
      - value: employments,home_location,work_location,team
        name: EmploymentsHomeLocationWorkLocationTeam
      - value: employments,home_location,work_location,team,company
        name: EmploymentsHomeLocationWorkLocationTeamCompany
      - value: employments,home_location,work_location,team,company,pay_group
        name: EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup
      - value: employments,home_location,work_location,team,pay_group
        name: EmploymentsHomeLocationWorkLocationTeamPayGroup
      - value: employments,manager
        name: EmploymentsManager
      - value: employments,manager,company
        name: EmploymentsManagerCompany
      - value: employments,manager,company,pay_group
        name: EmploymentsManagerCompanyPayGroup
      - value: employments,manager,pay_group
        name: EmploymentsManagerPayGroup
      - value: employments,manager,team
        name: EmploymentsManagerTeam
      - value: employments,manager,team,company
        name: EmploymentsManagerTeamCompany
      - value: employments,manager,team,company,pay_group
        name: EmploymentsManagerTeamCompanyPayGroup
      - value: employments,manager,team,pay_group
        name: EmploymentsManagerTeamPayGroup
      - value: employments,pay_group
        name: EmploymentsPayGroup
      - value: employments,team
        name: EmploymentsTeam
      - value: employments,team,company
        name: EmploymentsTeamCompany
      - value: employments,team,company,pay_group
        name: EmploymentsTeamCompanyPayGroup
      - value: employments,team,pay_group
        name: EmploymentsTeamPayGroup
      - value: employments,work_location
        name: EmploymentsWorkLocation
      - value: employments,work_location,company
        name: EmploymentsWorkLocationCompany
      - value: employments,work_location,company,pay_group
        name: EmploymentsWorkLocationCompanyPayGroup
      - value: employments,work_location,manager
        name: EmploymentsWorkLocationManager
      - value: employments,work_location,manager,company
        name: EmploymentsWorkLocationManagerCompany
      - value: employments,work_location,manager,company,pay_group
        name: EmploymentsWorkLocationManagerCompanyPayGroup
      - value: employments,work_location,manager,pay_group
        name: EmploymentsWorkLocationManagerPayGroup
      - value: employments,work_location,manager,team
        name: EmploymentsWorkLocationManagerTeam
      - value: employments,work_location,manager,team,company
        name: EmploymentsWorkLocationManagerTeamCompany
      - value: employments,work_location,manager,team,company,pay_group
        name: EmploymentsWorkLocationManagerTeamCompanyPayGroup
      - value: employments,work_location,manager,team,pay_group
        name: EmploymentsWorkLocationManagerTeamPayGroup
      - value: employments,work_location,pay_group
        name: EmploymentsWorkLocationPayGroup
      - value: employments,work_location,team
        name: EmploymentsWorkLocationTeam
      - value: employments,work_location,team,company
        name: EmploymentsWorkLocationTeamCompany
      - value: employments,work_location,team,company,pay_group
        name: EmploymentsWorkLocationTeamCompanyPayGroup
      - value: employments,work_location,team,pay_group
        name: EmploymentsWorkLocationTeamPayGroup
      - groups
      - value: groups,company
        name: GroupsCompany
      - value: groups,company,pay_group
        name: GroupsCompanyPayGroup
      - value: groups,home_location
        name: GroupsHomeLocation
      - value: groups,home_location,company
        name: GroupsHomeLocationCompany
      - value: groups,home_location,company,pay_group
        name: GroupsHomeLocationCompanyPayGroup
      - value: groups,home_location,manager
        name: GroupsHomeLocationManager
      - value: groups,home_location,manager,company
        name: GroupsHomeLocationManagerCompany
      - value: groups,home_location,manager,company,pay_group
        name: GroupsHomeLocationManagerCompanyPayGroup
      - value: groups,home_location,manager,pay_group
        name: GroupsHomeLocationManagerPayGroup
      - value: groups,home_location,manager,team
        name: GroupsHomeLocationManagerTeam
      - value: groups,home_location,manager,team,company
        name: GroupsHomeLocationManagerTeamCompany
      - value: groups,home_location,manager,team,company,pay_group
        name: GroupsHomeLocationManagerTeamCompanyPayGroup
      - value: groups,home_location,manager,team,pay_group
        name: GroupsHomeLocationManagerTeamPayGroup
      - value: groups,home_location,pay_group
        name: GroupsHomeLocationPayGroup
      - value: groups,home_location,team
        name: GroupsHomeLocationTeam
      - value: groups,home_location,team,company
        name: GroupsHomeLocationTeamCompany
      - value: groups,home_location,team,company,pay_group
        name: GroupsHomeLocationTeamCompanyPayGroup
      - value: groups,home_location,team,pay_group
        name: GroupsHomeLocationTeamPayGroup
      - value: groups,home_location,work_location
        name: GroupsHomeLocationWorkLocation
      - value: groups,home_location,work_location,company
        name: GroupsHomeLocationWorkLocationCompany
      - value: groups,home_location,work_location,company,pay_group
        name: GroupsHomeLocationWorkLocationCompanyPayGroup
      - value: groups,home_location,work_location,manager
        name: GroupsHomeLocationWorkLocationManager
      - value: groups,home_location,work_location,manager,company
        name: GroupsHomeLocationWorkLocationManagerCompany
      - value: groups,home_location,work_location,manager,company,pay_group
        name: GroupsHomeLocationWorkLocationManagerCompanyPayGroup
      - value: groups,home_location,work_location,manager,pay_group
        name: GroupsHomeLocationWorkLocationManagerPayGroup
      - value: groups,home_location,work_location,manager,team
        name: GroupsHomeLocationWorkLocationManagerTeam
      - value: groups,home_location,work_location,manager,team,company
        name: GroupsHomeLocationWorkLocationManagerTeamCompany
      - value: groups,home_location,work_location,manager,team,company,pay_group
        name: GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: groups,home_location,work_location,manager,team,pay_group
        name: GroupsHomeLocationWorkLocationManagerTeamPayGroup
      - value: groups,home_location,work_location,pay_group
        name: GroupsHomeLocationWorkLocationPayGroup
      - value: groups,home_location,work_location,team
        name: GroupsHomeLocationWorkLocationTeam
      - value: groups,home_location,work_location,team,company
        name: GroupsHomeLocationWorkLocationTeamCompany
      - value: groups,home_location,work_location,team,company,pay_group
        name: GroupsHomeLocationWorkLocationTeamCompanyPayGroup
      - value: groups,home_location,work_location,team,pay_group
        name: GroupsHomeLocationWorkLocationTeamPayGroup
      - value: groups,manager
        name: GroupsManager
      - value: groups,manager,company
        name: GroupsManagerCompany
      - value: groups,manager,company,pay_group
        name: GroupsManagerCompanyPayGroup
      - value: groups,manager,pay_group
        name: GroupsManagerPayGroup
      - value: groups,manager,team
        name: GroupsManagerTeam
      - value: groups,manager,team,company
        name: GroupsManagerTeamCompany
      - value: groups,manager,team,company,pay_group
        name: GroupsManagerTeamCompanyPayGroup
      - value: groups,manager,team,pay_group
        name: GroupsManagerTeamPayGroup
      - value: groups,pay_group
        name: GroupsPayGroup
      - value: groups,team
        name: GroupsTeam
      - value: groups,team,company
        name: GroupsTeamCompany
      - value: groups,team,company,pay_group
        name: GroupsTeamCompanyPayGroup
      - value: groups,team,pay_group
        name: GroupsTeamPayGroup
      - value: groups,work_location
        name: GroupsWorkLocation
      - value: groups,work_location,company
        name: GroupsWorkLocationCompany
      - value: groups,work_location,company,pay_group
        name: GroupsWorkLocationCompanyPayGroup
      - value: groups,work_location,manager
        name: GroupsWorkLocationManager
      - value: groups,work_location,manager,company
        name: GroupsWorkLocationManagerCompany
      - value: groups,work_location,manager,company,pay_group
        name: GroupsWorkLocationManagerCompanyPayGroup
      - value: groups,work_location,manager,pay_group
        name: GroupsWorkLocationManagerPayGroup
      - value: groups,work_location,manager,team
        name: GroupsWorkLocationManagerTeam
      - value: groups,work_location,manager,team,company
        name: GroupsWorkLocationManagerTeamCompany
      - value: groups,work_location,manager,team,company,pay_group
        name: GroupsWorkLocationManagerTeamCompanyPayGroup
      - value: groups,work_location,manager,team,pay_group
        name: GroupsWorkLocationManagerTeamPayGroup
      - value: groups,work_location,pay_group
        name: GroupsWorkLocationPayGroup
      - value: groups,work_location,team
        name: GroupsWorkLocationTeam
      - value: groups,work_location,team,company
        name: GroupsWorkLocationTeamCompany
      - value: groups,work_location,team,company,pay_group
        name: GroupsWorkLocationTeamCompanyPayGroup
      - value: groups,work_location,team,pay_group
        name: GroupsWorkLocationTeamPayGroup
      - home_location
      - value: home_location,company
        name: HomeLocationCompany
      - value: home_location,company,pay_group
        name: HomeLocationCompanyPayGroup
      - value: home_location,manager
        name: HomeLocationManager
      - value: home_location,manager,company
        name: HomeLocationManagerCompany
      - value: home_location,manager,company,pay_group
        name: HomeLocationManagerCompanyPayGroup
      - value: home_location,manager,pay_group
        name: HomeLocationManagerPayGroup
      - value: home_location,manager,team
        name: HomeLocationManagerTeam
      - value: home_location,manager,team,company
        name: HomeLocationManagerTeamCompany
      - value: home_location,manager,team,company,pay_group
        name: HomeLocationManagerTeamCompanyPayGroup
      - value: home_location,manager,team,pay_group
        name: HomeLocationManagerTeamPayGroup
      - value: home_location,pay_group
        name: HomeLocationPayGroup
      - value: home_location,team
        name: HomeLocationTeam
      - value: home_location,team,company
        name: HomeLocationTeamCompany
      - value: home_location,team,company,pay_group
        name: HomeLocationTeamCompanyPayGroup
      - value: home_location,team,pay_group
        name: HomeLocationTeamPayGroup
      - value: home_location,work_location
        name: HomeLocationWorkLocation
      - value: home_location,work_location,company
        name: HomeLocationWorkLocationCompany
      - value: home_location,work_location,company,pay_group
        name: HomeLocationWorkLocationCompanyPayGroup
      - value: home_location,work_location,manager
        name: HomeLocationWorkLocationManager
      - value: home_location,work_location,manager,company
        name: HomeLocationWorkLocationManagerCompany
      - value: home_location,work_location,manager,company,pay_group
        name: HomeLocationWorkLocationManagerCompanyPayGroup
      - value: home_location,work_location,manager,pay_group
        name: HomeLocationWorkLocationManagerPayGroup
      - value: home_location,work_location,manager,team
        name: HomeLocationWorkLocationManagerTeam
      - value: home_location,work_location,manager,team,company
        name: HomeLocationWorkLocationManagerTeamCompany
      - value: home_location,work_location,manager,team,company,pay_group
        name: HomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: home_location,work_location,manager,team,pay_group
        name: HomeLocationWorkLocationManagerTeamPayGroup
      - value: home_location,work_location,pay_group
        name: HomeLocationWorkLocationPayGroup
      - value: home_location,work_location,team
        name: HomeLocationWorkLocationTeam
      - value: home_location,work_location,team,company
        name: HomeLocationWorkLocationTeamCompany
      - value: home_location,work_location,team,company,pay_group
        name: HomeLocationWorkLocationTeamCompanyPayGroup
      - value: home_location,work_location,team,pay_group
        name: HomeLocationWorkLocationTeamPayGroup
      - manager
      - value: manager,company
        name: ManagerCompany
      - value: manager,company,pay_group
        name: ManagerCompanyPayGroup
      - value: manager,pay_group
        name: ManagerPayGroup
      - value: manager,team
        name: ManagerTeam
      - value: manager,team,company
        name: ManagerTeamCompany
      - value: manager,team,company,pay_group
        name: ManagerTeamCompanyPayGroup
      - value: manager,team,pay_group
        name: ManagerTeamPayGroup
      - pay_group
      - team
      - value: team,company
        name: TeamCompany
      - value: team,company,pay_group
        name: TeamCompanyPayGroup
      - value: team,pay_group
        name: TeamPayGroup
      - work_location
      - value: work_location,company
        name: WorkLocationCompany
      - value: work_location,company,pay_group
        name: WorkLocationCompanyPayGroup
      - value: work_location,manager
        name: WorkLocationManager
      - value: work_location,manager,company
        name: WorkLocationManagerCompany
      - value: work_location,manager,company,pay_group
        name: WorkLocationManagerCompanyPayGroup
      - value: work_location,manager,pay_group
        name: WorkLocationManagerPayGroup
      - value: work_location,manager,team
        name: WorkLocationManagerTeam
      - value: work_location,manager,team,company
        name: WorkLocationManagerTeamCompany
      - value: work_location,manager,team,company,pay_group
        name: WorkLocationManagerTeamCompanyPayGroup
      - value: work_location,manager,team,pay_group
        name: WorkLocationManagerTeamPayGroup
      - value: work_location,pay_group
        name: WorkLocationPayGroup
      - value: work_location,team
        name: WorkLocationTeam
      - value: work_location,team,company
        name: WorkLocationTeamCompany
      - value: work_location,team,company,pay_group
        name: WorkLocationTeamCompanyPayGroup
      - value: work_location,team,pay_group
        name: WorkLocationTeamPayGroup
    source:
      openapi: ../openapi.yml
  EmployeesListRequestRemoteFields:
    enum:
      - employment_status
      - value: employment_status,ethnicity
        name: EmploymentStatusEthnicity
      - value: employment_status,ethnicity,gender
        name: EmploymentStatusEthnicityGender
      - value: employment_status,ethnicity,gender,marital_status
        name: EmploymentStatusEthnicityGenderMaritalStatus
      - value: employment_status,ethnicity,marital_status
        name: EmploymentStatusEthnicityMaritalStatus
      - value: employment_status,gender
        name: EmploymentStatusGender
      - value: employment_status,gender,marital_status
        name: EmploymentStatusGenderMaritalStatus
      - value: employment_status,marital_status
        name: EmploymentStatusMaritalStatus
      - ethnicity
      - value: ethnicity,gender
        name: EthnicityGender
      - value: ethnicity,gender,marital_status
        name: EthnicityGenderMaritalStatus
      - value: ethnicity,marital_status
        name: EthnicityMaritalStatus
      - gender
      - value: gender,marital_status
        name: GenderMaritalStatus
      - marital_status
    source:
      openapi: ../openapi.yml
  EmployeesListRequestShowEnumOrigins:
    enum:
      - employment_status
      - value: employment_status,ethnicity
        name: EmploymentStatusEthnicity
      - value: employment_status,ethnicity,gender
        name: EmploymentStatusEthnicityGender
      - value: employment_status,ethnicity,gender,marital_status
        name: EmploymentStatusEthnicityGenderMaritalStatus
      - value: employment_status,ethnicity,marital_status
        name: EmploymentStatusEthnicityMaritalStatus
      - value: employment_status,gender
        name: EmploymentStatusGender
      - value: employment_status,gender,marital_status
        name: EmploymentStatusGenderMaritalStatus
      - value: employment_status,marital_status
        name: EmploymentStatusMaritalStatus
      - ethnicity
      - value: ethnicity,gender
        name: EthnicityGender
      - value: ethnicity,gender,marital_status
        name: EthnicityGenderMaritalStatus
      - value: ethnicity,marital_status
        name: EthnicityMaritalStatus
      - gender
      - value: gender,marital_status
        name: GenderMaritalStatus
      - marital_status
    source:
      openapi: ../openapi.yml
  EmployeesRetrieveRequestExpand:
    enum:
      - company
      - value: company,pay_group
        name: CompanyPayGroup
      - employments
      - value: employments,company
        name: EmploymentsCompany
      - value: employments,company,pay_group
        name: EmploymentsCompanyPayGroup
      - value: employments,groups
        name: EmploymentsGroups
      - value: employments,groups,company
        name: EmploymentsGroupsCompany
      - value: employments,groups,company,pay_group
        name: EmploymentsGroupsCompanyPayGroup
      - value: employments,groups,home_location
        name: EmploymentsGroupsHomeLocation
      - value: employments,groups,home_location,company
        name: EmploymentsGroupsHomeLocationCompany
      - value: employments,groups,home_location,company,pay_group
        name: EmploymentsGroupsHomeLocationCompanyPayGroup
      - value: employments,groups,home_location,manager
        name: EmploymentsGroupsHomeLocationManager
      - value: employments,groups,home_location,manager,company
        name: EmploymentsGroupsHomeLocationManagerCompany
      - value: employments,groups,home_location,manager,company,pay_group
        name: EmploymentsGroupsHomeLocationManagerCompanyPayGroup
      - value: employments,groups,home_location,manager,pay_group
        name: EmploymentsGroupsHomeLocationManagerPayGroup
      - value: employments,groups,home_location,manager,team
        name: EmploymentsGroupsHomeLocationManagerTeam
      - value: employments,groups,home_location,manager,team,company
        name: EmploymentsGroupsHomeLocationManagerTeamCompany
      - value: employments,groups,home_location,manager,team,company,pay_group
        name: EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup
      - value: employments,groups,home_location,manager,team,pay_group
        name: EmploymentsGroupsHomeLocationManagerTeamPayGroup
      - value: employments,groups,home_location,pay_group
        name: EmploymentsGroupsHomeLocationPayGroup
      - value: employments,groups,home_location,team
        name: EmploymentsGroupsHomeLocationTeam
      - value: employments,groups,home_location,team,company
        name: EmploymentsGroupsHomeLocationTeamCompany
      - value: employments,groups,home_location,team,company,pay_group
        name: EmploymentsGroupsHomeLocationTeamCompanyPayGroup
      - value: employments,groups,home_location,team,pay_group
        name: EmploymentsGroupsHomeLocationTeamPayGroup
      - value: employments,groups,home_location,work_location
        name: EmploymentsGroupsHomeLocationWorkLocation
      - value: employments,groups,home_location,work_location,company
        name: EmploymentsGroupsHomeLocationWorkLocationCompany
      - value: employments,groups,home_location,work_location,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup
      - value: employments,groups,home_location,work_location,manager
        name: EmploymentsGroupsHomeLocationWorkLocationManager
      - value: employments,groups,home_location,work_location,manager,company
        name: EmploymentsGroupsHomeLocationWorkLocationManagerCompany
      - value: >-
          employments,groups,home_location,work_location,manager,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup
      - value: employments,groups,home_location,work_location,manager,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup
      - value: employments,groups,home_location,work_location,manager,team
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeam
      - value: employments,groups,home_location,work_location,manager,team,company
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany
      - value: >-
          employments,groups,home_location,work_location,manager,team,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: employments,groups,home_location,work_location,manager,team,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup
      - value: employments,groups,home_location,work_location,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationPayGroup
      - value: employments,groups,home_location,work_location,team
        name: EmploymentsGroupsHomeLocationWorkLocationTeam
      - value: employments,groups,home_location,work_location,team,company
        name: EmploymentsGroupsHomeLocationWorkLocationTeamCompany
      - value: employments,groups,home_location,work_location,team,company,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup
      - value: employments,groups,home_location,work_location,team,pay_group
        name: EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup
      - value: employments,groups,manager
        name: EmploymentsGroupsManager
      - value: employments,groups,manager,company
        name: EmploymentsGroupsManagerCompany
      - value: employments,groups,manager,company,pay_group
        name: EmploymentsGroupsManagerCompanyPayGroup
      - value: employments,groups,manager,pay_group
        name: EmploymentsGroupsManagerPayGroup
      - value: employments,groups,manager,team
        name: EmploymentsGroupsManagerTeam
      - value: employments,groups,manager,team,company
        name: EmploymentsGroupsManagerTeamCompany
      - value: employments,groups,manager,team,company,pay_group
        name: EmploymentsGroupsManagerTeamCompanyPayGroup
      - value: employments,groups,manager,team,pay_group
        name: EmploymentsGroupsManagerTeamPayGroup
      - value: employments,groups,pay_group
        name: EmploymentsGroupsPayGroup
      - value: employments,groups,team
        name: EmploymentsGroupsTeam
      - value: employments,groups,team,company
        name: EmploymentsGroupsTeamCompany
      - value: employments,groups,team,company,pay_group
        name: EmploymentsGroupsTeamCompanyPayGroup
      - value: employments,groups,team,pay_group
        name: EmploymentsGroupsTeamPayGroup
      - value: employments,groups,work_location
        name: EmploymentsGroupsWorkLocation
      - value: employments,groups,work_location,company
        name: EmploymentsGroupsWorkLocationCompany
      - value: employments,groups,work_location,company,pay_group
        name: EmploymentsGroupsWorkLocationCompanyPayGroup
      - value: employments,groups,work_location,manager
        name: EmploymentsGroupsWorkLocationManager
      - value: employments,groups,work_location,manager,company
        name: EmploymentsGroupsWorkLocationManagerCompany
      - value: employments,groups,work_location,manager,company,pay_group
        name: EmploymentsGroupsWorkLocationManagerCompanyPayGroup
      - value: employments,groups,work_location,manager,pay_group
        name: EmploymentsGroupsWorkLocationManagerPayGroup
      - value: employments,groups,work_location,manager,team
        name: EmploymentsGroupsWorkLocationManagerTeam
      - value: employments,groups,work_location,manager,team,company
        name: EmploymentsGroupsWorkLocationManagerTeamCompany
      - value: employments,groups,work_location,manager,team,company,pay_group
        name: EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup
      - value: employments,groups,work_location,manager,team,pay_group
        name: EmploymentsGroupsWorkLocationManagerTeamPayGroup
      - value: employments,groups,work_location,pay_group
        name: EmploymentsGroupsWorkLocationPayGroup
      - value: employments,groups,work_location,team
        name: EmploymentsGroupsWorkLocationTeam
      - value: employments,groups,work_location,team,company
        name: EmploymentsGroupsWorkLocationTeamCompany
      - value: employments,groups,work_location,team,company,pay_group
        name: EmploymentsGroupsWorkLocationTeamCompanyPayGroup
      - value: employments,groups,work_location,team,pay_group
        name: EmploymentsGroupsWorkLocationTeamPayGroup
      - value: employments,home_location
        name: EmploymentsHomeLocation
      - value: employments,home_location,company
        name: EmploymentsHomeLocationCompany
      - value: employments,home_location,company,pay_group
        name: EmploymentsHomeLocationCompanyPayGroup
      - value: employments,home_location,manager
        name: EmploymentsHomeLocationManager
      - value: employments,home_location,manager,company
        name: EmploymentsHomeLocationManagerCompany
      - value: employments,home_location,manager,company,pay_group
        name: EmploymentsHomeLocationManagerCompanyPayGroup
      - value: employments,home_location,manager,pay_group
        name: EmploymentsHomeLocationManagerPayGroup
      - value: employments,home_location,manager,team
        name: EmploymentsHomeLocationManagerTeam
      - value: employments,home_location,manager,team,company
        name: EmploymentsHomeLocationManagerTeamCompany
      - value: employments,home_location,manager,team,company,pay_group
        name: EmploymentsHomeLocationManagerTeamCompanyPayGroup
      - value: employments,home_location,manager,team,pay_group
        name: EmploymentsHomeLocationManagerTeamPayGroup
      - value: employments,home_location,pay_group
        name: EmploymentsHomeLocationPayGroup
      - value: employments,home_location,team
        name: EmploymentsHomeLocationTeam
      - value: employments,home_location,team,company
        name: EmploymentsHomeLocationTeamCompany
      - value: employments,home_location,team,company,pay_group
        name: EmploymentsHomeLocationTeamCompanyPayGroup
      - value: employments,home_location,team,pay_group
        name: EmploymentsHomeLocationTeamPayGroup
      - value: employments,home_location,work_location
        name: EmploymentsHomeLocationWorkLocation
      - value: employments,home_location,work_location,company
        name: EmploymentsHomeLocationWorkLocationCompany
      - value: employments,home_location,work_location,company,pay_group
        name: EmploymentsHomeLocationWorkLocationCompanyPayGroup
      - value: employments,home_location,work_location,manager
        name: EmploymentsHomeLocationWorkLocationManager
      - value: employments,home_location,work_location,manager,company
        name: EmploymentsHomeLocationWorkLocationManagerCompany
      - value: employments,home_location,work_location,manager,company,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup
      - value: employments,home_location,work_location,manager,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerPayGroup
      - value: employments,home_location,work_location,manager,team
        name: EmploymentsHomeLocationWorkLocationManagerTeam
      - value: employments,home_location,work_location,manager,team,company
        name: EmploymentsHomeLocationWorkLocationManagerTeamCompany
      - value: employments,home_location,work_location,manager,team,company,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: employments,home_location,work_location,manager,team,pay_group
        name: EmploymentsHomeLocationWorkLocationManagerTeamPayGroup
      - value: employments,home_location,work_location,pay_group
        name: EmploymentsHomeLocationWorkLocationPayGroup
      - value: employments,home_location,work_location,team
        name: EmploymentsHomeLocationWorkLocationTeam
      - value: employments,home_location,work_location,team,company
        name: EmploymentsHomeLocationWorkLocationTeamCompany
      - value: employments,home_location,work_location,team,company,pay_group
        name: EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup
      - value: employments,home_location,work_location,team,pay_group
        name: EmploymentsHomeLocationWorkLocationTeamPayGroup
      - value: employments,manager
        name: EmploymentsManager
      - value: employments,manager,company
        name: EmploymentsManagerCompany
      - value: employments,manager,company,pay_group
        name: EmploymentsManagerCompanyPayGroup
      - value: employments,manager,pay_group
        name: EmploymentsManagerPayGroup
      - value: employments,manager,team
        name: EmploymentsManagerTeam
      - value: employments,manager,team,company
        name: EmploymentsManagerTeamCompany
      - value: employments,manager,team,company,pay_group
        name: EmploymentsManagerTeamCompanyPayGroup
      - value: employments,manager,team,pay_group
        name: EmploymentsManagerTeamPayGroup
      - value: employments,pay_group
        name: EmploymentsPayGroup
      - value: employments,team
        name: EmploymentsTeam
      - value: employments,team,company
        name: EmploymentsTeamCompany
      - value: employments,team,company,pay_group
        name: EmploymentsTeamCompanyPayGroup
      - value: employments,team,pay_group
        name: EmploymentsTeamPayGroup
      - value: employments,work_location
        name: EmploymentsWorkLocation
      - value: employments,work_location,company
        name: EmploymentsWorkLocationCompany
      - value: employments,work_location,company,pay_group
        name: EmploymentsWorkLocationCompanyPayGroup
      - value: employments,work_location,manager
        name: EmploymentsWorkLocationManager
      - value: employments,work_location,manager,company
        name: EmploymentsWorkLocationManagerCompany
      - value: employments,work_location,manager,company,pay_group
        name: EmploymentsWorkLocationManagerCompanyPayGroup
      - value: employments,work_location,manager,pay_group
        name: EmploymentsWorkLocationManagerPayGroup
      - value: employments,work_location,manager,team
        name: EmploymentsWorkLocationManagerTeam
      - value: employments,work_location,manager,team,company
        name: EmploymentsWorkLocationManagerTeamCompany
      - value: employments,work_location,manager,team,company,pay_group
        name: EmploymentsWorkLocationManagerTeamCompanyPayGroup
      - value: employments,work_location,manager,team,pay_group
        name: EmploymentsWorkLocationManagerTeamPayGroup
      - value: employments,work_location,pay_group
        name: EmploymentsWorkLocationPayGroup
      - value: employments,work_location,team
        name: EmploymentsWorkLocationTeam
      - value: employments,work_location,team,company
        name: EmploymentsWorkLocationTeamCompany
      - value: employments,work_location,team,company,pay_group
        name: EmploymentsWorkLocationTeamCompanyPayGroup
      - value: employments,work_location,team,pay_group
        name: EmploymentsWorkLocationTeamPayGroup
      - groups
      - value: groups,company
        name: GroupsCompany
      - value: groups,company,pay_group
        name: GroupsCompanyPayGroup
      - value: groups,home_location
        name: GroupsHomeLocation
      - value: groups,home_location,company
        name: GroupsHomeLocationCompany
      - value: groups,home_location,company,pay_group
        name: GroupsHomeLocationCompanyPayGroup
      - value: groups,home_location,manager
        name: GroupsHomeLocationManager
      - value: groups,home_location,manager,company
        name: GroupsHomeLocationManagerCompany
      - value: groups,home_location,manager,company,pay_group
        name: GroupsHomeLocationManagerCompanyPayGroup
      - value: groups,home_location,manager,pay_group
        name: GroupsHomeLocationManagerPayGroup
      - value: groups,home_location,manager,team
        name: GroupsHomeLocationManagerTeam
      - value: groups,home_location,manager,team,company
        name: GroupsHomeLocationManagerTeamCompany
      - value: groups,home_location,manager,team,company,pay_group
        name: GroupsHomeLocationManagerTeamCompanyPayGroup
      - value: groups,home_location,manager,team,pay_group
        name: GroupsHomeLocationManagerTeamPayGroup
      - value: groups,home_location,pay_group
        name: GroupsHomeLocationPayGroup
      - value: groups,home_location,team
        name: GroupsHomeLocationTeam
      - value: groups,home_location,team,company
        name: GroupsHomeLocationTeamCompany
      - value: groups,home_location,team,company,pay_group
        name: GroupsHomeLocationTeamCompanyPayGroup
      - value: groups,home_location,team,pay_group
        name: GroupsHomeLocationTeamPayGroup
      - value: groups,home_location,work_location
        name: GroupsHomeLocationWorkLocation
      - value: groups,home_location,work_location,company
        name: GroupsHomeLocationWorkLocationCompany
      - value: groups,home_location,work_location,company,pay_group
        name: GroupsHomeLocationWorkLocationCompanyPayGroup
      - value: groups,home_location,work_location,manager
        name: GroupsHomeLocationWorkLocationManager
      - value: groups,home_location,work_location,manager,company
        name: GroupsHomeLocationWorkLocationManagerCompany
      - value: groups,home_location,work_location,manager,company,pay_group
        name: GroupsHomeLocationWorkLocationManagerCompanyPayGroup
      - value: groups,home_location,work_location,manager,pay_group
        name: GroupsHomeLocationWorkLocationManagerPayGroup
      - value: groups,home_location,work_location,manager,team
        name: GroupsHomeLocationWorkLocationManagerTeam
      - value: groups,home_location,work_location,manager,team,company
        name: GroupsHomeLocationWorkLocationManagerTeamCompany
      - value: groups,home_location,work_location,manager,team,company,pay_group
        name: GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: groups,home_location,work_location,manager,team,pay_group
        name: GroupsHomeLocationWorkLocationManagerTeamPayGroup
      - value: groups,home_location,work_location,pay_group
        name: GroupsHomeLocationWorkLocationPayGroup
      - value: groups,home_location,work_location,team
        name: GroupsHomeLocationWorkLocationTeam
      - value: groups,home_location,work_location,team,company
        name: GroupsHomeLocationWorkLocationTeamCompany
      - value: groups,home_location,work_location,team,company,pay_group
        name: GroupsHomeLocationWorkLocationTeamCompanyPayGroup
      - value: groups,home_location,work_location,team,pay_group
        name: GroupsHomeLocationWorkLocationTeamPayGroup
      - value: groups,manager
        name: GroupsManager
      - value: groups,manager,company
        name: GroupsManagerCompany
      - value: groups,manager,company,pay_group
        name: GroupsManagerCompanyPayGroup
      - value: groups,manager,pay_group
        name: GroupsManagerPayGroup
      - value: groups,manager,team
        name: GroupsManagerTeam
      - value: groups,manager,team,company
        name: GroupsManagerTeamCompany
      - value: groups,manager,team,company,pay_group
        name: GroupsManagerTeamCompanyPayGroup
      - value: groups,manager,team,pay_group
        name: GroupsManagerTeamPayGroup
      - value: groups,pay_group
        name: GroupsPayGroup
      - value: groups,team
        name: GroupsTeam
      - value: groups,team,company
        name: GroupsTeamCompany
      - value: groups,team,company,pay_group
        name: GroupsTeamCompanyPayGroup
      - value: groups,team,pay_group
        name: GroupsTeamPayGroup
      - value: groups,work_location
        name: GroupsWorkLocation
      - value: groups,work_location,company
        name: GroupsWorkLocationCompany
      - value: groups,work_location,company,pay_group
        name: GroupsWorkLocationCompanyPayGroup
      - value: groups,work_location,manager
        name: GroupsWorkLocationManager
      - value: groups,work_location,manager,company
        name: GroupsWorkLocationManagerCompany
      - value: groups,work_location,manager,company,pay_group
        name: GroupsWorkLocationManagerCompanyPayGroup
      - value: groups,work_location,manager,pay_group
        name: GroupsWorkLocationManagerPayGroup
      - value: groups,work_location,manager,team
        name: GroupsWorkLocationManagerTeam
      - value: groups,work_location,manager,team,company
        name: GroupsWorkLocationManagerTeamCompany
      - value: groups,work_location,manager,team,company,pay_group
        name: GroupsWorkLocationManagerTeamCompanyPayGroup
      - value: groups,work_location,manager,team,pay_group
        name: GroupsWorkLocationManagerTeamPayGroup
      - value: groups,work_location,pay_group
        name: GroupsWorkLocationPayGroup
      - value: groups,work_location,team
        name: GroupsWorkLocationTeam
      - value: groups,work_location,team,company
        name: GroupsWorkLocationTeamCompany
      - value: groups,work_location,team,company,pay_group
        name: GroupsWorkLocationTeamCompanyPayGroup
      - value: groups,work_location,team,pay_group
        name: GroupsWorkLocationTeamPayGroup
      - home_location
      - value: home_location,company
        name: HomeLocationCompany
      - value: home_location,company,pay_group
        name: HomeLocationCompanyPayGroup
      - value: home_location,manager
        name: HomeLocationManager
      - value: home_location,manager,company
        name: HomeLocationManagerCompany
      - value: home_location,manager,company,pay_group
        name: HomeLocationManagerCompanyPayGroup
      - value: home_location,manager,pay_group
        name: HomeLocationManagerPayGroup
      - value: home_location,manager,team
        name: HomeLocationManagerTeam
      - value: home_location,manager,team,company
        name: HomeLocationManagerTeamCompany
      - value: home_location,manager,team,company,pay_group
        name: HomeLocationManagerTeamCompanyPayGroup
      - value: home_location,manager,team,pay_group
        name: HomeLocationManagerTeamPayGroup
      - value: home_location,pay_group
        name: HomeLocationPayGroup
      - value: home_location,team
        name: HomeLocationTeam
      - value: home_location,team,company
        name: HomeLocationTeamCompany
      - value: home_location,team,company,pay_group
        name: HomeLocationTeamCompanyPayGroup
      - value: home_location,team,pay_group
        name: HomeLocationTeamPayGroup
      - value: home_location,work_location
        name: HomeLocationWorkLocation
      - value: home_location,work_location,company
        name: HomeLocationWorkLocationCompany
      - value: home_location,work_location,company,pay_group
        name: HomeLocationWorkLocationCompanyPayGroup
      - value: home_location,work_location,manager
        name: HomeLocationWorkLocationManager
      - value: home_location,work_location,manager,company
        name: HomeLocationWorkLocationManagerCompany
      - value: home_location,work_location,manager,company,pay_group
        name: HomeLocationWorkLocationManagerCompanyPayGroup
      - value: home_location,work_location,manager,pay_group
        name: HomeLocationWorkLocationManagerPayGroup
      - value: home_location,work_location,manager,team
        name: HomeLocationWorkLocationManagerTeam
      - value: home_location,work_location,manager,team,company
        name: HomeLocationWorkLocationManagerTeamCompany
      - value: home_location,work_location,manager,team,company,pay_group
        name: HomeLocationWorkLocationManagerTeamCompanyPayGroup
      - value: home_location,work_location,manager,team,pay_group
        name: HomeLocationWorkLocationManagerTeamPayGroup
      - value: home_location,work_location,pay_group
        name: HomeLocationWorkLocationPayGroup
      - value: home_location,work_location,team
        name: HomeLocationWorkLocationTeam
      - value: home_location,work_location,team,company
        name: HomeLocationWorkLocationTeamCompany
      - value: home_location,work_location,team,company,pay_group
        name: HomeLocationWorkLocationTeamCompanyPayGroup
      - value: home_location,work_location,team,pay_group
        name: HomeLocationWorkLocationTeamPayGroup
      - manager
      - value: manager,company
        name: ManagerCompany
      - value: manager,company,pay_group
        name: ManagerCompanyPayGroup
      - value: manager,pay_group
        name: ManagerPayGroup
      - value: manager,team
        name: ManagerTeam
      - value: manager,team,company
        name: ManagerTeamCompany
      - value: manager,team,company,pay_group
        name: ManagerTeamCompanyPayGroup
      - value: manager,team,pay_group
        name: ManagerTeamPayGroup
      - pay_group
      - team
      - value: team,company
        name: TeamCompany
      - value: team,company,pay_group
        name: TeamCompanyPayGroup
      - value: team,pay_group
        name: TeamPayGroup
      - work_location
      - value: work_location,company
        name: WorkLocationCompany
      - value: work_location,company,pay_group
        name: WorkLocationCompanyPayGroup
      - value: work_location,manager
        name: WorkLocationManager
      - value: work_location,manager,company
        name: WorkLocationManagerCompany
      - value: work_location,manager,company,pay_group
        name: WorkLocationManagerCompanyPayGroup
      - value: work_location,manager,pay_group
        name: WorkLocationManagerPayGroup
      - value: work_location,manager,team
        name: WorkLocationManagerTeam
      - value: work_location,manager,team,company
        name: WorkLocationManagerTeamCompany
      - value: work_location,manager,team,company,pay_group
        name: WorkLocationManagerTeamCompanyPayGroup
      - value: work_location,manager,team,pay_group
        name: WorkLocationManagerTeamPayGroup
      - value: work_location,pay_group
        name: WorkLocationPayGroup
      - value: work_location,team
        name: WorkLocationTeam
      - value: work_location,team,company
        name: WorkLocationTeamCompany
      - value: work_location,team,company,pay_group
        name: WorkLocationTeamCompanyPayGroup
      - value: work_location,team,pay_group
        name: WorkLocationTeamPayGroup
    source:
      openapi: ../openapi.yml
  EmployeesRetrieveRequestRemoteFields:
    enum:
      - employment_status
      - value: employment_status,ethnicity
        name: EmploymentStatusEthnicity
      - value: employment_status,ethnicity,gender
        name: EmploymentStatusEthnicityGender
      - value: employment_status,ethnicity,gender,marital_status
        name: EmploymentStatusEthnicityGenderMaritalStatus
      - value: employment_status,ethnicity,marital_status
        name: EmploymentStatusEthnicityMaritalStatus
      - value: employment_status,gender
        name: EmploymentStatusGender
      - value: employment_status,gender,marital_status
        name: EmploymentStatusGenderMaritalStatus
      - value: employment_status,marital_status
        name: EmploymentStatusMaritalStatus
      - ethnicity
      - value: ethnicity,gender
        name: EthnicityGender
      - value: ethnicity,gender,marital_status
        name: EthnicityGenderMaritalStatus
      - value: ethnicity,marital_status
        name: EthnicityMaritalStatus
      - gender
      - value: gender,marital_status
        name: GenderMaritalStatus
      - marital_status
    source:
      openapi: ../openapi.yml
  EmployeesRetrieveRequestShowEnumOrigins:
    enum:
      - employment_status
      - value: employment_status,ethnicity
        name: EmploymentStatusEthnicity
      - value: employment_status,ethnicity,gender
        name: EmploymentStatusEthnicityGender
      - value: employment_status,ethnicity,gender,marital_status
        name: EmploymentStatusEthnicityGenderMaritalStatus
      - value: employment_status,ethnicity,marital_status
        name: EmploymentStatusEthnicityMaritalStatus
      - value: employment_status,gender
        name: EmploymentStatusGender
      - value: employment_status,gender,marital_status
        name: EmploymentStatusGenderMaritalStatus
      - value: employment_status,marital_status
        name: EmploymentStatusMaritalStatus
      - ethnicity
      - value: ethnicity,gender
        name: EthnicityGender
      - value: ethnicity,gender,marital_status
        name: EthnicityGenderMaritalStatus
      - value: ethnicity,marital_status
        name: EthnicityMaritalStatus
      - gender
      - value: gender,marital_status
        name: GenderMaritalStatus
      - marital_status
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /employees
      method: GET
      auth: true
      docs: Returns a list of `Employee` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: EmployeesListRequest
        query-parameters:
          company_id:
            type: optional<string>
            docs: If provided, will only return employees for this company.
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          display_full_name:
            type: optional<string>
            docs: If provided, will only return employees with this display name.
          employment_status:
            type: optional<EmployeesListRequestEmploymentStatus>
            docs: >-
              If provided, will only return employees with this employment
              status.


              * `ACTIVE` - ACTIVE

              * `PENDING` - PENDING

              * `INACTIVE` - INACTIVE
          expand:
            type: optional<EmployeesListRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          first_name:
            type: optional<string>
            docs: If provided, will only return employees with this first name.
          groups:
            type: optional<string>
            docs: >-
              If provided, will only return employees matching the group ids;
              multiple groups can be separated by commas.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          include_sensitive_fields:
            type: optional<boolean>
            docs: >-
              Whether to include sensitive fields (such as social security
              numbers) in the response.
          last_name:
            type: optional<string>
            docs: If provided, will only return employees with this last name.
          manager_id:
            type: optional<string>
            docs: If provided, will only return employees for this manager.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          pay_group_id:
            type: optional<string>
            docs: If provided, will only return employees for this pay group
          personal_email:
            type: optional<string>
            docs: If provided, will only return Employees with this personal email
            validation:
              format: email
          remote_fields:
            type: optional<EmployeesListRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          show_enum_origins:
            type: optional<EmployeesListRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
          started_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return employees that started after this
              datetime.
          started_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return employees that started before this
              datetime.
          team_id:
            type: optional<string>
            docs: If provided, will only return employees for this team.
          terminated_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return employees that were terminated after
              this datetime.
          terminated_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return employees that were terminated
              before this datetime.
          work_email:
            type: optional<string>
            docs: If provided, will only return Employees with this work email
            validation:
              format: email
          work_location_id:
            type: optional<string>
            docs: If provided, will only return employees for this location.
      response:
        docs: ''
        type: root.PaginatedEmployeeList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 0958cbc6-6040-430a-848e-aafacbadf4ae
                  remote_id: '19202938'
                  employee_number: '2'
                  company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
                  first_name: Greg
                  last_name: Hirsch
                  display_full_name: Cousin Greg Hirsch
                  username: cousingreg
                  groups:
                    - 21a54124-397f-494d-985e-3c5b330b8a68
                  work_email: greg@merge.dev
                  personal_email: greg@gmail.com
                  mobile_phone_number: '+1234567890'
                  employments:
                    - 17a54124-287f-494d-965e-3c5b330c9a68
                  home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
                  work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
                  manager: 0048ea5b-911e-4dff-9364-92070dea62ff
                  team: 249c9faa-3045-4a31-953b-8f22d3613301
                  pay_group: ad1264e2-39be-4787-b749-f1aade9e3405
                  ssn: '1234567890'
                  gender: MALE
                  ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
                  marital_status: SINGLE
                  date_of_birth: '1990-11-10T00:00:00Z'
                  hire_date: '2020-10-10T00:00:00Z'
                  start_date: '2020-10-11T00:00:00Z'
                  remote_created_at: '2020-10-11T00:00:00Z'
                  employment_status: ACTIVE
                  termination_date: '2021-10-12T00:00:00Z'
                  avatar: http://alturl.com/h2h8m
                  custom_fields:
                    key: value
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /people
                      data:
                        '0': Varies by platform
    create:
      path: /employees
      method: POST
      auth: true
      docs: Creates an `Employee` object with the given values.
      source:
        openapi: ../openapi.yml
      request:
        body: root.EmployeeEndpointRequest
        query-parameters:
          is_debug_mode:
            type: optional<boolean>
            docs: >-
              Whether to include debug fields (such as log file links) in the
              response.
          run_async:
            type: optional<boolean>
            docs: Whether or not third-party updates should be run asynchronously.
        name: EmployeesCreateRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.EmployeeResponse
      examples:
        - headers: {}
          request:
            model: {}
          response:
            body:
              model:
                id: 0958cbc6-6040-430a-848e-aafacbadf4ae
                remote_id: '19202938'
                employee_number: '2'
                company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
                first_name: Greg
                last_name: Hirsch
                display_full_name: Cousin Greg Hirsch
                username: cousingreg
                groups:
                  - 21a54124-397f-494d-985e-3c5b330b8a68
                work_email: greg@merge.dev
                personal_email: greg@gmail.com
                mobile_phone_number: '+1234567890'
                employments:
                  - 17a54124-287f-494d-965e-3c5b330c9a68
                home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
                work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
                manager: 0048ea5b-911e-4dff-9364-92070dea62ff
                team: 249c9faa-3045-4a31-953b-8f22d3613301
                pay_group: ad1264e2-39be-4787-b749-f1aade9e3405
                ssn: '1234567890'
                gender: MALE
                ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
                marital_status: SINGLE
                date_of_birth: '1990-11-10T00:00:00Z'
                hire_date: '2020-10-10T00:00:00Z'
                start_date: '2020-10-11T00:00:00Z'
                remote_created_at: '2020-10-11T00:00:00Z'
                employment_status: ACTIVE
                termination_date: '2021-10-12T00:00:00Z'
                avatar: http://alturl.com/h2h8m
                custom_fields:
                  key: value
                remote_was_deleted: true
                modified_at: '2021-10-16T00:00:00Z'
                field_mappings:
                  organization_defined_targets:
                    custom_key: custom_value
                  linked_account_defined_targets:
                    custom_key: custom_value
                remote_data:
                  - path: /people
                    data:
                      '0': Varies by platform
              warnings:
                - source:
                    pointer: pointer
                  title: Unrecognized Field
                  detail: An unrecognized field, age, was passed in with request data.
                  problem_type: UNRECOGNIZED_FIELD
              errors:
                - source:
                    pointer: pointer
                  title: Missing Required Field
                  detail: custom_fields is a required field on model.
                  problem_type: MISSING_REQUIRED_FIELD
              logs:
                - log_id: 99433219-8017-4acd-bb3c-ceb23d663832
                  dashboard_view: >-
                    https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832
                  log_summary:
                    url: https://harvest.greenhouse.io/v1/candidates/
                    method: POST
                    status_code: 200
    retrieve:
      path: /employees/{id}
      method: GET
      auth: true
      docs: Returns an `Employee` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: EmployeesRetrieveRequest
        query-parameters:
          expand:
            type: optional<EmployeesRetrieveRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          include_sensitive_fields:
            type: optional<boolean>
            docs: >-
              Whether to include sensitive fields (such as social security
              numbers) in the response.
          remote_fields:
            type: optional<EmployeesRetrieveRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<EmployeesRetrieveRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.Employee
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 0958cbc6-6040-430a-848e-aafacbadf4ae
              remote_id: '19202938'
              employee_number: '2'
              company: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
              first_name: Greg
              last_name: Hirsch
              display_full_name: Cousin Greg Hirsch
              username: cousingreg
              groups:
                - 21a54124-397f-494d-985e-3c5b330b8a68
              work_email: greg@merge.dev
              personal_email: greg@gmail.com
              mobile_phone_number: '+1234567890'
              employments:
                - 17a54124-287f-494d-965e-3c5b330c9a68
              home_location: d2f972d0-2526-434b-9409-4c3b468e08f0
              work_location: 9efbc633-3387-4306-aa55-e2c635e6bb4f
              manager: 0048ea5b-911e-4dff-9364-92070dea62ff
              team: 249c9faa-3045-4a31-953b-8f22d3613301
              pay_group: ad1264e2-39be-4787-b749-f1aade9e3405
              ssn: '1234567890'
              gender: MALE
              ethnicity: AMERICAN_INDIAN_OR_ALASKA_NATIVE
              marital_status: SINGLE
              date_of_birth: '1990-11-10T00:00:00Z'
              hire_date: '2020-10-10T00:00:00Z'
              start_date: '2020-10-11T00:00:00Z'
              remote_created_at: '2020-10-11T00:00:00Z'
              employment_status: ACTIVE
              termination_date: '2021-10-12T00:00:00Z'
              avatar: http://alturl.com/h2h8m
              custom_fields:
                key: value
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /people
                  data:
                    '0': Varies by platform
    ignoreCreate:
      path: /employees/ignore/{model_id}
      method: POST
      auth: true
      docs: >-
        Ignores a specific row based on the `model_id` in the url. These records
        will have their properties set to null, and will not be updated in
        future syncs. The "reason" and "message" fields in the request body will
        be stored for audit purposes.
      source:
        openapi: ../openapi.yml
      path-parameters:
        model_id: string
      request:
        body: root.IgnoreCommonModelRequest
        content-type: application/x-www-form-urlencoded
      examples:
        - path-parameters:
            model_id: model_id
          headers: {}
          request:
            reason: GENERAL_CUSTOMER_REQUEST
    metaPostRetrieve:
      path: /employees/meta/post
      method: GET
      auth: true
      docs: Returns metadata for `Employee` POSTs.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: root.MetaResponse
      examples:
        - headers: {}
          response:
            body:
              request_schema:
                key: value
              remote_field_classes:
                key: value
              status:
                linked_account_status: linked_account_status
                can_make_request: true
              has_conditional_params: true
              has_required_linked_account_params: true
  source:
    openapi: ../openapi.yml
",
    },
    "employments.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `Employment` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "effective_date": "2023-10-06T18:42:34Z",
                          "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "employment_type": "FULL_TIME",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "flsa_status": "EXEMPT",
                          "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                          "job_title": "Executive Assistant to Tom Wambsgans",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "pay_currency": "XUA",
                          "pay_frequency": "WEEKLY",
                          "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                          "pay_period": "HOUR",
                          "pay_rate": 1.1,
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/jobs",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employments",
              "request": {
                "name": "EmploymentsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "employee_id": {
                    "docs": "If provided, will only return employments for this employee.",
                    "type": "optional<string>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<EmploymentsListRequestExpand>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "order_by": {
                    "docs": "Overrides the default ordering for this endpoint.",
                    "type": "optional<EmploymentsListRequestOrderBy>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<EmploymentsListRequestRemoteFields>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<EmploymentsListRequestShowEnumOrigins>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedEmploymentList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns an `Employment` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "effective_date": "2023-10-06T18:42:34Z",
                      "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "employment_type": "FULL_TIME",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "flsa_status": "EXEMPT",
                      "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                      "job_title": "Executive Assistant to Tom Wambsgans",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "pay_currency": "XUA",
                      "pay_frequency": "WEEKLY",
                      "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                      "pay_period": "HOUR",
                      "pay_rate": 1.1,
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/jobs",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/employments/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "EmploymentsRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<EmploymentsRetrieveRequestExpand>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<EmploymentsRetrieveRequestRemoteFields>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<EmploymentsRetrieveRequestShowEnumOrigins>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Employment",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EmploymentsListRequestExpand": {
            "enum": [
              "employee",
              {
                "name": "EmployeePayGroup",
                "value": "employee,pay_group",
              },
              "pay_group",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentsListRequestOrderBy": {
            "enum": [
              {
                "name": "EffectiveDateDescending",
                "value": "-effective_date",
              },
              {
                "name": "EffectiveDateAscending",
                "value": "effective_date",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentsListRequestRemoteFields": {
            "enum": [
              "employment_type",
              {
                "name": "EmploymentTypeFlsaStatus",
                "value": "employment_type,flsa_status",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequency",
                "value": "employment_type,flsa_status,pay_frequency",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                "value": "employment_type,flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayPeriod",
                "value": "employment_type,flsa_status,pay_period",
              },
              {
                "name": "EmploymentTypePayFrequency",
                "value": "employment_type,pay_frequency",
              },
              {
                "name": "EmploymentTypePayFrequencyPayPeriod",
                "value": "employment_type,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypePayPeriod",
                "value": "employment_type,pay_period",
              },
              "flsa_status",
              {
                "name": "FlsaStatusPayFrequency",
                "value": "flsa_status,pay_frequency",
              },
              {
                "name": "FlsaStatusPayFrequencyPayPeriod",
                "value": "flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "FlsaStatusPayPeriod",
                "value": "flsa_status,pay_period",
              },
              "pay_frequency",
              {
                "name": "PayFrequencyPayPeriod",
                "value": "pay_frequency,pay_period",
              },
              "pay_period",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentsListRequestShowEnumOrigins": {
            "enum": [
              "employment_type",
              {
                "name": "EmploymentTypeFlsaStatus",
                "value": "employment_type,flsa_status",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequency",
                "value": "employment_type,flsa_status,pay_frequency",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                "value": "employment_type,flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayPeriod",
                "value": "employment_type,flsa_status,pay_period",
              },
              {
                "name": "EmploymentTypePayFrequency",
                "value": "employment_type,pay_frequency",
              },
              {
                "name": "EmploymentTypePayFrequencyPayPeriod",
                "value": "employment_type,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypePayPeriod",
                "value": "employment_type,pay_period",
              },
              "flsa_status",
              {
                "name": "FlsaStatusPayFrequency",
                "value": "flsa_status,pay_frequency",
              },
              {
                "name": "FlsaStatusPayFrequencyPayPeriod",
                "value": "flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "FlsaStatusPayPeriod",
                "value": "flsa_status,pay_period",
              },
              "pay_frequency",
              {
                "name": "PayFrequencyPayPeriod",
                "value": "pay_frequency,pay_period",
              },
              "pay_period",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentsRetrieveRequestExpand": {
            "enum": [
              "employee",
              {
                "name": "EmployeePayGroup",
                "value": "employee,pay_group",
              },
              "pay_group",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentsRetrieveRequestRemoteFields": {
            "enum": [
              "employment_type",
              {
                "name": "EmploymentTypeFlsaStatus",
                "value": "employment_type,flsa_status",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequency",
                "value": "employment_type,flsa_status,pay_frequency",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                "value": "employment_type,flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayPeriod",
                "value": "employment_type,flsa_status,pay_period",
              },
              {
                "name": "EmploymentTypePayFrequency",
                "value": "employment_type,pay_frequency",
              },
              {
                "name": "EmploymentTypePayFrequencyPayPeriod",
                "value": "employment_type,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypePayPeriod",
                "value": "employment_type,pay_period",
              },
              "flsa_status",
              {
                "name": "FlsaStatusPayFrequency",
                "value": "flsa_status,pay_frequency",
              },
              {
                "name": "FlsaStatusPayFrequencyPayPeriod",
                "value": "flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "FlsaStatusPayPeriod",
                "value": "flsa_status,pay_period",
              },
              "pay_frequency",
              {
                "name": "PayFrequencyPayPeriod",
                "value": "pay_frequency,pay_period",
              },
              "pay_period",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmploymentsRetrieveRequestShowEnumOrigins": {
            "enum": [
              "employment_type",
              {
                "name": "EmploymentTypeFlsaStatus",
                "value": "employment_type,flsa_status",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequency",
                "value": "employment_type,flsa_status,pay_frequency",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
                "value": "employment_type,flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypeFlsaStatusPayPeriod",
                "value": "employment_type,flsa_status,pay_period",
              },
              {
                "name": "EmploymentTypePayFrequency",
                "value": "employment_type,pay_frequency",
              },
              {
                "name": "EmploymentTypePayFrequencyPayPeriod",
                "value": "employment_type,pay_frequency,pay_period",
              },
              {
                "name": "EmploymentTypePayPeriod",
                "value": "employment_type,pay_period",
              },
              "flsa_status",
              {
                "name": "FlsaStatusPayFrequency",
                "value": "flsa_status,pay_frequency",
              },
              {
                "name": "FlsaStatusPayFrequencyPayPeriod",
                "value": "flsa_status,pay_frequency,pay_period",
              },
              {
                "name": "FlsaStatusPayPeriod",
                "value": "flsa_status,pay_period",
              },
              "pay_frequency",
              {
                "name": "PayFrequencyPayPeriod",
                "value": "pay_frequency,pay_period",
              },
              "pay_period",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  EmploymentsListRequestExpand:
    enum:
      - employee
      - value: employee,pay_group
        name: EmployeePayGroup
      - pay_group
    source:
      openapi: ../openapi.yml
  EmploymentsListRequestOrderBy:
    enum:
      - value: '-effective_date'
        name: EffectiveDateDescending
      - value: effective_date
        name: EffectiveDateAscending
    source:
      openapi: ../openapi.yml
  EmploymentsListRequestRemoteFields:
    enum:
      - employment_type
      - value: employment_type,flsa_status
        name: EmploymentTypeFlsaStatus
      - value: employment_type,flsa_status,pay_frequency
        name: EmploymentTypeFlsaStatusPayFrequency
      - value: employment_type,flsa_status,pay_frequency,pay_period
        name: EmploymentTypeFlsaStatusPayFrequencyPayPeriod
      - value: employment_type,flsa_status,pay_period
        name: EmploymentTypeFlsaStatusPayPeriod
      - value: employment_type,pay_frequency
        name: EmploymentTypePayFrequency
      - value: employment_type,pay_frequency,pay_period
        name: EmploymentTypePayFrequencyPayPeriod
      - value: employment_type,pay_period
        name: EmploymentTypePayPeriod
      - flsa_status
      - value: flsa_status,pay_frequency
        name: FlsaStatusPayFrequency
      - value: flsa_status,pay_frequency,pay_period
        name: FlsaStatusPayFrequencyPayPeriod
      - value: flsa_status,pay_period
        name: FlsaStatusPayPeriod
      - pay_frequency
      - value: pay_frequency,pay_period
        name: PayFrequencyPayPeriod
      - pay_period
    source:
      openapi: ../openapi.yml
  EmploymentsListRequestShowEnumOrigins:
    enum:
      - employment_type
      - value: employment_type,flsa_status
        name: EmploymentTypeFlsaStatus
      - value: employment_type,flsa_status,pay_frequency
        name: EmploymentTypeFlsaStatusPayFrequency
      - value: employment_type,flsa_status,pay_frequency,pay_period
        name: EmploymentTypeFlsaStatusPayFrequencyPayPeriod
      - value: employment_type,flsa_status,pay_period
        name: EmploymentTypeFlsaStatusPayPeriod
      - value: employment_type,pay_frequency
        name: EmploymentTypePayFrequency
      - value: employment_type,pay_frequency,pay_period
        name: EmploymentTypePayFrequencyPayPeriod
      - value: employment_type,pay_period
        name: EmploymentTypePayPeriod
      - flsa_status
      - value: flsa_status,pay_frequency
        name: FlsaStatusPayFrequency
      - value: flsa_status,pay_frequency,pay_period
        name: FlsaStatusPayFrequencyPayPeriod
      - value: flsa_status,pay_period
        name: FlsaStatusPayPeriod
      - pay_frequency
      - value: pay_frequency,pay_period
        name: PayFrequencyPayPeriod
      - pay_period
    source:
      openapi: ../openapi.yml
  EmploymentsRetrieveRequestExpand:
    enum:
      - employee
      - value: employee,pay_group
        name: EmployeePayGroup
      - pay_group
    source:
      openapi: ../openapi.yml
  EmploymentsRetrieveRequestRemoteFields:
    enum:
      - employment_type
      - value: employment_type,flsa_status
        name: EmploymentTypeFlsaStatus
      - value: employment_type,flsa_status,pay_frequency
        name: EmploymentTypeFlsaStatusPayFrequency
      - value: employment_type,flsa_status,pay_frequency,pay_period
        name: EmploymentTypeFlsaStatusPayFrequencyPayPeriod
      - value: employment_type,flsa_status,pay_period
        name: EmploymentTypeFlsaStatusPayPeriod
      - value: employment_type,pay_frequency
        name: EmploymentTypePayFrequency
      - value: employment_type,pay_frequency,pay_period
        name: EmploymentTypePayFrequencyPayPeriod
      - value: employment_type,pay_period
        name: EmploymentTypePayPeriod
      - flsa_status
      - value: flsa_status,pay_frequency
        name: FlsaStatusPayFrequency
      - value: flsa_status,pay_frequency,pay_period
        name: FlsaStatusPayFrequencyPayPeriod
      - value: flsa_status,pay_period
        name: FlsaStatusPayPeriod
      - pay_frequency
      - value: pay_frequency,pay_period
        name: PayFrequencyPayPeriod
      - pay_period
    source:
      openapi: ../openapi.yml
  EmploymentsRetrieveRequestShowEnumOrigins:
    enum:
      - employment_type
      - value: employment_type,flsa_status
        name: EmploymentTypeFlsaStatus
      - value: employment_type,flsa_status,pay_frequency
        name: EmploymentTypeFlsaStatusPayFrequency
      - value: employment_type,flsa_status,pay_frequency,pay_period
        name: EmploymentTypeFlsaStatusPayFrequencyPayPeriod
      - value: employment_type,flsa_status,pay_period
        name: EmploymentTypeFlsaStatusPayPeriod
      - value: employment_type,pay_frequency
        name: EmploymentTypePayFrequency
      - value: employment_type,pay_frequency,pay_period
        name: EmploymentTypePayFrequencyPayPeriod
      - value: employment_type,pay_period
        name: EmploymentTypePayPeriod
      - flsa_status
      - value: flsa_status,pay_frequency
        name: FlsaStatusPayFrequency
      - value: flsa_status,pay_frequency,pay_period
        name: FlsaStatusPayFrequencyPayPeriod
      - value: flsa_status,pay_period
        name: FlsaStatusPayPeriod
      - pay_frequency
      - value: pay_frequency,pay_period
        name: PayFrequencyPayPeriod
      - pay_period
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /employments
      method: GET
      auth: true
      docs: Returns a list of `Employment` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: EmploymentsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          employee_id:
            type: optional<string>
            docs: If provided, will only return employments for this employee.
          expand:
            type: optional<EmploymentsListRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          order_by:
            type: optional<EmploymentsListRequestOrderBy>
            docs: Overrides the default ordering for this endpoint.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_fields:
            type: optional<EmploymentsListRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          show_enum_origins:
            type: optional<EmploymentsListRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.PaginatedEmploymentList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
                  remote_id: '19202938'
                  employee: 0958cbc6-6040-430a-848e-aafacbadf4ae
                  job_title: Executive Assistant to Tom Wambsgans
                  pay_rate: 1.1
                  pay_period: HOUR
                  pay_frequency: WEEKLY
                  pay_currency: XUA
                  pay_group: d4e4837f-9900-484c-ac40-528365bb08ef
                  flsa_status: EXEMPT
                  effective_date: '2023-10-06T18:42:34Z'
                  employment_type: FULL_TIME
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /jobs
                      data:
                        '0': Varies by platform
    retrieve:
      path: /employments/{id}
      method: GET
      auth: true
      docs: Returns an `Employment` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: EmploymentsRetrieveRequest
        query-parameters:
          expand:
            type: optional<EmploymentsRetrieveRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<EmploymentsRetrieveRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<EmploymentsRetrieveRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.Employment
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
              remote_id: '19202938'
              employee: 0958cbc6-6040-430a-848e-aafacbadf4ae
              job_title: Executive Assistant to Tom Wambsgans
              pay_rate: 1.1
              pay_period: HOUR
              pay_frequency: WEEKLY
              pay_currency: XUA
              pay_group: d4e4837f-9900-484c-ac40-528365bb08ef
              flsa_status: EXEMPT
              effective_date: '2023-10-06T18:42:34Z'
              employment_type: FULL_TIME
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /jobs
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "forceResync.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "sync_status_resync_create": {
              "auth": true,
              "docs": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Core, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": [
                      {
                        "is_initial_sync": true,
                        "last_sync_start": "2021-03-30T19:44:18Z",
                        "model_id": "hris.Employee",
                        "model_name": "Employee",
                        "next_sync_start": "2021-03-30T20:44:18Z",
                        "selective_sync_configurations_usage": "IN_NEXT_SYNC",
                        "status": "SYNCING",
                      },
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sync-status/resync",
              "response": {
                "docs": "",
                "type": "list<root.SyncStatus>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    sync_status_resync_create:
      path: /sync-status/resync
      method: POST
      auth: true
      docs: >-
        Force re-sync of all models. This is available for all organizations via
        the dashboard. Force re-sync is also available programmatically via API
        for monthly, quarterly, and highest sync frequency customers on the
        Core, Professional, or Enterprise plans. Doing so will consume a sync
        credit for the relevant linked account.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: list<root.SyncStatus>
      examples:
        - headers: {}
          response:
            body:
              - model_name: Employee
                model_id: hris.Employee
                last_sync_start: '2021-03-30T19:44:18Z'
                next_sync_start: '2021-03-30T20:44:18Z'
                status: SYNCING
                is_initial_sync: true
                selective_sync_configurations_usage: IN_NEXT_SYNC
  source:
    openapi: ../openapi.yml
",
    },
    "generateKey.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Create a remote key.",
              "examples": [
                {
                  "request": {
                    "name": "Remote Deployment Key 1",
                  },
                  "response": {
                    "body": {
                      "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA",
                      "name": "Remote Deployment Key 1",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/generate-key",
              "request": {
                "body": "root.GenerateRemoteKeyRequest",
                "content-type": "application/x-www-form-urlencoded",
              },
              "response": {
                "docs": "",
                "type": "root.RemoteKey",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /generate-key
      method: POST
      auth: true
      docs: Create a remote key.
      source:
        openapi: ../openapi.yml
      request:
        body: root.GenerateRemoteKeyRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.RemoteKey
      examples:
        - request:
            name: Remote Deployment Key 1
          response:
            body:
              name: Remote Deployment Key 1
              key: hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA
  source:
    openapi: ../openapi.yml
",
    },
    "groups.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `Group` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "name": "COST_CENTER_US",
                          "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/group",
                            },
                          ],
                          "remote_id": "800293",
                          "remote_was_deleted": true,
                          "type": "TEAM",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/groups",
              "request": {
                "name": "GroupsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"type">>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"type">>",
                  },
                  "types": {
                    "docs": "If provided, will only return groups of these types. Multiple values can be separated by commas.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedGroupList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `Group` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "name": "COST_CENTER_US",
                      "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/group",
                        },
                      ],
                      "remote_id": "800293",
                      "remote_was_deleted": true,
                      "type": "TEAM",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/groups/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "GroupsRetrieveRequest",
                "query-parameters": {
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"type">>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Group",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /groups
      method: GET
      auth: true
      docs: Returns a list of `Group` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: GroupsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_fields:
            type: optional<literal<"type">>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          show_enum_origins:
            type: optional<literal<"type">>
            docs: Which fields should be returned in non-normalized form.
          types:
            type: optional<string>
            docs: >-
              If provided, will only return groups of these types. Multiple
              values can be separated by commas.
      response:
        docs: ''
        type: root.PaginatedGroupList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 134e0111-0f67-44f6-98f0-597000290bb3
                  remote_id: '800293'
                  parent_group: 2ef51b11-2c4e-4b02-8d1d-50592d9e96ef
                  name: COST_CENTER_US
                  type: TEAM
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /group
                      data:
                        '0': Varies by platform
    retrieve:
      path: /groups/{id}
      method: GET
      auth: true
      docs: Returns a `Group` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: GroupsRetrieveRequest
        query-parameters:
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<literal<"type">>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<literal<"type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.Group
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 134e0111-0f67-44f6-98f0-597000290bb3
              remote_id: '800293'
              parent_group: 2ef51b11-2c4e-4b02-8d1d-50592d9e96ef
              name: COST_CENTER_US
              type: TEAM
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /group
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "issues.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Gets issues.",
              "examples": [
                {
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "end_user": {
                            "key": "value",
                          },
                          "error_description": "string",
                          "error_details": [
                            "Missing employee permissions.",
                            "Missing time off permissions.",
                          ],
                          "first_incident_time": "2022-12-05T16:19:15Z",
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "is_muted": true,
                          "last_incident_time": "2022-12-05T16:19:15Z",
                          "status": "ONGOING",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issues",
              "request": {
                "name": "IssuesListRequest",
                "query-parameters": {
                  "account_token": "optional<string>",
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "end_date": {
                    "docs": "If included, will only include issues whose most recent action occurred before this time",
                    "type": "optional<string>",
                  },
                  "end_user_organization_name": "optional<string>",
                  "first_incident_time_after": {
                    "docs": "If provided, will only return issues whose first incident time was after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "first_incident_time_before": {
                    "docs": "If provided, will only return issues whose first incident time was before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "include_muted": {
                    "docs": "If True, will include muted issues",
                    "type": "optional<string>",
                  },
                  "integration_name": "optional<string>",
                  "last_incident_time_after": {
                    "docs": "If provided, will only return issues whose last incident time was after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "last_incident_time_before": {
                    "docs": "If provided, will only return issues whose last incident time was before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "start_date": {
                    "docs": "If included, will only include issues whose most recent action occurred after this time",
                    "type": "optional<string>",
                  },
                  "status": {
                    "docs": "Status of the issue. Options: ('ONGOING', 'RESOLVED')

* `ONGOING` - ONGOING
* `RESOLVED` - RESOLVED",
                    "type": "optional<IssuesListRequestStatus>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedIssueList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Get a specific issue.",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "end_user": {
                        "key": "value",
                      },
                      "error_description": "string",
                      "error_details": [
                        "Missing employee permissions.",
                        "Missing time off permissions.",
                      ],
                      "first_incident_time": "2022-12-05T16:19:15Z",
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "is_muted": true,
                      "last_incident_time": "2022-12-05T16:19:15Z",
                      "status": "ONGOING",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/issues/{id}",
              "path-parameters": {
                "id": "string",
              },
              "response": {
                "docs": "",
                "type": "root.Issue",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "IssuesListRequestStatus": {
            "enum": [
              "ONGOING",
              "RESOLVED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  IssuesListRequestStatus:
    enum:
      - ONGOING
      - RESOLVED
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /issues
      method: GET
      auth: true
      docs: Gets issues.
      source:
        openapi: ../openapi.yml
      request:
        name: IssuesListRequest
        query-parameters:
          account_token: optional<string>
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          end_date:
            type: optional<string>
            docs: >-
              If included, will only include issues whose most recent action
              occurred before this time
          end_user_organization_name: optional<string>
          first_incident_time_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return issues whose first incident time was
              after this datetime.
          first_incident_time_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return issues whose first incident time was
              before this datetime.
          include_muted:
            type: optional<string>
            docs: If True, will include muted issues
          integration_name: optional<string>
          last_incident_time_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return issues whose last incident time was
              after this datetime.
          last_incident_time_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return issues whose last incident time was
              before this datetime.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          start_date:
            type: optional<string>
            docs: >-
              If included, will only include issues whose most recent action
              occurred after this time
          status:
            type: optional<IssuesListRequestStatus>
            docs: |-
              Status of the issue. Options: ('ONGOING', 'RESOLVED')

              * `ONGOING` - ONGOING
              * `RESOLVED` - RESOLVED
      response:
        docs: ''
        type: root.PaginatedIssueList
      examples:
        - response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  status: ONGOING
                  error_description: string
                  end_user:
                    key: value
                  first_incident_time: '2022-12-05T16:19:15Z'
                  last_incident_time: '2022-12-05T16:19:15Z'
                  is_muted: true
                  error_details:
                    - Missing employee permissions.
                    - Missing time off permissions.
    retrieve:
      path: /issues/{id}
      method: GET
      auth: true
      docs: Get a specific issue.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      response:
        docs: ''
        type: root.Issue
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              status: ONGOING
              error_description: string
              end_user:
                key: value
              first_incident_time: '2022-12-05T16:19:15Z'
              last_incident_time: '2022-12-05T16:19:15Z'
              is_muted: true
              error_details:
                - Missing employee permissions.
                - Missing time off permissions.
  source:
    openapi: ../openapi.yml
",
    },
    "linkToken.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Creates a link token to be used when linking a new end user.",
              "examples": [
                {
                  "request": {
                    "categories": [
                      "hris",
                    ],
                    "end_user_email_address": "end_user_email_address",
                    "end_user_organization_name": "end_user_organization_name",
                    "end_user_origin_id": "end_user_origin_id",
                  },
                  "response": {
                    "body": {
                      "integration_name": "Lever",
                      "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                      "magic_link_url": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/link-token",
              "request": {
                "body": "root.EndUserDetailsRequest",
                "content-type": "application/x-www-form-urlencoded",
              },
              "response": {
                "docs": "",
                "type": "root.LinkToken",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /link-token
      method: POST
      auth: true
      docs: Creates a link token to be used when linking a new end user.
      source:
        openapi: ../openapi.yml
      request:
        body: root.EndUserDetailsRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.LinkToken
      examples:
        - request:
            end_user_email_address: end_user_email_address
            end_user_organization_name: end_user_organization_name
            end_user_origin_id: end_user_origin_id
            categories:
              - hris
          response:
            body:
              link_token: necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0
              integration_name: Lever
              magic_link_url: https://link.merge.dev/asdfjkl12345jsndfgi2i83n
  source:
    openapi: ../openapi.yml
",
    },
    "linkedAccounts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "List linked accounts for your organization.",
              "examples": [
                {
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "category": "hris",
                          "end_user_email_address": "hradmin@foobar.dev",
                          "end_user_organization_name": "Foo Bar, LLC",
                          "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                          "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                          "integration": {
                            "available_model_operations": [
                              {
                                "available_operations": [
                                  "FETCH",
                                  "CREATE",
                                ],
                                "model_name": "Candidate",
                                "required_post_parameters": [
                                  "remote_user_id",
                                ],
                                "supported_fields": [
                                  "first_name",
                                  "last_name",
                                  "company",
                                  "title",
                                ],
                              },
                            ],
                            "categories": [
                              "hris",
                            ],
                            "color": "color",
                            "name": "name",
                            "passthrough_available": true,
                            "slug": "slug",
                          },
                          "is_duplicate": true,
                          "status": "COMPLETE",
                          "status_detail": "status_detail",
                          "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/linked-accounts",
              "request": {
                "name": "LinkedAccountsListRequest",
                "query-parameters": {
                  "category": {
                    "docs": "Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg', 'filestorage')

* `hris` - hris
* `ats` - ats
* `accounting` - accounting
* `ticketing` - ticketing
* `crm` - crm
* `mktg` - mktg
* `filestorage` - filestorage",
                    "type": "optional<LinkedAccountsListRequestCategory>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "end_user_email_address": {
                    "docs": "If provided, will only return linked accounts associated with the given email address.",
                    "type": "optional<string>",
                  },
                  "end_user_organization_name": {
                    "docs": "If provided, will only return linked accounts associated with the given organization name.",
                    "type": "optional<string>",
                  },
                  "end_user_origin_id": {
                    "docs": "If provided, will only return linked accounts associated with the given origin ID.",
                    "type": "optional<string>",
                  },
                  "end_user_origin_ids": {
                    "docs": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once.",
                    "type": "optional<string>",
                  },
                  "id": "optional<string>",
                  "ids": {
                    "docs": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once.",
                    "type": "optional<string>",
                  },
                  "include_duplicates": {
                    "docs": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account.",
                    "type": "optional<boolean>",
                  },
                  "integration_name": {
                    "docs": "If provided, will only return linked accounts associated with the given integration name.",
                    "type": "optional<string>",
                  },
                  "is_test_account": {
                    "docs": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts.",
                    "type": "optional<string>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "status": {
                    "docs": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedAccountDetailsAndActionsList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "LinkedAccountsListRequestCategory": {
            "enum": [
              "accounting",
              "ats",
              "crm",
              "filestorage",
              "hris",
              "mktg",
              "ticketing",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  LinkedAccountsListRequestCategory:
    enum:
      - accounting
      - ats
      - crm
      - filestorage
      - hris
      - mktg
      - ticketing
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /linked-accounts
      method: GET
      auth: true
      docs: List linked accounts for your organization.
      source:
        openapi: ../openapi.yml
      request:
        name: LinkedAccountsListRequest
        query-parameters:
          category:
            type: optional<LinkedAccountsListRequestCategory>
            docs: >-
              Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg',
              'filestorage')


              * `hris` - hris

              * `ats` - ats

              * `accounting` - accounting

              * `ticketing` - ticketing

              * `crm` - crm

              * `mktg` - mktg

              * `filestorage` - filestorage
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          end_user_email_address:
            type: optional<string>
            docs: >-
              If provided, will only return linked accounts associated with the
              given email address.
          end_user_organization_name:
            type: optional<string>
            docs: >-
              If provided, will only return linked accounts associated with the
              given organization name.
          end_user_origin_id:
            type: optional<string>
            docs: >-
              If provided, will only return linked accounts associated with the
              given origin ID.
          end_user_origin_ids:
            type: optional<string>
            docs: >-
              Comma-separated list of EndUser origin IDs, making it possible to
              specify multiple EndUsers at once.
          id: optional<string>
          ids:
            type: optional<string>
            docs: >-
              Comma-separated list of LinkedAccount IDs, making it possible to
              specify multiple LinkedAccounts at once.
          include_duplicates:
            type: optional<boolean>
            docs: >-
              If `true`, will include complete production duplicates of the
              account specified by the `id` query parameter in the response.
              `id` must be for a complete production linked account.
          integration_name:
            type: optional<string>
            docs: >-
              If provided, will only return linked accounts associated with the
              given integration name.
          is_test_account:
            type: optional<string>
            docs: >-
              If included, will only include test linked accounts. If not
              included, will only include non-test linked accounts.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          status:
            type: optional<string>
            docs: >-
              Filter by status. Options: `COMPLETE`, `INCOMPLETE`,
              `RELINK_NEEDED`
      response:
        docs: ''
        type: root.PaginatedAccountDetailsAndActionsList
      examples:
        - response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: e59b1821-f85c-4e28-a6b3-1804156f3563
                  category: hris
                  status: COMPLETE
                  status_detail: status_detail
                  end_user_origin_id: 3ac95cde-6c7f-4eef-afec-be710b42308d
                  end_user_organization_name: Foo Bar, LLC
                  end_user_email_address: hradmin@foobar.dev
                  webhook_listener_url: >-
                    https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4
                  is_duplicate: true
                  integration:
                    name: name
                    categories:
                      - hris
                    color: color
                    slug: slug
                    passthrough_available: true
                    available_model_operations:
                      - model_name: Candidate
                        available_operations:
                          - FETCH
                          - CREATE
                        required_post_parameters:
                          - remote_user_id
                        supported_fields:
                          - first_name
                          - last_name
                          - company
                          - title
  source:
    openapi: ../openapi.yml
",
    },
    "locations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `Location` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "city": "New York ",
                          "country": "AF",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                          "location_type": "HOME",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "name": "NYC Office",
                          "phone_number": "+1111111111",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/locations",
                            },
                          ],
                          "remote_id": "93018402",
                          "remote_was_deleted": true,
                          "state": "NY",
                          "street_1": "2920 Broadway",
                          "street_2": "2nd Floor",
                          "zip_code": "10027",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/locations",
              "request": {
                "name": "LocationsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"location_type">>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"location_type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedLocationList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `Location` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "city": "New York ",
                      "country": "AF",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                      "location_type": "HOME",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "name": "NYC Office",
                      "phone_number": "+1111111111",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/locations",
                        },
                      ],
                      "remote_id": "93018402",
                      "remote_was_deleted": true,
                      "state": "NY",
                      "street_1": "2920 Broadway",
                      "street_2": "2nd Floor",
                      "zip_code": "10027",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/locations/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "LocationsRetrieveRequest",
                "query-parameters": {
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"location_type">>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"location_type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Location",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /locations
      method: GET
      auth: true
      docs: Returns a list of `Location` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: LocationsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_fields:
            type: optional<literal<"location_type">>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          show_enum_origins:
            type: optional<literal<"location_type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.PaginatedLocationList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: f5e6a151-f44e-449a-afb1-8fd781905958
                  remote_id: '93018402'
                  name: NYC Office
                  phone_number: '+1111111111'
                  street_1: 2920 Broadway
                  street_2: 2nd Floor
                  city: 'New York '
                  state: NY
                  zip_code: '10027'
                  country: AF
                  location_type: HOME
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /locations
                      data:
                        '0': Varies by platform
    retrieve:
      path: /locations/{id}
      method: GET
      auth: true
      docs: Returns a `Location` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: LocationsRetrieveRequest
        query-parameters:
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<literal<"location_type">>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<literal<"location_type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.Location
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: f5e6a151-f44e-449a-afb1-8fd781905958
              remote_id: '93018402'
              name: NYC Office
              phone_number: '+1111111111'
              street_1: 2920 Broadway
              street_2: 2nd Floor
              city: 'New York '
              state: NY
              zip_code: '10027'
              country: AF
              location_type: HOME
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /locations
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "passthrough.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Pull data from an endpoint not currently supported by Merge.",
              "examples": [
                {
                  "headers": {},
                  "request": {
                    "method": "GET",
                    "path": "/scooters",
                  },
                  "response": {
                    "body": {
                      "headers": {
                        "Authorization": "<redacted>",
                        "EXTRA-HEADER": "value",
                      },
                      "method": "GET",
                      "path": "/scooters",
                      "response": {
                        "key": "value",
                      },
                      "response_headers": {
                        "X-Page-Token": "value",
                      },
                      "response_type": "JSON",
                      "status": 200,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/passthrough",
              "request": {
                "body": "root.DataPassthroughRequest",
                "content-type": "application/x-www-form-urlencoded",
              },
              "response": {
                "docs": "",
                "type": "root.RemoteResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /passthrough
      method: POST
      auth: true
      docs: Pull data from an endpoint not currently supported by Merge.
      source:
        openapi: ../openapi.yml
      request:
        body: root.DataPassthroughRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.RemoteResponse
      examples:
        - headers: {}
          request:
            method: GET
            path: /scooters
          response:
            body:
              method: GET
              path: /scooters
              status: 200
              response:
                key: value
              response_headers:
                X-Page-Token: value
              response_type: JSON
              headers:
                EXTRA-HEADER: value
                Authorization: <redacted>
  source:
    openapi: ../openapi.yml
",
    },
    "payGroups.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `PayGroup` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "pay_group_name": "contractor",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/pay-group",
                            },
                          ],
                          "remote_id": "800293",
                          "remote_was_deleted": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pay-groups",
              "request": {
                "name": "PayGroupsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedPayGroupList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `PayGroup` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "pay_group_name": "contractor",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/pay-group",
                        },
                      ],
                      "remote_id": "800293",
                      "remote_was_deleted": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pay-groups/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "PayGroupsRetrieveRequest",
                "query-parameters": {
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PayGroup",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /pay-groups
      method: GET
      auth: true
      docs: Returns a list of `PayGroup` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: PayGroupsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
      response:
        docs: ''
        type: root.PaginatedPayGroupList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: fd1e0fb5-8f92-4ec9-9f32-179cf732867d
                  remote_id: '800293'
                  pay_group_name: contractor
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /pay-group
                      data:
                        '0': Varies by platform
    retrieve:
      path: /pay-groups/{id}
      method: GET
      auth: true
      docs: Returns a `PayGroup` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: PayGroupsRetrieveRequest
        query-parameters:
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
      response:
        docs: ''
        type: root.PayGroup
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: fd1e0fb5-8f92-4ec9-9f32-179cf732867d
              remote_id: '800293'
              pay_group_name: contractor
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /pay-group
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "payrollRuns.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `PayrollRun` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "check_date": "2020-11-15T00:00:00Z",
                          "end_date": "2020-11-15T00:00:00Z",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/payroll",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                          "run_state": "PAID",
                          "run_type": "REGULAR",
                          "start_date": "2020-11-08T00:00:00Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/payroll-runs",
              "request": {
                "name": "PayrollRunsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "ended_after": {
                    "docs": "If provided, will only return payroll runs ended after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "ended_before": {
                    "docs": "If provided, will only return payroll runs ended before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<PayrollRunsListRequestRemoteFields>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "run_type": {
                    "docs": "If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')

* `REGULAR` - REGULAR
* `OFF_CYCLE` - OFF_CYCLE
* `CORRECTION` - CORRECTION
* `TERMINATION` - TERMINATION
* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
                    "type": "optional<PayrollRunsListRequestRunType>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<PayrollRunsListRequestShowEnumOrigins>",
                  },
                  "started_after": {
                    "docs": "If provided, will only return payroll runs started after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "started_before": {
                    "docs": "If provided, will only return payroll runs started before this datetime.",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedPayrollRunList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `PayrollRun` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "check_date": "2020-11-15T00:00:00Z",
                      "end_date": "2020-11-15T00:00:00Z",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/payroll",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                      "run_state": "PAID",
                      "run_type": "REGULAR",
                      "start_date": "2020-11-08T00:00:00Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/payroll-runs/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "PayrollRunsRetrieveRequest",
                "query-parameters": {
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<PayrollRunsRetrieveRequestRemoteFields>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<PayrollRunsRetrieveRequestShowEnumOrigins>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PayrollRun",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "PayrollRunsListRequestRemoteFields": {
            "enum": [
              "run_state",
              {
                "name": "RunStateRunType",
                "value": "run_state,run_type",
              },
              "run_type",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayrollRunsListRequestRunType": {
            "enum": [
              "CORRECTION",
              "OFF_CYCLE",
              "REGULAR",
              "SIGN_ON_BONUS",
              "TERMINATION",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayrollRunsListRequestShowEnumOrigins": {
            "enum": [
              "run_state",
              {
                "name": "RunStateRunType",
                "value": "run_state,run_type",
              },
              "run_type",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayrollRunsRetrieveRequestRemoteFields": {
            "enum": [
              "run_state",
              {
                "name": "RunStateRunType",
                "value": "run_state,run_type",
              },
              "run_type",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PayrollRunsRetrieveRequestShowEnumOrigins": {
            "enum": [
              "run_state",
              {
                "name": "RunStateRunType",
                "value": "run_state,run_type",
              },
              "run_type",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  PayrollRunsListRequestRemoteFields:
    enum:
      - run_state
      - value: run_state,run_type
        name: RunStateRunType
      - run_type
    source:
      openapi: ../openapi.yml
  PayrollRunsListRequestRunType:
    enum:
      - CORRECTION
      - OFF_CYCLE
      - REGULAR
      - SIGN_ON_BONUS
      - TERMINATION
    source:
      openapi: ../openapi.yml
  PayrollRunsListRequestShowEnumOrigins:
    enum:
      - run_state
      - value: run_state,run_type
        name: RunStateRunType
      - run_type
    source:
      openapi: ../openapi.yml
  PayrollRunsRetrieveRequestRemoteFields:
    enum:
      - run_state
      - value: run_state,run_type
        name: RunStateRunType
      - run_type
    source:
      openapi: ../openapi.yml
  PayrollRunsRetrieveRequestShowEnumOrigins:
    enum:
      - run_state
      - value: run_state,run_type
        name: RunStateRunType
      - run_type
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /payroll-runs
      method: GET
      auth: true
      docs: Returns a list of `PayrollRun` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: PayrollRunsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          ended_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return payroll runs ended after this
              datetime.
          ended_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return payroll runs ended before this
              datetime.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_fields:
            type: optional<PayrollRunsListRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          run_type:
            type: optional<PayrollRunsListRequestRunType>
            docs: >-
              If provided, will only return PayrollRun's with this status.
              Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION',
              'SIGN_ON_BONUS')


              * `REGULAR` - REGULAR

              * `OFF_CYCLE` - OFF_CYCLE

              * `CORRECTION` - CORRECTION

              * `TERMINATION` - TERMINATION

              * `SIGN_ON_BONUS` - SIGN_ON_BONUS
          show_enum_origins:
            type: optional<PayrollRunsListRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
          started_after:
            type: optional<datetime>
            docs: >-
              If provided, will only return payroll runs started after this
              datetime.
          started_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return payroll runs started before this
              datetime.
      response:
        docs: ''
        type: root.PaginatedPayrollRunList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 37336947-b3d4-4a4c-a310-ab6ab510e079
                  remote_id: '19202938'
                  run_state: PAID
                  run_type: REGULAR
                  start_date: '2020-11-08T00:00:00Z'
                  end_date: '2020-11-15T00:00:00Z'
                  check_date: '2020-11-15T00:00:00Z'
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /payroll
                      data:
                        '0': Varies by platform
    retrieve:
      path: /payroll-runs/{id}
      method: GET
      auth: true
      docs: Returns a `PayrollRun` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: PayrollRunsRetrieveRequest
        query-parameters:
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<PayrollRunsRetrieveRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<PayrollRunsRetrieveRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.PayrollRun
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 37336947-b3d4-4a4c-a310-ab6ab510e079
              remote_id: '19202938'
              run_state: PAID
              run_type: REGULAR
              start_date: '2020-11-08T00:00:00Z'
              end_date: '2020-11-15T00:00:00Z'
              check_date: '2020-11-15T00:00:00Z'
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /payroll
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "regenerateKey.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Exchange remote keys.",
              "examples": [
                {
                  "request": {
                    "name": "Remote Deployment Key 1",
                  },
                  "response": {
                    "body": {
                      "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA",
                      "name": "Remote Deployment Key 1",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/regenerate-key",
              "request": {
                "body": "root.RemoteKeyForRegenerationRequest",
                "content-type": "application/x-www-form-urlencoded",
              },
              "response": {
                "docs": "",
                "type": "root.RemoteKey",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /regenerate-key
      method: POST
      auth: true
      docs: Exchange remote keys.
      source:
        openapi: ../openapi.yml
      request:
        body: root.RemoteKeyForRegenerationRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.RemoteKey
      examples:
        - request:
            name: Remote Deployment Key 1
          response:
            body:
              name: Remote Deployment Key 1
              key: hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA
  source:
    openapi: ../openapi.yml
",
    },
    "selectiveSync.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "configurationsList": {
              "auth": true,
              "docs": "Get a linked account's selective syncs.",
              "examples": [
                {
                  "headers": {},
                  "name": "Employees that started on or after January 1st, 2022",
                  "response": {
                    "body": [
                      {
                        "linked_account_conditions": [
                          {
                            "common_model": "hris.Employee",
                            "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                            "field_name": "start_date",
                            "native_name": "Started At",
                            "operator": "GREATER_THAN_OR_EQUAL",
                            "value": "2022-01-01T00:00:00Z",
                          },
                        ],
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/selective-sync/configurations",
              "response": {
                "docs": "",
                "type": "list<root.LinkedAccountSelectiveSyncConfiguration>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "configurationsUpdate": {
              "auth": true,
              "docs": "Replace a linked account's selective syncs.",
              "examples": [
                {
                  "headers": {},
                  "name": "Employees that started on or after January 1st, 2022",
                  "request": {
                    "sync_configurations": [
                      {
                        "linked_account_conditions": [],
                      },
                    ],
                  },
                  "response": {
                    "body": [
                      {
                        "linked_account_conditions": [
                          {
                            "common_model": "hris.Employee",
                            "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                            "field_name": "start_date",
                            "native_name": "Started At",
                            "operator": "GREATER_THAN_OR_EQUAL",
                            "value": "2022-01-01T00:00:00Z",
                          },
                        ],
                      },
                    ],
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/selective-sync/configurations",
              "request": {
                "body": {
                  "properties": {
                    "sync_configurations": {
                      "docs": "The selective syncs associated with a linked account.",
                      "type": "list<root.LinkedAccountSelectiveSyncConfigurationRequest>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "LinkedAccountSelectiveSyncConfigurationListRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "list<root.LinkedAccountSelectiveSyncConfiguration>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "metaList": {
              "auth": true,
              "docs": "Get metadata for the conditions available to a linked account.",
              "examples": [
                {
                  "headers": {},
                  "name": "Employees that started on or after January 1st, 2022",
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "common_model": "hris.Employee",
                          "condition_type": "DATE_TIME",
                          "field_name": "start_date",
                          "id": "123e4567-e89b-12d3-a456-426655440000",
                          "is_unique": true,
                          "native_name": "Started At",
                          "operators": [
                            {
                              "is_unique": true,
                              "operator": "GREATER_THAN_OR_EQUAL",
                            },
                            {
                              "is_unique": true,
                              "operator": "LESS_THAN_OR_EQUAL",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/selective-sync/meta",
              "request": {
                "name": "SelectiveSyncMetaListRequest",
                "query-parameters": {
                  "common_model": "optional<string>",
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedConditionSchemaList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    configurationsList:
      path: /selective-sync/configurations
      method: GET
      auth: true
      docs: Get a linked account's selective syncs.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: list<root.LinkedAccountSelectiveSyncConfiguration>
      examples:
        - name: Employees that started on or after January 1st, 2022
          headers: {}
          response:
            body:
              - linked_account_conditions:
                  - condition_schema_id: 123e4567-e89b-12d3-a456-426655440000
                    common_model: hris.Employee
                    native_name: Started At
                    operator: GREATER_THAN_OR_EQUAL
                    value: '2022-01-01T00:00:00Z'
                    field_name: start_date
    configurationsUpdate:
      path: /selective-sync/configurations
      method: PUT
      auth: true
      docs: Replace a linked account's selective syncs.
      source:
        openapi: ../openapi.yml
      request:
        name: LinkedAccountSelectiveSyncConfigurationListRequest
        body:
          properties:
            sync_configurations:
              docs: The selective syncs associated with a linked account.
              type: list<root.LinkedAccountSelectiveSyncConfigurationRequest>
        content-type: application/json
      response:
        docs: ''
        type: list<root.LinkedAccountSelectiveSyncConfiguration>
      examples:
        - name: Employees that started on or after January 1st, 2022
          headers: {}
          request:
            sync_configurations:
              - linked_account_conditions: []
          response:
            body:
              - linked_account_conditions:
                  - condition_schema_id: 123e4567-e89b-12d3-a456-426655440000
                    common_model: hris.Employee
                    native_name: Started At
                    operator: GREATER_THAN_OR_EQUAL
                    value: '2022-01-01T00:00:00Z'
                    field_name: start_date
    metaList:
      path: /selective-sync/meta
      method: GET
      auth: true
      docs: Get metadata for the conditions available to a linked account.
      source:
        openapi: ../openapi.yml
      request:
        name: SelectiveSyncMetaListRequest
        query-parameters:
          common_model: optional<string>
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
      response:
        docs: ''
        type: root.PaginatedConditionSchemaList
      examples:
        - name: Employees that started on or after January 1st, 2022
          headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 123e4567-e89b-12d3-a456-426655440000
                  common_model: hris.Employee
                  native_name: Started At
                  field_name: start_date
                  is_unique: true
                  condition_type: DATE_TIME
                  operators:
                    - operator: GREATER_THAN_OR_EQUAL
                      is_unique: true
                    - operator: LESS_THAN_OR_EQUAL
                      is_unique: true
  source:
    openapi: ../openapi.yml
",
    },
    "syncStatus.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "is_initial_sync": true,
                          "last_sync_start": "2021-03-30T19:44:18Z",
                          "model_id": "hris.Employee",
                          "model_name": "Employee",
                          "next_sync_start": "2021-03-30T20:44:18Z",
                          "selective_sync_configurations_usage": "IN_NEXT_SYNC",
                          "status": "SYNCING",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sync-status",
              "request": {
                "name": "SyncStatusListRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedSyncStatusList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sync-status
      method: GET
      auth: true
      docs: >-
        Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`,
        `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`
      source:
        openapi: ../openapi.yml
      request:
        name: SyncStatusListRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
      response:
        docs: ''
        type: root.PaginatedSyncStatusList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - model_name: Employee
                  model_id: hris.Employee
                  last_sync_start: '2021-03-30T19:44:18Z'
                  next_sync_start: '2021-03-30T20:44:18Z'
                  status: SYNCING
                  is_initial_sync: true
                  selective_sync_configurations_usage: IN_NEXT_SYNC
  source:
    openapi: ../openapi.yml
",
    },
    "teams.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `Team` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "name": "Engineering",
                          "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/teams",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/teams",
              "request": {
                "name": "TeamsListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"parent_team">>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "parent_team_id": {
                    "docs": "If provided, will only return teams with this parent team.",
                    "type": "optional<string>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedTeamList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `Team` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "name": "Engineering",
                      "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/teams",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/teams/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "TeamsRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"parent_team">>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.Team",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /teams
      method: GET
      auth: true
      docs: Returns a list of `Team` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: TeamsListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          expand:
            type: optional<literal<"parent_team">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          parent_team_id:
            type: optional<string>
            docs: If provided, will only return teams with this parent team.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
      response:
        docs: ''
        type: root.PaginatedTeamList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 13a72919-9fae-4f54-81ca-ddfd8712a1ba
                  remote_id: '19202938'
                  name: Engineering
                  parent_team: 1b998423-db0a-4037-a4cf-f79c60cb67b3
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /teams
                      data:
                        '0': Varies by platform
    retrieve:
      path: /teams/{id}
      method: GET
      auth: true
      docs: Returns a `Team` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: TeamsRetrieveRequest
        query-parameters:
          expand:
            type: optional<literal<"parent_team">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
      response:
        docs: ''
        type: root.Team
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 13a72919-9fae-4f54-81ca-ddfd8712a1ba
              remote_id: '19202938'
              name: Engineering
              parent_team: 1b998423-db0a-4037-a4cf-f79c60cb67b3
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /teams
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "timeOff.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Creates a `TimeOff` object with the given values.",
              "examples": [
                {
                  "headers": {},
                  "request": {
                    "model": {},
                  },
                  "response": {
                    "body": {
                      "errors": [
                        {
                          "detail": "custom_fields is a required field on model.",
                          "problem_type": "MISSING_REQUIRED_FIELD",
                          "source": {
                            "pointer": "pointer",
                          },
                          "title": "Missing Required Field",
                        },
                      ],
                      "logs": [
                        {
                          "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_summary": {
                            "method": "POST",
                            "status_code": 200,
                            "url": "https://harvest.greenhouse.io/v1/candidates/",
                          },
                        },
                      ],
                      "model": {
                        "amount": 3,
                        "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                        "end_time": "2020-11-17T00:00:00Z",
                        "field_mappings": {
                          "linked_account_defined_targets": {
                            "custom_key": "custom_value",
                          },
                          "organization_defined_targets": {
                            "custom_key": "custom_value",
                          },
                        },
                        "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                        "modified_at": "2021-10-16T00:00:00Z",
                        "remote_data": [
                          {
                            "data": {
                              "0": "Varies by platform",
                            },
                            "path": "/leave",
                          },
                        ],
                        "remote_id": "19202938",
                        "remote_was_deleted": true,
                        "request_type": "VACATION",
                        "start_time": "2020-11-10T00:00:00Z",
                        "status": "REQUESTED",
                        "units": "HOURS",
                      },
                      "warnings": [
                        {
                          "detail": "An unrecognized field, age, was passed in with request data.",
                          "problem_type": "UNRECOGNIZED_FIELD",
                          "source": {
                            "pointer": "pointer",
                          },
                          "title": "Unrecognized Field",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/time-off",
              "request": {
                "body": "root.TimeOffEndpointRequest",
                "content-type": "application/x-www-form-urlencoded",
                "name": "TimeOffCreateRequest",
                "query-parameters": {
                  "is_debug_mode": {
                    "docs": "Whether to include debug fields (such as log file links) in the response.",
                    "type": "optional<boolean>",
                  },
                  "run_async": {
                    "docs": "Whether or not third-party updates should be run asynchronously.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.TimeOffResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "docs": "Returns a list of `TimeOff` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "amount": 3,
                          "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                          "end_time": "2020-11-17T00:00:00Z",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/leave",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                          "request_type": "VACATION",
                          "start_time": "2020-11-10T00:00:00Z",
                          "status": "REQUESTED",
                          "units": "HOURS",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/time-off",
              "request": {
                "name": "TimeOffListRequest",
                "query-parameters": {
                  "approver_id": {
                    "docs": "If provided, will only return time off for this approver.",
                    "type": "optional<string>",
                  },
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "employee_id": {
                    "docs": "If provided, will only return time off for this employee.",
                    "type": "optional<string>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<TimeOffListRequestExpand>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<TimeOffListRequestRemoteFields>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "request_type": {
                    "docs": "If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')

* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
                    "type": "optional<TimeOffListRequestRequestType>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<TimeOffListRequestShowEnumOrigins>",
                  },
                  "status": {
                    "docs": "If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')

* `REQUESTED` - REQUESTED
* `APPROVED` - APPROVED
* `DECLINED` - DECLINED
* `CANCELLED` - CANCELLED
* `DELETED` - DELETED",
                    "type": "optional<TimeOffListRequestStatus>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedTimeOffList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "metaPostRetrieve": {
              "auth": true,
              "docs": "Returns metadata for `TimeOff` POSTs.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "has_conditional_params": true,
                      "has_required_linked_account_params": true,
                      "remote_field_classes": {
                        "key": "value",
                      },
                      "request_schema": {
                        "key": "value",
                      },
                      "status": {
                        "can_make_request": true,
                        "linked_account_status": "linked_account_status",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/time-off/meta/post",
              "response": {
                "docs": "",
                "type": "root.MetaResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `TimeOff` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "amount": 3,
                      "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                      "end_time": "2020-11-17T00:00:00Z",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/leave",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                      "request_type": "VACATION",
                      "start_time": "2020-11-10T00:00:00Z",
                      "status": "REQUESTED",
                      "units": "HOURS",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/time-off/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "TimeOffRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<TimeOffRetrieveRequestExpand>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<TimeOffRetrieveRequestRemoteFields>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<TimeOffRetrieveRequestShowEnumOrigins>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.TimeOff",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "TimeOffListRequestExpand": {
            "enum": [
              "approver",
              "employee",
              {
                "name": "EmployeeApprover",
                "value": "employee,approver",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffListRequestRemoteFields": {
            "enum": [
              "request_type",
              {
                "name": "RequestTypeStatus",
                "value": "request_type,status",
              },
              {
                "name": "RequestTypeStatusUnits",
                "value": "request_type,status,units",
              },
              {
                "name": "RequestTypeUnits",
                "value": "request_type,units",
              },
              "status",
              {
                "name": "StatusUnits",
                "value": "status,units",
              },
              "units",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffListRequestRequestType": {
            "enum": [
              "BEREAVEMENT",
              "JURY_DUTY",
              "PERSONAL",
              "SICK",
              "VACATION",
              "VOLUNTEER",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffListRequestShowEnumOrigins": {
            "enum": [
              "request_type",
              {
                "name": "RequestTypeStatus",
                "value": "request_type,status",
              },
              {
                "name": "RequestTypeStatusUnits",
                "value": "request_type,status,units",
              },
              {
                "name": "RequestTypeUnits",
                "value": "request_type,units",
              },
              "status",
              {
                "name": "StatusUnits",
                "value": "status,units",
              },
              "units",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffListRequestStatus": {
            "enum": [
              "APPROVED",
              "CANCELLED",
              "DECLINED",
              "DELETED",
              "REQUESTED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffRetrieveRequestExpand": {
            "enum": [
              "approver",
              "employee",
              {
                "name": "EmployeeApprover",
                "value": "employee,approver",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffRetrieveRequestRemoteFields": {
            "enum": [
              "request_type",
              {
                "name": "RequestTypeStatus",
                "value": "request_type,status",
              },
              {
                "name": "RequestTypeStatusUnits",
                "value": "request_type,status,units",
              },
              {
                "name": "RequestTypeUnits",
                "value": "request_type,units",
              },
              "status",
              {
                "name": "StatusUnits",
                "value": "status,units",
              },
              "units",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TimeOffRetrieveRequestShowEnumOrigins": {
            "enum": [
              "request_type",
              {
                "name": "RequestTypeStatus",
                "value": "request_type,status",
              },
              {
                "name": "RequestTypeStatusUnits",
                "value": "request_type,status,units",
              },
              {
                "name": "RequestTypeUnits",
                "value": "request_type,units",
              },
              "status",
              {
                "name": "StatusUnits",
                "value": "status,units",
              },
              "units",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  TimeOffListRequestExpand:
    enum:
      - approver
      - employee
      - value: employee,approver
        name: EmployeeApprover
    source:
      openapi: ../openapi.yml
  TimeOffListRequestRemoteFields:
    enum:
      - request_type
      - value: request_type,status
        name: RequestTypeStatus
      - value: request_type,status,units
        name: RequestTypeStatusUnits
      - value: request_type,units
        name: RequestTypeUnits
      - status
      - value: status,units
        name: StatusUnits
      - units
    source:
      openapi: ../openapi.yml
  TimeOffListRequestRequestType:
    enum:
      - BEREAVEMENT
      - JURY_DUTY
      - PERSONAL
      - SICK
      - VACATION
      - VOLUNTEER
    source:
      openapi: ../openapi.yml
  TimeOffListRequestShowEnumOrigins:
    enum:
      - request_type
      - value: request_type,status
        name: RequestTypeStatus
      - value: request_type,status,units
        name: RequestTypeStatusUnits
      - value: request_type,units
        name: RequestTypeUnits
      - status
      - value: status,units
        name: StatusUnits
      - units
    source:
      openapi: ../openapi.yml
  TimeOffListRequestStatus:
    enum:
      - APPROVED
      - CANCELLED
      - DECLINED
      - DELETED
      - REQUESTED
    source:
      openapi: ../openapi.yml
  TimeOffRetrieveRequestExpand:
    enum:
      - approver
      - employee
      - value: employee,approver
        name: EmployeeApprover
    source:
      openapi: ../openapi.yml
  TimeOffRetrieveRequestRemoteFields:
    enum:
      - request_type
      - value: request_type,status
        name: RequestTypeStatus
      - value: request_type,status,units
        name: RequestTypeStatusUnits
      - value: request_type,units
        name: RequestTypeUnits
      - status
      - value: status,units
        name: StatusUnits
      - units
    source:
      openapi: ../openapi.yml
  TimeOffRetrieveRequestShowEnumOrigins:
    enum:
      - request_type
      - value: request_type,status
        name: RequestTypeStatus
      - value: request_type,status,units
        name: RequestTypeStatusUnits
      - value: request_type,units
        name: RequestTypeUnits
      - status
      - value: status,units
        name: StatusUnits
      - units
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /time-off
      method: GET
      auth: true
      docs: Returns a list of `TimeOff` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: TimeOffListRequest
        query-parameters:
          approver_id:
            type: optional<string>
            docs: If provided, will only return time off for this approver.
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          employee_id:
            type: optional<string>
            docs: If provided, will only return time off for this employee.
          expand:
            type: optional<TimeOffListRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          remote_fields:
            type: optional<TimeOffListRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          request_type:
            type: optional<TimeOffListRequestRequestType>
            docs: >-
              If provided, will only return TimeOff with this request type.
              Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY',
              'VOLUNTEER', 'BEREAVEMENT')


              * `VACATION` - VACATION

              * `SICK` - SICK

              * `PERSONAL` - PERSONAL

              * `JURY_DUTY` - JURY_DUTY

              * `VOLUNTEER` - VOLUNTEER

              * `BEREAVEMENT` - BEREAVEMENT
          show_enum_origins:
            type: optional<TimeOffListRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
          status:
            type: optional<TimeOffListRequestStatus>
            docs: >-
              If provided, will only return TimeOff with this status. Options:
              ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')


              * `REQUESTED` - REQUESTED

              * `APPROVED` - APPROVED

              * `DECLINED` - DECLINED

              * `CANCELLED` - CANCELLED

              * `DELETED` - DELETED
      response:
        docs: ''
        type: root.PaginatedTimeOffList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 91b2b905-e866-40c8-8be2-efe53827a0aa
                  remote_id: '19202938'
                  employee: d2f972d0-2526-434b-9409-4c3b468e08f0
                  approver: 9efbc633-3387-4306-aa55-e2c635e6bb4f
                  status: REQUESTED
                  employee_note: Moving into the new apartment Kendall Roy gave me!
                  units: HOURS
                  amount: 3
                  request_type: VACATION
                  start_time: '2020-11-10T00:00:00Z'
                  end_time: '2020-11-17T00:00:00Z'
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /leave
                      data:
                        '0': Varies by platform
    create:
      path: /time-off
      method: POST
      auth: true
      docs: Creates a `TimeOff` object with the given values.
      source:
        openapi: ../openapi.yml
      request:
        body: root.TimeOffEndpointRequest
        query-parameters:
          is_debug_mode:
            type: optional<boolean>
            docs: >-
              Whether to include debug fields (such as log file links) in the
              response.
          run_async:
            type: optional<boolean>
            docs: Whether or not third-party updates should be run asynchronously.
        name: TimeOffCreateRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.TimeOffResponse
      examples:
        - headers: {}
          request:
            model: {}
          response:
            body:
              model:
                id: 91b2b905-e866-40c8-8be2-efe53827a0aa
                remote_id: '19202938'
                employee: d2f972d0-2526-434b-9409-4c3b468e08f0
                approver: 9efbc633-3387-4306-aa55-e2c635e6bb4f
                status: REQUESTED
                employee_note: Moving into the new apartment Kendall Roy gave me!
                units: HOURS
                amount: 3
                request_type: VACATION
                start_time: '2020-11-10T00:00:00Z'
                end_time: '2020-11-17T00:00:00Z'
                remote_was_deleted: true
                modified_at: '2021-10-16T00:00:00Z'
                field_mappings:
                  organization_defined_targets:
                    custom_key: custom_value
                  linked_account_defined_targets:
                    custom_key: custom_value
                remote_data:
                  - path: /leave
                    data:
                      '0': Varies by platform
              warnings:
                - source:
                    pointer: pointer
                  title: Unrecognized Field
                  detail: An unrecognized field, age, was passed in with request data.
                  problem_type: UNRECOGNIZED_FIELD
              errors:
                - source:
                    pointer: pointer
                  title: Missing Required Field
                  detail: custom_fields is a required field on model.
                  problem_type: MISSING_REQUIRED_FIELD
              logs:
                - log_id: 99433219-8017-4acd-bb3c-ceb23d663832
                  dashboard_view: >-
                    https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832
                  log_summary:
                    url: https://harvest.greenhouse.io/v1/candidates/
                    method: POST
                    status_code: 200
    retrieve:
      path: /time-off/{id}
      method: GET
      auth: true
      docs: Returns a `TimeOff` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: TimeOffRetrieveRequest
        query-parameters:
          expand:
            type: optional<TimeOffRetrieveRequestExpand>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<TimeOffRetrieveRequestRemoteFields>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<TimeOffRetrieveRequestShowEnumOrigins>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.TimeOff
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 91b2b905-e866-40c8-8be2-efe53827a0aa
              remote_id: '19202938'
              employee: d2f972d0-2526-434b-9409-4c3b468e08f0
              approver: 9efbc633-3387-4306-aa55-e2c635e6bb4f
              status: REQUESTED
              employee_note: Moving into the new apartment Kendall Roy gave me!
              units: HOURS
              amount: 3
              request_type: VACATION
              start_time: '2020-11-10T00:00:00Z'
              end_time: '2020-11-17T00:00:00Z'
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /leave
                  data:
                    '0': Varies by platform
    metaPostRetrieve:
      path: /time-off/meta/post
      method: GET
      auth: true
      docs: Returns metadata for `TimeOff` POSTs.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: root.MetaResponse
      examples:
        - headers: {}
          response:
            body:
              request_schema:
                key: value
              remote_field_classes:
                key: value
              status:
                linked_account_status: linked_account_status
                can_make_request: true
              has_conditional_params: true
              has_required_linked_account_params: true
  source:
    openapi: ../openapi.yml
",
    },
    "timeOffBalances.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "Returns a list of `TimeOffBalance` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "balance": 1.1,
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "field_mappings": {
                            "linked_account_defined_targets": {
                              "custom_key": "custom_value",
                            },
                            "organization_defined_targets": {
                              "custom_key": "custom_value",
                            },
                          },
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "modified_at": "2021-10-16T00:00:00Z",
                          "policy_type": "VACATION",
                          "remote_data": [
                            {
                              "data": {
                                "0": "Varies by platform",
                              },
                              "path": "/leave",
                            },
                          ],
                          "remote_id": "19202938",
                          "remote_was_deleted": true,
                          "used": 1.1,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/time-off-balances",
              "request": {
                "name": "TimeOffBalancesListRequest",
                "query-parameters": {
                  "created_after": {
                    "docs": "If provided, will only return objects created after this datetime.",
                    "type": "optional<datetime>",
                  },
                  "created_before": {
                    "docs": "If provided, will only return objects created before this datetime.",
                    "type": "optional<datetime>",
                  },
                  "cursor": {
                    "docs": "The pagination cursor value.",
                    "type": "optional<string>",
                  },
                  "employee_id": {
                    "docs": "If provided, will only return time off balances for this employee.",
                    "type": "optional<string>",
                  },
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"employee">>",
                  },
                  "include_deleted_data": {
                    "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                    "type": "optional<boolean>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "modified_after": {
                    "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "modified_before": {
                    "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                    "type": "optional<datetime>",
                  },
                  "page_size": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "policy_type": {
                    "docs": "If provided, will only return TimeOffBalance with this policy type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')

* `VACATION` - VACATION
* `SICK` - SICK
* `PERSONAL` - PERSONAL
* `JURY_DUTY` - JURY_DUTY
* `VOLUNTEER` - VOLUNTEER
* `BEREAVEMENT` - BEREAVEMENT",
                    "type": "optional<TimeOffBalancesListRequestPolicyType>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"policy_type">>",
                  },
                  "remote_id": {
                    "docs": "The API provider's ID for the given object.",
                    "type": "optional<string>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"policy_type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedTimeOffBalanceList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieve": {
              "auth": true,
              "docs": "Returns a `TimeOffBalance` object with the given `id`.",
              "examples": [
                {
                  "headers": {},
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "balance": 1.1,
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "field_mappings": {
                        "linked_account_defined_targets": {
                          "custom_key": "custom_value",
                        },
                        "organization_defined_targets": {
                          "custom_key": "custom_value",
                        },
                      },
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "modified_at": "2021-10-16T00:00:00Z",
                      "policy_type": "VACATION",
                      "remote_data": [
                        {
                          "data": {
                            "0": "Varies by platform",
                          },
                          "path": "/leave",
                        },
                      ],
                      "remote_id": "19202938",
                      "remote_was_deleted": true,
                      "used": 1.1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/time-off-balances/{id}",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "name": "TimeOffBalancesRetrieveRequest",
                "query-parameters": {
                  "expand": {
                    "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                    "type": "optional<literal<"employee">>",
                  },
                  "include_remote_data": {
                    "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                    "type": "optional<boolean>",
                  },
                  "remote_fields": {
                    "docs": "Deprecated. Use show_enum_origins.",
                    "type": "optional<literal<"policy_type">>",
                  },
                  "show_enum_origins": {
                    "docs": "Which fields should be returned in non-normalized form.",
                    "type": "optional<literal<"policy_type">>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.TimeOffBalance",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "TimeOffBalancesListRequestPolicyType": {
            "enum": [
              "BEREAVEMENT",
              "JURY_DUTY",
              "PERSONAL",
              "SICK",
              "VACATION",
              "VOLUNTEER",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  TimeOffBalancesListRequestPolicyType:
    enum:
      - BEREAVEMENT
      - JURY_DUTY
      - PERSONAL
      - SICK
      - VACATION
      - VOLUNTEER
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /time-off-balances
      method: GET
      auth: true
      docs: Returns a list of `TimeOffBalance` objects.
      source:
        openapi: ../openapi.yml
      request:
        name: TimeOffBalancesListRequest
        query-parameters:
          created_after:
            type: optional<datetime>
            docs: If provided, will only return objects created after this datetime.
          created_before:
            type: optional<datetime>
            docs: >-
              If provided, will only return objects created before this
              datetime.
          cursor:
            type: optional<string>
            docs: The pagination cursor value.
          employee_id:
            type: optional<string>
            docs: If provided, will only return time off balances for this employee.
          expand:
            type: optional<literal<"employee">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_deleted_data:
            type: optional<boolean>
            docs: >-
              Whether to include data that was marked as deleted by third party
              webhooks.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          modified_after:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge after this date time
              will be returned.
          modified_before:
            type: optional<datetime>
            docs: >-
              If provided, only objects synced by Merge before this date time
              will be returned.
          page_size:
            type: optional<integer>
            docs: Number of results to return per page.
          policy_type:
            type: optional<TimeOffBalancesListRequestPolicyType>
            docs: >-
              If provided, will only return TimeOffBalance with this policy
              type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY',
              'VOLUNTEER', 'BEREAVEMENT')


              * `VACATION` - VACATION

              * `SICK` - SICK

              * `PERSONAL` - PERSONAL

              * `JURY_DUTY` - JURY_DUTY

              * `VOLUNTEER` - VOLUNTEER

              * `BEREAVEMENT` - BEREAVEMENT
          remote_fields:
            type: optional<literal<"policy_type">>
            docs: Deprecated. Use show_enum_origins.
          remote_id:
            type: optional<string>
            docs: The API provider's ID for the given object.
          show_enum_origins:
            type: optional<literal<"policy_type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.PaginatedTimeOffBalanceList
      examples:
        - headers: {}
          response:
            body:
              next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
              previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
              results:
                - id: 91b2b905-e866-40c8-8be2-efe53827a0aa
                  remote_id: '19202938'
                  employee: d2f972d0-2526-434b-9409-4c3b468e08f0
                  balance: 1.1
                  used: 1.1
                  policy_type: VACATION
                  remote_was_deleted: true
                  modified_at: '2021-10-16T00:00:00Z'
                  field_mappings:
                    organization_defined_targets:
                      custom_key: custom_value
                    linked_account_defined_targets:
                      custom_key: custom_value
                  remote_data:
                    - path: /leave
                      data:
                        '0': Varies by platform
    retrieve:
      path: /time-off-balances/{id}
      method: GET
      auth: true
      docs: Returns a `TimeOffBalance` object with the given `id`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      request:
        name: TimeOffBalancesRetrieveRequest
        query-parameters:
          expand:
            type: optional<literal<"employee">>
            docs: >-
              Which relations should be returned in expanded form. Multiple
              relation names should be comma separated without spaces.
          include_remote_data:
            type: optional<boolean>
            docs: >-
              Whether to include the original data Merge fetched from the
              third-party to produce these models.
          remote_fields:
            type: optional<literal<"policy_type">>
            docs: Deprecated. Use show_enum_origins.
          show_enum_origins:
            type: optional<literal<"policy_type">>
            docs: Which fields should be returned in non-normalized form.
      response:
        docs: ''
        type: root.TimeOffBalance
      examples:
        - path-parameters:
            id: id
          headers: {}
          response:
            body:
              id: 91b2b905-e866-40c8-8be2-efe53827a0aa
              remote_id: '19202938'
              employee: d2f972d0-2526-434b-9409-4c3b468e08f0
              balance: 1.1
              used: 1.1
              policy_type: VACATION
              remote_was_deleted: true
              modified_at: '2021-10-16T00:00:00Z'
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              remote_data:
                - path: /leave
                  data:
                    '0': Varies by platform
  source:
    openapi: ../openapi.yml
",
    },
    "webhookReceivers.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "Creates a `WebhookReceiver` object with the given values.",
              "examples": [
                {
                  "headers": {},
                  "request": {
                    "event": "event",
                    "is_active": true,
                  },
                  "response": {
                    "body": {
                      "event": "event",
                      "is_active": true,
                      "key": "key",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/webhook-receivers",
              "request": {
                "body": "root.WebhookReceiverRequest",
                "content-type": "application/x-www-form-urlencoded",
              },
              "response": {
                "docs": "",
                "type": "root.WebhookReceiver",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "docs": "Returns a list of `WebhookReceiver` objects.",
              "examples": [
                {
                  "headers": {},
                  "response": {
                    "body": [
                      {
                        "event": "event",
                        "is_active": true,
                        "key": "key",
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhook-receivers",
              "response": {
                "docs": "",
                "type": "list<root.WebhookReceiver>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /webhook-receivers
      method: GET
      auth: true
      docs: Returns a list of `WebhookReceiver` objects.
      source:
        openapi: ../openapi.yml
      response:
        docs: ''
        type: list<root.WebhookReceiver>
      examples:
        - headers: {}
          response:
            body:
              - event: event
                is_active: true
                key: key
    create:
      path: /webhook-receivers
      method: POST
      auth: true
      docs: Creates a `WebhookReceiver` object with the given values.
      source:
        openapi: ../openapi.yml
      request:
        body: root.WebhookReceiverRequest
        content-type: application/x-www-form-urlencoded
      response:
        docs: ''
        type: root.WebhookReceiver
      examples:
        - headers: {}
          request:
            event: event
            is_active: true
          response:
            body:
              event: event
              is_active: true
              key: key
  source:
    openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "tokenAuth",
      "auth-schemes": {
        "tokenAuth": {
          "header": "Authorization",
          "name": "apiKey",
          "type": "string",
        },
      },
      "default-environment": "Production",
      "display-name": "Merge HRIS API",
      "environments": {
        "Production": "https://api.merge.dev/api/hris/v1",
        "Sandbox": "https://api-sandbox.merge.dev/api/hris/v1",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "headers": {
        "X-Account-Token": {
          "docs": "Token identifying the end user.",
          "name": "accountToken",
          "type": "optional<string>",
        },
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Merge HRIS API
default-environment: Production
environments:
  Production: https://api.merge.dev/api/hris/v1
  Sandbox: https://api-sandbox.merge.dev/api/hris/v1
headers:
  X-Account-Token:
    type: optional<string>
    name: accountToken
    docs: Token identifying the end user.
auth-schemes:
  tokenAuth:
    header: Authorization
    name: apiKey
    type: string
auth: tokenAuth
",
  },
}