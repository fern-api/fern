{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "AuthRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "AuthRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "CancelAlgoOrderRequestNotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 404,
            "type": "ResponsesApiError",
          },
          "CreateAlgoOrderRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetAccountMarginRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetAccountMarginRequestNotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 404,
            "type": "ResponsesApiError",
          },
          "GetAccountProfileRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetAccountProfileRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetAccountRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetAccountRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetAlgoOrderByIdRequestNotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 404,
            "type": "ResponsesApiError",
          },
          "GetAlgoOrdersHistoryRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetBalanceRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetBalanceRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetBboRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetFillsRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetFillsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetFundingDataRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetFundingRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetFundingRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetLiquidationsRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetMarketsRequestNotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 404,
            "type": "ResponsesApiError",
          },
          "GetMarketsSummaryRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetOpenAlgoOrdersRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetOpenOrdersRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetOrderbookRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetOrdersRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetReferralConfigRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetReferralQrCodeRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetReferralQrCodeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetReferralsSummaryRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "GetReferralsSummaryRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "GetTransfersRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "MarketsKlinesRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OnboardingRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OnboardingRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "OrdersBatchRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OrdersCancelAllRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OrdersCancelByClientIdRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OrdersCancelRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OrdersGetByClientIdRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OrdersGetRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "OrdersNewRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "TradebustsRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "TradesRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "TransactionsRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "UpdateAccountMaxSlippageRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "UpdateAccountMaxSlippageRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "UpdateAccountProfileReferralCodeRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "UpdateAccountProfileReferralCodeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "UpdateAccountProfileUsernameRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "UpdateAccountProfileUsernameRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 401,
            "type": "ResponsesApiError",
          },
          "UpsertAccountMarginRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsCreateRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetAccountSummaryRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetBalanceRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetConfigRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetHistoricalDataRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetPositionsRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetSummaryRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
          "VaultsGetTransfersRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "User has never called /onboarding endpoint",
                },
              },
            ],
            "status-code": 400,
            "type": "ResponsesApiError",
          },
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "Trades": {
              "auth": false,
              "display-name": "Trade tape",
              "docs": "List trades that happened on a given market (trade tape).
",
              "errors": [
                "TradesRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "created_at": 1681497002041,
                          "id": "12345643",
                          "market": "BTC-USD-PERP",
                          "price": "30001.2",
                          "side": "BUY",
                          "size": "0.01",
                          "trade_type": "FILL",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/trades",
              "request": {
                "name": "TradesRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": {
                    "docs": "Market name",
                    "type": "string",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "ResponsesGetTradesResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "MessageAccountMarginConfig": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": "optional<string>",
              "leverage": "optional<integer>",
              "margin_type": "optional<MessageMarginType>",
              "market": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "MessageDiscordProfile": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "optional<string>",
              "image_url": "optional<string>",
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "MessageMarginType": "integer",
          "MessageOwnedNft": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "collection_address": "optional<string>",
              "collection_name": "optional<string>",
              "description": "optional<string>",
              "id": "optional<string>",
              "image_url": "optional<string>",
              "name": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "MessageTwitterProfile": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": "optional<string>",
              "image_url": "optional<string>",
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "RequestsOrderRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_id": {
                "docs": "Unique client assigned ID for the order",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 64,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "flags": {
                "docs": "Order flags, allow flag: REDUCE_ONLY",
                "type": "optional<list<ResponsesOrderFlag>>",
              },
              "instruction": {
                "docs": "Order Instruction, GTC, IOC or POST_ONLY if empty GTC",
                "type": "string",
              },
              "market": {
                "docs": "Market for which order is created",
                "type": "string",
              },
              "price": {
                "docs": "Order price",
                "type": "string",
              },
              "recv_window": {
                "docs": "Order will be created if it is received by API within RecvWindow milliseconds from signature timestamp, minimum is 10 milliseconds",
                "type": "optional<integer>",
              },
              "side": {
                "docs": "Order side",
                "type": "ResponsesOrderSide",
              },
              "signature": {
                "docs": "Order Payload signed with STARK Private Key",
                "type": "string",
              },
              "signature_timestamp": {
                "docs": "Timestamp of order creation, used for signature verification",
                "type": "integer",
              },
              "size": {
                "docs": "Size of the order",
                "type": "string",
              },
              "stp": {
                "docs": "Self Trade Prevention, EXPIRE_MAKER, EXPIRE_TAKER or EXPIRE_BOTH, if empty EXPIRE_TAKER",
                "type": "optional<string>",
              },
              "trigger_price": {
                "docs": "Trigger price for stop order",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Order type",
                "type": "ResponsesOrderType",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAccountInfoResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "Starknet address of the account",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Account creation time",
                "type": "optional<integer>",
              },
              "derivation_path": {
                "docs": "Account derivation path used to derive the account, if a sub-account",
                "type": "optional<string>",
              },
              "isolated_market": {
                "docs": "Isolated market for the account",
                "type": "optional<string>",
              },
              "kind": {
                "docs": "Account kind",
                "type": "optional<ResponsesAccountKind>",
              },
              "parent_account": {
                "docs": "Starknet address of the parent account",
                "type": "optional<string>",
              },
              "public_key": {
                "docs": "Starknet public key",
                "type": "optional<string>",
              },
              "username": {
                "docs": "Username of the account",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAccountKind": {
            "enum": [
              {
                "name": "Unspecified",
                "value": "",
              },
              {
                "name": "Main",
                "value": "main",
              },
              {
                "name": "Subaccount",
                "value": "subaccount",
              },
              {
                "name": "VaultOperator",
                "value": "vault_operator",
              },
              {
                "name": "VaultSubOperator",
                "value": "vault_sub_operator",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAccountProfileResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "discord": "optional<MessageDiscordProfile>",
              "is_username_private": "optional<boolean>",
              "max_slippage": "optional<string>",
              "nfts": "optional<list<MessageOwnedNft>>",
              "programs_eligibility": "optional<ResponsesProgramsEligibility>",
              "referral_code": "optional<string>",
              "referred_by": "optional<string>",
              "twitter": "optional<MessageTwitterProfile>",
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAccountSummaryResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "User's starknet account",
                "type": "optional<string>",
              },
              "account_value": {
                "docs": "Current account value [with unrealized P&Ls]",
                "type": "optional<string>",
              },
              "free_collateral": {
                "docs": "Free collateral available (Account value in excess of Initial Margin required)",
                "type": "optional<string>",
              },
              "initial_margin_requirement": {
                "docs": "Amount required to open trade for the existing positions",
                "type": "optional<string>",
              },
              "maintenance_margin_requirement": {
                "docs": "Amount required to maintain exisiting positions",
                "type": "optional<string>",
              },
              "margin_cushion": {
                "docs": "Acc value in excess of maintenance margin required",
                "type": "optional<string>",
              },
              "seq_no": {
                "docs": "Unique increasing number (non-sequential) that is assigned to this account update. Can be used to deduplicate multiple feeds",
                "type": "optional<integer>",
              },
              "settlement_asset": {
                "docs": "Settlement asset for the account",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Status of the acc - like ACTIVE, LIQUIDATION",
                "type": "optional<string>",
              },
              "total_collateral": {
                "docs": "User's total collateral",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Account last updated time",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAlgoOrderResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "Account identifier (user's account address)",
                "type": "optional<string>",
              },
              "algo_type": {
                "docs": "Algo type",
                "type": "optional<ResponsesAlgoType>",
              },
              "avg_fill_price": {
                "docs": "Average fill price of the order",
                "type": "optional<string>",
              },
              "cancel_reason": {
                "docs": "Reason for algo cancellation if it was closed by cancel",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Algo creation time",
                "type": "optional<integer>",
              },
              "end_at": {
                "docs": "Algo end time",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "Unique algo identifier",
                "type": "optional<string>",
              },
              "last_updated_at": {
                "docs": "Algo last update time.  No changes once status=CLOSED",
                "type": "optional<integer>",
              },
              "market": {
                "docs": "Market to which algo belongs",
                "type": "optional<string>",
              },
              "remaining_size": {
                "docs": "Remaining size of the algo",
                "type": "optional<string>",
              },
              "side": {
                "docs": "Algo side",
                "type": "optional<ResponsesOrderSide>",
              },
              "size": {
                "docs": "Algo size",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Algo status",
                "type": "optional<ResponsesOrderStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAlgoType": {
            "enum": [
              {
                "name": "Unspecified",
                "value": "",
              },
              "TWAP",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesApiError": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<unknown>",
              "error": {
                "docs": "unique immutable string identifier for specific error",
                "type": "optional<ResponsesErrorCode>",
              },
              "message": {
                "docs": "detailed description of error and how to address it",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAskBidArray": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "asks": {
                "docs": "List of Ask sizes and prices",
                "type": "optional<list<list<string>>>",
              },
              "bids": {
                "docs": "List of Bid sizes and prices",
                "type": "optional<list<list<string>>>",
              },
              "last_updated_at": {
                "docs": "Last update to the orderbook in milliseconds",
                "type": "optional<integer>",
              },
              "market": {
                "docs": "Market name",
                "type": "optional<string>",
              },
              "seq_no": {
                "docs": "Sequence number of the orderbook",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesAuthResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "jwt_token": {
                "docs": "Authentication token",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesBalanceResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "last_updated_at": {
                "docs": "Balance last updated time",
                "type": "optional<integer>",
              },
              "size": {
                "docs": "Balance amount of settlement token (includes deposits, withdrawals, realized PnL, realized funding, and fees)",
                "type": "optional<string>",
              },
              "token": {
                "docs": "Name of the token",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesBatchResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": "optional<list<ResponsesErrorResponse>>",
              "orders": "optional<list<ResponsesOrderResp>>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesBboResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ask": {
                "docs": "Best ask price",
                "type": "optional<string>",
              },
              "ask_size": {
                "docs": "Best ask size",
                "type": "optional<string>",
              },
              "bid": {
                "docs": "Best bid price",
                "type": "optional<string>",
              },
              "bid_size": {
                "docs": "Best bid size",
                "type": "optional<string>",
              },
              "last_updated_at": {
                "docs": "Last update to the orderbook in milliseconds",
                "type": "optional<integer>",
              },
              "market": {
                "docs": "Symbol of the market",
                "type": "optional<string>",
              },
              "seq_no": {
                "docs": "Sequence number of the orderbook",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesBridgedToken": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "decimals": "optional<integer>",
              "l1_bridge_address": "optional<string>",
              "l1_token_address": "optional<string>",
              "l2_bridge_address": "optional<string>",
              "l2_token_address": "optional<string>",
              "name": "optional<string>",
              "symbol": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesDelta1CrossMarginParams": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "imf_base": {
                "docs": "Initial Margin Base",
                "type": "optional<string>",
              },
              "imf_factor": {
                "docs": "Initial Margin Factor, always 0.",
                "type": "optional<string>",
              },
              "imf_shift": {
                "docs": "Initial Margin Shift, unused, always 0.",
                "type": "optional<string>",
              },
              "mmf_factor": {
                "docs": "Maintenance Margin Factor",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesErrorCode": {
            "enum": [
              "VALIDATION_ERROR",
              "BINDING_ERROR",
              "INTERNAL_ERROR",
              "NOT_FOUND",
              "SERVICE_UNAVAILABLE",
              {
                "name": "String_InvalidParameter",
                "value": "INVALID_REQUEST_PARAMETER",
              },
              {
                "name": "String_OrderIdNotFound",
                "value": "ORDER_ID_NOT_FOUND",
              },
              {
                "name": "String_OrderIsClosed",
                "value": "ORDER_IS_CLOSED",
              },
              {
                "name": "String_OrderIsNotOpen",
                "value": "ORDER_IS_NOT_OPEN",
              },
              {
                "name": "String_ClientOrderIdNotFound",
                "value": "CLIENT_ORDER_ID_NOT_FOUND",
              },
              {
                "name": "String_DuplicatedClientOrderId",
                "value": "DUPLICATED_CLIENT_ID",
              },
              {
                "name": "String_InvalidPricePrecision",
                "value": "INVALID_PRICE_PRECISION",
              },
              {
                "name": "String_InvalidSymbol",
                "value": "INVALID_SYMBOL",
              },
              {
                "name": "String_InvalidToken",
                "value": "INVALID_TOKEN",
              },
              {
                "name": "String_BadEthAddress",
                "value": "INVALID_ETHEREUM_ADDRESS",
              },
              {
                "name": "String_BadEthSignature",
                "value": "INVALID_ETHEREUM_SIGNATURE",
              },
              {
                "name": "String_BadStarkNetAddress",
                "value": "INVALID_STARKNET_ADDRESS",
              },
              {
                "name": "String_BadStarkNetSignature",
                "value": "INVALID_STARKNET_SIGNATURE",
              },
              {
                "name": "String_StarknetSigVerificationFailed",
                "value": "STARKNET_SIGNATURE_VERIFICATION_FAILED",
              },
              {
                "name": "String_BadFormatStarknetCall",
                "value": "BAD_STARKNET_REQUEST",
              },
              {
                "name": "String_SignerMismatch",
                "value": "ETHEREUM_SIGNER_MISMATCH",
              },
              {
                "name": "String_HashMismatch",
                "value": "ETHEREUM_HASH_MISMATCH",
              },
              {
                "name": "String_NotOnboarded",
                "value": "NOT_ONBOARDED",
              },
              {
                "name": "String_BadTimestamp",
                "value": "INVALID_TIMESTAMP",
              },
              {
                "name": "String_BadExpiration",
                "value": "INVALID_SIGNATURE_EXPIRATION",
              },
              {
                "name": "String_AccountIdNotFound",
                "value": "ACCOUNT_NOT_FOUND",
              },
              {
                "name": "String_InvalidOrderSignature",
                "value": "INVALID_ORDER_SIGNATURE",
              },
              {
                "name": "String_BadPublicKey",
                "value": "PUBLIC_KEY_INVALID",
              },
              {
                "name": "String_UnauthorizedEthAddress",
                "value": "UNAUTHORIZED_ETHEREUM_ADDRESS",
              },
              {
                "name": "String_EthAddressAlreadyOnboarded",
                "value": "ETHEREUM_ADDRESS_ALREADY_ONBOARDED",
              },
              {
                "name": "String_MarketNotFound",
                "value": "MARKET_NOT_FOUND",
              },
              {
                "name": "String_AllowlistNotFound",
                "value": "ALLOWLIST_ENTRY_NOT_FOUND",
              },
              {
                "name": "String_UsernameInUse",
                "value": "USERNAME_IN_USE",
              },
              {
                "name": "String_GeoIPBlock",
                "value": "GEO_IP_BLOCK",
              },
              {
                "name": "String_EthAddressBlocked",
                "value": "ETHEREUM_ADDRESS_BLOCKED",
              },
              {
                "name": "String_ProgramNotFound",
                "value": "PROGRAM_NOT_FOUND",
              },
              {
                "name": "String_ProgramNotSupported",
                "value": "PROGRAM_NOT_SUPPORTED",
              },
              {
                "name": "String_InvalidDashboard",
                "value": "INVALID_DASHBOARD",
              },
              {
                "name": "String_MarketNotOpen",
                "value": "MARKET_NOT_OPEN",
              },
              {
                "name": "String_InvalidReferralCode",
                "value": "INVALID_REFERRAL_CODE",
              },
              {
                "name": "String_RequestNotAllowed",
                "value": "REQUEST_NOT_ALLOWED",
              },
              {
                "name": "String_ParentAddressAlreadyOnboarded",
                "value": "PARENT_ADDRESS_ALREADY_ONBOARDED",
              },
              {
                "name": "String_InvalidParentAccount",
                "value": "INVALID_PARENT_ACCOUNT",
              },
              {
                "name": "String_InvalidVaultOperatorChain",
                "value": "INVALID_VAULT_OPERATOR_CHAIN",
              },
              {
                "name": "String_VaultOperatorAlreadyOnboarded",
                "value": "VAULT_OPERATOR_ALREADY_ONBOARDED",
              },
              {
                "name": "String_VaultNameInUse",
                "value": "VAULT_NAME_IN_USE",
              },
              {
                "name": "String_VaultNotFound",
                "value": "VAULT_NOT_FOUND",
              },
              {
                "name": "String_VaultStrategyNotFound",
                "value": "VAULT_STRATEGY_NOT_FOUND",
              },
              {
                "name": "String_VaultLimitReached",
                "value": "VAULT_LIMIT_REACHED",
              },
              {
                "name": "String_BatchSizeOutOfRange",
                "value": "BATCH_SIZE_OUT_OF_RANGE",
              },
              {
                "name": "String_IsolatedMarketAccountMismatch",
                "value": "ISOLATED_MARKET_ACCOUNT_MISMATCH",
              },
              {
                "name": "String_NoAccessToMarket",
                "value": "NO_ACCESS_TO_MARKET",
              },
              {
                "name": "String_PointsSummaryNotFound",
                "value": "POINTS_SUMMARY_NOT_FOUND",
              },
              {
                "name": "String_AlgoIdNotFound",
                "value": "ALGO_ID_NOT_FOUND",
              },
              {
                "name": "String_InvalidDerivationPath",
                "value": "INVALID_DERIVATION_PATH",
              },
              {
                "name": "String_ProfileStatsNotFound",
                "value": "PROFILE_STATS_NOT_FOUND",
              },
              {
                "name": "String_InvalidChain",
                "value": "INVALID_CHAIN",
              },
              {
                "name": "String_InvalidLayerswapSwap",
                "value": "INVALID_LAYERSWAP_SWAP",
              },
              {
                "name": "String_SocialUsernameInUse",
                "value": "SOCIAL_USERNAME_IN_USE",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesErrorResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "error": "optional<ResponsesErrorCode>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesFillResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "client_id": {
                "docs": "Unique client assigned ID for the order",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Fill time",
                "type": "optional<integer>",
              },
              "fee": {
                "docs": "Fee paid by the user",
                "type": "optional<string>",
              },
              "fee_currency": {
                "docs": "Asset that fee is charged in",
                "type": "optional<string>",
              },
              "fill_type": {
                "docs": "Fill type, can be FILL, LIQUIDATION or TRANSFER",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique string ID of fill per FillType",
                "type": "optional<string>",
              },
              "liquidity": {
                "docs": "Maker or Taker",
                "type": "optional<ResponsesTraderRole>",
              },
              "market": {
                "docs": "Market name",
                "type": "optional<string>",
              },
              "order_id": {
                "docs": "Order ID",
                "type": "optional<string>",
              },
              "price": {
                "docs": "Price at which order was filled",
                "type": "optional<string>",
              },
              "realized_funding": {
                "docs": "Realized funding of the fill",
                "type": "optional<string>",
              },
              "realized_pnl": {
                "docs": "Realized PnL of the fill",
                "type": "optional<string>",
              },
              "remaining_size": {
                "docs": "Remaining size of the order",
                "type": "optional<string>",
              },
              "side": {
                "docs": "Taker side",
                "type": "optional<ResponsesOrderSide>",
              },
              "size": {
                "docs": "Size of the fill",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesFundingDataResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "Funding Data Response data list",
                "type": "optional<list<ResponsesFundingDataResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesFundingDataResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": "optional<integer>",
              "funding_index": "optional<string>",
              "funding_premium": "optional<string>",
              "funding_rate": "optional<string>",
              "market": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesFundingHistoryResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "Funding Response data list",
                "type": "optional<list<ResponsesFundingResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesFundingResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Funding payments time",
                "type": "optional<integer>",
              },
              "fill_id": {
                "docs": "Unique string ID for the fill that triggered the payment (if any)",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique string ID to identify the payment",
                "type": "optional<string>",
              },
              "index": {
                "docs": "Value of the funding index at the time of payment",
                "type": "optional<string>",
              },
              "market": {
                "docs": "Perpetual market against which payment is made",
                "type": "optional<string>",
              },
              "payment": {
                "docs": "Payment amount in settlement asset",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetAccountsInfoResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": "optional<list<ResponsesAccountInfoResponse>>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetAlgoOrders": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "List of Algo orders responses",
                "type": "optional<list<ResponsesAlgoOrderResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetBalancesResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Array of token balances held",
                "type": "optional<list<ResponsesBalanceResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetFillsResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "Fill Results List",
                "type": "optional<list<ResponsesFillResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetLiquidations": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of liquidations",
                "type": "optional<list<ResponsesLiquidationResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetMarketSummary": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of market summaries",
                "type": "optional<list<ResponsesMarketSummaryResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetMarkets": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of available active markets",
                "type": "optional<list<ResponsesMarketResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetOpenAlgoOrders": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of Algo orders responses",
                "type": "optional<list<ResponsesAlgoOrderResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetOpenOrders": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "Orders list",
                "type": "optional<list<ResponsesOrderResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetOrders": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "List of Orders",
                "type": "optional<list<ResponsesOrderResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetPositionsHistoryResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": "optional<list<ResponsesPositionResp>>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetPositionsResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": "optional<list<ResponsesPositionResp>>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetReferralConfig": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of referral config",
                "type": "optional<list<ResponsesReferralConfigResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetReferrals": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of referral details",
                "type": "optional<list<ResponsesReferralsResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetSubAccountsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": "optional<list<ResponsesAccountInfoResponse>>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetTradebustsResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "List of tradebusts",
                "type": "optional<list<ResponsesTradebustResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetTradesResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "List of trade details",
                "type": "optional<list<ResponsesTradeResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetTransactionResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "List of transaction responses",
                "type": "optional<list<ResponsesTransactionResponse>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetTransfersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "The pointer to fetch next set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "prev": {
                "docs": "The pointer to fetch previous set of records (null if there are no records left)",
                "type": "optional<string>",
              },
              "results": {
                "docs": "List of transaction responses",
                "type": "optional<list<ResponsesTransferResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetVaultAccountSummariesResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of vaults account summaries",
                "type": "optional<list<ResponsesVaultAccountSummaryResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetVaultHistoricalDataResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of requested vault timeseries",
                "type": "optional<list<ResponsesVaultHistoricalDataResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetVaultSummariesResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of vaults summaries",
                "type": "optional<list<ResponsesVaultSummaryResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGetVaultsResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of vaults",
                "type": "optional<list<ResponsesVaultResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesGreeks": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": {
                "docs": "Market Delta",
                "type": "optional<string>",
              },
              "gamma": {
                "docs": "Market Gamma",
                "type": "optional<string>",
              },
              "vega": {
                "docs": "Market Vega",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesInsuranceAccountResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "Starknet address of the Insurance fund",
                "type": "optional<string>",
              },
              "account_value": {
                "docs": "Total account value of insurance fund",
                "type": "optional<string>",
              },
              "settlement_asset": {
                "docs": "Settlement Asset for the account",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Account last updated time",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesLiquidationResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Liquidation created at timestamp",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "Liquidation transaction hash",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesMarketChainDetails": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "collateral_address": {
                "docs": "Collateral address",
                "type": "optional<string>",
              },
              "contract_address": {
                "docs": "Contract address",
                "type": "optional<string>",
              },
              "fee_account_address": {
                "docs": "Fee account address",
                "type": "optional<string>",
              },
              "fee_maker": {
                "docs": "Maker fee",
                "type": "optional<string>",
              },
              "fee_taker": {
                "docs": "Taker fee",
                "type": "optional<string>",
              },
              "insurance_fund_address": {
                "docs": "Insurance fund address",
                "type": "optional<string>",
              },
              "liquidation_fee": {
                "docs": "Liquidation fee",
                "type": "optional<string>",
              },
              "oracle_address": {
                "docs": "Oracle address",
                "type": "optional<string>",
              },
              "symbol": {
                "docs": "Market symbol",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesMarketResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "asset_kind": {
                "docs": "Type of asset",
                "type": "optional<string>",
              },
              "base_currency": {
                "docs": "Base currency of the market pair",
                "type": "optional<string>",
              },
              "chain_details": {
                "docs": "Chain details",
                "type": "optional<ResponsesMarketChainDetails>",
              },
              "clamp_rate": {
                "docs": "Clamp rate",
                "type": "optional<string>",
              },
              "delta1_cross_margin_params": {
                "docs": "Delta1 Cross margin parameters",
                "type": "optional<ResponsesDelta1CrossMarginParams>",
              },
              "expiry_at": {
                "docs": "Market expiry time",
                "type": "optional<integer>",
              },
              "funding_period_hours": {
                "docs": "Funding period in hours",
                "type": "optional<double>",
              },
              "interest_rate": {
                "docs": "Interest rate",
                "type": "optional<string>",
              },
              "iv_bands_width": {
                "docs": "IV Bands Width",
                "type": "optional<string>",
              },
              "market_kind": {
                "docs": "Type of market - always 'cross'",
                "type": "optional<string>",
              },
              "max_funding_rate": {
                "docs": "Max funding rate",
                "type": "optional<string>",
              },
              "max_funding_rate_change": {
                "docs": "Max funding rate change",
                "type": "optional<string>",
              },
              "max_open_orders": {
                "docs": "Max open orders",
                "type": "optional<integer>",
              },
              "max_order_size": {
                "docs": "Maximum order size",
                "type": "optional<string>",
              },
              "max_tob_spread": {
                "docs": "The maximum TOB spread allowed to apply funding rate changes",
                "type": "optional<string>",
              },
              "min_notional": {
                "docs": "Minimum order size in USD",
                "type": "optional<string>",
              },
              "open_at": {
                "docs": "Market open time in milliseconds",
                "type": "optional<integer>",
              },
              "option_cross_margin_params": {
                "docs": "Option Cross margin parameters",
                "type": "optional<ResponsesPerpetualOptionCrossMarginParams>",
              },
              "option_type": {
                "docs": "Type of option (PUT or CALL)",
                "type": "optional<string>",
              },
              "oracle_ewma_factor": {
                "docs": "Oracle EWMA factor",
                "type": "optional<string>",
              },
              "order_size_increment": {
                "docs": "Minimum size increment for base currency",
                "type": "optional<string>",
              },
              "position_limit": {
                "docs": "Position limit",
                "type": "optional<string>",
              },
              "price_bands_width": {
                "docs": "Price Bands Width, 0.05 means 5% price deviation allowed from mark price",
                "type": "optional<string>",
              },
              "price_feed_id": {
                "docs": "Price feed id. Pyth price account used to price underlying asset",
                "type": "optional<string>",
              },
              "price_tick_size": {
                "docs": "Minimum price increment of the market in USD",
                "type": "optional<string>",
              },
              "quote_currency": {
                "docs": "Quote currency of the market pair",
                "type": "optional<string>",
              },
              "settlement_currency": {
                "docs": "Settlement currency of the market pair",
                "type": "optional<string>",
              },
              "strike_price": {
                "docs": "Strike price for option market",
                "type": "optional<string>",
              },
              "symbol": {
                "docs": "Market symbol",
                "type": "optional<string>",
              },
              "tags": {
                "docs": "Market tags",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesMarketSummaryResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "ask": {
                "docs": "Best ask price",
                "type": "optional<string>",
              },
              "ask_iv": {
                "docs": "Ask implied volatility, for options",
                "type": "optional<string>",
              },
              "bid": {
                "docs": "Best bid price",
                "type": "optional<string>",
              },
              "bid_iv": {
                "docs": "Bid implied volatility, for options",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Market summary creation time",
                "type": "optional<integer>",
              },
              "delta": {
                "docs": "Deprecated: Use greeks.delta instead",
                "type": "optional<string>",
              },
              "funding_rate": {
                "docs": "[8 hour funding rate](https://docs.paradex.trade/risk-system/funding-mechanism#funding-rate)",
                "type": "optional<string>",
              },
              "future_funding_rate": {
                "docs": "Future funding rate, for options",
                "type": "optional<string>",
              },
              "greeks": {
                "docs": "Greeks",
                "type": "optional<ResponsesGreeks>",
              },
              "last_iv": {
                "docs": "Last traded price implied volatility, for options",
                "type": "optional<string>",
              },
              "last_traded_price": {
                "docs": "Last traded price",
                "type": "optional<string>",
              },
              "mark_iv": {
                "docs": "Mark implied volatility, for options",
                "type": "optional<string>",
              },
              "mark_price": {
                "docs": "[Mark price](https://docs.paradex.trade/risk-system/mark-price-calculation)",
                "type": "optional<string>",
              },
              "open_interest": {
                "docs": "Open interest in base currency",
                "type": "optional<string>",
              },
              "price_change_rate_24h": {
                "docs": "Price change rate in the last 24 hours",
                "type": "optional<string>",
              },
              "symbol": {
                "docs": "Market symbol",
                "type": "optional<string>",
              },
              "total_volume": {
                "docs": "Lifetime total traded volume in USD",
                "type": "optional<string>",
              },
              "underlying_price": {
                "docs": "Underlying asset price (spot oracle price)",
                "type": "optional<string>",
              },
              "volume_24h": {
                "docs": "24 hour volume in USD",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesOrderFlag": {
            "enum": [
              {
                "name": "ReduceOnly",
                "value": "REDUCE_ONLY",
              },
              {
                "name": "StopConditionBelowTrigger",
                "value": "STOP_CONDITION_BELOW_TRIGGER",
              },
              {
                "name": "StopConditionAboveTrigger",
                "value": "STOP_CONDITION_ABOVE_TRIGGER",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesOrderInstruction": {
            "enum": [
              "GTC",
              {
                "name": "PostOnly",
                "value": "POST_ONLY",
              },
              "IOC",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesOrderResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "Account identifier (user's account address)",
                "type": "optional<string>",
              },
              "avg_fill_price": {
                "docs": "Average fill price of the order",
                "type": "optional<string>",
              },
              "cancel_reason": {
                "docs": "Reason for order cancellation if it was closed by cancel",
                "type": "optional<string>",
              },
              "client_id": {
                "docs": "Client id passed on order creation",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Order creation time",
                "type": "optional<integer>",
              },
              "flags": {
                "docs": "Order flags, allow flag: REDUCE_ONLY",
                "type": "optional<list<ResponsesOrderFlag>>",
              },
              "id": {
                "docs": "Unique order identifier",
                "type": "optional<string>",
              },
              "instruction": {
                "docs": "OrderInstruction (GTC, IOC, POST_ONLY)",
                "type": "optional<ResponsesOrderInstruction>",
              },
              "last_updated_at": {
                "docs": "Order last update time.  No changes once status=CLOSED",
                "type": "optional<integer>",
              },
              "market": {
                "docs": "Market to which order belongs",
                "type": "optional<string>",
              },
              "price": {
                "docs": "Order price. 0 for MARKET orders",
                "type": "optional<string>",
              },
              "published_at": {
                "docs": "Order published to the client time",
                "type": "optional<integer>",
              },
              "received_at": {
                "docs": "Order received from the client time",
                "type": "optional<integer>",
              },
              "remaining_size": {
                "docs": "Remaining size of the order",
                "type": "optional<string>",
              },
              "seq_no": {
                "docs": "Unique increasing number (non-sequential) that is assigned to this order update and changes on every order update. Can be used to deduplicate multiple feeds. WebSocket and REST responses use independently generated seq_no per event.",
                "type": "optional<integer>",
              },
              "side": {
                "docs": "Order side",
                "type": "optional<ResponsesOrderSide>",
              },
              "size": {
                "docs": "Order size",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Order status",
                "type": "optional<ResponsesOrderStatus>",
              },
              "stp": {
                "docs": "Self Trade Prevention mode (EXEPIRE_MAKER, EXPIRE_TAKER, EXPIRE_BOTH)",
                "type": "optional<ResponsesStpMode>",
              },
              "timestamp": {
                "docs": "Order signature timestamp",
                "type": "optional<integer>",
              },
              "trigger_price": {
                "docs": "Trigger price for stop order",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Order type",
                "type": "optional<ResponsesOrderType>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesOrderSide": {
            "enum": [
              {
                "name": "Buy",
                "value": "BUY",
              },
              {
                "name": "Sell",
                "value": "SELL",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesOrderStatus": {
            "enum": [
              {
                "name": "New",
                "value": "NEW",
              },
              {
                "name": "Untriggered",
                "value": "UNTRIGGERED",
              },
              {
                "name": "Open",
                "value": "OPEN",
              },
              {
                "name": "Closed",
                "value": "CLOSED",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesOrderType": {
            "enum": [
              {
                "name": "Market",
                "value": "MARKET",
              },
              {
                "name": "Limit",
                "value": "LIMIT",
              },
              {
                "name": "StopLimit",
                "value": "STOP_LIMIT",
              },
              {
                "name": "StopMarket",
                "value": "STOP_MARKET",
              },
              {
                "name": "TakeProfitLimit",
                "value": "TAKE_PROFIT_LIMIT",
              },
              {
                "name": "TakeProfitMarket",
                "value": "TAKE_PROFIT_MARKET",
              },
              {
                "name": "StopLossMarket",
                "value": "STOP_LOSS_MARKET",
              },
              {
                "name": "StopLossLimit",
                "value": "STOP_LOSS_LIMIT",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesPerpetualOptionCrossMarginParams": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "imf": "optional<ResponsesPerpetualOptionMarginParams>",
              "mmf": "optional<ResponsesPerpetualOptionMarginParams>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesPerpetualOptionMarginParams": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "long_itm": {
                "docs": "Margin fraction for long ITM options",
                "type": "optional<string>",
              },
              "premium_multiplier": {
                "docs": "Multiplier for margin fraction for premium",
                "type": "optional<string>",
              },
              "short_itm": {
                "docs": "Margin fraction for short ITM options",
                "type": "optional<string>",
              },
              "short_otm": {
                "docs": "Margin fraction for short OTM options",
                "type": "optional<string>",
              },
              "short_put_cap": {
                "docs": "Cap for margin fraction for short put options",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesPositionResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "average_entry_price": {
                "docs": "Average entry price",
                "type": "optional<string>",
              },
              "average_entry_price_usd": {
                "docs": "Average entry price in USD",
                "type": "optional<string>",
              },
              "average_exit_price": {
                "docs": "Average exit price",
                "type": "optional<string>",
              },
              "cached_funding_index": {
                "docs": "Position cached funding index",
                "type": "optional<string>",
              },
              "closed_at": {
                "docs": "Position closed time",
                "type": "optional<integer>",
              },
              "cost": {
                "docs": "Position cost",
                "type": "optional<string>",
              },
              "cost_usd": {
                "docs": "Position cost in USD",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Position creation time",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "Unique string ID for the position",
                "type": "optional<string>",
              },
              "last_fill_id": {
                "docs": "Last fill ID to which the position is referring",
                "type": "optional<string>",
              },
              "last_updated_at": {
                "docs": "Position last update time",
                "type": "optional<integer>",
              },
              "leverage": {
                "docs": "Leverage of the position",
                "type": "optional<string>",
              },
              "liquidation_price": {
                "docs": "Liquidation price of the position",
                "type": "optional<string>",
              },
              "market": {
                "docs": "Market for position",
                "type": "optional<string>",
              },
              "realized_positional_funding_pnl": {
                "docs": "Realized Funding PnL for the position. Reset to 0 when position is closed or flipped.",
                "type": "optional<string>",
              },
              "realized_positional_pnl": {
                "docs": "Realized PnL including both positional PnL and funding payments. Reset to 0 when position is closed or flipped.",
                "type": "optional<string>",
              },
              "seq_no": {
                "docs": "Unique increasing number (non-sequential) that is assigned to this position update. Can be used to deduplicate multiple feeds",
                "type": "optional<integer>",
              },
              "side": {
                "docs": "Position Side : Long or Short",
                "type": "optional<ResponsesPositionRespSide>",
              },
              "size": {
                "docs": "Size of the position with sign (positive if long or negative if short)",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Status of Position : Open or Closed",
                "type": "optional<ResponsesPositionRespStatus>",
              },
              "unrealized_funding_pnl": {
                "docs": "Unrealized running funding P&L for the position",
                "type": "optional<string>",
              },
              "unrealized_pnl": {
                "docs": "Unrealized P&L of the position in the quote asset",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesPositionRespSide": {
            "docs": "Position Side : Long or Short",
            "enum": [
              "SHORT",
              "LONG",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesPositionRespStatus": {
            "docs": "Status of Position : Open or Closed",
            "enum": [
              "OPEN",
              "CLOSED",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesProgramsEligibility": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "affiliate": "optional<string>",
              "fee": "optional<string>",
              "maker": "optional<string>",
              "referral": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesReferralConfigResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "commission_rate": {
                "docs": "Commission rate for the referer",
                "type": "optional<string>",
              },
              "commission_volume_cap": {
                "docs": "Volume cap for commission",
                "type": "optional<string>",
              },
              "discount_rate": {
                "docs": "Discount rate for the referee",
                "type": "optional<string>",
              },
              "discount_volume_cap": {
                "docs": "Volume cap for discount",
                "type": "optional<string>",
              },
              "minimum_volume": {
                "docs": "Minimum volume required to be eligible for Program",
                "type": "optional<string>",
              },
              "referral_type": {
                "docs": "Referral type",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesReferralsResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "docs": "referee address",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Joined at timestamp in milliseconds",
                "type": "optional<integer>",
              },
              "referral_code": {
                "docs": "Referral code used to onboard the referee",
                "type": "optional<string>",
              },
              "referral_rewards": {
                "docs": "Total referral commission earned from the fee of referee",
                "type": "optional<string>",
              },
              "volume_traded": {
                "docs": "Total volume traded by referee",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesStpMode": {
            "enum": [
              {
                "name": "Maker",
                "value": "EXPIRE_MAKER",
              },
              {
                "name": "Taker",
                "value": "EXPIRE_TAKER",
              },
              {
                "name": "Both",
                "value": "EXPIRE_BOTH",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesStrategy": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "docs": "Contract address of the sub-operator",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Strategy name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesSystemConfigResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "block_explorer_url": {
                "docs": "Block explorer URL for the current SN Instance",
                "type": "optional<string>",
              },
              "bridged_tokens": {
                "docs": "bridged tokens config
https://github.com/starknet-io/starknet-addresses/blob/master/bridged_tokens/goerli.json",
                "type": "optional<list<ResponsesBridgedToken>>",
              },
              "environment": {
                "docs": "Environment of the Paradex Instance",
                "type": "optional<string>",
              },
              "l1_chain_id": {
                "docs": "L1 chain ID value",
                "type": "optional<string>",
              },
              "l1_core_contract_address": {
                "docs": "Address of Starknet L1 core contract",
                "type": "optional<string>",
              },
              "l1_operator_address": {
                "docs": "Address of Starknet L1 operator",
                "type": "optional<string>",
              },
              "l1_withdraw_relayer_address": {
                "docs": "Address of L1 Withdraw Relayer",
                "type": "optional<string>",
              },
              "l2_withdraw_relayer_address": {
                "docs": "Address of L2 Withdraw Relayer",
                "type": "optional<string>",
              },
              "liquidation_fee": {
                "docs": "Liquidation fee",
                "type": "optional<string>",
              },
              "oracle_address": {
                "docs": "Oracle contract address",
                "type": "optional<string>",
              },
              "paraclear_account_hash": {
                "docs": "Class hash of the account contract",
                "type": "optional<string>",
              },
              "paraclear_account_proxy_hash": {
                "docs": "Proxy hash of the account contract",
                "type": "optional<string>",
              },
              "paraclear_address": {
                "docs": "Paraclear contract address",
                "type": "optional<string>",
              },
              "paraclear_decimals": "optional<integer>",
              "partial_liquidation_buffer": {
                "docs": "Partial liquidation buffer. Account value is supposed to be at least this much above the MMR after partial liquidation",
                "type": "optional<string>",
              },
              "partial_liquidation_share_increment": {
                "docs": "Minimum granularity of partial liquidation share. The share is rounded up to the nearest multiple of this value",
                "type": "optional<string>",
              },
              "starknet_chain_id": {
                "docs": "Chain ID for the Starknet Instance",
                "type": "optional<string>",
              },
              "starknet_fullnode_rpc_url": {
                "docs": "Full node RPC URL from Starknet",
                "type": "optional<string>",
              },
              "starknet_gateway_url": {
                "docs": "Feeder Gateway URL from Starknet",
                "type": "optional<string>",
              },
              "universal_deployer_address": {
                "docs": "Universal deployer address",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesSystemStateResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "status": {
                "docs": "Status of the system",
                "type": "optional<ResponsesSystemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesSystemStatus": {
            "enum": [
              {
                "name": "Ok",
                "value": "ok",
              },
              {
                "name": "Maintenance",
                "value": "maintenance",
              },
              {
                "name": "CancelOnly",
                "value": "cancel_only",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesSystemTimeResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "server_time": {
                "docs": "Paradex Server time",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTradeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Unix Millisecond timestamp at which trade was done",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "Unique Trade ID per TradeType",
                "type": "optional<string>",
              },
              "market": {
                "docs": "Market for which trade was done",
                "type": "optional<string>",
              },
              "price": {
                "docs": "Trade price",
                "type": "optional<string>",
              },
              "side": {
                "docs": "Taker side",
                "type": "optional<ResponsesOrderSide>",
              },
              "size": {
                "docs": "Trade size",
                "type": "optional<string>",
              },
              "trade_type": {
                "docs": "Trade type, can be FILL or LIQUIDATION",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTradebustResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "Starknet Account from which fill was created",
                "type": "optional<string>",
              },
              "busted_fill_id": {
                "docs": "Unique string ID of the busted fill",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Unix Millis timestamp when bust was created",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTraderRole": {
            "enum": [
              {
                "name": "Taker",
                "value": "TAKER",
              },
              {
                "name": "Maker",
                "value": "MAKER",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransactionResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "completed_at": {
                "docs": "Timestamp from when the transaction was completed",
                "type": "optional<integer>",
              },
              "created_at": {
                "docs": "Timestamp from when the transaction was sent to blockchain gateway",
                "type": "optional<integer>",
              },
              "hash": {
                "docs": "Tx Hash of the settled trade                                                // Hash of the transaction",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique string ID of the event that triggered the transaction. For example, fill ID or liquidation ID",
                "type": "optional<string>",
              },
              "state": {
                "docs": "Status of the transaction on Starknet",
                "type": "optional<ResponsesTransactionResponseState>",
              },
              "type": {
                "docs": "Event that triggered the transaction",
                "type": "optional<ResponsesTransactionResponseType>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransactionResponseState": {
            "docs": "Status of the transaction on Starknet",
            "enum": [
              "ACCEPTED_ON_L1",
              "ACCEPTED_ON_L2",
              "NOT_RECEIVED",
              "RECEIVED",
              "REJECTED",
              "REVERTED",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransactionResponseType": {
            "docs": "Event that triggered the transaction",
            "enum": [
              "TRANSACTION_FILL",
              "TRANSACTION_LIQUIDATE",
              "TRANSACTION_SETTLE_MARKET",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransferBridge": {
            "enum": [
              {
                "name": "Unspecified",
                "value": "",
              },
              {
                "name": "Starkgate",
                "value": "STARKGATE",
              },
              {
                "name": "Layerswap",
                "value": "LAYERSWAP",
              },
              {
                "name": "Rhinofi",
                "value": "RHINOFI",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransferDirection": {
            "enum": [
              {
                "name": "In",
                "value": "IN",
              },
              {
                "name": "Out",
                "value": "OUT",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransferKind": {
            "enum": [
              {
                "name": "Deposit",
                "value": "DEPOSIT",
              },
              {
                "name": "Withdrawal",
                "value": "WITHDRAWAL",
              },
              {
                "name": "Unwinding",
                "value": "UNWINDING",
              },
              {
                "name": "VaultDeposit",
                "value": "VAULT_DEPOSIT",
              },
              {
                "name": "VaultWithdrawal",
                "value": "VAULT_WITHDRAWAL",
              },
              {
                "name": "AutoWithdrawal",
                "value": "AUTO_WITHDRAWAL",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransferResult": {
            "docs": "TransferResult",
            "inline": undefined,
            "properties": {
              "account": {
                "docs": "Starknet Account address",
                "type": "optional<string>",
              },
              "amount": {
                "docs": "Transferred amount",
                "type": "optional<string>",
              },
              "auto_withdrawal_fee": {
                "docs": "Fee for auto withdrawal in USDC",
                "type": "optional<string>",
              },
              "bridge": {
                "docs": "Bridge used for the transfer",
                "type": "optional<ResponsesTransferBridge>",
              },
              "counterparty": {
                "docs": "Counterparty address",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Unix Millis timestamp transfer was created on L2",
                "type": "optional<integer>",
              },
              "direction": {
                "docs": "Transfer direction (IN, OUT)",
                "type": "optional<ResponsesTransferDirection>",
              },
              "external_account": {
                "docs": "External chain account address",
                "type": "optional<string>",
              },
              "external_chain": {
                "docs": "External chain used for the transfer",
                "type": "optional<string>",
              },
              "external_txn_hash": {
                "docs": "Transaction hash on the external chain",
                "type": "optional<string>",
              },
              "failure_reason": {
                "docs": "Reason for transfer failure",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Transfer auto-generated ID",
                "type": "optional<string>",
              },
              "kind": {
                "docs": "Transfer Kind (DEPOSIT, WITHDRAWAL)",
                "type": "optional<ResponsesTransferKind>",
              },
              "last_updated_at": {
                "docs": "Unix Millis timestamp transfer was last updated on L2",
                "type": "optional<integer>",
              },
              "socialized_loss_factor": {
                "docs": "Withdrawal's socialized loss factor",
                "type": "optional<string>",
              },
              "status": {
                "docs": "Transfer External State (PENDING, AVAILABLE, COMPLETED, FAILED)",
                "type": "optional<ResponsesTransferStatus>",
              },
              "token": {
                "docs": "Transferred token name",
                "type": "optional<string>",
              },
              "txn_hash": {
                "docs": "Transaction hash on Paradex chain",
                "type": "optional<string>",
              },
              "vault_address": {
                "docs": "Vault address",
                "type": "optional<string>",
              },
              "vault_unwind_completion_percentage": {
                "docs": "Vault unwind completion percentage",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesTransferStatus": {
            "enum": [
              {
                "name": "Pending",
                "value": "PENDING",
              },
              {
                "name": "Available",
                "value": "AVAILABLE",
              },
              {
                "name": "Completed",
                "value": "COMPLETED",
              },
              {
                "name": "Failed",
                "value": "FAILED",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultAccountSummaryResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "docs": "Contract address of the vault",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Unix timestamp in milliseconds of when the user joined the vault.",
                "type": "optional<integer>",
              },
              "deposited_amount": {
                "docs": "Amount deposited on the vault by the user in USDC",
                "type": "optional<string>",
              },
              "total_pnl": {
                "docs": "Total P&L realized by the user in USD.",
                "type": "optional<string>",
              },
              "total_roi": {
                "docs": "Total ROI realized by the user in percentage, i.e. 0.1 means 10%.",
                "type": "optional<string>",
              },
              "vtoken_amount": {
                "docs": "Amount of vault tokens owned by the user",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultHistoricalDataResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "docs": "Contract address of the vault",
                "type": "optional<string>",
              },
              "data": {
                "docs": "Ordered list of datapoints",
                "type": "optional<list<double>>",
              },
              "timestamps": {
                "docs": "Ordered list of timestamps",
                "type": "optional<list<integer>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultKind": {
            "enum": [
              {
                "name": "User",
                "value": "user",
              },
              {
                "name": "Protocol",
                "value": "protocol",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultPositionsResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of the vault's positions",
                "type": "optional<list<ResponsesPositionResp>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "docs": "Contract address of the vault",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "Unix timestamp in milliseconds of when the vault has been created",
                "type": "optional<integer>",
              },
              "description": {
                "docs": "Description of the vault",
                "type": "optional<string>",
              },
              "kind": {
                "docs": "Kind of the vault: 'user' for user-defined vaults, 'protocol' for vaults controlled by Paradex",
                "type": "optional<ResponsesVaultKind>",
              },
              "last_updated_at": {
                "docs": "Unix timestamp in milliseconds of when the vault was last updated",
                "type": "optional<integer>",
              },
              "lockup_period": {
                "docs": "Lockup period of the vault in days",
                "type": "optional<integer>",
              },
              "max_tvl": {
                "docs": "Maximum amount of assets the vault can hold in USDC",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "Name of the vault",
                "type": "optional<string>",
              },
              "operator_account": {
                "docs": "Operator account of the vault",
                "type": "optional<string>",
              },
              "owner_account": {
                "docs": "Owner account of the vault",
                "type": "optional<string>",
              },
              "profit_share": {
                "docs": "Profit share of the vault in percentage, i.e. 10 means 10%",
                "type": "optional<integer>",
              },
              "status": {
                "docs": "Status of the vault",
                "type": "optional<ResponsesVaultStatus>",
              },
              "strategies": {
                "docs": "Strategies of the vault",
                "type": "optional<list<ResponsesStrategy>>",
              },
              "token_address": {
                "docs": "LP token address",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultStatus": {
            "enum": [
              {
                "name": "Initializing",
                "value": "INITIALIZING",
              },
              {
                "name": "Active",
                "value": "ACTIVE",
              },
              {
                "name": "Closed",
                "value": "CLOSED",
              },
              {
                "name": "Failed",
                "value": "FAILED",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultSummaryResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "address": {
                "docs": "Contract address of the vault",
                "type": "optional<string>",
              },
              "last_month_return": {
                "docs": "APR return of the vault in the last trailing month in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "max_drawdown": {
                "docs": "Max all time drawdown realized by the vault in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "max_drawdown_24h": {
                "docs": "Max drawdown realized by the vault in the last 24 hours in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "max_drawdown_30d": {
                "docs": "Max drawdown realized by the vault in the last 30 days in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "max_drawdown_7d": {
                "docs": "Max drawdown realized by the vault in the last 7 days in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "net_deposits": {
                "docs": "Net deposits of the vault in USDC",
                "type": "optional<string>",
              },
              "num_depositors": {
                "docs": "Number of depositors on the vault",
                "type": "optional<integer>",
              },
              "owner_equity": {
                "docs": "Vault equity of the owner (% of ownership) in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "pnl_24h": {
                "docs": "P&L of the vault in the last 24 hours in USD",
                "type": "optional<string>",
              },
              "pnl_30d": {
                "docs": "P&L of the vault in the last 30 days in USD",
                "type": "optional<string>",
              },
              "pnl_7d": {
                "docs": "P&L of the vault in the last 7 days in USD",
                "type": "optional<string>",
              },
              "roi_24h": {
                "docs": "Return of the vault in the last 24 hours in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "roi_30d": {
                "docs": "Return of the vault in the last 30 days in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "roi_7d": {
                "docs": "Return of the vault in the last 7 days in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "total_pnl": {
                "docs": "Total P&L of the vault in USD",
                "type": "optional<string>",
              },
              "total_roi": {
                "docs": "Total ROI of the vault in percentage, i.e. 0.1 means 10%",
                "type": "optional<string>",
              },
              "tvl": {
                "docs": "Net deposits of the vault in USDC (deprecated; use net_deposits instead)",
                "type": "optional<string>",
              },
              "volume": {
                "docs": "All time volume traded by the vault in USD",
                "type": "optional<string>",
              },
              "volume_24h": {
                "docs": "Volume traded by the vault in the last 24 hours in USD",
                "type": "optional<string>",
              },
              "volume_30d": {
                "docs": "Volume traded by the vault in the last 30 days in USD",
                "type": "optional<string>",
              },
              "volume_7d": {
                "docs": "Volume traded by the vault in the last 7 days in USD",
                "type": "optional<string>",
              },
              "vtoken_price": {
                "docs": "Current value of vault token price in USD",
                "type": "optional<string>",
              },
              "vtoken_supply": {
                "docs": "Total amount of available vault tokens",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultTradesResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of the vault's trades",
                "type": "optional<list<ResponsesTradeResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultTransfersResp": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "List of the vault's transfers",
                "type": "optional<list<ResponsesTransferResult>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "ResponsesVaultsConfigResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "max_lockup_period_days": {
                "docs": "Maximum lockup period in days an owner can configure for a vault",
                "type": "optional<string>",
              },
              "max_profit_share_percentage": {
                "docs": "Maximum profit share percentage (0-100) an owner can configure for a vault",
                "type": "optional<string>",
              },
              "min_initial_deposit": {
                "docs": "Minimum initial collateral deposit (in currency units) at vault creation. Only applies to the owner",
                "type": "optional<string>",
              },
              "min_lockup_period_days": {
                "docs": "Minimum lockup period in days an owner can configure for a vault",
                "type": "optional<string>",
              },
              "min_owner_share_percentage": {
                "docs": "Minimum share percentage (0-100) the vault owner must maintain on the vault",
                "type": "optional<string>",
              },
              "vault_factory_address": {
                "docs": "Address of the vault factory contract",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "errors:
  GetAccountRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAccountRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAccountMarginRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAccountMarginRequestNotFoundError:
    status-code: 404
    type: ResponsesApiError
    docs: Not Found
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpsertAccountMarginRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAccountProfileRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAccountProfileRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpdateAccountMaxSlippageRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpdateAccountMaxSlippageRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpdateAccountProfileReferralCodeRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpdateAccountProfileReferralCodeRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpdateAccountProfileUsernameRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  UpdateAccountProfileUsernameRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetOpenAlgoOrdersRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  CreateAlgoOrderRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAlgoOrdersHistoryRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetAlgoOrderByIdRequestNotFoundError:
    status-code: 404
    type: ResponsesApiError
    docs: Not Found
    examples:
      - value:
          message: User has never called /onboarding endpoint
  CancelAlgoOrderRequestNotFoundError:
    status-code: 404
    type: ResponsesApiError
    docs: Not Found
    examples:
      - value:
          message: User has never called /onboarding endpoint
  AuthRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  AuthRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetBalanceRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetBalanceRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetBboRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetFillsRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetFillsRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetFundingDataRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetFundingRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetFundingRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetLiquidationsRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetMarketsRequestNotFoundError:
    status-code: 404
    type: ResponsesApiError
    docs: Not Found
    examples:
      - value:
          message: User has never called /onboarding endpoint
  MarketsKlinesRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetMarketsSummaryRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OnboardingRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OnboardingRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetOrderbookRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetOpenOrdersRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersNewRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersCancelAllRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetOrdersRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersBatchRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersGetByClientIdRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersCancelByClientIdRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersGetRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  OrdersCancelRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetReferralConfigRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetReferralQrCodeRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetReferralQrCodeRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetReferralsSummaryRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetReferralsSummaryRequestUnauthorizedError:
    status-code: 401
    type: ResponsesApiError
    docs: Unauthorized
    examples:
      - value:
          message: User has never called /onboarding endpoint
  TradebustsRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  TradesRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  TransactionsRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  GetTransfersRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsCreateRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetAccountSummaryRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetBalanceRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetConfigRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetHistoricalDataRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetPositionsRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetSummaryRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
  VaultsGetTransfersRequestBadRequestError:
    status-code: 400
    type: ResponsesApiError
    docs: Bad Request
    examples:
      - value:
          message: User has never called /onboarding endpoint
service:
  auth: false
  base-path: ''
  endpoints:
    Trades:
      path: /trades
      method: GET
      auth: false
      docs: |
        List trades that happened on a given market (trade tape).
      source:
        openapi: ../openapi.json
      display-name: Trade tape
      request:
        name: TradesRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market:
            type: string
            docs: Market name
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: ResponsesGetTradesResp
        status-code: 200
      errors:
        - TradesRequestBadRequestError
      examples:
        - query-parameters:
            market: BTC-USD-PERP
          response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - created_at: 1681497002041
                  id: '12345643'
                  market: BTC-USD-PERP
                  price: '30001.2'
                  side: BUY
                  size: '0.01'
                  trade_type: FILL
  source:
    openapi: ../openapi.json
types:
  MessageAccountMarginConfig:
    properties:
      account: optional<string>
      leverage: optional<integer>
      margin_type: optional<MessageMarginType>
      market: optional<string>
    source:
      openapi: ../openapi.json
  MessageDiscordProfile:
    properties:
      id: optional<string>
      image_url: optional<string>
      username: optional<string>
    source:
      openapi: ../openapi.json
  MessageMarginType: integer
  MessageOwnedNft:
    properties:
      collection_address: optional<string>
      collection_name: optional<string>
      description: optional<string>
      id: optional<string>
      image_url: optional<string>
      name: optional<string>
    source:
      openapi: ../openapi.json
  MessageTwitterProfile:
    properties:
      id: optional<string>
      image_url: optional<string>
      username: optional<string>
    source:
      openapi: ../openapi.json
  RequestsOrderRequest:
    properties:
      client_id:
        type: optional<string>
        docs: Unique client assigned ID for the order
        validation:
          maxLength: 64
      flags:
        type: optional<list<ResponsesOrderFlag>>
        docs: 'Order flags, allow flag: REDUCE_ONLY'
      instruction:
        type: string
        docs: Order Instruction, GTC, IOC or POST_ONLY if empty GTC
      market:
        type: string
        docs: Market for which order is created
      price:
        type: string
        docs: Order price
      recv_window:
        type: optional<integer>
        docs: >-
          Order will be created if it is received by API within RecvWindow
          milliseconds from signature timestamp, minimum is 10 milliseconds
      side:
        type: ResponsesOrderSide
        docs: Order side
      signature:
        type: string
        docs: Order Payload signed with STARK Private Key
      signature_timestamp:
        type: integer
        docs: Timestamp of order creation, used for signature verification
      size:
        type: string
        docs: Size of the order
      stp:
        type: optional<string>
        docs: >-
          Self Trade Prevention, EXPIRE_MAKER, EXPIRE_TAKER or EXPIRE_BOTH, if
          empty EXPIRE_TAKER
      trigger_price:
        type: optional<string>
        docs: Trigger price for stop order
      type:
        type: ResponsesOrderType
        docs: Order type
    source:
      openapi: ../openapi.json
  ResponsesAccountInfoResponse:
    properties:
      account:
        type: optional<string>
        docs: Starknet address of the account
      created_at:
        type: optional<integer>
        docs: Account creation time
      derivation_path:
        type: optional<string>
        docs: Account derivation path used to derive the account, if a sub-account
      isolated_market:
        type: optional<string>
        docs: Isolated market for the account
      kind:
        type: optional<ResponsesAccountKind>
        docs: Account kind
      parent_account:
        type: optional<string>
        docs: Starknet address of the parent account
      public_key:
        type: optional<string>
        docs: Starknet public key
      username:
        type: optional<string>
        docs: Username of the account
    source:
      openapi: ../openapi.json
  ResponsesAccountKind:
    enum:
      - value: ''
        name: Unspecified
      - value: main
        name: Main
      - value: subaccount
        name: Subaccount
      - value: vault_operator
        name: VaultOperator
      - value: vault_sub_operator
        name: VaultSubOperator
    source:
      openapi: ../openapi.json
  ResponsesAccountProfileResp:
    properties:
      discord: optional<MessageDiscordProfile>
      is_username_private: optional<boolean>
      max_slippage: optional<string>
      nfts: optional<list<MessageOwnedNft>>
      programs_eligibility: optional<ResponsesProgramsEligibility>
      referral_code: optional<string>
      referred_by: optional<string>
      twitter: optional<MessageTwitterProfile>
      username: optional<string>
    source:
      openapi: ../openapi.json
  ResponsesAccountSummaryResponse:
    properties:
      account:
        type: optional<string>
        docs: User's starknet account
      account_value:
        type: optional<string>
        docs: Current account value [with unrealized P&Ls]
      free_collateral:
        type: optional<string>
        docs: >-
          Free collateral available (Account value in excess of Initial Margin
          required)
      initial_margin_requirement:
        type: optional<string>
        docs: Amount required to open trade for the existing positions
      maintenance_margin_requirement:
        type: optional<string>
        docs: Amount required to maintain exisiting positions
      margin_cushion:
        type: optional<string>
        docs: Acc value in excess of maintenance margin required
      seq_no:
        type: optional<integer>
        docs: >-
          Unique increasing number (non-sequential) that is assigned to this
          account update. Can be used to deduplicate multiple feeds
      settlement_asset:
        type: optional<string>
        docs: Settlement asset for the account
      status:
        type: optional<string>
        docs: Status of the acc - like ACTIVE, LIQUIDATION
      total_collateral:
        type: optional<string>
        docs: User's total collateral
      updated_at:
        type: optional<integer>
        docs: Account last updated time
    source:
      openapi: ../openapi.json
  ResponsesAlgoOrderResp:
    properties:
      account:
        type: optional<string>
        docs: Account identifier (user's account address)
      algo_type:
        type: optional<ResponsesAlgoType>
        docs: Algo type
      avg_fill_price:
        type: optional<string>
        docs: Average fill price of the order
      cancel_reason:
        type: optional<string>
        docs: Reason for algo cancellation if it was closed by cancel
      created_at:
        type: optional<integer>
        docs: Algo creation time
      end_at:
        type: optional<integer>
        docs: Algo end time
      id:
        type: optional<string>
        docs: Unique algo identifier
      last_updated_at:
        type: optional<integer>
        docs: Algo last update time.  No changes once status=CLOSED
      market:
        type: optional<string>
        docs: Market to which algo belongs
      remaining_size:
        type: optional<string>
        docs: Remaining size of the algo
      side:
        type: optional<ResponsesOrderSide>
        docs: Algo side
      size:
        type: optional<string>
        docs: Algo size
      status:
        type: optional<ResponsesOrderStatus>
        docs: Algo status
    source:
      openapi: ../openapi.json
  ResponsesAlgoType:
    enum:
      - value: ''
        name: Unspecified
      - TWAP
    source:
      openapi: ../openapi.json
  ResponsesApiError:
    properties:
      data: optional<unknown>
      error:
        type: optional<ResponsesErrorCode>
        docs: unique immutable string identifier for specific error
      message:
        type: optional<string>
        docs: detailed description of error and how to address it
    source:
      openapi: ../openapi.json
  ResponsesAskBidArray:
    properties:
      asks:
        type: optional<list<list<string>>>
        docs: List of Ask sizes and prices
      bids:
        type: optional<list<list<string>>>
        docs: List of Bid sizes and prices
      last_updated_at:
        type: optional<integer>
        docs: Last update to the orderbook in milliseconds
      market:
        type: optional<string>
        docs: Market name
      seq_no:
        type: optional<integer>
        docs: Sequence number of the orderbook
    source:
      openapi: ../openapi.json
  ResponsesAuthResp:
    properties:
      jwt_token:
        type: optional<string>
        docs: Authentication token
    source:
      openapi: ../openapi.json
  ResponsesBboResp:
    properties:
      ask:
        type: optional<string>
        docs: Best ask price
      ask_size:
        type: optional<string>
        docs: Best ask size
      bid:
        type: optional<string>
        docs: Best bid price
      bid_size:
        type: optional<string>
        docs: Best bid size
      last_updated_at:
        type: optional<integer>
        docs: Last update to the orderbook in milliseconds
      market:
        type: optional<string>
        docs: Symbol of the market
      seq_no:
        type: optional<integer>
        docs: Sequence number of the orderbook
    source:
      openapi: ../openapi.json
  ResponsesBalanceResp:
    properties:
      last_updated_at:
        type: optional<integer>
        docs: Balance last updated time
      size:
        type: optional<string>
        docs: >-
          Balance amount of settlement token (includes deposits, withdrawals,
          realized PnL, realized funding, and fees)
      token:
        type: optional<string>
        docs: Name of the token
    source:
      openapi: ../openapi.json
  ResponsesBatchResponse:
    properties:
      errors: optional<list<ResponsesErrorResponse>>
      orders: optional<list<ResponsesOrderResp>>
    source:
      openapi: ../openapi.json
  ResponsesBridgedToken:
    properties:
      decimals: optional<integer>
      l1_bridge_address: optional<string>
      l1_token_address: optional<string>
      l2_bridge_address: optional<string>
      l2_token_address: optional<string>
      name: optional<string>
      symbol: optional<string>
    source:
      openapi: ../openapi.json
  ResponsesDelta1CrossMarginParams:
    properties:
      imf_base:
        type: optional<string>
        docs: Initial Margin Base
      imf_factor:
        type: optional<string>
        docs: Initial Margin Factor, always 0.
      imf_shift:
        type: optional<string>
        docs: Initial Margin Shift, unused, always 0.
      mmf_factor:
        type: optional<string>
        docs: Maintenance Margin Factor
    source:
      openapi: ../openapi.json
  ResponsesErrorCode:
    enum:
      - VALIDATION_ERROR
      - BINDING_ERROR
      - INTERNAL_ERROR
      - NOT_FOUND
      - SERVICE_UNAVAILABLE
      - value: INVALID_REQUEST_PARAMETER
        name: String_InvalidParameter
      - value: ORDER_ID_NOT_FOUND
        name: String_OrderIdNotFound
      - value: ORDER_IS_CLOSED
        name: String_OrderIsClosed
      - value: ORDER_IS_NOT_OPEN
        name: String_OrderIsNotOpen
      - value: CLIENT_ORDER_ID_NOT_FOUND
        name: String_ClientOrderIdNotFound
      - value: DUPLICATED_CLIENT_ID
        name: String_DuplicatedClientOrderId
      - value: INVALID_PRICE_PRECISION
        name: String_InvalidPricePrecision
      - value: INVALID_SYMBOL
        name: String_InvalidSymbol
      - value: INVALID_TOKEN
        name: String_InvalidToken
      - value: INVALID_ETHEREUM_ADDRESS
        name: String_BadEthAddress
      - value: INVALID_ETHEREUM_SIGNATURE
        name: String_BadEthSignature
      - value: INVALID_STARKNET_ADDRESS
        name: String_BadStarkNetAddress
      - value: INVALID_STARKNET_SIGNATURE
        name: String_BadStarkNetSignature
      - value: STARKNET_SIGNATURE_VERIFICATION_FAILED
        name: String_StarknetSigVerificationFailed
      - value: BAD_STARKNET_REQUEST
        name: String_BadFormatStarknetCall
      - value: ETHEREUM_SIGNER_MISMATCH
        name: String_SignerMismatch
      - value: ETHEREUM_HASH_MISMATCH
        name: String_HashMismatch
      - value: NOT_ONBOARDED
        name: String_NotOnboarded
      - value: INVALID_TIMESTAMP
        name: String_BadTimestamp
      - value: INVALID_SIGNATURE_EXPIRATION
        name: String_BadExpiration
      - value: ACCOUNT_NOT_FOUND
        name: String_AccountIdNotFound
      - value: INVALID_ORDER_SIGNATURE
        name: String_InvalidOrderSignature
      - value: PUBLIC_KEY_INVALID
        name: String_BadPublicKey
      - value: UNAUTHORIZED_ETHEREUM_ADDRESS
        name: String_UnauthorizedEthAddress
      - value: ETHEREUM_ADDRESS_ALREADY_ONBOARDED
        name: String_EthAddressAlreadyOnboarded
      - value: MARKET_NOT_FOUND
        name: String_MarketNotFound
      - value: ALLOWLIST_ENTRY_NOT_FOUND
        name: String_AllowlistNotFound
      - value: USERNAME_IN_USE
        name: String_UsernameInUse
      - value: GEO_IP_BLOCK
        name: String_GeoIPBlock
      - value: ETHEREUM_ADDRESS_BLOCKED
        name: String_EthAddressBlocked
      - value: PROGRAM_NOT_FOUND
        name: String_ProgramNotFound
      - value: PROGRAM_NOT_SUPPORTED
        name: String_ProgramNotSupported
      - value: INVALID_DASHBOARD
        name: String_InvalidDashboard
      - value: MARKET_NOT_OPEN
        name: String_MarketNotOpen
      - value: INVALID_REFERRAL_CODE
        name: String_InvalidReferralCode
      - value: REQUEST_NOT_ALLOWED
        name: String_RequestNotAllowed
      - value: PARENT_ADDRESS_ALREADY_ONBOARDED
        name: String_ParentAddressAlreadyOnboarded
      - value: INVALID_PARENT_ACCOUNT
        name: String_InvalidParentAccount
      - value: INVALID_VAULT_OPERATOR_CHAIN
        name: String_InvalidVaultOperatorChain
      - value: VAULT_OPERATOR_ALREADY_ONBOARDED
        name: String_VaultOperatorAlreadyOnboarded
      - value: VAULT_NAME_IN_USE
        name: String_VaultNameInUse
      - value: VAULT_NOT_FOUND
        name: String_VaultNotFound
      - value: VAULT_STRATEGY_NOT_FOUND
        name: String_VaultStrategyNotFound
      - value: VAULT_LIMIT_REACHED
        name: String_VaultLimitReached
      - value: BATCH_SIZE_OUT_OF_RANGE
        name: String_BatchSizeOutOfRange
      - value: ISOLATED_MARKET_ACCOUNT_MISMATCH
        name: String_IsolatedMarketAccountMismatch
      - value: NO_ACCESS_TO_MARKET
        name: String_NoAccessToMarket
      - value: POINTS_SUMMARY_NOT_FOUND
        name: String_PointsSummaryNotFound
      - value: ALGO_ID_NOT_FOUND
        name: String_AlgoIdNotFound
      - value: INVALID_DERIVATION_PATH
        name: String_InvalidDerivationPath
      - value: PROFILE_STATS_NOT_FOUND
        name: String_ProfileStatsNotFound
      - value: INVALID_CHAIN
        name: String_InvalidChain
      - value: INVALID_LAYERSWAP_SWAP
        name: String_InvalidLayerswapSwap
      - value: SOCIAL_USERNAME_IN_USE
        name: String_SocialUsernameInUse
    source:
      openapi: ../openapi.json
  ResponsesErrorResponse:
    properties:
      error: optional<ResponsesErrorCode>
      message: optional<string>
    source:
      openapi: ../openapi.json
  ResponsesFillResult:
    properties:
      client_id:
        type: optional<string>
        docs: Unique client assigned ID for the order
      created_at:
        type: optional<integer>
        docs: Fill time
      fee:
        type: optional<string>
        docs: Fee paid by the user
      fee_currency:
        type: optional<string>
        docs: Asset that fee is charged in
      fill_type:
        type: optional<string>
        docs: Fill type, can be FILL, LIQUIDATION or TRANSFER
      id:
        type: optional<string>
        docs: Unique string ID of fill per FillType
      liquidity:
        type: optional<ResponsesTraderRole>
        docs: Maker or Taker
      market:
        type: optional<string>
        docs: Market name
      order_id:
        type: optional<string>
        docs: Order ID
      price:
        type: optional<string>
        docs: Price at which order was filled
      realized_funding:
        type: optional<string>
        docs: Realized funding of the fill
      realized_pnl:
        type: optional<string>
        docs: Realized PnL of the fill
      remaining_size:
        type: optional<string>
        docs: Remaining size of the order
      side:
        type: optional<ResponsesOrderSide>
        docs: Taker side
      size:
        type: optional<string>
        docs: Size of the fill
    source:
      openapi: ../openapi.json
  ResponsesFundingDataResp:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesFundingDataResult>>
        docs: Funding Data Response data list
    source:
      openapi: ../openapi.json
  ResponsesFundingDataResult:
    properties:
      created_at: optional<integer>
      funding_index: optional<string>
      funding_premium: optional<string>
      funding_rate: optional<string>
      market: optional<string>
    source:
      openapi: ../openapi.json
  ResponsesFundingHistoryResp:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesFundingResp>>
        docs: Funding Response data list
    source:
      openapi: ../openapi.json
  ResponsesFundingResp:
    properties:
      created_at:
        type: optional<integer>
        docs: Funding payments time
      fill_id:
        type: optional<string>
        docs: Unique string ID for the fill that triggered the payment (if any)
      id:
        type: optional<string>
        docs: Unique string ID to identify the payment
      index:
        type: optional<string>
        docs: Value of the funding index at the time of payment
      market:
        type: optional<string>
        docs: Perpetual market against which payment is made
      payment:
        type: optional<string>
        docs: Payment amount in settlement asset
    source:
      openapi: ../openapi.json
  ResponsesGetAccountsInfoResponse:
    properties:
      results: optional<list<ResponsesAccountInfoResponse>>
    source:
      openapi: ../openapi.json
  ResponsesGetAlgoOrders:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesAlgoOrderResp>>
        docs: List of Algo orders responses
    source:
      openapi: ../openapi.json
  ResponsesGetBalancesResp:
    properties:
      results:
        type: optional<list<ResponsesBalanceResp>>
        docs: Array of token balances held
    source:
      openapi: ../openapi.json
  ResponsesGetFillsResp:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesFillResult>>
        docs: Fill Results List
    source:
      openapi: ../openapi.json
  ResponsesGetLiquidations:
    properties:
      results:
        type: optional<list<ResponsesLiquidationResp>>
        docs: List of liquidations
    source:
      openapi: ../openapi.json
  ResponsesGetMarketSummary:
    properties:
      results:
        type: optional<list<ResponsesMarketSummaryResp>>
        docs: List of market summaries
    source:
      openapi: ../openapi.json
  ResponsesGetMarkets:
    properties:
      results:
        type: optional<list<ResponsesMarketResp>>
        docs: List of available active markets
    source:
      openapi: ../openapi.json
  ResponsesGetOpenAlgoOrders:
    properties:
      results:
        type: optional<list<ResponsesAlgoOrderResp>>
        docs: List of Algo orders responses
    source:
      openapi: ../openapi.json
  ResponsesGetOpenOrders:
    properties:
      results:
        type: optional<list<ResponsesOrderResp>>
        docs: Orders list
    source:
      openapi: ../openapi.json
  ResponsesGetOrders:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesOrderResp>>
        docs: List of Orders
    source:
      openapi: ../openapi.json
  ResponsesGetPositionsHistoryResp:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results: optional<list<ResponsesPositionResp>>
    source:
      openapi: ../openapi.json
  ResponsesGetPositionsResp:
    properties:
      results: optional<list<ResponsesPositionResp>>
    source:
      openapi: ../openapi.json
  ResponsesGetReferralConfig:
    properties:
      results:
        type: optional<list<ResponsesReferralConfigResp>>
        docs: List of referral config
    source:
      openapi: ../openapi.json
  ResponsesGetReferrals:
    properties:
      results:
        type: optional<list<ResponsesReferralsResp>>
        docs: List of referral details
    source:
      openapi: ../openapi.json
  ResponsesGetSubAccountsResponse:
    properties:
      results: optional<list<ResponsesAccountInfoResponse>>
    source:
      openapi: ../openapi.json
  ResponsesGetTradebustsResp:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesTradebustResult>>
        docs: List of tradebusts
    source:
      openapi: ../openapi.json
  ResponsesGetTradesResp:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesTradeResult>>
        docs: List of trade details
    source:
      openapi: ../openapi.json
  ResponsesGetTransactionResponse:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesTransactionResponse>>
        docs: List of transaction responses
    source:
      openapi: ../openapi.json
  ResponsesGetTransfersResponse:
    properties:
      next:
        type: optional<string>
        docs: >-
          The pointer to fetch next set of records (null if there are no records
          left)
      prev:
        type: optional<string>
        docs: >-
          The pointer to fetch previous set of records (null if there are no
          records left)
      results:
        type: optional<list<ResponsesTransferResult>>
        docs: List of transaction responses
    source:
      openapi: ../openapi.json
  ResponsesGetVaultAccountSummariesResp:
    properties:
      results:
        type: optional<list<ResponsesVaultAccountSummaryResp>>
        docs: List of vaults account summaries
    source:
      openapi: ../openapi.json
  ResponsesGetVaultHistoricalDataResp:
    properties:
      results:
        type: optional<list<ResponsesVaultHistoricalDataResp>>
        docs: List of requested vault timeseries
    source:
      openapi: ../openapi.json
  ResponsesGetVaultSummariesResp:
    properties:
      results:
        type: optional<list<ResponsesVaultSummaryResp>>
        docs: List of vaults summaries
    source:
      openapi: ../openapi.json
  ResponsesGetVaultsResp:
    properties:
      results:
        type: optional<list<ResponsesVaultResp>>
        docs: List of vaults
    source:
      openapi: ../openapi.json
  ResponsesGreeks:
    properties:
      delta:
        type: optional<string>
        docs: Market Delta
      gamma:
        type: optional<string>
        docs: Market Gamma
      vega:
        type: optional<string>
        docs: Market Vega
    source:
      openapi: ../openapi.json
  ResponsesInsuranceAccountResp:
    properties:
      account:
        type: optional<string>
        docs: Starknet address of the Insurance fund
      account_value:
        type: optional<string>
        docs: Total account value of insurance fund
      settlement_asset:
        type: optional<string>
        docs: Settlement Asset for the account
      updated_at:
        type: optional<integer>
        docs: Account last updated time
    source:
      openapi: ../openapi.json
  ResponsesLiquidationResp:
    properties:
      created_at:
        type: optional<integer>
        docs: Liquidation created at timestamp
      id:
        type: optional<string>
        docs: Liquidation transaction hash
    source:
      openapi: ../openapi.json
  ResponsesMarketChainDetails:
    properties:
      collateral_address:
        type: optional<string>
        docs: Collateral address
      contract_address:
        type: optional<string>
        docs: Contract address
      fee_account_address:
        type: optional<string>
        docs: Fee account address
      fee_maker:
        type: optional<string>
        docs: Maker fee
      fee_taker:
        type: optional<string>
        docs: Taker fee
      insurance_fund_address:
        type: optional<string>
        docs: Insurance fund address
      liquidation_fee:
        type: optional<string>
        docs: Liquidation fee
      oracle_address:
        type: optional<string>
        docs: Oracle address
      symbol:
        type: optional<string>
        docs: Market symbol
    source:
      openapi: ../openapi.json
  ResponsesMarketResp:
    properties:
      asset_kind:
        type: optional<string>
        docs: Type of asset
      base_currency:
        type: optional<string>
        docs: Base currency of the market pair
      chain_details:
        type: optional<ResponsesMarketChainDetails>
        docs: Chain details
      clamp_rate:
        type: optional<string>
        docs: Clamp rate
      delta1_cross_margin_params:
        type: optional<ResponsesDelta1CrossMarginParams>
        docs: Delta1 Cross margin parameters
      expiry_at:
        type: optional<integer>
        docs: Market expiry time
      funding_period_hours:
        type: optional<double>
        docs: Funding period in hours
      interest_rate:
        type: optional<string>
        docs: Interest rate
      iv_bands_width:
        type: optional<string>
        docs: IV Bands Width
      market_kind:
        type: optional<string>
        docs: Type of market - always 'cross'
      max_funding_rate:
        type: optional<string>
        docs: Max funding rate
      max_funding_rate_change:
        type: optional<string>
        docs: Max funding rate change
      max_open_orders:
        type: optional<integer>
        docs: Max open orders
      max_order_size:
        type: optional<string>
        docs: Maximum order size
      max_tob_spread:
        type: optional<string>
        docs: The maximum TOB spread allowed to apply funding rate changes
      min_notional:
        type: optional<string>
        docs: Minimum order size in USD
      open_at:
        type: optional<integer>
        docs: Market open time in milliseconds
      option_cross_margin_params:
        type: optional<ResponsesPerpetualOptionCrossMarginParams>
        docs: Option Cross margin parameters
      option_type:
        type: optional<string>
        docs: Type of option (PUT or CALL)
      oracle_ewma_factor:
        type: optional<string>
        docs: Oracle EWMA factor
      order_size_increment:
        type: optional<string>
        docs: Minimum size increment for base currency
      position_limit:
        type: optional<string>
        docs: Position limit
      price_bands_width:
        type: optional<string>
        docs: >-
          Price Bands Width, 0.05 means 5% price deviation allowed from mark
          price
      price_feed_id:
        type: optional<string>
        docs: Price feed id. Pyth price account used to price underlying asset
      price_tick_size:
        type: optional<string>
        docs: Minimum price increment of the market in USD
      quote_currency:
        type: optional<string>
        docs: Quote currency of the market pair
      settlement_currency:
        type: optional<string>
        docs: Settlement currency of the market pair
      strike_price:
        type: optional<string>
        docs: Strike price for option market
      symbol:
        type: optional<string>
        docs: Market symbol
      tags:
        type: optional<list<string>>
        docs: Market tags
    source:
      openapi: ../openapi.json
  ResponsesMarketSummaryResp:
    properties:
      ask:
        type: optional<string>
        docs: Best ask price
      ask_iv:
        type: optional<string>
        docs: Ask implied volatility, for options
      bid:
        type: optional<string>
        docs: Best bid price
      bid_iv:
        type: optional<string>
        docs: Bid implied volatility, for options
      created_at:
        type: optional<integer>
        docs: Market summary creation time
      delta:
        type: optional<string>
        docs: 'Deprecated: Use greeks.delta instead'
      funding_rate:
        type: optional<string>
        docs: >-
          [8 hour funding
          rate](https://docs.paradex.trade/risk-system/funding-mechanism#funding-rate)
      future_funding_rate:
        type: optional<string>
        docs: Future funding rate, for options
      greeks:
        type: optional<ResponsesGreeks>
        docs: Greeks
      last_iv:
        type: optional<string>
        docs: Last traded price implied volatility, for options
      last_traded_price:
        type: optional<string>
        docs: Last traded price
      mark_iv:
        type: optional<string>
        docs: Mark implied volatility, for options
      mark_price:
        type: optional<string>
        docs: >-
          [Mark
          price](https://docs.paradex.trade/risk-system/mark-price-calculation)
      open_interest:
        type: optional<string>
        docs: Open interest in base currency
      price_change_rate_24h:
        type: optional<string>
        docs: Price change rate in the last 24 hours
      symbol:
        type: optional<string>
        docs: Market symbol
      total_volume:
        type: optional<string>
        docs: Lifetime total traded volume in USD
      underlying_price:
        type: optional<string>
        docs: Underlying asset price (spot oracle price)
      volume_24h:
        type: optional<string>
        docs: 24 hour volume in USD
    source:
      openapi: ../openapi.json
  ResponsesOrderFlag:
    enum:
      - value: REDUCE_ONLY
        name: ReduceOnly
      - value: STOP_CONDITION_BELOW_TRIGGER
        name: StopConditionBelowTrigger
      - value: STOP_CONDITION_ABOVE_TRIGGER
        name: StopConditionAboveTrigger
    source:
      openapi: ../openapi.json
  ResponsesOrderInstruction:
    enum:
      - GTC
      - value: POST_ONLY
        name: PostOnly
      - IOC
    source:
      openapi: ../openapi.json
  ResponsesOrderResp:
    properties:
      account:
        type: optional<string>
        docs: Account identifier (user's account address)
      avg_fill_price:
        type: optional<string>
        docs: Average fill price of the order
      cancel_reason:
        type: optional<string>
        docs: Reason for order cancellation if it was closed by cancel
      client_id:
        type: optional<string>
        docs: Client id passed on order creation
      created_at:
        type: optional<integer>
        docs: Order creation time
      flags:
        type: optional<list<ResponsesOrderFlag>>
        docs: 'Order flags, allow flag: REDUCE_ONLY'
      id:
        type: optional<string>
        docs: Unique order identifier
      instruction:
        type: optional<ResponsesOrderInstruction>
        docs: OrderInstruction (GTC, IOC, POST_ONLY)
      last_updated_at:
        type: optional<integer>
        docs: Order last update time.  No changes once status=CLOSED
      market:
        type: optional<string>
        docs: Market to which order belongs
      price:
        type: optional<string>
        docs: Order price. 0 for MARKET orders
      published_at:
        type: optional<integer>
        docs: Order published to the client time
      received_at:
        type: optional<integer>
        docs: Order received from the client time
      remaining_size:
        type: optional<string>
        docs: Remaining size of the order
      seq_no:
        type: optional<integer>
        docs: >-
          Unique increasing number (non-sequential) that is assigned to this
          order update and changes on every order update. Can be used to
          deduplicate multiple feeds. WebSocket and REST responses use
          independently generated seq_no per event.
      side:
        type: optional<ResponsesOrderSide>
        docs: Order side
      size:
        type: optional<string>
        docs: Order size
      status:
        type: optional<ResponsesOrderStatus>
        docs: Order status
      stp:
        type: optional<ResponsesStpMode>
        docs: Self Trade Prevention mode (EXEPIRE_MAKER, EXPIRE_TAKER, EXPIRE_BOTH)
      timestamp:
        type: optional<integer>
        docs: Order signature timestamp
      trigger_price:
        type: optional<string>
        docs: Trigger price for stop order
      type:
        type: optional<ResponsesOrderType>
        docs: Order type
    source:
      openapi: ../openapi.json
  ResponsesOrderSide:
    enum:
      - value: BUY
        name: Buy
      - value: SELL
        name: Sell
    source:
      openapi: ../openapi.json
  ResponsesOrderStatus:
    enum:
      - value: NEW
        name: New
      - value: UNTRIGGERED
        name: Untriggered
      - value: OPEN
        name: Open
      - value: CLOSED
        name: Closed
    source:
      openapi: ../openapi.json
  ResponsesOrderType:
    enum:
      - value: MARKET
        name: Market
      - value: LIMIT
        name: Limit
      - value: STOP_LIMIT
        name: StopLimit
      - value: STOP_MARKET
        name: StopMarket
      - value: TAKE_PROFIT_LIMIT
        name: TakeProfitLimit
      - value: TAKE_PROFIT_MARKET
        name: TakeProfitMarket
      - value: STOP_LOSS_MARKET
        name: StopLossMarket
      - value: STOP_LOSS_LIMIT
        name: StopLossLimit
    source:
      openapi: ../openapi.json
  ResponsesPerpetualOptionCrossMarginParams:
    properties:
      imf: optional<ResponsesPerpetualOptionMarginParams>
      mmf: optional<ResponsesPerpetualOptionMarginParams>
    source:
      openapi: ../openapi.json
  ResponsesPerpetualOptionMarginParams:
    properties:
      long_itm:
        type: optional<string>
        docs: Margin fraction for long ITM options
      premium_multiplier:
        type: optional<string>
        docs: Multiplier for margin fraction for premium
      short_itm:
        type: optional<string>
        docs: Margin fraction for short ITM options
      short_otm:
        type: optional<string>
        docs: Margin fraction for short OTM options
      short_put_cap:
        type: optional<string>
        docs: Cap for margin fraction for short put options
    source:
      openapi: ../openapi.json
  ResponsesPositionRespSide:
    enum:
      - SHORT
      - LONG
    docs: 'Position Side : Long or Short'
    inline: true
    source:
      openapi: ../openapi.json
  ResponsesPositionRespStatus:
    enum:
      - OPEN
      - CLOSED
    docs: 'Status of Position : Open or Closed'
    inline: true
    source:
      openapi: ../openapi.json
  ResponsesPositionResp:
    properties:
      average_entry_price:
        type: optional<string>
        docs: Average entry price
      average_entry_price_usd:
        type: optional<string>
        docs: Average entry price in USD
      average_exit_price:
        type: optional<string>
        docs: Average exit price
      cached_funding_index:
        type: optional<string>
        docs: Position cached funding index
      closed_at:
        type: optional<integer>
        docs: Position closed time
      cost:
        type: optional<string>
        docs: Position cost
      cost_usd:
        type: optional<string>
        docs: Position cost in USD
      created_at:
        type: optional<integer>
        docs: Position creation time
      id:
        type: optional<string>
        docs: Unique string ID for the position
      last_fill_id:
        type: optional<string>
        docs: Last fill ID to which the position is referring
      last_updated_at:
        type: optional<integer>
        docs: Position last update time
      leverage:
        type: optional<string>
        docs: Leverage of the position
      liquidation_price:
        type: optional<string>
        docs: Liquidation price of the position
      market:
        type: optional<string>
        docs: Market for position
      realized_positional_funding_pnl:
        type: optional<string>
        docs: >-
          Realized Funding PnL for the position. Reset to 0 when position is
          closed or flipped.
      realized_positional_pnl:
        type: optional<string>
        docs: >-
          Realized PnL including both positional PnL and funding payments. Reset
          to 0 when position is closed or flipped.
      seq_no:
        type: optional<integer>
        docs: >-
          Unique increasing number (non-sequential) that is assigned to this
          position update. Can be used to deduplicate multiple feeds
      side:
        type: optional<ResponsesPositionRespSide>
        docs: 'Position Side : Long or Short'
      size:
        type: optional<string>
        docs: Size of the position with sign (positive if long or negative if short)
      status:
        type: optional<ResponsesPositionRespStatus>
        docs: 'Status of Position : Open or Closed'
      unrealized_funding_pnl:
        type: optional<string>
        docs: Unrealized running funding P&L for the position
      unrealized_pnl:
        type: optional<string>
        docs: Unrealized P&L of the position in the quote asset
    source:
      openapi: ../openapi.json
  ResponsesProgramsEligibility:
    properties:
      affiliate: optional<string>
      fee: optional<string>
      maker: optional<string>
      referral: optional<string>
    source:
      openapi: ../openapi.json
  ResponsesReferralConfigResp:
    properties:
      commission_rate:
        type: optional<string>
        docs: Commission rate for the referer
      commission_volume_cap:
        type: optional<string>
        docs: Volume cap for commission
      discount_rate:
        type: optional<string>
        docs: Discount rate for the referee
      discount_volume_cap:
        type: optional<string>
        docs: Volume cap for discount
      minimum_volume:
        type: optional<string>
        docs: Minimum volume required to be eligible for Program
      referral_type:
        type: optional<string>
        docs: Referral type
    source:
      openapi: ../openapi.json
  ResponsesReferralsResp:
    properties:
      address:
        type: optional<string>
        docs: referee address
      created_at:
        type: optional<integer>
        docs: Joined at timestamp in milliseconds
      referral_code:
        type: optional<string>
        docs: Referral code used to onboard the referee
      referral_rewards:
        type: optional<string>
        docs: Total referral commission earned from the fee of referee
      volume_traded:
        type: optional<string>
        docs: Total volume traded by referee
    source:
      openapi: ../openapi.json
  ResponsesStpMode:
    enum:
      - value: EXPIRE_MAKER
        name: Maker
      - value: EXPIRE_TAKER
        name: Taker
      - value: EXPIRE_BOTH
        name: Both
    source:
      openapi: ../openapi.json
  ResponsesStrategy:
    properties:
      address:
        type: optional<string>
        docs: Contract address of the sub-operator
      name:
        type: optional<string>
        docs: Strategy name
    source:
      openapi: ../openapi.json
  ResponsesSystemConfigResponse:
    properties:
      block_explorer_url:
        type: optional<string>
        docs: Block explorer URL for the current SN Instance
      bridged_tokens:
        type: optional<list<ResponsesBridgedToken>>
        docs: >-
          bridged tokens config

          https://github.com/starknet-io/starknet-addresses/blob/master/bridged_tokens/goerli.json
      environment:
        type: optional<string>
        docs: Environment of the Paradex Instance
      l1_chain_id:
        type: optional<string>
        docs: L1 chain ID value
      l1_core_contract_address:
        type: optional<string>
        docs: Address of Starknet L1 core contract
      l1_operator_address:
        type: optional<string>
        docs: Address of Starknet L1 operator
      l1_withdraw_relayer_address:
        type: optional<string>
        docs: Address of L1 Withdraw Relayer
      l2_withdraw_relayer_address:
        type: optional<string>
        docs: Address of L2 Withdraw Relayer
      liquidation_fee:
        type: optional<string>
        docs: Liquidation fee
      oracle_address:
        type: optional<string>
        docs: Oracle contract address
      paraclear_account_hash:
        type: optional<string>
        docs: Class hash of the account contract
      paraclear_account_proxy_hash:
        type: optional<string>
        docs: Proxy hash of the account contract
      paraclear_address:
        type: optional<string>
        docs: Paraclear contract address
      paraclear_decimals: optional<integer>
      partial_liquidation_buffer:
        type: optional<string>
        docs: >-
          Partial liquidation buffer. Account value is supposed to be at least
          this much above the MMR after partial liquidation
      partial_liquidation_share_increment:
        type: optional<string>
        docs: >-
          Minimum granularity of partial liquidation share. The share is rounded
          up to the nearest multiple of this value
      starknet_chain_id:
        type: optional<string>
        docs: Chain ID for the Starknet Instance
      starknet_fullnode_rpc_url:
        type: optional<string>
        docs: Full node RPC URL from Starknet
      starknet_gateway_url:
        type: optional<string>
        docs: Feeder Gateway URL from Starknet
      universal_deployer_address:
        type: optional<string>
        docs: Universal deployer address
    source:
      openapi: ../openapi.json
  ResponsesSystemStateResponse:
    properties:
      status:
        type: optional<ResponsesSystemStatus>
        docs: Status of the system
    source:
      openapi: ../openapi.json
  ResponsesSystemStatus:
    enum:
      - value: ok
        name: Ok
      - value: maintenance
        name: Maintenance
      - value: cancel_only
        name: CancelOnly
    source:
      openapi: ../openapi.json
  ResponsesSystemTimeResponse:
    properties:
      server_time:
        type: optional<string>
        docs: Paradex Server time
    source:
      openapi: ../openapi.json
  ResponsesTradeResult:
    properties:
      created_at:
        type: optional<integer>
        docs: Unix Millisecond timestamp at which trade was done
      id:
        type: optional<string>
        docs: Unique Trade ID per TradeType
      market:
        type: optional<string>
        docs: Market for which trade was done
      price:
        type: optional<string>
        docs: Trade price
      side:
        type: optional<ResponsesOrderSide>
        docs: Taker side
      size:
        type: optional<string>
        docs: Trade size
      trade_type:
        type: optional<string>
        docs: Trade type, can be FILL or LIQUIDATION
    source:
      openapi: ../openapi.json
  ResponsesTradebustResult:
    properties:
      account:
        type: optional<string>
        docs: Starknet Account from which fill was created
      busted_fill_id:
        type: optional<string>
        docs: Unique string ID of the busted fill
      created_at:
        type: optional<integer>
        docs: Unix Millis timestamp when bust was created
    source:
      openapi: ../openapi.json
  ResponsesTraderRole:
    enum:
      - value: TAKER
        name: Taker
      - value: MAKER
        name: Maker
    source:
      openapi: ../openapi.json
  ResponsesTransactionResponseState:
    enum:
      - ACCEPTED_ON_L1
      - ACCEPTED_ON_L2
      - NOT_RECEIVED
      - RECEIVED
      - REJECTED
      - REVERTED
    docs: Status of the transaction on Starknet
    inline: true
    source:
      openapi: ../openapi.json
  ResponsesTransactionResponseType:
    enum:
      - TRANSACTION_FILL
      - TRANSACTION_LIQUIDATE
      - TRANSACTION_SETTLE_MARKET
    docs: Event that triggered the transaction
    inline: true
    source:
      openapi: ../openapi.json
  ResponsesTransactionResponse:
    properties:
      completed_at:
        type: optional<integer>
        docs: Timestamp from when the transaction was completed
      created_at:
        type: optional<integer>
        docs: Timestamp from when the transaction was sent to blockchain gateway
      hash:
        type: optional<string>
        docs: >-
          Tx Hash of the settled
          trade                                                // Hash of the
          transaction
      id:
        type: optional<string>
        docs: >-
          Unique string ID of the event that triggered the transaction. For
          example, fill ID or liquidation ID
      state:
        type: optional<ResponsesTransactionResponseState>
        docs: Status of the transaction on Starknet
      type:
        type: optional<ResponsesTransactionResponseType>
        docs: Event that triggered the transaction
    source:
      openapi: ../openapi.json
  ResponsesTransferBridge:
    enum:
      - value: ''
        name: Unspecified
      - value: STARKGATE
        name: Starkgate
      - value: LAYERSWAP
        name: Layerswap
      - value: RHINOFI
        name: Rhinofi
    source:
      openapi: ../openapi.json
  ResponsesTransferDirection:
    enum:
      - value: IN
        name: In
      - value: OUT
        name: Out
    source:
      openapi: ../openapi.json
  ResponsesTransferKind:
    enum:
      - value: DEPOSIT
        name: Deposit
      - value: WITHDRAWAL
        name: Withdrawal
      - value: UNWINDING
        name: Unwinding
      - value: VAULT_DEPOSIT
        name: VaultDeposit
      - value: VAULT_WITHDRAWAL
        name: VaultWithdrawal
      - value: AUTO_WITHDRAWAL
        name: AutoWithdrawal
    source:
      openapi: ../openapi.json
  ResponsesTransferResult:
    docs: TransferResult
    properties:
      account:
        type: optional<string>
        docs: Starknet Account address
      amount:
        type: optional<string>
        docs: Transferred amount
      auto_withdrawal_fee:
        type: optional<string>
        docs: Fee for auto withdrawal in USDC
      bridge:
        type: optional<ResponsesTransferBridge>
        docs: Bridge used for the transfer
      counterparty:
        type: optional<string>
        docs: Counterparty address
      created_at:
        type: optional<integer>
        docs: Unix Millis timestamp transfer was created on L2
      direction:
        type: optional<ResponsesTransferDirection>
        docs: Transfer direction (IN, OUT)
      external_account:
        type: optional<string>
        docs: External chain account address
      external_chain:
        type: optional<string>
        docs: External chain used for the transfer
      external_txn_hash:
        type: optional<string>
        docs: Transaction hash on the external chain
      failure_reason:
        type: optional<string>
        docs: Reason for transfer failure
      id:
        type: optional<string>
        docs: Transfer auto-generated ID
      kind:
        type: optional<ResponsesTransferKind>
        docs: Transfer Kind (DEPOSIT, WITHDRAWAL)
      last_updated_at:
        type: optional<integer>
        docs: Unix Millis timestamp transfer was last updated on L2
      socialized_loss_factor:
        type: optional<string>
        docs: Withdrawal's socialized loss factor
      status:
        type: optional<ResponsesTransferStatus>
        docs: Transfer External State (PENDING, AVAILABLE, COMPLETED, FAILED)
      token:
        type: optional<string>
        docs: Transferred token name
      txn_hash:
        type: optional<string>
        docs: Transaction hash on Paradex chain
      vault_address:
        type: optional<string>
        docs: Vault address
      vault_unwind_completion_percentage:
        type: optional<string>
        docs: Vault unwind completion percentage
    source:
      openapi: ../openapi.json
  ResponsesTransferStatus:
    enum:
      - value: PENDING
        name: Pending
      - value: AVAILABLE
        name: Available
      - value: COMPLETED
        name: Completed
      - value: FAILED
        name: Failed
    source:
      openapi: ../openapi.json
  ResponsesVaultAccountSummaryResp:
    properties:
      address:
        type: optional<string>
        docs: Contract address of the vault
      created_at:
        type: optional<integer>
        docs: Unix timestamp in milliseconds of when the user joined the vault.
      deposited_amount:
        type: optional<string>
        docs: Amount deposited on the vault by the user in USDC
      total_pnl:
        type: optional<string>
        docs: Total P&L realized by the user in USD.
      total_roi:
        type: optional<string>
        docs: Total ROI realized by the user in percentage, i.e. 0.1 means 10%.
      vtoken_amount:
        type: optional<string>
        docs: Amount of vault tokens owned by the user
    source:
      openapi: ../openapi.json
  ResponsesVaultHistoricalDataResp:
    properties:
      address:
        type: optional<string>
        docs: Contract address of the vault
      data:
        type: optional<list<double>>
        docs: Ordered list of datapoints
      timestamps:
        type: optional<list<integer>>
        docs: Ordered list of timestamps
    source:
      openapi: ../openapi.json
  ResponsesVaultKind:
    enum:
      - value: user
        name: User
      - value: protocol
        name: Protocol
    source:
      openapi: ../openapi.json
  ResponsesVaultPositionsResp:
    properties:
      results:
        type: optional<list<ResponsesPositionResp>>
        docs: List of the vault's positions
    source:
      openapi: ../openapi.json
  ResponsesVaultResp:
    properties:
      address:
        type: optional<string>
        docs: Contract address of the vault
      created_at:
        type: optional<integer>
        docs: Unix timestamp in milliseconds of when the vault has been created
      description:
        type: optional<string>
        docs: Description of the vault
      kind:
        type: optional<ResponsesVaultKind>
        docs: >-
          Kind of the vault: 'user' for user-defined vaults, 'protocol' for
          vaults controlled by Paradex
      last_updated_at:
        type: optional<integer>
        docs: Unix timestamp in milliseconds of when the vault was last updated
      lockup_period:
        type: optional<integer>
        docs: Lockup period of the vault in days
      max_tvl:
        type: optional<integer>
        docs: Maximum amount of assets the vault can hold in USDC
      name:
        type: optional<string>
        docs: Name of the vault
      operator_account:
        type: optional<string>
        docs: Operator account of the vault
      owner_account:
        type: optional<string>
        docs: Owner account of the vault
      profit_share:
        type: optional<integer>
        docs: Profit share of the vault in percentage, i.e. 10 means 10%
      status:
        type: optional<ResponsesVaultStatus>
        docs: Status of the vault
      strategies:
        type: optional<list<ResponsesStrategy>>
        docs: Strategies of the vault
      token_address:
        type: optional<string>
        docs: LP token address
    source:
      openapi: ../openapi.json
  ResponsesVaultStatus:
    enum:
      - value: INITIALIZING
        name: Initializing
      - value: ACTIVE
        name: Active
      - value: CLOSED
        name: Closed
      - value: FAILED
        name: Failed
    source:
      openapi: ../openapi.json
  ResponsesVaultSummaryResp:
    properties:
      address:
        type: optional<string>
        docs: Contract address of the vault
      last_month_return:
        type: optional<string>
        docs: >-
          APR return of the vault in the last trailing month in percentage, i.e.
          0.1 means 10%
      max_drawdown:
        type: optional<string>
        docs: >-
          Max all time drawdown realized by the vault in percentage, i.e. 0.1
          means 10%
      max_drawdown_24h:
        type: optional<string>
        docs: >-
          Max drawdown realized by the vault in the last 24 hours in percentage,
          i.e. 0.1 means 10%
      max_drawdown_30d:
        type: optional<string>
        docs: >-
          Max drawdown realized by the vault in the last 30 days in percentage,
          i.e. 0.1 means 10%
      max_drawdown_7d:
        type: optional<string>
        docs: >-
          Max drawdown realized by the vault in the last 7 days in percentage,
          i.e. 0.1 means 10%
      net_deposits:
        type: optional<string>
        docs: Net deposits of the vault in USDC
      num_depositors:
        type: optional<integer>
        docs: Number of depositors on the vault
      owner_equity:
        type: optional<string>
        docs: >-
          Vault equity of the owner (% of ownership) in percentage, i.e. 0.1
          means 10%
      pnl_24h:
        type: optional<string>
        docs: P&L of the vault in the last 24 hours in USD
      pnl_30d:
        type: optional<string>
        docs: P&L of the vault in the last 30 days in USD
      pnl_7d:
        type: optional<string>
        docs: P&L of the vault in the last 7 days in USD
      roi_24h:
        type: optional<string>
        docs: >-
          Return of the vault in the last 24 hours in percentage, i.e. 0.1 means
          10%
      roi_30d:
        type: optional<string>
        docs: >-
          Return of the vault in the last 30 days in percentage, i.e. 0.1 means
          10%
      roi_7d:
        type: optional<string>
        docs: >-
          Return of the vault in the last 7 days in percentage, i.e. 0.1 means
          10%
      total_pnl:
        type: optional<string>
        docs: Total P&L of the vault in USD
      total_roi:
        type: optional<string>
        docs: Total ROI of the vault in percentage, i.e. 0.1 means 10%
      tvl:
        type: optional<string>
        docs: >-
          Net deposits of the vault in USDC (deprecated; use net_deposits
          instead)
      volume:
        type: optional<string>
        docs: All time volume traded by the vault in USD
      volume_24h:
        type: optional<string>
        docs: Volume traded by the vault in the last 24 hours in USD
      volume_30d:
        type: optional<string>
        docs: Volume traded by the vault in the last 30 days in USD
      volume_7d:
        type: optional<string>
        docs: Volume traded by the vault in the last 7 days in USD
      vtoken_price:
        type: optional<string>
        docs: Current value of vault token price in USD
      vtoken_supply:
        type: optional<string>
        docs: Total amount of available vault tokens
    source:
      openapi: ../openapi.json
  ResponsesVaultTradesResp:
    properties:
      results:
        type: optional<list<ResponsesTradeResult>>
        docs: List of the vault's trades
    source:
      openapi: ../openapi.json
  ResponsesVaultTransfersResp:
    properties:
      results:
        type: optional<list<ResponsesTransferResult>>
        docs: List of the vault's transfers
    source:
      openapi: ../openapi.json
  ResponsesVaultsConfigResponse:
    properties:
      max_lockup_period_days:
        type: optional<string>
        docs: Maximum lockup period in days an owner can configure for a vault
      max_profit_share_percentage:
        type: optional<string>
        docs: >-
          Maximum profit share percentage (0-100) an owner can configure for a
          vault
      min_initial_deposit:
        type: optional<string>
        docs: >-
          Minimum initial collateral deposit (in currency units) at vault
          creation. Only applies to the owner
      min_lockup_period_days:
        type: optional<string>
        docs: Minimum lockup period in days an owner can configure for a vault
      min_owner_share_percentage:
        type: optional<string>
        docs: >-
          Minimum share percentage (0-100) the vault owner must maintain on the
          vault
      vault_factory_address:
        type: optional<string>
        docs: Address of the vault factory contract
    source:
      openapi: ../openapi.json
",
    },
    "account.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-account": {
              "auth": true,
              "display-name": "Get account information",
              "docs": "Respond with requester's account information
",
              "errors": [
                "root.GetAccountRequestBadRequestError",
                "root.GetAccountRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                      "account_value": "136285.06918911",
                      "free_collateral": "73276.47229774",
                      "initial_margin_requirement": "63008.59689218",
                      "maintenance_margin_requirement": "31597.25239676",
                      "margin_cushion": "104687.8167956",
                      "seq_no": 1681471234972000000,
                      "settlement_asset": "USDC",
                      "status": "ACTIVE",
                      "total_collateral": "123003.62047353",
                      "updated_at": 1681471234972,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account",
              "request": {
                "name": "GetAccountRequest",
                "query-parameters": {
                  "subaccount_address": {
                    "docs": "Subaccount address",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAccountSummaryResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-account-margin": {
              "auth": true,
              "display-name": "Get account margin configuration",
              "docs": "Get margin configuration for an account and market",
              "errors": [
                "root.GetAccountMarginRequestBadRequestError",
                "root.GetAccountMarginRequestNotFoundError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "market": "market",
                  },
                  "response": {
                    "body": {
                      "account": "account",
                      "leverage": 1,
                      "margin_type": 1,
                      "market": "market",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account/margin",
              "request": {
                "name": "GetAccountMarginRequest",
                "query-parameters": {
                  "market": {
                    "docs": "Market Name - example: BTC-USD-PERP",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.MessageAccountMarginConfig",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-account-profile": {
              "auth": true,
              "display-name": "Get account profile information",
              "docs": "Respond with requester's account information
",
              "errors": [
                "root.GetAccountProfileRequestBadRequestError",
                "root.GetAccountProfileRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "discord": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "is_username_private": true,
                      "max_slippage": "0.05",
                      "nfts": [
                        {
                          "collection_address": "collection_address",
                          "collection_name": "collection_name",
                          "description": "description",
                          "id": "id",
                          "image_url": "image_url",
                          "name": "name",
                        },
                      ],
                      "programs_eligibility": {
                        "affiliate": "Pending",
                        "fee": "True",
                        "maker": "True",
                        "referral": "False",
                      },
                      "referral_code": "cryptofox8",
                      "referred_by": "maxDegen",
                      "twitter": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "username": "username",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account/profile",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAccountProfileResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-accounts-info": {
              "auth": true,
              "display-name": "Return account info of current account",
              "docs": undefined,
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "created_at": 1681471234972,
                          "derivation_path": "m/44'/9004'/0'/0/1",
                          "isolated_market": "ETHUSD-PERP",
                          "kind": "",
                          "parent_account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                          "public_key": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                          "username": "username",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account/info",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetAccountsInfoResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-balance": {
              "auth": true,
              "display-name": "List balances",
              "docs": "Respond with requester's own balances
",
              "errors": [
                "root.GetBalanceRequestBadRequestError",
                "root.GetBalanceRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "last_updated_at": 1681462770114,
                          "size": "123003.620",
                          "token": "USDC",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/balance",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetBalancesResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-funding": {
              "auth": true,
              "display-name": "Funding payments history",
              "docs": "List funding payments made by/to the requester's account

*Funding payments are periodic payments between traders to make the perpetual
futures contract price is close to the index price.*
",
              "errors": [
                "root.GetFundingRequestBadRequestError",
                "root.GetFundingRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "created_at": 1681375481000,
                          "fill_id": "8615262148007718462",
                          "id": "1681375578221101699352320000",
                          "index": "-2819.53434361",
                          "market": "BTC-USD-PERP",
                          "payment": "34.4490622",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/funding/payments",
              "request": {
                "name": "GetFundingRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": {
                    "docs": "Market for which funding payments are queried",
                    "type": "string",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesFundingHistoryResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-positions": {
              "auth": true,
              "display-name": "List open positions",
              "docs": "Get all positions owned by current user
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "average_entry_price": "29001.34",
                          "average_entry_price_usd": "29001.34",
                          "average_exit_price": "29001.34",
                          "cached_funding_index": "1234.3",
                          "closed_at": 1681493939981,
                          "cost": "-10005.4623",
                          "cost_usd": "-10005.4623",
                          "created_at": 1681493939981,
                          "id": "1234234",
                          "last_fill_id": "1234234",
                          "last_updated_at": 1681493939981,
                          "leverage": "leverage",
                          "liquidation_price": "liquidation_price",
                          "market": "BTC-USD-PERP",
                          "realized_positional_funding_pnl": "realized_positional_funding_pnl",
                          "realized_positional_pnl": "realized_positional_pnl",
                          "seq_no": 1681471234972000000,
                          "side": "SHORT",
                          "size": "-0.345",
                          "status": "OPEN",
                          "unrealized_funding_pnl": "12.234",
                          "unrealized_pnl": "-123.23",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/positions",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetPositionsResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-positions-with-filter": {
              "auth": true,
              "display-name": "List closed positions history",
              "docs": "Get all positions owned by current user
",
              "examples": [
                {
                  "query-parameters": {
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "average_entry_price": "29001.34",
                          "average_entry_price_usd": "29001.34",
                          "average_exit_price": "29001.34",
                          "cached_funding_index": "1234.3",
                          "closed_at": 1681493939981,
                          "cost": "-10005.4623",
                          "cost_usd": "-10005.4623",
                          "created_at": 1681493939981,
                          "id": "1234234",
                          "last_fill_id": "1234234",
                          "last_updated_at": 1681493939981,
                          "leverage": "leverage",
                          "liquidation_price": "liquidation_price",
                          "market": "BTC-USD-PERP",
                          "realized_positional_funding_pnl": "realized_positional_funding_pnl",
                          "realized_positional_pnl": "realized_positional_pnl",
                          "seq_no": 1681471234972000000,
                          "side": "SHORT",
                          "size": "-0.345",
                          "status": "OPEN",
                          "unrealized_funding_pnl": "12.234",
                          "unrealized_pnl": "-123.23",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/positions-history",
              "request": {
                "name": "GetPositionsWithFilterRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": "optional<string>",
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "side": "optional<GetPositionsWithFilterRequestSide>",
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetPositionsHistoryResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-sub-accounts": {
              "auth": true,
              "display-name": "List sub-accounts of current account",
              "docs": "Respond with requester's list of sub-accounts
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "created_at": 1681471234972,
                          "derivation_path": "m/44'/9004'/0'/0/1",
                          "isolated_market": "ETHUSD-PERP",
                          "kind": "",
                          "parent_account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                          "public_key": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                          "username": "username",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/account/subaccounts",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetSubAccountsResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "listFills": {
              "auth": true,
              "display-name": "List fills",
              "docs": "This API returns a list of matched orders (i.e. fills) that have been sent to
chain for settlement.
",
              "errors": [
                "root.GetFillsRequestBadRequestError",
                "root.GetFillsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "client_id": "x1234",
                          "created_at": 1681375176910,
                          "fee": "7.56",
                          "fee_currency": "USDC",
                          "fill_type": "FILL",
                          "id": "8615262148007718462",
                          "liquidity": "TAKER",
                          "market": "BTC-USD-PERP",
                          "order_id": "1681462103821101699438490000",
                          "price": "30000.12",
                          "realized_funding": "7.56",
                          "realized_pnl": "7.56",
                          "remaining_size": "0.5",
                          "side": "BUY",
                          "size": "0.5",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/fills",
              "request": {
                "name": "GetFillsRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": "optional<string>",
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetFillsResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "tradebusts": {
              "auth": true,
              "display-name": "List tradebusts",
              "docs": "Retrieves a list of tradebusts associated to the requester's account
",
              "errors": [
                "root.TradebustsRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "busted_fill_id": "12342345",
                          "created_at": 1681497002041,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/tradebusts",
              "request": {
                "name": "TradebustsRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetTradebustsResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "transactions": {
              "auth": true,
              "display-name": "List transactions",
              "docs": "Retrieves a list of transactions initiated by the user
",
              "errors": [
                "root.TransactionsRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "completed_at": 1,
                          "created_at": 1,
                          "hash": "0x445c05d6bfb899e39338440d199971c4d7f4cde7878ed3888df3f716efb8df2",
                          "id": "12342423",
                          "state": "ACCEPTED_ON_L1",
                          "type": "TRANSACTION_FILL",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transactions",
              "request": {
                "name": "TransactionsRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetTransactionResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "update-account-max-slippage": {
              "auth": true,
              "display-name": "Updates account max slippage",
              "docs": "Respond with requester's account max_slippage
",
              "errors": [
                "root.UpdateAccountMaxSlippageRequestBadRequestError",
                "root.UpdateAccountMaxSlippageRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "request": {
                    "max_slippage": "max_slippage",
                  },
                  "response": {
                    "body": {
                      "discord": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "is_username_private": true,
                      "max_slippage": "0.05",
                      "nfts": [
                        {
                          "collection_address": "collection_address",
                          "collection_name": "collection_name",
                          "description": "description",
                          "id": "id",
                          "image_url": "image_url",
                          "name": "name",
                        },
                      ],
                      "programs_eligibility": {
                        "affiliate": "Pending",
                        "fee": "True",
                        "maker": "True",
                        "referral": "False",
                      },
                      "referral_code": "cryptofox8",
                      "referred_by": "maxDegen",
                      "twitter": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "username": "username",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/account/profile/max_slippage",
              "request": {
                "body": {
                  "properties": {
                    "max_slippage": "string",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RequestsUpdateAccountMaxSlippageRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAccountProfileResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "update-account-profile-referral-code": {
              "auth": true,
              "display-name": "Updates account profile fields",
              "docs": "Respond with requester's account information
",
              "errors": [
                "root.UpdateAccountProfileReferralCodeRequestBadRequestError",
                "root.UpdateAccountProfileReferralCodeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "discord": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "is_username_private": true,
                      "max_slippage": "0.05",
                      "nfts": [
                        {
                          "collection_address": "collection_address",
                          "collection_name": "collection_name",
                          "description": "description",
                          "id": "id",
                          "image_url": "image_url",
                          "name": "name",
                        },
                      ],
                      "programs_eligibility": {
                        "affiliate": "Pending",
                        "fee": "True",
                        "maker": "True",
                        "referral": "False",
                      },
                      "referral_code": "cryptofox8",
                      "referred_by": "maxDegen",
                      "twitter": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "username": "username",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/account/profile/referral_code",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAccountProfileResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "update-account-profile-username": {
              "auth": true,
              "display-name": "Updates account profile username fields",
              "docs": "Respond with requester's account information
",
              "errors": [
                "root.UpdateAccountProfileUsernameRequestBadRequestError",
                "root.UpdateAccountProfileUsernameRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "discord": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "is_username_private": true,
                      "max_slippage": "0.05",
                      "nfts": [
                        {
                          "collection_address": "collection_address",
                          "collection_name": "collection_name",
                          "description": "description",
                          "id": "id",
                          "image_url": "image_url",
                          "name": "name",
                        },
                      ],
                      "programs_eligibility": {
                        "affiliate": "Pending",
                        "fee": "True",
                        "maker": "True",
                        "referral": "False",
                      },
                      "referral_code": "cryptofox8",
                      "referred_by": "maxDegen",
                      "twitter": {
                        "id": "id",
                        "image_url": "image_url",
                        "username": "username",
                      },
                      "username": "username",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/account/profile/username",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAccountProfileResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "upsert-account-margin": {
              "auth": true,
              "display-name": "Set margin configuration",
              "docs": "Set margin configuration for an account and market",
              "errors": [
                "root.UpsertAccountMarginRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "market": "market",
                  },
                  "request": {
                    "leverage": 10,
                    "margin_type": "CROSS",
                  },
                  "response": {
                    "body": {
                      "account": "account",
                      "leverage": 1,
                      "margin_type": 1,
                      "market": "market",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/account/margin/{market}",
              "path-parameters": {
                "market": {
                  "docs": "Market Name - example: BTC-USD-PERP",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "leverage": {
                      "docs": "Leverage value (1 up to market's maximum leverage)",
                      "type": "integer",
                    },
                    "margin_type": {
                      "docs": "Margin type (CROSS or ISOLATED)",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RequestsAccountMarginRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.MessageAccountMarginConfig",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "GetPositionsWithFilterRequestSide": {
            "enum": [
              "LONG",
              "SHORT",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-account:
      path: /account
      method: GET
      auth: true
      docs: |
        Respond with requester's account information
      source:
        openapi: ../openapi.json
      display-name: Get account information
      request:
        name: GetAccountRequest
        query-parameters:
          subaccount_address:
            type: optional<string>
            docs: Subaccount address
      response:
        docs: OK
        type: root.ResponsesAccountSummaryResponse
        status-code: 200
      errors:
        - root.GetAccountRequestBadRequestError
        - root.GetAccountRequestUnauthorizedError
      examples:
        - response:
            body:
              account: >-
                0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
              account_value: '136285.06918911'
              free_collateral: '73276.47229774'
              initial_margin_requirement: '63008.59689218'
              maintenance_margin_requirement: '31597.25239676'
              margin_cushion: '104687.8167956'
              seq_no: 1681471234972000000
              settlement_asset: USDC
              status: ACTIVE
              total_collateral: '123003.62047353'
              updated_at: 1681471234972
    get-accounts-info:
      path: /account/info
      method: GET
      auth: true
      source:
        openapi: ../openapi.json
      display-name: Return account info of current account
      response:
        docs: OK
        type: root.ResponsesGetAccountsInfoResponse
        status-code: 200
      examples:
        - response:
            body:
              results:
                - account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  created_at: 1681471234972
                  derivation_path: m/44'/9004'/0'/0/1
                  isolated_market: ETHUSD-PERP
                  kind: ''
                  parent_account: '0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d'
                  public_key: '0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d'
                  username: username
    get-account-margin:
      path: /account/margin
      method: GET
      auth: true
      docs: Get margin configuration for an account and market
      source:
        openapi: ../openapi.json
      display-name: Get account margin configuration
      request:
        name: GetAccountMarginRequest
        query-parameters:
          market:
            type: string
            docs: 'Market Name - example: BTC-USD-PERP'
      response:
        docs: OK
        type: root.MessageAccountMarginConfig
        status-code: 200
      errors:
        - root.GetAccountMarginRequestBadRequestError
        - root.GetAccountMarginRequestNotFoundError
      examples:
        - query-parameters:
            market: market
          response:
            body:
              account: account
              leverage: 1
              margin_type: 1
              market: market
    upsert-account-margin:
      path: /account/margin/{market}
      method: POST
      auth: true
      docs: Set margin configuration for an account and market
      source:
        openapi: ../openapi.json
      path-parameters:
        market:
          type: string
          docs: 'Market Name - example: BTC-USD-PERP'
      display-name: Set margin configuration
      request:
        name: RequestsAccountMarginRequest
        body:
          properties:
            leverage:
              type: integer
              docs: Leverage value (1 up to market's maximum leverage)
            margin_type:
              type: string
              docs: Margin type (CROSS or ISOLATED)
        content-type: application/json
      response:
        docs: OK
        type: root.MessageAccountMarginConfig
        status-code: 200
      errors:
        - root.UpsertAccountMarginRequestBadRequestError
      examples:
        - path-parameters:
            market: market
          request:
            leverage: 10
            margin_type: CROSS
          response:
            body:
              account: account
              leverage: 1
              margin_type: 1
              market: market
    get-account-profile:
      path: /account/profile
      method: GET
      auth: true
      docs: |
        Respond with requester's account information
      source:
        openapi: ../openapi.json
      display-name: Get account profile information
      response:
        docs: OK
        type: root.ResponsesAccountProfileResp
        status-code: 200
      errors:
        - root.GetAccountProfileRequestBadRequestError
        - root.GetAccountProfileRequestUnauthorizedError
      examples:
        - response:
            body:
              discord:
                id: id
                image_url: image_url
                username: username
              is_username_private: true
              max_slippage: '0.05'
              nfts:
                - collection_address: collection_address
                  collection_name: collection_name
                  description: description
                  id: id
                  image_url: image_url
                  name: name
              programs_eligibility:
                affiliate: Pending
                fee: 'True'
                maker: 'True'
                referral: 'False'
              referral_code: cryptofox8
              referred_by: maxDegen
              twitter:
                id: id
                image_url: image_url
                username: username
              username: username
    update-account-max-slippage:
      path: /account/profile/max_slippage
      method: POST
      auth: true
      docs: |
        Respond with requester's account max_slippage
      source:
        openapi: ../openapi.json
      display-name: Updates account max slippage
      request:
        name: RequestsUpdateAccountMaxSlippageRequest
        body:
          properties:
            max_slippage: string
        content-type: application/json
      response:
        docs: OK
        type: root.ResponsesAccountProfileResp
        status-code: 200
      errors:
        - root.UpdateAccountMaxSlippageRequestBadRequestError
        - root.UpdateAccountMaxSlippageRequestUnauthorizedError
      examples:
        - request:
            max_slippage: max_slippage
          response:
            body:
              discord:
                id: id
                image_url: image_url
                username: username
              is_username_private: true
              max_slippage: '0.05'
              nfts:
                - collection_address: collection_address
                  collection_name: collection_name
                  description: description
                  id: id
                  image_url: image_url
                  name: name
              programs_eligibility:
                affiliate: Pending
                fee: 'True'
                maker: 'True'
                referral: 'False'
              referral_code: cryptofox8
              referred_by: maxDegen
              twitter:
                id: id
                image_url: image_url
                username: username
              username: username
    update-account-profile-referral-code:
      path: /account/profile/referral_code
      method: POST
      auth: true
      docs: |
        Respond with requester's account information
      source:
        openapi: ../openapi.json
      display-name: Updates account profile fields
      response:
        docs: OK
        type: root.ResponsesAccountProfileResp
        status-code: 200
      errors:
        - root.UpdateAccountProfileReferralCodeRequestBadRequestError
        - root.UpdateAccountProfileReferralCodeRequestUnauthorizedError
      examples:
        - response:
            body:
              discord:
                id: id
                image_url: image_url
                username: username
              is_username_private: true
              max_slippage: '0.05'
              nfts:
                - collection_address: collection_address
                  collection_name: collection_name
                  description: description
                  id: id
                  image_url: image_url
                  name: name
              programs_eligibility:
                affiliate: Pending
                fee: 'True'
                maker: 'True'
                referral: 'False'
              referral_code: cryptofox8
              referred_by: maxDegen
              twitter:
                id: id
                image_url: image_url
                username: username
              username: username
    update-account-profile-username:
      path: /account/profile/username
      method: POST
      auth: true
      docs: |
        Respond with requester's account information
      source:
        openapi: ../openapi.json
      display-name: Updates account profile username fields
      response:
        docs: OK
        type: root.ResponsesAccountProfileResp
        status-code: 200
      errors:
        - root.UpdateAccountProfileUsernameRequestBadRequestError
        - root.UpdateAccountProfileUsernameRequestUnauthorizedError
      examples:
        - response:
            body:
              discord:
                id: id
                image_url: image_url
                username: username
              is_username_private: true
              max_slippage: '0.05'
              nfts:
                - collection_address: collection_address
                  collection_name: collection_name
                  description: description
                  id: id
                  image_url: image_url
                  name: name
              programs_eligibility:
                affiliate: Pending
                fee: 'True'
                maker: 'True'
                referral: 'False'
              referral_code: cryptofox8
              referred_by: maxDegen
              twitter:
                id: id
                image_url: image_url
                username: username
              username: username
    get-sub-accounts:
      path: /account/subaccounts
      method: GET
      auth: true
      docs: |
        Respond with requester's list of sub-accounts
      source:
        openapi: ../openapi.json
      display-name: List sub-accounts of current account
      response:
        docs: OK
        type: root.ResponsesGetSubAccountsResponse
        status-code: 200
      examples:
        - response:
            body:
              results:
                - account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  created_at: 1681471234972
                  derivation_path: m/44'/9004'/0'/0/1
                  isolated_market: ETHUSD-PERP
                  kind: ''
                  parent_account: '0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d'
                  public_key: '0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d'
                  username: username
    get-balance:
      path: /balance
      method: GET
      auth: true
      docs: |
        Respond with requester's own balances
      source:
        openapi: ../openapi.json
      display-name: List balances
      response:
        docs: OK
        type: root.ResponsesGetBalancesResp
        status-code: 200
      errors:
        - root.GetBalanceRequestBadRequestError
        - root.GetBalanceRequestUnauthorizedError
      examples:
        - response:
            body:
              results:
                - last_updated_at: 1681462770114
                  size: '123003.620'
                  token: USDC
    listFills:
      path: /fills
      method: GET
      auth: true
      docs: "This API returns a list of matched orders (i.e. fills) that have been sent to\r\nchain for settlement.\r\n"
      source:
        openapi: ../openapi.json
      display-name: List fills
      request:
        name: GetFillsRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market: optional<string>
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesGetFillsResp
        status-code: 200
      errors:
        - root.GetFillsRequestBadRequestError
        - root.GetFillsRequestUnauthorizedError
      examples:
        - response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - client_id: x1234
                  created_at: 1681375176910
                  fee: '7.56'
                  fee_currency: USDC
                  fill_type: FILL
                  id: '8615262148007718462'
                  liquidity: TAKER
                  market: BTC-USD-PERP
                  order_id: '1681462103821101699438490000'
                  price: '30000.12'
                  realized_funding: '7.56'
                  realized_pnl: '7.56'
                  remaining_size: '0.5'
                  side: BUY
                  size: '0.5'
    get-funding:
      path: /funding/payments
      method: GET
      auth: true
      docs: >
        List funding payments made by/to the requester's account


        *Funding payments are periodic payments between traders to make the
        perpetual

        futures contract price is close to the index price.*
      source:
        openapi: ../openapi.json
      display-name: Funding payments history
      request:
        name: GetFundingRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market:
            type: string
            docs: Market for which funding payments are queried
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesFundingHistoryResp
        status-code: 200
      errors:
        - root.GetFundingRequestBadRequestError
        - root.GetFundingRequestUnauthorizedError
      examples:
        - query-parameters:
            market: BTC-USD-PERP
          response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - created_at: 1681375481000
                  fill_id: '8615262148007718462'
                  id: '1681375578221101699352320000'
                  index: '-2819.53434361'
                  market: BTC-USD-PERP
                  payment: '34.4490622'
    get-positions:
      path: /positions
      method: GET
      auth: true
      docs: |
        Get all positions owned by current user
      source:
        openapi: ../openapi.json
      display-name: List open positions
      response:
        docs: OK
        type: root.ResponsesGetPositionsResp
        status-code: 200
      examples:
        - response:
            body:
              results:
                - average_entry_price: '29001.34'
                  average_entry_price_usd: '29001.34'
                  average_exit_price: '29001.34'
                  cached_funding_index: '1234.3'
                  closed_at: 1681493939981
                  cost: '-10005.4623'
                  cost_usd: '-10005.4623'
                  created_at: 1681493939981
                  id: '1234234'
                  last_fill_id: '1234234'
                  last_updated_at: 1681493939981
                  leverage: leverage
                  liquidation_price: liquidation_price
                  market: BTC-USD-PERP
                  realized_positional_funding_pnl: realized_positional_funding_pnl
                  realized_positional_pnl: realized_positional_pnl
                  seq_no: 1681471234972000000
                  side: SHORT
                  size: '-0.345'
                  status: OPEN
                  unrealized_funding_pnl: '12.234'
                  unrealized_pnl: '-123.23'
    get-positions-with-filter:
      path: /positions-history
      method: GET
      auth: true
      docs: |
        Get all positions owned by current user
      source:
        openapi: ../openapi.json
      display-name: List closed positions history
      request:
        name: GetPositionsWithFilterRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market: optional<string>
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          side: optional<GetPositionsWithFilterRequestSide>
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesGetPositionsHistoryResp
        status-code: 200
      examples:
        - query-parameters:
            market: BTC-USD-PERP
          response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - average_entry_price: '29001.34'
                  average_entry_price_usd: '29001.34'
                  average_exit_price: '29001.34'
                  cached_funding_index: '1234.3'
                  closed_at: 1681493939981
                  cost: '-10005.4623'
                  cost_usd: '-10005.4623'
                  created_at: 1681493939981
                  id: '1234234'
                  last_fill_id: '1234234'
                  last_updated_at: 1681493939981
                  leverage: leverage
                  liquidation_price: liquidation_price
                  market: BTC-USD-PERP
                  realized_positional_funding_pnl: realized_positional_funding_pnl
                  realized_positional_pnl: realized_positional_pnl
                  seq_no: 1681471234972000000
                  side: SHORT
                  size: '-0.345'
                  status: OPEN
                  unrealized_funding_pnl: '12.234'
                  unrealized_pnl: '-123.23'
    tradebusts:
      path: /tradebusts
      method: GET
      auth: true
      docs: |
        Retrieves a list of tradebusts associated to the requester's account
      source:
        openapi: ../openapi.json
      display-name: List tradebusts
      request:
        name: TradebustsRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesGetTradebustsResp
        status-code: 200
      errors:
        - root.TradebustsRequestBadRequestError
      examples:
        - response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  busted_fill_id: '12342345'
                  created_at: 1681497002041
    transactions:
      path: /transactions
      method: GET
      auth: true
      docs: |
        Retrieves a list of transactions initiated by the user
      source:
        openapi: ../openapi.json
      display-name: List transactions
      request:
        name: TransactionsRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesGetTransactionResponse
        status-code: 200
      errors:
        - root.TransactionsRequestBadRequestError
      examples:
        - response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - completed_at: 1
                  created_at: 1
                  hash: >-
                    0x445c05d6bfb899e39338440d199971c4d7f4cde7878ed3888df3f716efb8df2
                  id: '12342423'
                  state: ACCEPTED_ON_L1
                  type: TRANSACTION_FILL
  source:
    openapi: ../openapi.json
types:
  GetPositionsWithFilterRequestSide:
    enum:
      - LONG
      - SHORT
    source:
      openapi: ../openapi.json
",
    },
    "algos.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "cancel-algo-order": {
              "auth": true,
              "display-name": "Cancel algo order by id",
              "docs": "Cancel an existing algo order by id
",
              "errors": [
                "root.CancelAlgoOrderRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "algo_id": "algo_id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/algo/orders/{algo_id}",
              "path-parameters": {
                "algo_id": {
                  "docs": "Algo ID",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "create-algo-order": {
              "auth": true,
              "display-name": "Create algo order",
              "docs": "Open a new algo order

### TWAP

TWAP orders break a large trade into smaller ones over time to reduce market impact:
- Sub-orders are placed every 30 seconds.
- Order duration is between 30 and 86,400 seconds, in multiples of 30.
- Supported sub order type: MARKET
",
              "errors": [
                "root.CreateAlgoOrderRequestBadRequestError",
              ],
              "examples": [
                {
                  "request": {
                    "algo_type": "TWAP",
                    "duration_seconds": 3600,
                    "market": "BTC-USD-PERP",
                    "side": "BUY",
                    "signature": "signature",
                    "signature_timestamp": 1,
                    "size": "1.213",
                    "type": "MARKET",
                  },
                  "response": {
                    "body": {
                      "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                      "algo_type": "",
                      "avg_fill_price": "26000",
                      "cancel_reason": "NOT_ENOUGH_MARGIN",
                      "created_at": 1681493746016,
                      "end_at": 1681493746016,
                      "id": "123456",
                      "last_updated_at": 1681493746016,
                      "market": "BTC-USD-PERP",
                      "remaining_size": "0",
                      "side": "BUY",
                      "size": "0.05",
                      "status": "NEW",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/algo/orders",
              "request": {
                "body": {
                  "properties": {
                    "algo_type": {
                      "docs": "Algo type, required for algo orders creation",
                      "type": "string",
                    },
                    "duration_seconds": {
                      "docs": "Duration in seconds for which the algo order will be running, required for algo orders creation",
                      "type": "integer",
                    },
                    "market": {
                      "docs": "Market for which order is created",
                      "type": "string",
                    },
                    "side": {
                      "docs": "Algo order side",
                      "type": "root.ResponsesOrderSide",
                    },
                    "signature": {
                      "docs": "Order Payload signed with STARK Private Key",
                      "type": "string",
                    },
                    "signature_timestamp": {
                      "docs": "Timestamp of order creation, used for signature verification",
                      "type": "integer",
                    },
                    "size": {
                      "docs": "Size of the algo order",
                      "type": "string",
                    },
                    "type": {
                      "docs": "Algo order type, only MARKET is supported",
                      "type": "root.ResponsesOrderType",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RequestsAlgoOrderRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Created",
                "status-code": 201,
                "type": "root.ResponsesAlgoOrderResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-algo-order-by-id": {
              "auth": true,
              "display-name": "Get algo order by id",
              "docs": "Get an algo order by id. Only return algo order in `OPEN` or `NEW` status.
",
              "errors": [
                "root.GetAlgoOrderByIdRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "algo_id": "algo_id",
                  },
                  "response": {
                    "body": {
                      "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                      "algo_type": "",
                      "avg_fill_price": "26000",
                      "cancel_reason": "NOT_ENOUGH_MARGIN",
                      "created_at": 1681493746016,
                      "end_at": 1681493746016,
                      "id": "123456",
                      "last_updated_at": 1681493746016,
                      "market": "BTC-USD-PERP",
                      "remaining_size": "0",
                      "side": "BUY",
                      "size": "0.05",
                      "status": "NEW",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/algo/orders/{algo_id}",
              "path-parameters": {
                "algo_id": {
                  "docs": "Algo ID",
                  "type": "string",
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAlgoOrderResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-algo-orders-history": {
              "auth": true,
              "display-name": "Get algo orders history",
              "docs": "Get current user algo orders filtered on attributes
",
              "errors": [
                "root.GetAlgoOrdersHistoryRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "client_id": "client-id",
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                          "algo_type": "",
                          "avg_fill_price": "26000",
                          "cancel_reason": "NOT_ENOUGH_MARGIN",
                          "created_at": 1681493746016,
                          "end_at": 1681493746016,
                          "id": "123456",
                          "last_updated_at": 1681493746016,
                          "market": "BTC-USD-PERP",
                          "remaining_size": "0",
                          "side": "BUY",
                          "size": "0.05",
                          "status": "NEW",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/algo/orders-history",
              "request": {
                "name": "GetAlgoOrdersHistoryRequest",
                "query-parameters": {
                  "client_id": {
                    "docs": "Unique ID of client generating the order",
                    "type": "optional<string>",
                  },
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": {
                    "docs": "Market for the order",
                    "type": "optional<string>",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "side": {
                    "docs": "Order side",
                    "type": "optional<GetAlgoOrdersHistoryRequestSide>",
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "status": {
                    "docs": "Order status",
                    "type": "optional<GetAlgoOrdersHistoryRequestStatus>",
                  },
                  "type": {
                    "docs": "Order type",
                    "type": "optional<GetAlgoOrdersHistoryRequestType>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetAlgoOrders",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-open-algo-orders": {
              "auth": true,
              "display-name": "Get open algo orders",
              "docs": "Get current user all open algo orders
",
              "errors": [
                "root.GetOpenAlgoOrdersRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                          "algo_type": "",
                          "avg_fill_price": "26000",
                          "cancel_reason": "NOT_ENOUGH_MARGIN",
                          "created_at": 1681493746016,
                          "end_at": 1681493746016,
                          "id": "123456",
                          "last_updated_at": 1681493746016,
                          "market": "BTC-USD-PERP",
                          "remaining_size": "0",
                          "side": "BUY",
                          "size": "0.05",
                          "status": "NEW",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/algo/orders",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetOpenAlgoOrders",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "GetAlgoOrdersHistoryRequestSide": {
            "enum": [
              "BUY",
              "SELL",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "GetAlgoOrdersHistoryRequestStatus": {
            "enum": [
              "OPEN",
              "CLOSED",
              "NEW",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "GetAlgoOrdersHistoryRequestType": {
            "enum": [
              "LIMIT",
              "MARKET",
              "STOP_LIMIT",
              "STOP_MARKET",
              "STOP_LOSS_LIMIT",
              "STOP_LOSS_MARKET",
              "TAKE_PROFIT_LIMIT",
              "TAKE_PROFIT_MARKET",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-open-algo-orders:
      path: /algo/orders
      method: GET
      auth: true
      docs: |
        Get current user all open algo orders
      source:
        openapi: ../openapi.json
      display-name: Get open algo orders
      response:
        docs: OK
        type: root.ResponsesGetOpenAlgoOrders
        status-code: 200
      errors:
        - root.GetOpenAlgoOrdersRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - account: >-
                    0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512
                  algo_type: ''
                  avg_fill_price: '26000'
                  cancel_reason: NOT_ENOUGH_MARGIN
                  created_at: 1681493746016
                  end_at: 1681493746016
                  id: '123456'
                  last_updated_at: 1681493746016
                  market: BTC-USD-PERP
                  remaining_size: '0'
                  side: BUY
                  size: '0.05'
                  status: NEW
    create-algo-order:
      path: /algo/orders
      method: POST
      auth: true
      docs: >
        Open a new algo order


        ### TWAP


        TWAP orders break a large trade into smaller ones over time to reduce
        market impact:

        - Sub-orders are placed every 30 seconds.

        - Order duration is between 30 and 86,400 seconds, in multiples of 30.

        - Supported sub order type: MARKET
      source:
        openapi: ../openapi.json
      display-name: Create algo order
      request:
        name: RequestsAlgoOrderRequest
        body:
          properties:
            algo_type:
              type: string
              docs: Algo type, required for algo orders creation
            duration_seconds:
              type: integer
              docs: >-
                Duration in seconds for which the algo order will be running,
                required for algo orders creation
            market:
              type: string
              docs: Market for which order is created
            side:
              type: root.ResponsesOrderSide
              docs: Algo order side
            signature:
              type: string
              docs: Order Payload signed with STARK Private Key
            signature_timestamp:
              type: integer
              docs: Timestamp of order creation, used for signature verification
            size:
              type: string
              docs: Size of the algo order
            type:
              type: root.ResponsesOrderType
              docs: Algo order type, only MARKET is supported
        content-type: application/json
      response:
        docs: Created
        type: root.ResponsesAlgoOrderResp
        status-code: 201
      errors:
        - root.CreateAlgoOrderRequestBadRequestError
      examples:
        - request:
            algo_type: TWAP
            duration_seconds: 3600
            market: BTC-USD-PERP
            side: BUY
            signature: signature
            signature_timestamp: 1
            size: '1.213'
            type: MARKET
          response:
            body:
              account: '0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512'
              algo_type: ''
              avg_fill_price: '26000'
              cancel_reason: NOT_ENOUGH_MARGIN
              created_at: 1681493746016
              end_at: 1681493746016
              id: '123456'
              last_updated_at: 1681493746016
              market: BTC-USD-PERP
              remaining_size: '0'
              side: BUY
              size: '0.05'
              status: NEW
    get-algo-orders-history:
      path: /algo/orders-history
      method: GET
      auth: true
      docs: |
        Get current user algo orders filtered on attributes
      source:
        openapi: ../openapi.json
      display-name: Get algo orders history
      request:
        name: GetAlgoOrdersHistoryRequest
        query-parameters:
          client_id:
            type: optional<string>
            docs: Unique ID of client generating the order
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market:
            type: optional<string>
            docs: Market for the order
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          side:
            type: optional<GetAlgoOrdersHistoryRequestSide>
            docs: Order side
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
          status:
            type: optional<GetAlgoOrdersHistoryRequestStatus>
            docs: Order status
          type:
            type: optional<GetAlgoOrdersHistoryRequestType>
            docs: Order type
      response:
        docs: OK
        type: root.ResponsesGetAlgoOrders
        status-code: 200
      errors:
        - root.GetAlgoOrdersHistoryRequestBadRequestError
      examples:
        - query-parameters:
            client_id: client-id
            market: BTC-USD-PERP
          response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - account: >-
                    0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512
                  algo_type: ''
                  avg_fill_price: '26000'
                  cancel_reason: NOT_ENOUGH_MARGIN
                  created_at: 1681493746016
                  end_at: 1681493746016
                  id: '123456'
                  last_updated_at: 1681493746016
                  market: BTC-USD-PERP
                  remaining_size: '0'
                  side: BUY
                  size: '0.05'
                  status: NEW
    get-algo-order-by-id:
      path: /algo/orders/{algo_id}
      method: GET
      auth: true
      docs: >
        Get an algo order by id. Only return algo order in `OPEN` or `NEW`
        status.
      source:
        openapi: ../openapi.json
      path-parameters:
        algo_id:
          type: string
          docs: Algo ID
      display-name: Get algo order by id
      response:
        docs: OK
        type: root.ResponsesAlgoOrderResp
        status-code: 200
      errors:
        - root.GetAlgoOrderByIdRequestNotFoundError
      examples:
        - path-parameters:
            algo_id: algo_id
          response:
            body:
              account: '0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512'
              algo_type: ''
              avg_fill_price: '26000'
              cancel_reason: NOT_ENOUGH_MARGIN
              created_at: 1681493746016
              end_at: 1681493746016
              id: '123456'
              last_updated_at: 1681493746016
              market: BTC-USD-PERP
              remaining_size: '0'
              side: BUY
              size: '0.05'
              status: NEW
    cancel-algo-order:
      path: /algo/orders/{algo_id}
      method: DELETE
      auth: true
      docs: |
        Cancel an existing algo order by id
      source:
        openapi: ../openapi.json
      path-parameters:
        algo_id:
          type: string
          docs: Algo ID
      display-name: Cancel algo order by id
      errors:
        - root.CancelAlgoOrderRequestNotFoundError
      examples:
        - path-parameters:
            algo_id: algo_id
  source:
    openapi: ../openapi.json
types:
  GetAlgoOrdersHistoryRequestSide:
    enum:
      - BUY
      - SELL
    source:
      openapi: ../openapi.json
  GetAlgoOrdersHistoryRequestStatus:
    enum:
      - OPEN
      - CLOSED
      - NEW
    source:
      openapi: ../openapi.json
  GetAlgoOrdersHistoryRequestType:
    enum:
      - LIMIT
      - MARKET
      - STOP_LIMIT
      - STOP_MARKET
      - STOP_LOSS_LIMIT
      - STOP_LOSS_MARKET
      - TAKE_PROFIT_LIMIT
      - TAKE_PROFIT_MARKET
    source:
      openapi: ../openapi.json
",
    },
    "authentication.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "auth": {
              "auth": false,
              "display-name": "Get JWT",
              "docs": "Authenticate using signed payload to get a JWT for usage in other endpoints

There are multiple valid headers required to be sent as part of this request.

For onboarding examples, refer to `go`, `java` and `python` code in [code-samples](https://github.com/tradeparadex/code-samples).

#### StarkNet Message Hash and Signature

Inspired by [EIP-712](https://eips.ethereum.org/EIPS/eip-712),
(a standard for hashing and signing typed structured data)
the encoding of an off-chain message is defined as:

`signed_data = Enc[PREFIX_MESSAGE, domain_separator, account, hash_struct(message)]`

where:

- `PREFIX_MESSAGE = "StarkNet Message"`
- `domain_separator` is defined as the `hash_struct` of the StarkNetDomain struct:
  * Struct contains: `name`, `chainId` and `version`
  * `chainId` is can be obtained calling `GET /system/config`
- `account` is the StarkNet account address
- The message to be hashed is represented as a struct
  * `hash_struct(message) = Enc[type_hash(MyStruct), Enc[param1], ..., Enc[paramN]]`
  * where `type_hash` is defined as in EIP-712 (but using `selector` instead of `keccak`)
  * More details on StarkNet - [Hash Functions](https://docs.starknet.io/architecture-and-concepts/cryptography/#hash_functions)

In case of more complex structure of object, you have to work in the spirit of EIP-712.
This json structure has 4 mandatory items: `types`, `primaryType`, `domain` and `message`.
These items are designed to be able to be an interface with a wallet.
At sign request, the wallet will display:

- `message` will be displayed at the bottom of the wallet display,
showing clearly (not in hex) the message to sign.
Its structure has to be in accordance with the type listed in primaryType,
defined in types.
- `domain` will be shown above the message.
Its structure has to be in accordance with `StarkNetDomain`.

The predefined types that you can use :

- `felt` : for an integer on 251 bits.
- `felt*` : for an array of felt.
- `string` : for a shortString of 31 ASCII characters max.
- `selector` : for a name of a smart contract function.
- `merkletree` : for a Root of a Merkle tree, calculated with the provided data.

Specification details: [Signing transactions and off-chain messages](https://github.com/argentlabs/argent-x/discussions/14)

#### Message Hash Sample Code

For a complete `message_hash` example, refer to `python` code in [code-samples](https://github.com/tradeparadex/code-samples).

> Examples:

```json
{
  "paradex-signature-expiration": 1682364556,
  "paradex-starknet-account": "0x129f3dc1b8962d8a87abc692424c78fda963ade0e1cd17bf3d1c26f8d41ee7a",
  "paradex-starknet-signature": [
    "1381323390094460587764867648394252677239485992175346764030313478865763678671",
    "396490140510115262427678549757564216013606350105112805717359873954984880589"
  ],
  "paradex-timestamp": 1681759756
}
```
",
              "errors": [
                "root.AuthRequestBadRequestError",
                "root.AuthRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "headers": {
                    "PARADEX-STARKNET-ACCOUNT": "PARADEX-STARKNET-ACCOUNT",
                    "PARADEX-STARKNET-SIGNATURE": "PARADEX-STARKNET-SIGNATURE",
                    "PARADEX-TIMESTAMP": "PARADEX-TIMESTAMP",
                  },
                  "response": {
                    "body": {
                      "jwt_token": "eyJhbGciOiJFUzM4NCIsInR5cCI6IkpXVCJ9.eyJ0eXAiOiJhdCtKV1QiLCJleHAiOjE2ODE0NTI5MDcsImlhdCI6MTY4MTQ1MjYwNywiaXNzIjoiUGFyYWRleCBzdGFnaW5nIiwic3ViIjoiMHg0OTVkMmViNTIzNmExMmI4YjRhZDdkMzg0OWNlNmEyMDNjZTIxYzQzZjQ3M2MyNDhkZmQ1Y2U3MGQ5NDU0ZmEifQ.BPihIbGhnnsuPlReqC9x12JFXldpswg5EdA6tTiDQm-_UHaRz_8RfVBqWc2fPN6CzFsXTq7GowZu-2qMxPvZK_fGcxEhTp2k1r8MUxowlUIT4vPu2scCwrsyIujlCAwS",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/auth",
              "request": {
                "headers": {
                  "PARADEX-SIGNATURE-EXPIRATION": {
                    "docs": "Timestamp when signature expires (default 30 min | Max 1 week)",
                    "name": "paradexSignatureExpiration",
                    "type": "optional<string>",
                  },
                  "PARADEX-STARKNET-ACCOUNT": {
                    "docs": "Starknet account",
                    "name": "paradexStarknetAccount",
                    "type": "string",
                  },
                  "PARADEX-STARKNET-SIGNATURE": {
                    "docs": "Starknet signature",
                    "name": "paradexStarknetSignature",
                    "type": "string",
                  },
                  "PARADEX-TIMESTAMP": {
                    "docs": "Timestamp when the signature was created",
                    "name": "paradexTimestamp",
                    "type": "string",
                  },
                },
                "name": "AuthRequest",
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAuthResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "onboarding": {
              "auth": false,
              "display-name": "Onboarding",
              "docs": "Onboarding verifies that the caller owns the StarkNet address and enters them
into the database. This call is idempotent.
",
              "errors": [
                "root.OnboardingRequestBadRequestError",
                "root.OnboardingRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "headers": {
                    "PARADEX-ETHEREUM-ACCOUNT": "PARADEX-ETHEREUM-ACCOUNT",
                    "PARADEX-STARKNET-ACCOUNT": "PARADEX-STARKNET-ACCOUNT",
                    "PARADEX-STARKNET-SIGNATURE": "PARADEX-STARKNET-SIGNATURE",
                  },
                  "request": {},
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/onboarding",
              "request": {
                "body": {
                  "properties": {
                    "public_key": {
                      "docs": "Public key of the user being onboarded.",
                      "type": "optional<string>",
                    },
                    "referral_code": {
                      "docs": "Referral code of the user who referred the user being onboarded.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": {
                  "PARADEX-ETHEREUM-ACCOUNT": {
                    "docs": "Ethereum account used to onboard",
                    "name": "paradexEthereumAccount",
                    "type": "string",
                  },
                  "PARADEX-STARKNET-ACCOUNT": {
                    "docs": "Starknet address",
                    "name": "paradexStarknetAccount",
                    "type": "string",
                  },
                  "PARADEX-STARKNET-SIGNATURE": {
                    "docs": "Starknet signature",
                    "name": "paradexStarknetSignature",
                    "type": "string",
                  },
                },
                "name": "RequestsOnboarding",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    auth:
      path: /auth
      method: POST
      auth: false
      docs: >
        Authenticate using signed payload to get a JWT for usage in other
        endpoints


        There are multiple valid headers required to be sent as part of this
        request.


        For onboarding examples, refer to `go`, `java` and `python` code in
        [code-samples](https://github.com/tradeparadex/code-samples).


        #### StarkNet Message Hash and Signature


        Inspired by [EIP-712](https://eips.ethereum.org/EIPS/eip-712),

        (a standard for hashing and signing typed structured data)

        the encoding of an off-chain message is defined as:


        `signed_data = Enc[PREFIX_MESSAGE, domain_separator, account,
        hash_struct(message)]`


        where:


        - `PREFIX_MESSAGE = "StarkNet Message"`

        - `domain_separator` is defined as the `hash_struct` of the
        StarkNetDomain struct:
          * Struct contains: `name`, `chainId` and `version`
          * `chainId` is can be obtained calling `GET /system/config`
        - `account` is the StarkNet account address

        - The message to be hashed is represented as a struct
          * `hash_struct(message) = Enc[type_hash(MyStruct), Enc[param1], ..., Enc[paramN]]`
          * where `type_hash` is defined as in EIP-712 (but using `selector` instead of `keccak`)
          * More details on StarkNet - [Hash Functions](https://docs.starknet.io/architecture-and-concepts/cryptography/#hash_functions)

        In case of more complex structure of object, you have to work in the
        spirit of EIP-712.

        This json structure has 4 mandatory items: `types`, `primaryType`,
        `domain` and `message`.

        These items are designed to be able to be an interface with a wallet.

        At sign request, the wallet will display:


        - `message` will be displayed at the bottom of the wallet display,

        showing clearly (not in hex) the message to sign.

        Its structure has to be in accordance with the type listed in
        primaryType,

        defined in types.

        - `domain` will be shown above the message.

        Its structure has to be in accordance with `StarkNetDomain`.


        The predefined types that you can use :


        - `felt` : for an integer on 251 bits.

        - `felt*` : for an array of felt.

        - `string` : for a shortString of 31 ASCII characters max.

        - `selector` : for a name of a smart contract function.

        - `merkletree` : for a Root of a Merkle tree, calculated with the
        provided data.


        Specification details: [Signing transactions and off-chain
        messages](https://github.com/argentlabs/argent-x/discussions/14)


        #### Message Hash Sample Code


        For a complete `message_hash` example, refer to `python` code in
        [code-samples](https://github.com/tradeparadex/code-samples).


        > Examples:


        ```json

        {
          "paradex-signature-expiration": 1682364556,
          "paradex-starknet-account": "0x129f3dc1b8962d8a87abc692424c78fda963ade0e1cd17bf3d1c26f8d41ee7a",
          "paradex-starknet-signature": [
            "1381323390094460587764867648394252677239485992175346764030313478865763678671",
            "396490140510115262427678549757564216013606350105112805717359873954984880589"
          ],
          "paradex-timestamp": 1681759756
        }

        ```
      source:
        openapi: ../openapi.json
      display-name: Get JWT
      request:
        name: AuthRequest
        headers:
          PARADEX-STARKNET-ACCOUNT:
            type: string
            name: paradexStarknetAccount
            docs: Starknet account
          PARADEX-STARKNET-SIGNATURE:
            type: string
            name: paradexStarknetSignature
            docs: Starknet signature
          PARADEX-TIMESTAMP:
            type: string
            name: paradexTimestamp
            docs: Timestamp when the signature was created
          PARADEX-SIGNATURE-EXPIRATION:
            type: optional<string>
            name: paradexSignatureExpiration
            docs: Timestamp when signature expires (default 30 min | Max 1 week)
      response:
        docs: OK
        type: root.ResponsesAuthResp
        status-code: 200
      errors:
        - root.AuthRequestBadRequestError
        - root.AuthRequestUnauthorizedError
      examples:
        - headers:
            PARADEX-STARKNET-ACCOUNT: PARADEX-STARKNET-ACCOUNT
            PARADEX-STARKNET-SIGNATURE: PARADEX-STARKNET-SIGNATURE
            PARADEX-TIMESTAMP: PARADEX-TIMESTAMP
          response:
            body:
              jwt_token: >-
                eyJhbGciOiJFUzM4NCIsInR5cCI6IkpXVCJ9.eyJ0eXAiOiJhdCtKV1QiLCJleHAiOjE2ODE0NTI5MDcsImlhdCI6MTY4MTQ1MjYwNywiaXNzIjoiUGFyYWRleCBzdGFnaW5nIiwic3ViIjoiMHg0OTVkMmViNTIzNmExMmI4YjRhZDdkMzg0OWNlNmEyMDNjZTIxYzQzZjQ3M2MyNDhkZmQ1Y2U3MGQ5NDU0ZmEifQ.BPihIbGhnnsuPlReqC9x12JFXldpswg5EdA6tTiDQm-_UHaRz_8RfVBqWc2fPN6CzFsXTq7GowZu-2qMxPvZK_fGcxEhTp2k1r8MUxowlUIT4vPu2scCwrsyIujlCAwS
    onboarding:
      path: /onboarding
      method: POST
      auth: false
      docs: >
        Onboarding verifies that the caller owns the StarkNet address and enters
        them

        into the database. This call is idempotent.
      source:
        openapi: ../openapi.json
      display-name: Onboarding
      request:
        name: RequestsOnboarding
        headers:
          PARADEX-ETHEREUM-ACCOUNT:
            type: string
            name: paradexEthereumAccount
            docs: Ethereum account used to onboard
          PARADEX-STARKNET-ACCOUNT:
            type: string
            name: paradexStarknetAccount
            docs: Starknet address
          PARADEX-STARKNET-SIGNATURE:
            type: string
            name: paradexStarknetSignature
            docs: Starknet signature
        body:
          properties:
            public_key:
              type: optional<string>
              docs: Public key of the user being onboarded.
            referral_code:
              type: optional<string>
              docs: Referral code of the user who referred the user being onboarded.
        content-type: application/json
      errors:
        - root.OnboardingRequestBadRequestError
        - root.OnboardingRequestUnauthorizedError
      examples:
        - headers:
            PARADEX-ETHEREUM-ACCOUNT: PARADEX-ETHEREUM-ACCOUNT
            PARADEX-STARKNET-ACCOUNT: PARADEX-STARKNET-ACCOUNT
            PARADEX-STARKNET-SIGNATURE: PARADEX-STARKNET-SIGNATURE
          request: {}
  source:
    openapi: ../openapi.json
",
    },
    "insurance.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-insurance-fund": {
              "auth": false,
              "display-name": "Get insurance fund account information",
              "docs": "Get insurance fund account's information
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                      "account_value": "136285.069",
                      "settlement_asset": "USDC",
                      "updated_at": 1681471234972,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/insurance",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesInsuranceAccountResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-insurance-fund:
      path: /insurance
      method: GET
      auth: false
      docs: |
        Get insurance fund account's information
      source:
        openapi: ../openapi.json
      display-name: Get insurance fund account information
      response:
        docs: OK
        type: root.ResponsesInsuranceAccountResp
        status-code: 200
      examples:
        - response:
            body:
              account: >-
                0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
              account_value: '136285.069'
              settlement_asset: USDC
              updated_at: 1681471234972
  source:
    openapi: ../openapi.json
",
    },
    "liquidations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-liquidations": {
              "auth": true,
              "display-name": "List liquidations",
              "docs": "Retrieves a list of liquidations associated to the requester's account
",
              "errors": [
                "root.GetLiquidationsRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "created_at": 1697213130097,
                          "id": "0x123456789",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/liquidations",
              "request": {
                "name": "GetLiquidationsRequest",
                "query-parameters": {
                  "from": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "to": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetLiquidations",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-liquidations:
      path: /liquidations
      method: GET
      auth: true
      docs: |
        Retrieves a list of liquidations associated to the requester's account
      source:
        openapi: ../openapi.json
      display-name: List liquidations
      request:
        name: GetLiquidationsRequest
        query-parameters:
          from:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
          to:
            type: optional<integer>
            docs: End Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesGetLiquidations
        status-code: 200
      errors:
        - root.GetLiquidationsRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - created_at: 1697213130097
                  id: '0x123456789'
  source:
    openapi: ../openapi.json
",
    },
    "markets.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-bbo": {
              "auth": false,
              "display-name": "Get market bbo",
              "docs": "Get the best bid/ask for the given market
",
              "errors": [
                "root.GetBboRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "market": "market",
                  },
                  "response": {
                    "body": {
                      "ask": "30130.15",
                      "ask_size": "0.05",
                      "bid": "30112.22",
                      "bid_size": "0.04",
                      "last_updated_at": 1681493939981,
                      "market": "BTC-USD-PERP",
                      "seq_no": 20784,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/bbo/{market}",
              "path-parameters": {
                "market": {
                  "docs": "Market symbol - ex: BTC-USD-PERP",
                  "type": "string",
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesBboResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-funding-data": {
              "auth": false,
              "display-name": "Funding data history",
              "docs": "List historical funding data by market
",
              "errors": [
                "root.GetFundingDataRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "created_at": 1,
                          "funding_index": "funding_index",
                          "funding_premium": "funding_premium",
                          "funding_rate": "funding_rate",
                          "market": "market",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/funding/data",
              "request": {
                "name": "GetFundingDataRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": {
                    "docs": "Market for which funding payments are queried",
                    "type": "string",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesFundingDataResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-markets": {
              "auth": false,
              "display-name": "List available markets",
              "docs": "Get markets static data component
",
              "errors": [
                "root.GetMarketsRequestNotFoundError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "asset_kind": "PERP",
                          "base_currency": "ETH",
                          "chain_details": {
                            "collateral_address": "0x1234567890",
                            "contract_address": "0x1234567890",
                            "fee_account_address": "0x1234567890",
                            "fee_maker": "0.01",
                            "fee_taker": "0.01",
                            "insurance_fund_address": "0x1234567890",
                            "liquidation_fee": "0.01",
                            "oracle_address": "0x1234567890",
                            "symbol": "ETH-USD-PERP",
                          },
                          "clamp_rate": "0.05",
                          "delta1_cross_margin_params": {
                            "imf_base": "0.11",
                            "imf_factor": "0",
                            "imf_shift": "0",
                            "mmf_factor": "0.51",
                          },
                          "expiry_at": 0,
                          "funding_period_hours": 8,
                          "interest_rate": "0.01",
                          "iv_bands_width": "0.05",
                          "market_kind": "cross",
                          "max_funding_rate": "0.05",
                          "max_funding_rate_change": "0.0005",
                          "max_open_orders": 100,
                          "max_order_size": "100",
                          "max_tob_spread": "0.2",
                          "min_notional": "10",
                          "open_at": 0,
                          "option_type": "PUT",
                          "oracle_ewma_factor": "0.2",
                          "order_size_increment": "0.001",
                          "position_limit": "500",
                          "price_bands_width": "0.05",
                          "price_feed_id": "GVXRSBjFk6e6J3NbVPXohDJetcTjaeeuykUpbQF8UoMU",
                          "price_tick_size": "0.01",
                          "quote_currency": "USD",
                          "settlement_currency": "USDC",
                          "strike_price": "66500",
                          "symbol": "ETH-USD-PERP",
                          "tags": [
                            "MEME",
                            "DEFI",
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/markets",
              "request": {
                "name": "GetMarketsRequest",
                "query-parameters": {
                  "market": {
                    "docs": "Market Name - example: BTC-USD-PERP",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetMarkets",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-markets-summary": {
              "auth": false,
              "display-name": "List available markets summary",
              "docs": "Get markets dynamic data component
",
              "errors": [
                "root.GetMarketsSummaryRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "ask": "30130.15",
                          "ask_iv": "0.2",
                          "bid": "30112.22",
                          "bid_iv": "0.2",
                          "created_at": 1,
                          "delta": "1",
                          "funding_rate": "0.3",
                          "future_funding_rate": "0.3",
                          "greeks": {
                            "delta": "1",
                            "gamma": "0.2",
                            "vega": "0.2",
                          },
                          "last_iv": "0.2",
                          "last_traded_price": "30109.53",
                          "mark_iv": "0.2",
                          "mark_price": "29799.70877478",
                          "open_interest": "6100048.3",
                          "price_change_rate_24h": "0.05",
                          "symbol": "BTC-USD-PERP",
                          "total_volume": "141341.0424",
                          "underlying_price": "29876.3",
                          "volume_24h": "47041.0424",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/markets/summary",
              "request": {
                "name": "GetMarketsSummaryRequest",
                "query-parameters": {
                  "end": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": {
                    "docs": "Name of the market for which summary is requested (for all available markets use ALL)",
                    "type": "string",
                  },
                  "start": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetMarketSummary",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-orderbook": {
              "auth": false,
              "display-name": "Get market orderbook",
              "docs": "Get snapshot of the orderbook for the given market
",
              "errors": [
                "root.GetOrderbookRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "market": "market",
                  },
                  "response": {
                    "body": {
                      "asks": [
                        [
                          "asks",
                        ],
                      ],
                      "bids": [
                        [
                          "bids",
                        ],
                      ],
                      "last_updated_at": 1681462770114,
                      "market": "ETH-USD-PERP",
                      "seq_no": 20784,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/orderbook/{market}",
              "path-parameters": {
                "market": {
                  "docs": "Market symbol - ex: BTC-USD-PERP",
                  "type": "string",
                },
              },
              "request": {
                "name": "GetOrderbookRequest",
                "query-parameters": {
                  "depth": {
                    "default": 20,
                    "docs": "Depth",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesAskBidArray",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "klines": {
              "auth": false,
              "display-name": "OHLCV for a symbol",
              "docs": "Klines for a symbol",
              "errors": [
                "root.MarketsKlinesRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "end_at": 1,
                    "resolution": "resolution",
                    "start_at": 1,
                    "symbol": "symbol",
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/markets/klines",
              "request": {
                "name": "MarketsKlinesRequest",
                "query-parameters": {
                  "end_at": {
                    "docs": "end time for klines in milliseconds",
                    "type": "integer",
                  },
                  "price_kind": "optional<string>",
                  "resolution": {
                    "docs": "resolution in minutes: 1, 3, 5, 15, 30, 60",
                    "type": "string",
                  },
                  "start_at": {
                    "docs": "start time for klines in milliseconds",
                    "type": "integer",
                  },
                  "symbol": {
                    "docs": "Symbol of the market pair",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-bbo:
      path: /bbo/{market}
      method: GET
      auth: false
      docs: |
        Get the best bid/ask for the given market
      source:
        openapi: ../openapi.json
      path-parameters:
        market:
          type: string
          docs: 'Market symbol - ex: BTC-USD-PERP'
      display-name: Get market bbo
      response:
        docs: OK
        type: root.ResponsesBboResp
        status-code: 200
      errors:
        - root.GetBboRequestBadRequestError
      examples:
        - path-parameters:
            market: market
          response:
            body:
              ask: '30130.15'
              ask_size: '0.05'
              bid: '30112.22'
              bid_size: '0.04'
              last_updated_at: 1681493939981
              market: BTC-USD-PERP
              seq_no: 20784
    get-funding-data:
      path: /funding/data
      method: GET
      auth: false
      docs: |
        List historical funding data by market
      source:
        openapi: ../openapi.json
      display-name: Funding data history
      request:
        name: GetFundingDataRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market:
            type: string
            docs: Market for which funding payments are queried
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesFundingDataResp
        status-code: 200
      errors:
        - root.GetFundingDataRequestBadRequestError
      examples:
        - query-parameters:
            market: BTC-USD-PERP
          response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - created_at: 1
                  funding_index: funding_index
                  funding_premium: funding_premium
                  funding_rate: funding_rate
                  market: market
    get-markets:
      path: /markets
      method: GET
      auth: false
      docs: |
        Get markets static data component
      source:
        openapi: ../openapi.json
      display-name: List available markets
      request:
        name: GetMarketsRequest
        query-parameters:
          market:
            type: optional<string>
            docs: 'Market Name - example: BTC-USD-PERP'
      response:
        docs: OK
        type: root.ResponsesGetMarkets
        status-code: 200
      errors:
        - root.GetMarketsRequestNotFoundError
      examples:
        - response:
            body:
              results:
                - asset_kind: PERP
                  base_currency: ETH
                  chain_details:
                    collateral_address: '0x1234567890'
                    contract_address: '0x1234567890'
                    fee_account_address: '0x1234567890'
                    fee_maker: '0.01'
                    fee_taker: '0.01'
                    insurance_fund_address: '0x1234567890'
                    liquidation_fee: '0.01'
                    oracle_address: '0x1234567890'
                    symbol: ETH-USD-PERP
                  clamp_rate: '0.05'
                  delta1_cross_margin_params:
                    imf_base: '0.11'
                    imf_factor: '0'
                    imf_shift: '0'
                    mmf_factor: '0.51'
                  expiry_at: 0
                  funding_period_hours: 8
                  interest_rate: '0.01'
                  iv_bands_width: '0.05'
                  market_kind: cross
                  max_funding_rate: '0.05'
                  max_funding_rate_change: '0.0005'
                  max_open_orders: 100
                  max_order_size: '100'
                  max_tob_spread: '0.2'
                  min_notional: '10'
                  open_at: 0
                  option_type: PUT
                  oracle_ewma_factor: '0.2'
                  order_size_increment: '0.001'
                  position_limit: '500'
                  price_bands_width: '0.05'
                  price_feed_id: GVXRSBjFk6e6J3NbVPXohDJetcTjaeeuykUpbQF8UoMU
                  price_tick_size: '0.01'
                  quote_currency: USD
                  settlement_currency: USDC
                  strike_price: '66500'
                  symbol: ETH-USD-PERP
                  tags:
                    - MEME
                    - DEFI
    klines:
      path: /markets/klines
      method: GET
      auth: false
      docs: Klines for a symbol
      source:
        openapi: ../openapi.json
      display-name: OHLCV for a symbol
      request:
        name: MarketsKlinesRequest
        query-parameters:
          end_at:
            type: integer
            docs: end time for klines in milliseconds
          price_kind: optional<string>
          resolution:
            type: string
            docs: 'resolution in minutes: 1, 3, 5, 15, 30, 60'
          start_at:
            type: integer
            docs: start time for klines in milliseconds
          symbol:
            type: string
            docs: Symbol of the market pair
      errors:
        - root.MarketsKlinesRequestBadRequestError
      examples:
        - query-parameters:
            end_at: 1
            resolution: resolution
            start_at: 1
            symbol: symbol
    get-markets-summary:
      path: /markets/summary
      method: GET
      auth: false
      docs: |
        Get markets dynamic data component
      source:
        openapi: ../openapi.json
      display-name: List available markets summary
      request:
        name: GetMarketsSummaryRequest
        query-parameters:
          end:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market:
            type: string
            docs: >-
              Name of the market for which summary is requested (for all
              available markets use ALL)
          start:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
      response:
        docs: OK
        type: root.ResponsesGetMarketSummary
        status-code: 200
      errors:
        - root.GetMarketsSummaryRequestBadRequestError
      examples:
        - query-parameters:
            market: BTC-USD-PERP
          response:
            body:
              results:
                - ask: '30130.15'
                  ask_iv: '0.2'
                  bid: '30112.22'
                  bid_iv: '0.2'
                  created_at: 1
                  delta: '1'
                  funding_rate: '0.3'
                  future_funding_rate: '0.3'
                  greeks:
                    delta: '1'
                    gamma: '0.2'
                    vega: '0.2'
                  last_iv: '0.2'
                  last_traded_price: '30109.53'
                  mark_iv: '0.2'
                  mark_price: '29799.70877478'
                  open_interest: '6100048.3'
                  price_change_rate_24h: '0.05'
                  symbol: BTC-USD-PERP
                  total_volume: '141341.0424'
                  underlying_price: '29876.3'
                  volume_24h: '47041.0424'
    get-orderbook:
      path: /orderbook/{market}
      method: GET
      auth: false
      docs: |
        Get snapshot of the orderbook for the given market
      source:
        openapi: ../openapi.json
      path-parameters:
        market:
          type: string
          docs: 'Market symbol - ex: BTC-USD-PERP'
      display-name: Get market orderbook
      request:
        name: GetOrderbookRequest
        query-parameters:
          depth:
            type: optional<integer>
            default: 20
            docs: Depth
      response:
        docs: OK
        type: root.ResponsesAskBidArray
        status-code: 200
      errors:
        - root.GetOrderbookRequestBadRequestError
      examples:
        - path-parameters:
            market: market
          response:
            body:
              asks:
                - - asks
              bids:
                - - bids
              last_updated_at: 1681462770114
              market: ETH-USD-PERP
              seq_no: 20784
  source:
    openapi: ../openapi.json
",
    },
    "orders.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "batch": {
              "auth": true,
              "display-name": "Create batch of orders",
              "docs": "[Experimental] Place a batch of orders<br>
- Valid batch size is between 1-10 order(s)<br>
- If basic validation(including signature) fails - all orders will be rejected.<br>
- Orders are queued for risk checking independently and failure of one order doesn't affect processing of another order.
",
              "errors": [
                "root.OrdersBatchRequestBadRequestError",
              ],
              "examples": [
                {
                  "request": [
                    {
                      "instruction": "instruction",
                      "market": "BTC-USD-PERP",
                      "price": "29500.12",
                      "side": "BUY",
                      "signature": "signature",
                      "signature_timestamp": 1,
                      "size": "1.213",
                      "type": "MARKET",
                    },
                  ],
                  "response": {
                    "body": {
                      "errors": [
                        {
                          "error": "VALIDATION_ERROR",
                          "message": "message",
                        },
                      ],
                      "orders": [
                        {
                          "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                          "avg_fill_price": "26000",
                          "cancel_reason": "NOT_ENOUGH_MARGIN",
                          "client_id": "x1234",
                          "created_at": 1681493746016,
                          "flags": [
                            "REDUCE_ONLY",
                          ],
                          "id": "123456",
                          "instruction": "GTC",
                          "last_updated_at": 1681493746016,
                          "market": "BTC-USD-PERP",
                          "price": "26000",
                          "published_at": 1681493746016,
                          "received_at": 1681493746016,
                          "remaining_size": "0",
                          "seq_no": 1681471234972000000,
                          "side": "BUY",
                          "size": "0.05",
                          "status": "NEW",
                          "stp": "EXPIRE_MAKER",
                          "timestamp": 1681493746016,
                          "trigger_price": "26000",
                          "type": "MARKET",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/orders/batch",
              "request": {
                "body": "list<root.RequestsOrderRequest>",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Created",
                "status-code": 201,
                "type": "root.ResponsesBatchResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "cancel": {
              "auth": true,
              "display-name": "Cancel order",
              "docs": "Cancel an existing order
",
              "errors": [
                "root.OrdersCancelRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "order_id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/orders/{order_id}",
              "path-parameters": {
                "order_id": {
                  "docs": "Order Id",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "cancelAll": {
              "auth": true,
              "display-name": "Cancel all open orders",
              "docs": undefined,
              "errors": [
                "root.OrdersCancelAllRequestBadRequestError",
              ],
              "examples": [
                {},
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/orders",
              "request": {
                "name": "OrdersCancelAllRequest",
                "query-parameters": {
                  "market": {
                    "docs": "Market to cancel orders for",
                    "type": "optional<string>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "cancelByClientId": {
              "auth": true,
              "display-name": "Cancel open order by client order id",
              "docs": undefined,
              "errors": [
                "root.OrdersCancelByClientIdRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "client_id": "client_id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/orders/by_client_id/{client_id}",
              "path-parameters": {
                "client_id": {
                  "docs": "Client Order Id",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get": {
              "auth": true,
              "display-name": "Get order",
              "docs": "Get an order by id. Only return orders in `OPEN` or `NEW` status.
",
              "errors": [
                "root.OrdersGetRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "order_id",
                  },
                  "response": {
                    "body": {
                      "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                      "avg_fill_price": "26000",
                      "cancel_reason": "NOT_ENOUGH_MARGIN",
                      "client_id": "x1234",
                      "created_at": 1681493746016,
                      "flags": [
                        "REDUCE_ONLY",
                      ],
                      "id": "123456",
                      "instruction": "GTC",
                      "last_updated_at": 1681493746016,
                      "market": "BTC-USD-PERP",
                      "price": "26000",
                      "published_at": 1681493746016,
                      "received_at": 1681493746016,
                      "remaining_size": "0",
                      "seq_no": 1681471234972000000,
                      "side": "BUY",
                      "size": "0.05",
                      "status": "NEW",
                      "stp": "EXPIRE_MAKER",
                      "timestamp": 1681493746016,
                      "trigger_price": "26000",
                      "type": "MARKET",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/orders/{order_id}",
              "path-parameters": {
                "order_id": {
                  "docs": "Order Id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesOrderResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-open-orders": {
              "auth": true,
              "display-name": "Get open orders",
              "docs": "Get current user all open orders
",
              "errors": [
                "root.GetOpenOrdersRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                          "avg_fill_price": "26000",
                          "cancel_reason": "NOT_ENOUGH_MARGIN",
                          "client_id": "x1234",
                          "created_at": 1681493746016,
                          "flags": [
                            "REDUCE_ONLY",
                          ],
                          "id": "123456",
                          "instruction": "GTC",
                          "last_updated_at": 1681493746016,
                          "market": "BTC-USD-PERP",
                          "price": "26000",
                          "published_at": 1681493746016,
                          "received_at": 1681493746016,
                          "remaining_size": "0",
                          "seq_no": 1681471234972000000,
                          "side": "BUY",
                          "size": "0.05",
                          "status": "NEW",
                          "stp": "EXPIRE_MAKER",
                          "timestamp": 1681493746016,
                          "trigger_price": "26000",
                          "type": "MARKET",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/orders",
              "request": {
                "name": "GetOpenOrdersRequest",
                "query-parameters": {
                  "market": {
                    "docs": "Market symbol, ex: BTC-USD-PERP",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetOpenOrders",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-orders": {
              "auth": true,
              "display-name": "Get orders",
              "docs": "Get current user orders filtered on attributes
",
              "errors": [
                "root.GetOrdersRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "client_id": "client-id",
                    "market": "BTC-USD-PERP",
                  },
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                          "avg_fill_price": "26000",
                          "cancel_reason": "NOT_ENOUGH_MARGIN",
                          "client_id": "x1234",
                          "created_at": 1681493746016,
                          "flags": [
                            "REDUCE_ONLY",
                          ],
                          "id": "123456",
                          "instruction": "GTC",
                          "last_updated_at": 1681493746016,
                          "market": "BTC-USD-PERP",
                          "price": "26000",
                          "published_at": 1681493746016,
                          "received_at": 1681493746016,
                          "remaining_size": "0",
                          "seq_no": 1681471234972000000,
                          "side": "BUY",
                          "size": "0.05",
                          "status": "NEW",
                          "stp": "EXPIRE_MAKER",
                          "timestamp": 1681493746016,
                          "trigger_price": "26000",
                          "type": "MARKET",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/orders-history",
              "request": {
                "name": "GetOrdersRequest",
                "query-parameters": {
                  "client_id": {
                    "docs": "Unique ID of client generating the order",
                    "type": "optional<string>",
                  },
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "market": {
                    "docs": "Market for the order",
                    "type": "optional<string>",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "side": {
                    "docs": "Order side",
                    "type": "optional<GetOrdersRequestSide>",
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "status": {
                    "docs": "Order status",
                    "type": "optional<GetOrdersRequestStatus>",
                  },
                  "type": {
                    "docs": "Order type",
                    "type": "optional<GetOrdersRequestType>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetOrders",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getByClientId": {
              "auth": true,
              "display-name": "Get order by client id",
              "docs": "Get an order by client id. Only returns orders in `OPEN` status.
",
              "errors": [
                "root.OrdersGetByClientIdRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "client_id": "client_id",
                  },
                  "response": {
                    "body": {
                      "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                      "avg_fill_price": "26000",
                      "cancel_reason": "NOT_ENOUGH_MARGIN",
                      "client_id": "x1234",
                      "created_at": 1681493746016,
                      "flags": [
                        "REDUCE_ONLY",
                      ],
                      "id": "123456",
                      "instruction": "GTC",
                      "last_updated_at": 1681493746016,
                      "market": "BTC-USD-PERP",
                      "price": "26000",
                      "published_at": 1681493746016,
                      "received_at": 1681493746016,
                      "remaining_size": "0",
                      "seq_no": 1681471234972000000,
                      "side": "BUY",
                      "size": "0.05",
                      "status": "NEW",
                      "stp": "EXPIRE_MAKER",
                      "timestamp": 1681493746016,
                      "trigger_price": "26000",
                      "type": "MARKET",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/orders/by_client_id/{client_id}",
              "path-parameters": {
                "client_id": {
                  "docs": "Client Order Id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesOrderResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "new": {
              "auth": true,
              "display-name": "Create order",
              "docs": "Open a new order
",
              "errors": [
                "root.OrdersNewRequestBadRequestError",
              ],
              "examples": [
                {
                  "request": {
                    "instruction": "instruction",
                    "market": "BTC-USD-PERP",
                    "price": "29500.12",
                    "side": "BUY",
                    "signature": "signature",
                    "signature_timestamp": 1,
                    "size": "1.213",
                    "type": "MARKET",
                  },
                  "response": {
                    "body": {
                      "account": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                      "avg_fill_price": "26000",
                      "cancel_reason": "NOT_ENOUGH_MARGIN",
                      "client_id": "x1234",
                      "created_at": 1681493746016,
                      "flags": [
                        "REDUCE_ONLY",
                      ],
                      "id": "123456",
                      "instruction": "GTC",
                      "last_updated_at": 1681493746016,
                      "market": "BTC-USD-PERP",
                      "price": "26000",
                      "published_at": 1681493746016,
                      "received_at": 1681493746016,
                      "remaining_size": "0",
                      "seq_no": 1681471234972000000,
                      "side": "BUY",
                      "size": "0.05",
                      "status": "NEW",
                      "stp": "EXPIRE_MAKER",
                      "timestamp": 1681493746016,
                      "trigger_price": "26000",
                      "type": "MARKET",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/orders",
              "request": {
                "body": "root.RequestsOrderRequest",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Created",
                "status-code": 201,
                "type": "root.ResponsesOrderResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "GetOrdersRequestSide": {
            "enum": [
              "BUY",
              "SELL",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "GetOrdersRequestStatus": {
            "enum": [
              "OPEN",
              "CLOSED",
              "NEW",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "GetOrdersRequestType": {
            "enum": [
              "LIMIT",
              "MARKET",
              "STOP_LIMIT",
              "STOP_MARKET",
              "STOP_LOSS_LIMIT",
              "STOP_LOSS_MARKET",
              "TAKE_PROFIT_LIMIT",
              "TAKE_PROFIT_MARKET",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-open-orders:
      path: /orders
      method: GET
      auth: true
      docs: |
        Get current user all open orders
      source:
        openapi: ../openapi.json
      display-name: Get open orders
      request:
        name: GetOpenOrdersRequest
        query-parameters:
          market:
            type: optional<string>
            docs: 'Market symbol, ex: BTC-USD-PERP'
      response:
        docs: OK
        type: root.ResponsesGetOpenOrders
        status-code: 200
      errors:
        - root.GetOpenOrdersRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - account: >-
                    0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x
                  avg_fill_price: '26000'
                  cancel_reason: NOT_ENOUGH_MARGIN
                  client_id: x1234
                  created_at: 1681493746016
                  flags:
                    - REDUCE_ONLY
                  id: '123456'
                  instruction: GTC
                  last_updated_at: 1681493746016
                  market: BTC-USD-PERP
                  price: '26000'
                  published_at: 1681493746016
                  received_at: 1681493746016
                  remaining_size: '0'
                  seq_no: 1681471234972000000
                  side: BUY
                  size: '0.05'
                  status: NEW
                  stp: EXPIRE_MAKER
                  timestamp: 1681493746016
                  trigger_price: '26000'
                  type: MARKET
    new:
      path: /orders
      method: POST
      auth: true
      docs: |
        Open a new order
      source:
        openapi: ../openapi.json
      display-name: Create order
      request:
        body: root.RequestsOrderRequest
        content-type: application/json
      response:
        docs: Created
        type: root.ResponsesOrderResp
        status-code: 201
      errors:
        - root.OrdersNewRequestBadRequestError
      examples:
        - request:
            instruction: instruction
            market: BTC-USD-PERP
            price: '29500.12'
            side: BUY
            signature: signature
            signature_timestamp: 1
            size: '1.213'
            type: MARKET
          response:
            body:
              account: >-
                0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x
              avg_fill_price: '26000'
              cancel_reason: NOT_ENOUGH_MARGIN
              client_id: x1234
              created_at: 1681493746016
              flags:
                - REDUCE_ONLY
              id: '123456'
              instruction: GTC
              last_updated_at: 1681493746016
              market: BTC-USD-PERP
              price: '26000'
              published_at: 1681493746016
              received_at: 1681493746016
              remaining_size: '0'
              seq_no: 1681471234972000000
              side: BUY
              size: '0.05'
              status: NEW
              stp: EXPIRE_MAKER
              timestamp: 1681493746016
              trigger_price: '26000'
              type: MARKET
    cancelAll:
      path: /orders
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.json
      display-name: Cancel all open orders
      request:
        name: OrdersCancelAllRequest
        query-parameters:
          market:
            type: optional<string>
            docs: Market to cancel orders for
      errors:
        - root.OrdersCancelAllRequestBadRequestError
      examples:
        - {}
    get-orders:
      path: /orders-history
      method: GET
      auth: true
      docs: |
        Get current user orders filtered on attributes
      source:
        openapi: ../openapi.json
      display-name: Get orders
      request:
        name: GetOrdersRequest
        query-parameters:
          client_id:
            type: optional<string>
            docs: Unique ID of client generating the order
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          market:
            type: optional<string>
            docs: Market for the order
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          side:
            type: optional<GetOrdersRequestSide>
            docs: Order side
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
          status:
            type: optional<GetOrdersRequestStatus>
            docs: Order status
          type:
            type: optional<GetOrdersRequestType>
            docs: Order type
      response:
        docs: OK
        type: root.ResponsesGetOrders
        status-code: 200
      errors:
        - root.GetOrdersRequestBadRequestError
      examples:
        - query-parameters:
            client_id: client-id
            market: BTC-USD-PERP
          response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - account: >-
                    0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x
                  avg_fill_price: '26000'
                  cancel_reason: NOT_ENOUGH_MARGIN
                  client_id: x1234
                  created_at: 1681493746016
                  flags:
                    - REDUCE_ONLY
                  id: '123456'
                  instruction: GTC
                  last_updated_at: 1681493746016
                  market: BTC-USD-PERP
                  price: '26000'
                  published_at: 1681493746016
                  received_at: 1681493746016
                  remaining_size: '0'
                  seq_no: 1681471234972000000
                  side: BUY
                  size: '0.05'
                  status: NEW
                  stp: EXPIRE_MAKER
                  timestamp: 1681493746016
                  trigger_price: '26000'
                  type: MARKET
    batch:
      path: /orders/batch
      method: POST
      auth: true
      docs: >
        [Experimental] Place a batch of orders<br>

        - Valid batch size is between 1-10 order(s)<br>

        - If basic validation(including signature) fails - all orders will be
        rejected.<br>

        - Orders are queued for risk checking independently and failure of one
        order doesn't affect processing of another order.
      source:
        openapi: ../openapi.json
      display-name: Create batch of orders
      request:
        body: list<root.RequestsOrderRequest>
        content-type: application/json
      response:
        docs: Created
        type: root.ResponsesBatchResponse
        status-code: 201
      errors:
        - root.OrdersBatchRequestBadRequestError
      examples:
        - request:
            - instruction: instruction
              market: BTC-USD-PERP
              price: '29500.12'
              side: BUY
              signature: signature
              signature_timestamp: 1
              size: '1.213'
              type: MARKET
          response:
            body:
              errors:
                - error: VALIDATION_ERROR
                  message: message
              orders:
                - account: >-
                    0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x
                  avg_fill_price: '26000'
                  cancel_reason: NOT_ENOUGH_MARGIN
                  client_id: x1234
                  created_at: 1681493746016
                  flags:
                    - REDUCE_ONLY
                  id: '123456'
                  instruction: GTC
                  last_updated_at: 1681493746016
                  market: BTC-USD-PERP
                  price: '26000'
                  published_at: 1681493746016
                  received_at: 1681493746016
                  remaining_size: '0'
                  seq_no: 1681471234972000000
                  side: BUY
                  size: '0.05'
                  status: NEW
                  stp: EXPIRE_MAKER
                  timestamp: 1681493746016
                  trigger_price: '26000'
                  type: MARKET
    getByClientId:
      path: /orders/by_client_id/{client_id}
      method: GET
      auth: true
      docs: |
        Get an order by client id. Only returns orders in `OPEN` status.
      source:
        openapi: ../openapi.json
      path-parameters:
        client_id:
          type: string
          docs: Client Order Id
      display-name: Get order by client id
      response:
        docs: OK
        type: root.ResponsesOrderResp
        status-code: 200
      errors:
        - root.OrdersGetByClientIdRequestBadRequestError
      examples:
        - path-parameters:
            client_id: client_id
          response:
            body:
              account: >-
                0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x
              avg_fill_price: '26000'
              cancel_reason: NOT_ENOUGH_MARGIN
              client_id: x1234
              created_at: 1681493746016
              flags:
                - REDUCE_ONLY
              id: '123456'
              instruction: GTC
              last_updated_at: 1681493746016
              market: BTC-USD-PERP
              price: '26000'
              published_at: 1681493746016
              received_at: 1681493746016
              remaining_size: '0'
              seq_no: 1681471234972000000
              side: BUY
              size: '0.05'
              status: NEW
              stp: EXPIRE_MAKER
              timestamp: 1681493746016
              trigger_price: '26000'
              type: MARKET
    cancelByClientId:
      path: /orders/by_client_id/{client_id}
      method: DELETE
      auth: true
      source:
        openapi: ../openapi.json
      path-parameters:
        client_id:
          type: string
          docs: Client Order Id
      display-name: Cancel open order by client order id
      errors:
        - root.OrdersCancelByClientIdRequestBadRequestError
      examples:
        - path-parameters:
            client_id: client_id
    get:
      path: /orders/{order_id}
      method: GET
      auth: true
      docs: |
        Get an order by id. Only return orders in `OPEN` or `NEW` status.
      source:
        openapi: ../openapi.json
      path-parameters:
        order_id:
          type: string
          docs: Order Id
      display-name: Get order
      response:
        docs: OK
        type: root.ResponsesOrderResp
        status-code: 200
      errors:
        - root.OrdersGetRequestBadRequestError
      examples:
        - path-parameters:
            order_id: order_id
          response:
            body:
              account: >-
                0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x
              avg_fill_price: '26000'
              cancel_reason: NOT_ENOUGH_MARGIN
              client_id: x1234
              created_at: 1681493746016
              flags:
                - REDUCE_ONLY
              id: '123456'
              instruction: GTC
              last_updated_at: 1681493746016
              market: BTC-USD-PERP
              price: '26000'
              published_at: 1681493746016
              received_at: 1681493746016
              remaining_size: '0'
              seq_no: 1681471234972000000
              side: BUY
              size: '0.05'
              status: NEW
              stp: EXPIRE_MAKER
              timestamp: 1681493746016
              trigger_price: '26000'
              type: MARKET
    cancel:
      path: /orders/{order_id}
      method: DELETE
      auth: true
      docs: |
        Cancel an existing order
      source:
        openapi: ../openapi.json
      path-parameters:
        order_id:
          type: string
          docs: Order Id
      display-name: Cancel order
      errors:
        - root.OrdersCancelRequestBadRequestError
      examples:
        - path-parameters:
            order_id: order_id
  source:
    openapi: ../openapi.json
types:
  GetOrdersRequestSide:
    enum:
      - BUY
      - SELL
    source:
      openapi: ../openapi.json
  GetOrdersRequestStatus:
    enum:
      - OPEN
      - CLOSED
      - NEW
    source:
      openapi: ../openapi.json
  GetOrdersRequestType:
    enum:
      - LIMIT
      - MARKET
      - STOP_LIMIT
      - STOP_MARKET
      - STOP_LOSS_LIMIT
      - STOP_LOSS_MARKET
      - TAKE_PROFIT_LIMIT
      - TAKE_PROFIT_MARKET
    source:
      openapi: ../openapi.json
",
    },
    "referrals.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-referral-config": {
              "auth": false,
              "display-name": "Get referral config",
              "docs": "Get referral program config data
",
              "errors": [
                "root.GetReferralConfigRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "commission_rate": "0.1",
                          "commission_volume_cap": "1000000000",
                          "discount_rate": "0.1",
                          "discount_volume_cap": "30000000",
                          "minimum_volume": "0.123",
                          "referral_type": "Referral",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/referrals/config",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetReferralConfig",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-referral-qr-code": {
              "auth": true,
              "display-name": "Get Referral QR Code",
              "docs": "Returns a QR code image containing the user's referral link",
              "errors": [
                "root.GetReferralQrCodeRequestBadRequestError",
                "root.GetReferralQrCodeRequestUnauthorizedError",
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/referrals/qr-code",
              "response": {
                "docs": "QR code image",
                "status-code": 200,
                "type": "file",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get-referrals-summary": {
              "auth": true,
              "display-name": "Get account referral details",
              "docs": "Get latest referee data for requester's account
",
              "errors": [
                "root.GetReferralsSummaryRequestBadRequestError",
                "root.GetReferralsSummaryRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "address": "address",
                          "created_at": 1715592690488,
                          "referral_code": "maxdegen01",
                          "referral_rewards": "0.123",
                          "volume_traded": "0.123",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/referrals/summary",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetReferrals",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-referral-config:
      path: /referrals/config
      method: GET
      auth: false
      docs: |
        Get referral program config data
      source:
        openapi: ../openapi.json
      display-name: Get referral config
      response:
        docs: OK
        type: root.ResponsesGetReferralConfig
        status-code: 200
      errors:
        - root.GetReferralConfigRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - commission_rate: '0.1'
                  commission_volume_cap: '1000000000'
                  discount_rate: '0.1'
                  discount_volume_cap: '30000000'
                  minimum_volume: '0.123'
                  referral_type: Referral
    get-referral-qr-code:
      path: /referrals/qr-code
      method: GET
      auth: true
      docs: Returns a QR code image containing the user's referral link
      source:
        openapi: ../openapi.json
      display-name: Get Referral QR Code
      response:
        docs: QR code image
        type: file
        status-code: 200
      errors:
        - root.GetReferralQrCodeRequestBadRequestError
        - root.GetReferralQrCodeRequestUnauthorizedError
    get-referrals-summary:
      path: /referrals/summary
      method: GET
      auth: true
      docs: |
        Get latest referee data for requester's account
      source:
        openapi: ../openapi.json
      display-name: Get account referral details
      response:
        docs: OK
        type: root.ResponsesGetReferrals
        status-code: 200
      errors:
        - root.GetReferralsSummaryRequestBadRequestError
        - root.GetReferralsSummaryRequestUnauthorizedError
      examples:
        - response:
            body:
              results:
                - address: address
                  created_at: 1715592690488
                  referral_code: maxdegen01
                  referral_rewards: '0.123'
                  volume_traded: '0.123'
  source:
    openapi: ../openapi.json
",
    },
    "system.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "getSystemConfig": {
              "auth": false,
              "display-name": "Get system config",
              "docs": "Get clearing and settlement layer config for Paradex
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "block_explorer_url": "https://voyager.testnet.paradex.trade/",
                      "bridged_tokens": [
                        {
                          "decimals": 1,
                          "l1_bridge_address": "l1_bridge_address",
                          "l1_token_address": "l1_token_address",
                          "l2_bridge_address": "l2_bridge_address",
                          "l2_token_address": "l2_token_address",
                          "name": "name",
                          "symbol": "symbol",
                        },
                      ],
                      "environment": "local",
                      "l1_chain_id": "5",
                      "l1_core_contract_address": "0x182FE62c57461d4c5Ab1aE6F04f1D51aA1607daf",
                      "l1_operator_address": "0x63e762538C70442758Fd622116d817761c94FD6A",
                      "l1_withdraw_relayer_address": "0x63e762538C70442758Fd622116d817761c94FD6A",
                      "l2_withdraw_relayer_address": "0x63e762538C70442758Fd622116d817761c94FD6A",
                      "liquidation_fee": "0.20",
                      "oracle_address": "0x47c622ce5f7ff7fa17725df596f4f506364e49be0621eb142a75b44ee3689c6",
                      "paraclear_account_hash": "0x033434ad846cdd5f23eb73ff09fe6fddd568284a0fb7d1be20ee482f044dabe2",
                      "paraclear_account_proxy_hash": "0x3530cc4759d78042f1b543bf797f5f3d647cde0388c33734cf91b7f7b9314a9",
                      "paraclear_address": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7554d",
                      "paraclear_decimals": 1,
                      "partial_liquidation_buffer": "0.2",
                      "partial_liquidation_share_increment": "0.05",
                      "starknet_chain_id": "SN_CHAIN_ID",
                      "starknet_fullnode_rpc_url": "https://pathfinder.api.testnet.paradex.trade/rpc/v0_7",
                      "starknet_gateway_url": "https://potc-testnet-02.starknet.io",
                      "universal_deployer_address": "0x1f3f9d3f1f0b7f3f9f3f9f3f9f3f9f3f9f3f9f3f",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/system/config",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesSystemConfigResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getSystemState": {
              "auth": false,
              "display-name": "Get system state",
              "docs": "Get the current state of the Paradex system
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "status": "ok",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/system/state",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesSystemStateResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getSystemTimeUnixMilliseconds": {
              "auth": false,
              "display-name": "Get system time (unix milliseconds)",
              "docs": "Get the current time in the Paradex
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "server_time": "1681493415023",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/system/time",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesSystemTimeResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getSystemConfig:
      path: /system/config
      method: GET
      auth: false
      docs: |
        Get clearing and settlement layer config for Paradex
      source:
        openapi: ../openapi.json
      display-name: Get system config
      response:
        docs: OK
        type: root.ResponsesSystemConfigResponse
        status-code: 200
      examples:
        - response:
            body:
              block_explorer_url: https://voyager.testnet.paradex.trade/
              bridged_tokens:
                - decimals: 1
                  l1_bridge_address: l1_bridge_address
                  l1_token_address: l1_token_address
                  l2_bridge_address: l2_bridge_address
                  l2_token_address: l2_token_address
                  name: name
                  symbol: symbol
              environment: local
              l1_chain_id: '5'
              l1_core_contract_address: '0x182FE62c57461d4c5Ab1aE6F04f1D51aA1607daf'
              l1_operator_address: '0x63e762538C70442758Fd622116d817761c94FD6A'
              l1_withdraw_relayer_address: '0x63e762538C70442758Fd622116d817761c94FD6A'
              l2_withdraw_relayer_address: '0x63e762538C70442758Fd622116d817761c94FD6A'
              liquidation_fee: '0.20'
              oracle_address: >-
                0x47c622ce5f7ff7fa17725df596f4f506364e49be0621eb142a75b44ee3689c6
              paraclear_account_hash: >-
                0x033434ad846cdd5f23eb73ff09fe6fddd568284a0fb7d1be20ee482f044dabe2
              paraclear_account_proxy_hash: >-
                0x3530cc4759d78042f1b543bf797f5f3d647cde0388c33734cf91b7f7b9314a9
              paraclear_address: >-
                0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7554d
              paraclear_decimals: 1
              partial_liquidation_buffer: '0.2'
              partial_liquidation_share_increment: '0.05'
              starknet_chain_id: SN_CHAIN_ID
              starknet_fullnode_rpc_url: https://pathfinder.api.testnet.paradex.trade/rpc/v0_7
              starknet_gateway_url: https://potc-testnet-02.starknet.io
              universal_deployer_address: '0x1f3f9d3f1f0b7f3f9f3f9f3f9f3f9f3f9f3f9f3f'
    getSystemState:
      path: /system/state
      method: GET
      auth: false
      docs: |
        Get the current state of the Paradex system
      source:
        openapi: ../openapi.json
      display-name: Get system state
      response:
        docs: OK
        type: root.ResponsesSystemStateResponse
        status-code: 200
      examples:
        - response:
            body:
              status: ok
    getSystemTimeUnixMilliseconds:
      path: /system/time
      method: GET
      auth: false
      docs: |
        Get the current time in the Paradex
      source:
        openapi: ../openapi.json
      display-name: Get system time (unix milliseconds)
      response:
        docs: OK
        type: root.ResponsesSystemTimeResponse
        status-code: 200
      examples:
        - response:
            body:
              server_time: '1681493415023'
  source:
    openapi: ../openapi.json
",
    },
    "transfers.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-transfers": {
              "auth": true,
              "display-name": "List account's transfers, i.e. deposits and withdrawals",
              "docs": undefined,
              "errors": [
                "root.GetTransfersRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "next": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                      "prev": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                      "results": [
                        {
                          "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "amount": "100",
                          "auto_withdrawal_fee": "4.5",
                          "bridge": "",
                          "counterparty": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "created_at": 1681497002041,
                          "direction": "IN",
                          "external_account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "external_chain": "ETHEREUM",
                          "external_txn_hash": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "failure_reason": "Gas fee too low",
                          "id": "123456789",
                          "kind": "DEPOSIT",
                          "last_updated_at": 1681497002041,
                          "socialized_loss_factor": "0",
                          "status": "PENDING",
                          "token": "USDC",
                          "txn_hash": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "vault_address": "0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a",
                          "vault_unwind_completion_percentage": "0.35",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/transfers",
              "request": {
                "name": "GetTransfersRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "Returns the ‘next’ paginated page.",
                    "type": "optional<string>",
                  },
                  "end_at": {
                    "docs": "End Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "page_size": {
                    "default": 100,
                    "docs": "Limit the number of responses in the page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 5000,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "start_at": {
                    "docs": "Start Time (unix time millisecond)",
                    "type": "optional<integer>",
                  },
                  "status": "optional<GetTransfersRequestStatus>",
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetTransfersResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "GetTransfersRequestStatus": {
            "enum": [
              "PENDING",
              "AVAILABLE",
              "COMPLETED",
              "FAILED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "types:
  GetTransfersRequestStatus:
    enum:
      - PENDING
      - AVAILABLE
      - COMPLETED
      - FAILED
    source:
      openapi: ../openapi.json
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-transfers:
      path: /transfers
      method: GET
      auth: true
      source:
        openapi: ../openapi.json
      display-name: List account's transfers, i.e. deposits and withdrawals
      request:
        name: GetTransfersRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Returns the ‘next’ paginated page.
          end_at:
            type: optional<integer>
            docs: End Time (unix time millisecond)
          page_size:
            type: optional<integer>
            default: 100
            docs: Limit the number of responses in the page
            validation:
              min: 1
              max: 5000
          start_at:
            type: optional<integer>
            docs: Start Time (unix time millisecond)
          status: optional<GetTransfersRequestStatus>
      response:
        docs: OK
        type: root.ResponsesGetTransfersResponse
        status-code: 200
      errors:
        - root.GetTransfersRequestBadRequestError
      examples:
        - response:
            body:
              next: >-
                eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=
              prev: >-
                eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==
              results:
                - account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  amount: '100'
                  auto_withdrawal_fee: '4.5'
                  bridge: ''
                  counterparty: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  created_at: 1681497002041
                  direction: IN
                  external_account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  external_chain: ETHEREUM
                  external_txn_hash: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  failure_reason: Gas fee too low
                  id: '123456789'
                  kind: DEPOSIT
                  last_updated_at: 1681497002041
                  socialized_loss_factor: '0'
                  status: PENDING
                  token: USDC
                  txn_hash: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  vault_address: '0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a'
                  vault_unwind_completion_percentage: '0.35'
  source:
    openapi: ../openapi.json
",
    },
    "vaults.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": false,
              "display-name": "Create vault",
              "docs": "Create a new vault by providing deployment parameters.Current user will
be set as owner of the account and a new sub-account will be deployed as
vault operator.
",
              "errors": [
                "root.VaultsCreateRequestBadRequestError",
              ],
              "examples": [
                {
                  "headers": {
                    "PARADEX-PARENT-ACCOUNT": "PARADEX-PARENT-ACCOUNT",
                    "PARADEX-STARKNET-ACCOUNT": "PARADEX-STARKNET-ACCOUNT",
                    "PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH": "PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH",
                    "PARADEX-STARKNET-SIGNATURE": "PARADEX-STARKNET-SIGNATURE",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "address": "0x1234567890abcdef",
                      "created_at": 1517171717,
                      "description": "My description",
                      "kind": "user",
                      "last_updated_at": 1617171717,
                      "lockup_period": 1,
                      "max_tvl": 1000000,
                      "name": "MyVault",
                      "operator_account": "0x1234567890abcdef",
                      "owner_account": "0x0234567890abcdef",
                      "profit_share": 10,
                      "status": "INITIALIZING",
                      "strategies": [
                        {
                          "address": "0x1234567890abcdef",
                          "name": "Alpha Strategy",
                        },
                      ],
                      "token_address": "token_address",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/vaults",
              "request": {
                "body": {
                  "properties": {
                    "deposit_tx_signature": {
                      "docs": "Initial deposit transfer by vault owner",
                      "type": "optional<string>",
                    },
                    "description": {
                      "docs": "Description for the vault",
                      "type": "optional<string>",
                    },
                    "lockup_period": {
                      "docs": "User's deposits lockup period in days",
                      "type": "optional<integer>",
                    },
                    "max_tvl": {
                      "docs": "Max TVL locked by the Vault, if any. 0 for unlimited",
                      "type": "optional<integer>",
                    },
                    "name": {
                      "docs": "Unique name for the vault",
                      "type": "optional<string>",
                    },
                    "profit_share": {
                      "docs": "Vault owner profit share (percentage)",
                      "type": "optional<integer>",
                    },
                    "public_key": {
                      "docs": "Public key of vault operator",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": {
                  "PARADEX-PARENT-ACCOUNT": {
                    "docs": "Onboarded by prdx:0xa123456789",
                    "name": "paradexParentAccount",
                    "type": "string",
                  },
                  "PARADEX-STARKNET-ACCOUNT": {
                    "docs": "Starknet address",
                    "name": "paradexStarknetAccount",
                    "type": "string",
                  },
                  "PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH": {
                    "docs": "Account derivation path - m/44'/9004'/0'/0/1",
                    "name": "paradexStarknetAccountDerivationPath",
                    "type": "string",
                  },
                  "PARADEX-STARKNET-SIGNATURE": {
                    "docs": "Starknet signature",
                    "name": "paradexStarknetSignature",
                    "type": "string",
                  },
                },
                "name": "RequestsCreateVault",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Created",
                "status-code": 201,
                "type": "root.ResponsesVaultResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "get": {
              "auth": false,
              "display-name": "Get vaults",
              "docs": "Get list of available vaults.
",
              "errors": [
                "root.VaultsGetRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "address": "0x1234567890abcdef",
                          "created_at": 1517171717,
                          "description": "My description",
                          "kind": "user",
                          "last_updated_at": 1617171717,
                          "lockup_period": 1,
                          "max_tvl": 1000000,
                          "name": "MyVault",
                          "operator_account": "0x1234567890abcdef",
                          "owner_account": "0x0234567890abcdef",
                          "profit_share": 10,
                          "status": "INITIALIZING",
                          "strategies": [
                            {
                              "address": "0x1234567890abcdef",
                              "name": "Alpha Strategy",
                            },
                          ],
                          "token_address": "token_address",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults",
              "request": {
                "name": "VaultsGetRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetVaultsResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getAccountSummary": {
              "auth": true,
              "display-name": "Get vault account summary",
              "docs": "Get current user summary metrics for all vaults or for the single vault
specified by address. User metrics are only returned if the current user
is a depositor for the vault.
",
              "errors": [
                "root.VaultsGetAccountSummaryRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "address": "0x1234567890abcdef",
                          "created_at": 1717171717,
                          "deposited_amount": "123.45",
                          "total_pnl": "149.12",
                          "total_roi": "0.724",
                          "vtoken_amount": "123.45",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/account-summary",
              "request": {
                "name": "VaultsGetAccountSummaryRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetVaultAccountSummariesResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getBalance": {
              "auth": false,
              "display-name": "Get vault balances",
              "docs": "Get spot balance of a vault
",
              "errors": [
                "root.VaultsGetBalanceRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "address": "address",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "last_updated_at": 1681462770114,
                          "size": "123003.620",
                          "token": "USDC",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/balance",
              "request": {
                "name": "VaultsGetBalanceRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "string",
                  },
                  "strategy": {
                    "docs": "Vault Strategy Address",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetBalancesResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getConfig": {
              "auth": false,
              "display-name": "Get vaults config",
              "docs": "Get vaults global configuration.
",
              "errors": [
                "root.VaultsGetConfigRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "max_lockup_period_days": "4",
                      "max_profit_share_percentage": "50",
                      "min_initial_deposit": "1000",
                      "min_lockup_period_days": "1",
                      "min_owner_share_percentage": "5",
                      "vault_factory_address": "0x1234567890abcdef",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/config",
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesVaultsConfigResponse",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getHistoricalData": {
              "auth": false,
              "display-name": "Get vault historical data",
              "docs": "Get PnL and Account value historical timeseries for the given vault.
",
              "errors": [
                "root.VaultsGetHistoricalDataRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "address": "address",
                    "resolution": "alltime",
                    "type": "pnl",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "address": "0x1234567890abcdef",
                          "data": [
                            1.1,
                          ],
                          "timestamps": [
                            1,
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/history",
              "request": {
                "name": "VaultsGetHistoricalDataRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "string",
                  },
                  "resolution": {
                    "docs": "Resolution of data",
                    "type": "VaultsGetHistoricalDataRequestResolution",
                  },
                  "strategy": {
                    "docs": "Vault Strategy Address",
                    "type": "optional<string>",
                  },
                  "type": {
                    "docs": "Type of data",
                    "type": "VaultsGetHistoricalDataRequestType",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetVaultHistoricalDataResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getPositions": {
              "auth": false,
              "display-name": "Get vault positions",
              "docs": "Get positions opened by the given vault.
",
              "errors": [
                "root.VaultsGetPositionsRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "address": "address",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "average_entry_price": "29001.34",
                          "average_entry_price_usd": "29001.34",
                          "average_exit_price": "29001.34",
                          "cached_funding_index": "1234.3",
                          "closed_at": 1681493939981,
                          "cost": "-10005.4623",
                          "cost_usd": "-10005.4623",
                          "created_at": 1681493939981,
                          "id": "1234234",
                          "last_fill_id": "1234234",
                          "last_updated_at": 1681493939981,
                          "leverage": "leverage",
                          "liquidation_price": "liquidation_price",
                          "market": "BTC-USD-PERP",
                          "realized_positional_funding_pnl": "realized_positional_funding_pnl",
                          "realized_positional_pnl": "realized_positional_pnl",
                          "seq_no": 1681471234972000000,
                          "side": "SHORT",
                          "size": "-0.345",
                          "status": "OPEN",
                          "unrealized_funding_pnl": "12.234",
                          "unrealized_pnl": "-123.23",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/positions",
              "request": {
                "name": "VaultsGetPositionsRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "string",
                  },
                  "strategy": {
                    "docs": "Vault Strategy Address",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesVaultPositionsResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getSummary": {
              "auth": false,
              "display-name": "Get vault summary",
              "docs": "Get vaults summary metrics for all vaults or for the single vault specified by address.
",
              "errors": [
                "root.VaultsGetSummaryRequestBadRequestError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "results": [
                        {
                          "address": "0x1234567890abcdef",
                          "last_month_return": "0.023",
                          "max_drawdown": "0.1916",
                          "max_drawdown_24h": "0.0138",
                          "max_drawdown_30d": "0.1821",
                          "max_drawdown_7d": "0.1124",
                          "net_deposits": "1000000",
                          "num_depositors": 100,
                          "owner_equity": "0.145",
                          "pnl_24h": "13.41",
                          "pnl_30d": "114.19",
                          "pnl_7d": "91.31",
                          "roi_24h": "0.034",
                          "roi_30d": "0.003",
                          "roi_7d": "0.123",
                          "total_pnl": "149.12",
                          "total_roi": "0.724",
                          "tvl": "1000000",
                          "volume": "12345678.16",
                          "volume_24h": "45678.16",
                          "volume_30d": "2345678.16",
                          "volume_7d": "345678.16",
                          "vtoken_price": "1.23",
                          "vtoken_supply": "1000000",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/summary",
              "request": {
                "name": "VaultsGetSummaryRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesGetVaultSummariesResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getTransfers": {
              "auth": false,
              "display-name": "Get vault transfers",
              "docs": "Get deposits and withdrawals related to the given vault.
",
              "errors": [
                "root.VaultsGetTransfersRequestBadRequestError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "address": "address",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "amount": "100",
                          "auto_withdrawal_fee": "4.5",
                          "bridge": "",
                          "counterparty": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "created_at": 1681497002041,
                          "direction": "IN",
                          "external_account": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "external_chain": "ETHEREUM",
                          "external_txn_hash": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "failure_reason": "Gas fee too low",
                          "id": "123456789",
                          "kind": "DEPOSIT",
                          "last_updated_at": 1681497002041,
                          "socialized_loss_factor": "0",
                          "status": "PENDING",
                          "token": "USDC",
                          "txn_hash": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                          "vault_address": "0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a",
                          "vault_unwind_completion_percentage": "0.35",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/vaults/transfers",
              "request": {
                "name": "VaultsGetTransfersRequest",
                "query-parameters": {
                  "address": {
                    "docs": "Vault Address",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.ResponsesVaultTransfersResp",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "VaultsGetHistoricalDataRequestResolution": {
            "enum": [
              "alltime",
              {
                "name": "OneH",
                "value": "1h",
              },
              {
                "name": "EightH",
                "value": "8h",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "VaultsGetHistoricalDataRequestType": {
            "enum": [
              "pnl",
              "value",
              "price",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /vaults
      method: GET
      auth: false
      docs: |
        Get list of available vaults.
      source:
        openapi: ../openapi.json
      display-name: Get vaults
      request:
        name: VaultsGetRequest
        query-parameters:
          address:
            type: optional<string>
            docs: Vault Address
      response:
        docs: OK
        type: root.ResponsesGetVaultsResp
        status-code: 200
      errors:
        - root.VaultsGetRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - address: '0x1234567890abcdef'
                  created_at: 1517171717
                  description: My description
                  kind: user
                  last_updated_at: 1617171717
                  lockup_period: 1
                  max_tvl: 1000000
                  name: MyVault
                  operator_account: '0x1234567890abcdef'
                  owner_account: '0x0234567890abcdef'
                  profit_share: 10
                  status: INITIALIZING
                  strategies:
                    - address: '0x1234567890abcdef'
                      name: Alpha Strategy
                  token_address: token_address
    create:
      path: /vaults
      method: POST
      auth: false
      docs: |
        Create a new vault by providing deployment parameters.Current user will
        be set as owner of the account and a new sub-account will be deployed as
        vault operator.
      source:
        openapi: ../openapi.json
      display-name: Create vault
      request:
        name: RequestsCreateVault
        headers:
          PARADEX-PARENT-ACCOUNT:
            type: string
            name: paradexParentAccount
            docs: Onboarded by prdx:0xa123456789
          PARADEX-STARKNET-SIGNATURE:
            type: string
            name: paradexStarknetSignature
            docs: Starknet signature
          PARADEX-STARKNET-ACCOUNT:
            type: string
            name: paradexStarknetAccount
            docs: Starknet address
          PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH:
            type: string
            name: paradexStarknetAccountDerivationPath
            docs: Account derivation path - m/44'/9004'/0'/0/1
        body:
          properties:
            deposit_tx_signature:
              type: optional<string>
              docs: Initial deposit transfer by vault owner
            description:
              type: optional<string>
              docs: Description for the vault
            lockup_period:
              type: optional<integer>
              docs: User's deposits lockup period in days
            max_tvl:
              type: optional<integer>
              docs: Max TVL locked by the Vault, if any. 0 for unlimited
            name:
              type: optional<string>
              docs: Unique name for the vault
            profit_share:
              type: optional<integer>
              docs: Vault owner profit share (percentage)
            public_key:
              type: optional<string>
              docs: Public key of vault operator
        content-type: application/json
      response:
        docs: Created
        type: root.ResponsesVaultResp
        status-code: 201
      errors:
        - root.VaultsCreateRequestBadRequestError
      examples:
        - headers:
            PARADEX-PARENT-ACCOUNT: PARADEX-PARENT-ACCOUNT
            PARADEX-STARKNET-SIGNATURE: PARADEX-STARKNET-SIGNATURE
            PARADEX-STARKNET-ACCOUNT: PARADEX-STARKNET-ACCOUNT
            PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH: PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH
          request: {}
          response:
            body:
              address: '0x1234567890abcdef'
              created_at: 1517171717
              description: My description
              kind: user
              last_updated_at: 1617171717
              lockup_period: 1
              max_tvl: 1000000
              name: MyVault
              operator_account: '0x1234567890abcdef'
              owner_account: '0x0234567890abcdef'
              profit_share: 10
              status: INITIALIZING
              strategies:
                - address: '0x1234567890abcdef'
                  name: Alpha Strategy
              token_address: token_address
    getAccountSummary:
      path: /vaults/account-summary
      method: GET
      auth: true
      docs: |
        Get current user summary metrics for all vaults or for the single vault
        specified by address. User metrics are only returned if the current user
        is a depositor for the vault.
      source:
        openapi: ../openapi.json
      display-name: Get vault account summary
      request:
        name: VaultsGetAccountSummaryRequest
        query-parameters:
          address:
            type: optional<string>
            docs: Vault Address
      response:
        docs: OK
        type: root.ResponsesGetVaultAccountSummariesResp
        status-code: 200
      errors:
        - root.VaultsGetAccountSummaryRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - address: '0x1234567890abcdef'
                  created_at: 1717171717
                  deposited_amount: '123.45'
                  total_pnl: '149.12'
                  total_roi: '0.724'
                  vtoken_amount: '123.45'
    getBalance:
      path: /vaults/balance
      method: GET
      auth: false
      docs: |
        Get spot balance of a vault
      source:
        openapi: ../openapi.json
      display-name: Get vault balances
      request:
        name: VaultsGetBalanceRequest
        query-parameters:
          address:
            type: string
            docs: Vault Address
          strategy:
            type: optional<string>
            docs: Vault Strategy Address
      response:
        docs: OK
        type: root.ResponsesGetBalancesResp
        status-code: 200
      errors:
        - root.VaultsGetBalanceRequestBadRequestError
      examples:
        - query-parameters:
            address: address
          response:
            body:
              results:
                - last_updated_at: 1681462770114
                  size: '123003.620'
                  token: USDC
    getConfig:
      path: /vaults/config
      method: GET
      auth: false
      docs: |
        Get vaults global configuration.
      source:
        openapi: ../openapi.json
      display-name: Get vaults config
      response:
        docs: OK
        type: root.ResponsesVaultsConfigResponse
        status-code: 200
      errors:
        - root.VaultsGetConfigRequestBadRequestError
      examples:
        - response:
            body:
              max_lockup_period_days: '4'
              max_profit_share_percentage: '50'
              min_initial_deposit: '1000'
              min_lockup_period_days: '1'
              min_owner_share_percentage: '5'
              vault_factory_address: '0x1234567890abcdef'
    getHistoricalData:
      path: /vaults/history
      method: GET
      auth: false
      docs: |
        Get PnL and Account value historical timeseries for the given vault.
      source:
        openapi: ../openapi.json
      display-name: Get vault historical data
      request:
        name: VaultsGetHistoricalDataRequest
        query-parameters:
          address:
            type: string
            docs: Vault Address
          strategy:
            type: optional<string>
            docs: Vault Strategy Address
          type:
            type: VaultsGetHistoricalDataRequestType
            docs: Type of data
          resolution:
            type: VaultsGetHistoricalDataRequestResolution
            docs: Resolution of data
      response:
        docs: OK
        type: root.ResponsesGetVaultHistoricalDataResp
        status-code: 200
      errors:
        - root.VaultsGetHistoricalDataRequestBadRequestError
      examples:
        - query-parameters:
            address: address
            type: pnl
            resolution: alltime
          response:
            body:
              results:
                - address: '0x1234567890abcdef'
                  data:
                    - 1.1
                  timestamps:
                    - 1
    getPositions:
      path: /vaults/positions
      method: GET
      auth: false
      docs: |
        Get positions opened by the given vault.
      source:
        openapi: ../openapi.json
      display-name: Get vault positions
      request:
        name: VaultsGetPositionsRequest
        query-parameters:
          address:
            type: string
            docs: Vault Address
          strategy:
            type: optional<string>
            docs: Vault Strategy Address
      response:
        docs: OK
        type: root.ResponsesVaultPositionsResp
        status-code: 200
      errors:
        - root.VaultsGetPositionsRequestBadRequestError
      examples:
        - query-parameters:
            address: address
          response:
            body:
              results:
                - average_entry_price: '29001.34'
                  average_entry_price_usd: '29001.34'
                  average_exit_price: '29001.34'
                  cached_funding_index: '1234.3'
                  closed_at: 1681493939981
                  cost: '-10005.4623'
                  cost_usd: '-10005.4623'
                  created_at: 1681493939981
                  id: '1234234'
                  last_fill_id: '1234234'
                  last_updated_at: 1681493939981
                  leverage: leverage
                  liquidation_price: liquidation_price
                  market: BTC-USD-PERP
                  realized_positional_funding_pnl: realized_positional_funding_pnl
                  realized_positional_pnl: realized_positional_pnl
                  seq_no: 1681471234972000000
                  side: SHORT
                  size: '-0.345'
                  status: OPEN
                  unrealized_funding_pnl: '12.234'
                  unrealized_pnl: '-123.23'
    getSummary:
      path: /vaults/summary
      method: GET
      auth: false
      docs: >
        Get vaults summary metrics for all vaults or for the single vault
        specified by address.
      source:
        openapi: ../openapi.json
      display-name: Get vault summary
      request:
        name: VaultsGetSummaryRequest
        query-parameters:
          address:
            type: optional<string>
            docs: Vault Address
      response:
        docs: OK
        type: root.ResponsesGetVaultSummariesResp
        status-code: 200
      errors:
        - root.VaultsGetSummaryRequestBadRequestError
      examples:
        - response:
            body:
              results:
                - address: '0x1234567890abcdef'
                  last_month_return: '0.023'
                  max_drawdown: '0.1916'
                  max_drawdown_24h: '0.0138'
                  max_drawdown_30d: '0.1821'
                  max_drawdown_7d: '0.1124'
                  net_deposits: '1000000'
                  num_depositors: 100
                  owner_equity: '0.145'
                  pnl_24h: '13.41'
                  pnl_30d: '114.19'
                  pnl_7d: '91.31'
                  roi_24h: '0.034'
                  roi_30d: '0.003'
                  roi_7d: '0.123'
                  total_pnl: '149.12'
                  total_roi: '0.724'
                  tvl: '1000000'
                  volume: '12345678.16'
                  volume_24h: '45678.16'
                  volume_30d: '2345678.16'
                  volume_7d: '345678.16'
                  vtoken_price: '1.23'
                  vtoken_supply: '1000000'
    getTransfers:
      path: /vaults/transfers
      method: GET
      auth: false
      docs: |
        Get deposits and withdrawals related to the given vault.
      source:
        openapi: ../openapi.json
      display-name: Get vault transfers
      request:
        name: VaultsGetTransfersRequest
        query-parameters:
          address:
            type: string
            docs: Vault Address
      response:
        docs: OK
        type: root.ResponsesVaultTransfersResp
        status-code: 200
      errors:
        - root.VaultsGetTransfersRequestBadRequestError
      examples:
        - query-parameters:
            address: address
          response:
            body:
              results:
                - account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  amount: '100'
                  auto_withdrawal_fee: '4.5'
                  bridge: ''
                  counterparty: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  created_at: 1681497002041
                  direction: IN
                  external_account: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  external_chain: ETHEREUM
                  external_txn_hash: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  failure_reason: Gas fee too low
                  id: '123456789'
                  kind: DEPOSIT
                  last_updated_at: 1681497002041
                  socialized_loss_factor: '0'
                  status: PENDING
                  token: USDC
                  txn_hash: >-
                    0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa
                  vault_address: '0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a'
                  vault_unwind_completion_percentage: '0.35'
  source:
    openapi: ../openapi.json
types:
  VaultsGetHistoricalDataRequestType:
    enum:
      - pnl
      - value
      - price
    source:
      openapi: ../openapi.json
  VaultsGetHistoricalDataRequestResolution:
    enum:
      - alltime
      - value: 1h
        name: OneH
      - value: 8h
        name: EightH
    source:
      openapi: ../openapi.json
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerToken",
      "auth-schemes": {
        "BearerToken": {
          "header": "Authorization",
          "name": "apiKey",
          "type": "string",
        },
      },
      "default-environment": "Default",
      "display-name": "Paradex REST API",
      "environments": {
        "Default": "https://api.testnet.paradex.trade/v1",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Paradex REST API
environments:
  Default: https://api.testnet.paradex.trade/v1
default-environment: Default
auth-schemes:
  BearerToken:
    header: Authorization
    name: apiKey
    type: string
auth: BearerToken
",
  },
}