{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "BadRequestError": {
            "docs": "",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "detail": "detail",
                },
              },
            ],
            "status-code": 400,
            "type": "unknown",
          },
          "ConflictError": {
            "docs": "",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "detail": "detail",
                },
              },
            ],
            "status-code": 409,
            "type": "RegisterPromptErrorResponse",
          },
          "ForbiddenError": {
            "docs": "",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "detail": "detail",
                },
              },
            ],
            "status-code": 403,
            "type": "GenerateErrorResponse",
          },
          "InternalServerError": {
            "docs": "",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "detail": "detail",
                },
              },
            ],
            "status-code": 500,
            "type": "unknown",
          },
          "NotFoundError": {
            "docs": "",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "detail": "detail",
                },
              },
            ],
            "status-code": 404,
            "type": "unknown",
          },
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "execute-workflow-stream": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Executes a deployed Workflow and streams back its results.",
              "examples": [
                {
                  "request": {
                    "inputs": [
                      {
                        "name": "inputs",
                        "type": "CHAT_HISTORY",
                        "value": [
                          {
                            "role": "SYSTEM",
                            "text": "text",
                          },
                        ],
                      },
                    ],
                  },
                  "response": {
                    "stream": [
                      {
                        "data": {
                          "data": {
                            "data": {
                              "output": {
                                "name": "output",
                                "type": "CHAT_HISTORY",
                                "value": [
                                  {
                                    "role": "SYSTEM",
                                    "text": "text",
                                  },
                                ],
                              },
                            },
                            "type": "TERMINAL",
                          },
                          "error": {
                            "code": "WORKFLOW_INITIALIZATION",
                            "message": "message",
                          },
                          "id": "id",
                          "node_id": "node_id",
                          "node_result_id": "node_result_id",
                          "state": "INITIATED",
                          "ts": "2024-01-15T09:30:00Z",
                        },
                        "external_id": "string",
                        "run_id": "string",
                        "type": "NODE",
                      },
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/execute-workflow-stream",
              "request": {
                "body": {
                  "properties": {
                    "external_id": {
                      "docs": "Optionally include a unique identifier for tracking purposes.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "inputs": "list<WorkflowRequestInputRequest>",
                    "release_tag": {
                      "docs": "Optionally specify a release tag if you want to pin to a specific release of the Workflow Deployment",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "workflow_deployment_id": {
                      "docs": "The ID of the Workflow Deployment. Must provide either this or workflow_deployment_name.",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "workflow_deployment_name": {
                      "docs": "The name of the Workflow Deployment. Must provide either this or workflow_deployment_id.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ExecuteWorkflowStreamRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response-stream": {
                "docs": "",
                "format": "json",
                "type": "WorkflowStreamEvent",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Predict",
            },
            "generate": {
              "auth": true,
              "docs": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of `https://predict.vellum.ai`.",
              "errors": [
                "BadRequestError",
                "ForbiddenError",
                "NotFoundError",
                "InternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "requests": [
                      {
                        "input_values": {
                          "key": "value",
                        },
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "data": {
                            "completions": [
                              {
                                "id": "id",
                                "model_version_id": "model_version_id",
                                "text": "text",
                              },
                            ],
                          },
                          "error": {
                            "message": "message",
                          },
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/generate",
              "request": {
                "body": {
                  "properties": {
                    "deployment_id": {
                      "docs": "The ID of the deployment. Must provide either this or deployment_name.",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "deployment_name": {
                      "docs": "The name of the deployment. Must provide either this or deployment_id.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "options": {
                      "docs": "Additional configuration that can be used to control what's included in the response.",
                      "type": "optional<GenerateOptionsRequest>",
                    },
                    "requests": {
                      "docs": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                      "type": "list<GenerateRequest>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "GenerateBodyRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "GenerateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Predict",
            },
            "generate-stream": {
              "auth": true,
              "docs": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a stream of completions using a previously defined deployment.

**Note:** Uses a base url of `https://predict.vellum.ai`.",
              "errors": [
                "BadRequestError",
                "ForbiddenError",
                "NotFoundError",
                "InternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "requests": [
                      {
                        "input_values": {
                          "key": "value",
                        },
                      },
                    ],
                  },
                  "response": {
                    "stream": [
                      {
                        "delta": {
                          "data": {
                            "completion": {
                              "id": "id",
                              "model_version_id": "model_version_id",
                              "text": "text",
                            },
                            "completion_index": 1,
                          },
                          "error": {
                            "message": "message",
                          },
                          "request_index": 1,
                        },
                      },
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/generate-stream",
              "request": {
                "body": {
                  "properties": {
                    "deployment_id": {
                      "docs": "The ID of the deployment. Must provide either this or deployment_name.",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "deployment_name": {
                      "docs": "The name of the deployment. Must provide either this or deployment_id.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "options": {
                      "docs": "Additional configuration that can be used to control what's included in the response.",
                      "type": "optional<GenerateOptionsRequest>",
                    },
                    "requests": {
                      "docs": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                      "type": "list<GenerateRequest>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "GenerateStreamBodyRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response-stream": {
                "docs": "",
                "format": "json",
                "type": "GenerateStreamResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Predict",
            },
            "search": {
              "auth": true,
              "docs": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of `https://predict.vellum.ai`.",
              "errors": [
                "BadRequestError",
                "NotFoundError",
                "InternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "query": "query",
                  },
                  "response": {
                    "body": {
                      "results": [
                        {
                          "document": {
                            "id": "id",
                            "label": "label",
                          },
                          "keywords": [
                            "keywords",
                          ],
                          "score": 1.1,
                          "text": "text",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/search",
              "request": {
                "body": {
                  "properties": {
                    "index_id": {
                      "docs": "The ID of the index to search against. Must provide either this or index_name.",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "index_name": {
                      "docs": "The name of the index to search against. Must provide either this or index_id.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "options": {
                      "docs": "Configuration options for the search.",
                      "type": "optional<SearchRequestOptionsRequest>",
                    },
                    "query": {
                      "docs": "The query to search for.",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SearchRequestBodyRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "SearchResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Predict",
            },
            "submit-completion-actuals": {
              "auth": true,
              "docs": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of `https://predict.vellum.ai`.",
              "errors": [
                "BadRequestError",
                "NotFoundError",
                "InternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "actuals": [
                      {},
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/submit-completion-actuals",
              "request": {
                "body": {
                  "properties": {
                    "actuals": {
                      "docs": "Feedback regarding the quality of previously generated completions",
                      "type": "list<SubmitCompletionActualRequest>",
                    },
                    "deployment_id": {
                      "docs": "The ID of the deployment. Must provide either this or deployment_name.",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "deployment_name": {
                      "docs": "The name of the deployment. Must provide either this or deployment_id.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SubmitCompletionActualsRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Predict",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "BlockTypeEnum": {
            "docs": "* `CHAT_MESSAGE` - CHAT_MESSAGE
* `CHAT_HISTORY` - CHAT_HISTORY
* `JINJA` - JINJA
* `FUNCTION_DEFINITION` - FUNCTION_DEFINITION",
            "enum": [
              "CHAT_MESSAGE",
              "CHAT_HISTORY",
              "JINJA",
              "FUNCTION_DEFINITION",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChatMessage": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "role": "ChatMessageRole",
              "text": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChatMessageRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "role": "ChatMessageRole",
              "text": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ChatMessageRole": {
            "docs": "* `SYSTEM` - System
* `ASSISTANT` - Assistant
* `USER` - User
* `FUNCTION` - Function",
            "enum": [
              "SYSTEM",
              "ASSISTANT",
              "USER",
              "FUNCTION",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConditionalNodeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "ConditionalNodeResultData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConditionalNodeResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "source_handle_id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContentType": {
            "docs": "* `STRING` - STRING
* `JSON` - JSON",
            "enum": [
              "STRING",
              "JSON",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeploymentNodeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "DeploymentNodeResultData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeploymentNodeResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": "optional<string>",
              "output_id": "string",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeploymentRead": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "active_model_version_ids": "list<string>",
              "created": "datetime",
              "environment": {
                "docs": "The environment this deployment is used in

* `DEVELOPMENT` - Development
* `STAGING` - Staging
* `PRODUCTION` - Production",
                "type": "optional<EnvironmentEnum>",
              },
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "label": {
                "docs": "A human-readable label for the deployment",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 150,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "last_deployed_on": "datetime",
              "model_type": {
                "docs": "The type of model this deployment serves

* `GENERATE` - Generate
* `CLASSIFY` - Classify",
                "type": "ModelTypeEnum",
              },
              "name": {
                "docs": "A name that uniquely identifies this deployment within its workspace",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 150,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The current status of the deployment

* `ACTIVE` - Active
* `INACTIVE` - Inactive
* `ARCHIVED` - Archived",
                "type": "optional<DeploymentReadStatusEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeploymentReadStatusEnum": {
            "docs": "* `ACTIVE` - Active
* `INACTIVE` - Inactive
* `ARCHIVED` - Archived",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "ARCHIVED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Document": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "external_id": {
                "docs": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 1000,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "The ID of the document.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "label": {
                "docs": "The human-readable name for the document.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 1000,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DocumentDocumentToDocumentIndex": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "document_index_id": {
                "docs": "Vellum-generated ID that uniquely identifies the index this document is included in.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Vellum-generated ID that uniquely identifies this link.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "indexing_state": {
                "docs": "An enum value representing where this document is along its indexing lifecycle for this index.

* `AWAITING_PROCESSING` - Awaiting Processing
* `QUEUED` - Queued
* `INDEXING` - Indexing
* `INDEXED` - Indexed
* `FAILED` - Failed",
                "type": "optional<IndexingStateEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DocumentIndexRead": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created": "datetime",
              "environment": {
                "docs": "The environment this document index is used in

* `DEVELOPMENT` - Development
* `STAGING` - Staging
* `PRODUCTION` - Production",
                "type": "optional<EnvironmentEnum>",
              },
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "indexing_config": {
                "docs": "Configuration representing how documents should be indexed",
                "type": "map<string, unknown>",
              },
              "label": {
                "docs": "A human-readable label for the document index",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 150,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "name": {
                "docs": "A name that uniquely identifies this index within its workspace",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 150,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The current status of the document index

* `ACTIVE` - Active
* `ARCHIVED` - Archived",
                "type": "optional<DocumentIndexStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DocumentIndexStatus": {
            "docs": "* `ACTIVE` - Active
* `ARCHIVED` - Archived",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EnrichedNormalizedCompletion": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "external_id": {
                "docs": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                "type": "optional<string>",
              },
              "finish_reason": {
                "docs": "The reason the generation finished.

* `LENGTH` - LENGTH
* `STOP` - STOP
* `UNKNOWN` - UNKNOWN",
                "type": "optional<FinishReasonEnum>",
              },
              "id": {
                "docs": "The Vellum-generated ID of the completion.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "logprobs": {
                "docs": "The logprobs of the completion. Only present if specified in the original request options.",
                "type": "optional<NormalizedLogProbs>",
              },
              "model_version_id": {
                "docs": "The ID of the model version used to generate this completion.",
                "type": "string",
              },
              "text": {
                "docs": "The text generated by the LLM.",
                "type": "string",
              },
              "type": "optional<ContentType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EnvironmentEnum": {
            "docs": "* `DEVELOPMENT` - Development
* `STAGING` - Staging
* `PRODUCTION` - Production",
            "enum": [
              "DEVELOPMENT",
              "STAGING",
              "PRODUCTION",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EvaluationParams": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "target": {
                "docs": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EvaluationParamsRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "target": {
                "docs": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FinishReasonEnum": {
            "docs": "* `LENGTH` - LENGTH
* `STOP` - STOP
* `UNKNOWN` - UNKNOWN",
            "enum": [
              "LENGTH",
              "STOP",
              "UNKNOWN",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateErrorResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": {
                "docs": "Details about why the request failed.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateOptionsRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "logprobs": {
                "docs": "Which logprobs to include, if any. Defaults to NONE.

* `ALL` - ALL
* `NONE` - NONE",
                "type": "optional<LogprobsEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "chat_history": {
                "docs": "Optionally provide a list of chat messages that'll be used in place of the special {$chat_history} variable, if included in the prompt.",
                "type": "optional<list<ChatMessageRequest>>",
              },
              "external_ids": {
                "docs": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                "type": "optional<list<string>>",
              },
              "input_values": {
                "docs": "Key/value pairs for each template variable defined in the deployment's prompt.",
                "type": "map<string, unknown>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "The results of each generation request.",
                "type": "list<GenerateResult>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
                "type": "optional<GenerateResultData>",
              },
              "error": {
                "docs": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
                "type": "optional<GenerateResultError>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "completions": {
                "docs": "The generated completions. This will generally be a list of length one.",
                "type": "list<EnrichedNormalizedCompletion>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateResultError": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "message": {
                "docs": "The error message returned by the LLM provider.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateStreamResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": "GenerateStreamResult",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateStreamResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<GenerateStreamResultData>",
              "error": "optional<GenerateResultError>",
              "request_index": "integer",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GenerateStreamResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "completion": "EnrichedNormalizedCompletion",
              "completion_index": "integer",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IndexingStateEnum": {
            "docs": "* `AWAITING_PROCESSING` - Awaiting Processing
* `QUEUED` - Queued
* `INDEXING` - Indexing
* `INDEXED` - Indexed
* `FAILED` - Failed",
            "enum": [
              "AWAITING_PROCESSING",
              "QUEUED",
              "INDEXING",
              "INDEXED",
              "FAILED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LogprobsEnum": {
            "docs": "* `ALL` - ALL
* `NONE` - NONE",
            "enum": [
              "ALL",
              "NONE",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelTypeEnum": {
            "docs": "* `GENERATE` - Generate
* `CLASSIFY` - Classify",
            "enum": [
              "GENERATE",
              "CLASSIFY",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionBuildConfig": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "base_model": {
                "docs": "The name of the base model used to create this model version, as identified by the LLM provider.",
                "type": "string",
              },
              "sandbox_snapshot": {
                "docs": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
                "type": "optional<ModelVersionSandboxSnapshot>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionCompilePromptResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "prompt": {
                "docs": "Information about the compiled prompt.",
                "type": "ModelVersionCompiledPrompt",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionCompiledPrompt": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "num_tokens": {
                "docs": "The approximate number of tokens used by the compiled prompt.",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "text": {
                "docs": "The fully compiled prompt in normalized ChatML syntax after all variable substitutions and templating functions are applied.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionExecConfig": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "input_variables": {
                "docs": "Names of the input variables specified in the prompt template.",
                "type": "list<PromptTemplateInputVariable>",
              },
              "parameters": {
                "docs": "The generation parameters that are passed to the LLM provider at runtime.",
                "type": "ModelVersionExecConfigParameters",
              },
              "prompt_block_data": "optional<PromptTemplateBlockData>",
              "prompt_syntax_version": "optional<integer>",
              "prompt_template": {
                "docs": "The template used to generate prompts for this model version.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionExecConfigParameters": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "frequency_penalty": "double",
              "logit_bias": "optional<map<string, optional<double>>>",
              "max_tokens": "integer",
              "presence_penalty": "double",
              "stop": "optional<list<string>>",
              "temperature": "double",
              "top_k": "optional<double>",
              "top_p": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionRead": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "build_config": {
                "docs": "Configuration used to build this model version.",
                "type": "ModelVersionBuildConfig",
              },
              "created": {
                "docs": "Timestamp of when this model version was created.",
                "type": "datetime",
              },
              "exec_config": {
                "docs": "Configuration used to execute this model version.",
                "type": "ModelVersionExecConfig",
              },
              "external_id": {
                "docs": "The unique id of this model version as it exists in the above provider's system.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 250,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Vellum-generated ID that uniquely identifies this model version.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "label": {
                "docs": "Human-friendly name for this model version.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 150,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "model_type": {
                "docs": "The type of task this model is used for.

* `GENERATE` - Generate
* `CLASSIFY` - Classify",
                "type": "ModelTypeEnum",
              },
              "provider": {
                "docs": "Which LLM provider this model version is associated with.

* `ANTHROPIC` - Anthropic
* `COHERE` - Cohere
* `GOOGLE` - Google
* `HOSTED` - Hosted
* `MOSAICML` - MosaicML
* `MYSTIC` - Mystic
* `OPENAI` - OpenAI
* `PYQ` - Pyq",
                "type": "ProviderEnum",
              },
              "status": "optional<ModelVersionReadStatusEnum>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionReadStatusEnum": {
            "docs": "* `CREATING` - Creating
* `READY` - Ready
* `CREATION_FAILED` - Creation Failed
* `DISABLED` - Disabled",
            "enum": [
              "CREATING",
              "READY",
              "CREATION_FAILED",
              "DISABLED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ModelVersionSandboxSnapshot": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The ID of the sandbox snapshot.",
                "type": "string",
              },
              "prompt_id": {
                "docs": "The id of the prompt in the sandbox snapshot.",
                "type": "optional<string>",
              },
              "prompt_index": {
                "docs": "The index of the prompt in the sandbox snapshot.",
                "type": "optional<integer>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "sandbox_id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NormalizedLogProbs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "likelihood": "optional<double>",
              "tokens": "list<NormalizedTokenLogProbs>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NormalizedTokenLogProbs": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "logprob": "optional<double>",
              "text_offset": "integer",
              "token": "string",
              "top_logprobs": "optional<map<string, optional<double>>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedSlimDocumentList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "count": "optional<integer>",
              "next": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "previous": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "results": "optional<list<SlimDocument>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProcessingFailureReasonEnum": {
            "docs": "* `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit",
            "type": "literal<"EXCEEDED_CHARACTER_LIMIT">",
          },
          "ProcessingStateEnum": {
            "docs": "* `QUEUED` - Queued
* `PROCESSING` - Processing
* `PROCESSED` - Processed
* `FAILED` - Failed",
            "enum": [
              "QUEUED",
              "PROCESSING",
              "PROCESSED",
              "FAILED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptNodeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "PromptNodeResultData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptNodeResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": "optional<string>",
              "output_id": "string",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateBlock": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "block_type": "BlockTypeEnum",
              "id": "string",
              "properties": "PromptTemplateBlockProperties",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateBlockData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "blocks": "list<PromptTemplateBlock>",
              "version": "integer",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateBlockDataRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "blocks": "list<PromptTemplateBlockRequest>",
              "version": "integer",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateBlockProperties": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "blocks": "optional<list<PromptTemplateBlock>>",
              "chat_message_unterminated": {
                "default": false,
                "type": "optional<boolean>",
              },
              "chat_role": "optional<ChatMessageRole>",
              "function_description": "optional<string>",
              "function_name": "optional<string>",
              "function_parameters": "optional<map<string, unknown>>",
              "template": "optional<string>",
              "template_type": "optional<ContentType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateBlockPropertiesRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "blocks": "optional<list<PromptTemplateBlockRequest>>",
              "chat_message_unterminated": {
                "default": false,
                "type": "optional<boolean>",
              },
              "chat_role": "optional<ChatMessageRole>",
              "function_description": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "function_name": {
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "function_parameters": "optional<map<string, unknown>>",
              "template": "optional<string>",
              "template_type": "optional<ContentType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateBlockRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "block_type": "BlockTypeEnum",
              "id": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "properties": "PromptTemplateBlockPropertiesRequest",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateInputVariable": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "key": {
                "docs": "The name of the input variable.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PromptTemplateInputVariableRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "key": {
                "docs": "The name of the input variable.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProviderEnum": {
            "docs": "* `ANTHROPIC` - Anthropic
* `COHERE` - Cohere
* `GOOGLE` - Google
* `HOSTED` - Hosted
* `MOSAICML` - MosaicML
* `MYSTIC` - Mystic
* `OPENAI` - OpenAI
* `PYQ` - Pyq",
            "enum": [
              "ANTHROPIC",
              "COHERE",
              "GOOGLE",
              "HOSTED",
              "MOSAICML",
              "MYSTIC",
              "OPENAI",
              "PYQ",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterPromptErrorResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": {
                "docs": "Details about why the request failed.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterPromptModelParametersRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "frequency_penalty": "double",
              "logit_bias": "optional<map<string, optional<double>>>",
              "max_tokens": "integer",
              "presence_penalty": "double",
              "stop": "optional<list<string>>",
              "temperature": "double",
              "top_k": "optional<double>",
              "top_p": "double",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterPromptPrompt": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The ID of the generated prompt.",
                "type": "string",
              },
              "label": {
                "docs": "A human-friendly label for the generated prompt.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterPromptPromptInfoRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "input_variables": {
                "docs": "Names of the input variables specified in the prompt template.",
                "type": "list<PromptTemplateInputVariableRequest>",
              },
              "prompt_block_data": "PromptTemplateBlockDataRequest",
              "prompt_syntax_version": {
                "default": 2,
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterPromptResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "deployment": {
                "docs": "Information about the generated deployment",
                "type": "RegisteredPromptDeployment",
              },
              "model_version": {
                "docs": "Information about the generated model version",
                "type": "RegisteredPromptModelVersion",
              },
              "prompt": {
                "docs": "Information about the generated prompt",
                "type": "RegisterPromptPrompt",
              },
              "sandbox": {
                "docs": "Information about the generated sandbox",
                "type": "RegisteredPromptSandbox",
              },
              "sandbox_snapshot": {
                "docs": "Information about the generated sandbox snapshot",
                "type": "RegisteredPromptSandboxSnapshot",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisteredPromptDeployment": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The ID of the generated deployment.",
                "type": "string",
              },
              "label": {
                "docs": "A human-friendly label for the generated deployment.",
                "type": "string",
              },
              "name": {
                "docs": "A uniquely-identifying name for generated deployment.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisteredPromptModelVersion": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The ID of the generated model version.",
                "type": "string",
              },
              "label": {
                "docs": "A human-friendly label for the generated model version.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisteredPromptSandbox": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The ID of the generated sandbox.",
                "type": "string",
              },
              "label": {
                "docs": "A human-friendly label for the generated sandbox.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisteredPromptSandboxSnapshot": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The ID of the generated sandbox snapshot.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SandboxMetricInputParams": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "params": "optional<EvaluationParams>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SandboxMetricInputParamsRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "params": "optional<EvaluationParamsRequest>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SandboxNodeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "SandboxNodeResultData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SandboxNodeResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": "optional<string>",
              "output_id": "string",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SandboxScenario": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The id of the scenario",
                "type": "string",
              },
              "inputs": {
                "docs": "The inputs for the scenario",
                "type": "list<ScenarioInput>",
              },
              "label": {
                "default": "Untitled Scenario",
                "type": "optional<string>",
              },
              "metric_input_params": "SandboxMetricInputParams",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScenarioInput": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "chat_history": "optional<list<ChatMessage>>",
              "key": "string",
              "type": "optional<ScenarioInputTypeEnum>",
              "value": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScenarioInputRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "chat_history": "optional<list<ChatMessageRequest>>",
              "key": {
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "type": "optional<ScenarioInputTypeEnum>",
              "value": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScenarioInputTypeEnum": {
            "docs": "* `TEXT` - Text
* `CHAT_HISTORY` - Chat History",
            "enum": [
              "TEXT",
              "CHAT_HISTORY",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchErrorResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": {
                "docs": "Details about why the request failed.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchFiltersRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "external_ids": {
                "docs": "The document external IDs to filter by",
                "type": "optional<list<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchNodeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "SearchNodeResultData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchNodeResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": "list<map<string, unknown>>",
              "results_output_id": "string",
              "text": "optional<string>",
              "text_output_id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchRequestOptionsRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "filters": {
                "docs": "The filters to apply to the search.",
                "type": "optional<SearchFiltersRequest>",
              },
              "limit": {
                "docs": "The maximum number of results to return.",
                "type": "optional<integer>",
              },
              "result_merging": {
                "docs": "The configuration for merging results.",
                "type": "optional<SearchResultMergingRequest>",
              },
              "weights": {
                "docs": "The weights to use for the search. Must add up to 1.0.",
                "type": "optional<SearchWeightsRequest>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "results": {
                "docs": "The results of the search. Each result represents a chunk that matches the search query.",
                "type": "list<SearchResult>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "document": {
                "docs": "The document that contains the chunk that matched the search query.",
                "type": "Document",
              },
              "keywords": "list<string>",
              "score": {
                "docs": "A score representing how well the chunk matches the search query.",
                "type": "double",
              },
              "text": {
                "docs": "The text of the chunk that matched the search query.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchResultMergingRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "enabled": {
                "docs": "Whether to enable merging results",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchWeightsRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "keywords": {
                "docs": "The relative weight to give to keyword matches",
                "type": "double",
              },
              "semantic_similarity": {
                "docs": "The relative weight to give to semantic similarity",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SlimDocument": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "document_to_document_indexes": "list<DocumentDocumentToDocumentIndex>",
              "external_id": {
                "docs": "The external ID that was originally provided when uploading the document.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": 1000,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Vellum-generated ID that uniquely identifies this document.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "keywords": {
                "docs": "A list of keywords associated with this document. Originally provided when uploading the document.",
                "type": "optional<list<string>>",
              },
              "label": {
                "docs": "Human-friendly name for this document.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": 1000,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "last_uploaded_at": {
                "docs": "A timestamp representing when this document was most recently uploaded.",
                "type": "datetime",
              },
              "processing_failure_reason": {
                "docs": "An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.

* `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit",
                "type": "optional<ProcessingFailureReasonEnum>",
              },
              "processing_state": {
                "docs": "An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.

* `QUEUED` - Queued
* `PROCESSING` - Processing
* `PROCESSED` - Processed
* `FAILED` - Failed",
                "type": "optional<ProcessingStateEnum>",
              },
              "status": {
                "docs": "The document's current status.

* `ACTIVE` - Active",
                "type": "optional<SlimDocumentStatusEnum>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SlimDocumentStatusEnum": {
            "docs": "* `ACTIVE` - Active",
            "type": "literal<"ACTIVE">",
          },
          "SubmitCompletionActualRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "external_id": {
                "docs": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                "type": "optional<string>",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "quality": {
                "docs": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                "type": "optional<double>",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": 1,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "text": {
                "docs": "Text representing what the completion _should_ have been.",
                "type": "optional<string>",
              },
              "timestamp": {
                "docs": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SubmitCompletionActualsErrorResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TerminalNodeChatHistoryResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The unique name given to the terminal node that produced this output.",
                "type": "string",
              },
              "value": "list<ChatMessage>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TerminalNodeJsonResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The unique name given to the terminal node that produced this output.",
                "type": "string",
              },
              "value": "map<string, unknown>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TerminalNodeResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "TerminalNodeResultData",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TerminalNodeResultData": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "output": "TerminalNodeResultOutput",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TerminalNodeResultOutput": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "CHAT_HISTORY": "TerminalNodeChatHistoryResult",
              "JSON": "TerminalNodeJsonResult",
              "STRING": "TerminalNodeStringResult",
            },
          },
          "TerminalNodeStringResult": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The unique name given to the terminal node that produced this output.",
                "type": "string",
              },
              "value": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TestSuiteTestCase": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "evaluation_params": {
                "docs": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
                "type": "EvaluationParams",
              },
              "input_values": {
                "docs": "Key/value pairs for each input variable that the Test Suite expects.",
                "type": "map<string, unknown>",
              },
              "label": {
                "docs": "A human-friendly label for the test case.",
                "type": "optional<string>",
              },
              "test_case_id": {
                "docs": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UploadDocumentErrorResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "detail": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UploadDocumentResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "document_id": {
                "docs": "The ID of the newly created document.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowEventError": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "WorkflowExecutionEventErrorCode",
              "message": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowExecutionEventErrorCode": {
            "docs": "* `WORKFLOW_INITIALIZATION` - WORKFLOW_INITIALIZATION
* `NODE_EXECUTION` - NODE_EXECUTION",
            "enum": [
              "WORKFLOW_INITIALIZATION",
              "NODE_EXECUTION",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowExecutionNodeResultEvent": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "WorkflowNodeResultEvent",
              "external_id": "optional<string>",
              "run_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowExecutionWorkflowResultEvent": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "WorkflowResultEvent",
              "external_id": "optional<string>",
              "run_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowNodeResultData": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "CONDITIONAL": "ConditionalNodeResult",
              "DEPLOYMENT": "DeploymentNodeResult",
              "PROMPT": "PromptNodeResult",
              "SANDBOX": "SandboxNodeResult",
              "SEARCH": "SearchNodeResult",
              "TERMINAL": "TerminalNodeResult",
            },
          },
          "WorkflowNodeResultEvent": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<WorkflowNodeResultData>",
              "error": "optional<WorkflowEventError>",
              "id": "string",
              "node_id": "string",
              "node_result_id": "string",
              "state": "WorkflowNodeResultEventState",
              "ts": "optional<datetime>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowNodeResultEventState": {
            "docs": "* `INITIATED` - INITIATED
* `STREAMING` - STREAMING
* `FULFILLED` - FULFILLED
* `REJECTED` - REJECTED",
            "enum": [
              "INITIATED",
              "STREAMING",
              "FULFILLED",
              "REJECTED",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowRequestChatHistoryInputRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The variable's name, as defined in the Workflow.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "value": "list<ChatMessageRequest>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowRequestInputRequest": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "CHAT_HISTORY": "WorkflowRequestChatHistoryInputRequest",
              "JSON": "WorkflowRequestJsonInputRequest",
              "STRING": "WorkflowRequestStringInputRequest",
            },
          },
          "WorkflowRequestJsonInputRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The variable's name, as defined in the Workflow.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "value": "map<string, unknown>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowRequestStringInputRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The variable's name, as defined in the Workflow.",
                "type": "string",
                "validation": {
                  "format": undefined,
                  "maxLength": undefined,
                  "minLength": 1,
                  "pattern": undefined,
                },
              },
              "value": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowResultEvent": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "error": "optional<WorkflowEventError>",
              "id": "string",
              "output": "optional<WorkflowResultEventOutputData>",
              "state": "WorkflowNodeResultEventState",
              "ts": "datetime",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowResultEventOutputData": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "CHAT_HISTORY": "WorkflowResultEventOutputDataChatHistory",
              "JSON": "WorkflowResultEventOutputDataJson",
              "STRING": "WorkflowResultEventOutputDataString",
            },
          },
          "WorkflowResultEventOutputDataChatHistory": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": {
                "docs": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
                "type": "optional<string>",
              },
              "name": "string",
              "node_id": "string",
              "state": "WorkflowNodeResultEventState",
              "value": "optional<list<ChatMessage>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowResultEventOutputDataJson": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": {
                "docs": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
                "type": "optional<string>",
              },
              "name": "string",
              "node_id": "string",
              "state": "WorkflowNodeResultEventState",
              "value": "optional<map<string, unknown>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowResultEventOutputDataString": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "delta": {
                "docs": "The newly output string value, meant to be concatenated with all previous. Will be non-null for events of state STREAMING.",
                "type": "optional<string>",
              },
              "name": "string",
              "node_id": "string",
              "state": "WorkflowNodeResultEventState",
              "value": {
                "docs": "The entire string value. Will be non-null for events of state FULFILLED.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WorkflowStreamEvent": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "NODE": "WorkflowExecutionNodeResultEvent",
              "WORKFLOW": "WorkflowExecutionWorkflowResultEvent",
            },
          },
        },
      },
      "rawContents": "service:
  auth: false
  base-path: ''
  endpoints:
    execute-workflow-stream:
      path: /v1/execute-workflow-stream
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Executes a deployed Workflow and streams back its results.
      source:
        openapi: ../openapi.yml
      request:
        name: ExecuteWorkflowStreamRequest
        body:
          properties:
            workflow_deployment_id:
              type: optional<string>
              docs: >-
                The ID of the Workflow Deployment. Must provide either this or
                workflow_deployment_name.
              validation:
                format: uuid
            workflow_deployment_name:
              type: optional<string>
              docs: >-
                The name of the Workflow Deployment. Must provide either this or
                workflow_deployment_id.
              validation:
                minLength: 1
            release_tag:
              type: optional<string>
              docs: >-
                Optionally specify a release tag if you want to pin to a
                specific release of the Workflow Deployment
              validation:
                minLength: 1
            inputs: list<WorkflowRequestInputRequest>
            external_id:
              type: optional<string>
              docs: Optionally include a unique identifier for tracking purposes.
              validation:
                minLength: 1
        content-type: application/json
      response-stream:
        docs: ''
        type: WorkflowStreamEvent
        format: json
      url: Predict
      examples:
        - request:
            inputs:
              - type: CHAT_HISTORY
                name: inputs
                value:
                  - text: text
                    role: SYSTEM
          response:
            stream:
              - type: NODE
                run_id: string
                external_id: string
                data:
                  id: id
                  node_id: node_id
                  node_result_id: node_result_id
                  state: INITIATED
                  ts: '2024-01-15T09:30:00Z'
                  data:
                    type: TERMINAL
                    data:
                      output:
                        type: CHAT_HISTORY
                        name: output
                        value:
                          - text: text
                            role: SYSTEM
                  error:
                    message: message
                    code: WORKFLOW_INITIALIZATION
    generate:
      path: /v1/generate
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#4caf50; color:white; padding:4px;
        border-radius:4px">Stable</strong>


        Generate a completion using a previously defined deployment.


        **Note:** Uses a base url of `https://predict.vellum.ai`.
      source:
        openapi: ../openapi.yml
      request:
        name: GenerateBodyRequest
        body:
          properties:
            deployment_id:
              type: optional<string>
              docs: >-
                The ID of the deployment. Must provide either this or
                deployment_name.
              validation:
                format: uuid
            deployment_name:
              type: optional<string>
              docs: >-
                The name of the deployment. Must provide either this or
                deployment_id.
              validation:
                minLength: 1
            requests:
              docs: >-
                The generation requests to make. Supplying multiple will perform
                a bulk request to the LLM provided when possible.
              type: list<GenerateRequest>
            options:
              type: optional<GenerateOptionsRequest>
              docs: >-
                Additional configuration that can be used to control what's
                included in the response.
        content-type: application/json
      response:
        docs: ''
        type: GenerateResponse
      url: Predict
      errors:
        - BadRequestError
        - ForbiddenError
        - NotFoundError
        - InternalServerError
      examples:
        - request:
            requests:
              - input_values:
                  key: value
          response:
            body:
              results:
                - data:
                    completions:
                      - id: id
                        text: text
                        model_version_id: model_version_id
                  error:
                    message: message
    generate-stream:
      path: /v1/generate-stream
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#4caf50; color:white; padding:4px;
        border-radius:4px">Stable</strong>


        Generate a stream of completions using a previously defined deployment.


        **Note:** Uses a base url of `https://predict.vellum.ai`.
      source:
        openapi: ../openapi.yml
      request:
        name: GenerateStreamBodyRequest
        body:
          properties:
            deployment_id:
              type: optional<string>
              docs: >-
                The ID of the deployment. Must provide either this or
                deployment_name.
              validation:
                format: uuid
            deployment_name:
              type: optional<string>
              docs: >-
                The name of the deployment. Must provide either this or
                deployment_id.
              validation:
                minLength: 1
            requests:
              docs: >-
                The generation requests to make. Supplying multiple will perform
                a bulk request to the LLM provided when possible.
              type: list<GenerateRequest>
            options:
              type: optional<GenerateOptionsRequest>
              docs: >-
                Additional configuration that can be used to control what's
                included in the response.
        content-type: application/json
      response-stream:
        docs: ''
        type: GenerateStreamResponse
        format: json
      url: Predict
      errors:
        - BadRequestError
        - ForbiddenError
        - NotFoundError
        - InternalServerError
      examples:
        - request:
            requests:
              - input_values:
                  key: value
          response:
            stream:
              - delta:
                  request_index: 1
                  data:
                    completion_index: 1
                    completion:
                      id: id
                      text: text
                      model_version_id: model_version_id
                  error:
                    message: message
    search:
      path: /v1/search
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#4caf50; color:white; padding:4px;
        border-radius:4px">Stable</strong>


        Perform a search against a document index.


        **Note:** Uses a base url of `https://predict.vellum.ai`.
      source:
        openapi: ../openapi.yml
      request:
        name: SearchRequestBodyRequest
        body:
          properties:
            index_id:
              type: optional<string>
              docs: >-
                The ID of the index to search against. Must provide either this
                or index_name.
              validation:
                format: uuid
            index_name:
              type: optional<string>
              docs: >-
                The name of the index to search against. Must provide either
                this or index_id.
              validation:
                minLength: 1
            query:
              type: string
              docs: The query to search for.
              validation:
                minLength: 1
            options:
              type: optional<SearchRequestOptionsRequest>
              docs: Configuration options for the search.
        content-type: application/json
      response:
        docs: ''
        type: SearchResponse
      url: Predict
      errors:
        - BadRequestError
        - NotFoundError
        - InternalServerError
      examples:
        - request:
            query: query
          response:
            body:
              results:
                - document:
                    id: id
                    label: label
                  text: text
                  keywords:
                    - keywords
                  score: 1.1
    submit-completion-actuals:
      path: /v1/submit-completion-actuals
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#4caf50; color:white; padding:4px;
        border-radius:4px">Stable</strong>


        Used to submit feedback regarding the quality of previously generated
        completions.


        **Note:** Uses a base url of `https://predict.vellum.ai`.
      source:
        openapi: ../openapi.yml
      request:
        name: SubmitCompletionActualsRequest
        body:
          properties:
            deployment_id:
              type: optional<string>
              docs: >-
                The ID of the deployment. Must provide either this or
                deployment_name.
              validation:
                format: uuid
            deployment_name:
              type: optional<string>
              docs: >-
                The name of the deployment. Must provide either this or
                deployment_id.
              validation:
                minLength: 1
            actuals:
              docs: >-
                Feedback regarding the quality of previously generated
                completions
              type: list<SubmitCompletionActualRequest>
        content-type: application/json
      url: Predict
      errors:
        - BadRequestError
        - NotFoundError
        - InternalServerError
      examples:
        - request:
            actuals:
              - {}
  source:
    openapi: ../openapi.yml
errors:
  BadRequestError:
    status-code: 400
    type: unknown
    docs: ''
    examples:
      - value:
          detail: detail
  ForbiddenError:
    status-code: 403
    type: GenerateErrorResponse
    docs: ''
    examples:
      - value:
          detail: detail
  NotFoundError:
    status-code: 404
    type: unknown
    docs: ''
    examples:
      - value:
          detail: detail
  InternalServerError:
    status-code: 500
    type: unknown
    docs: ''
    examples:
      - value:
          detail: detail
  ConflictError:
    status-code: 409
    type: RegisterPromptErrorResponse
    docs: ''
    examples:
      - value:
          detail: detail
types:
  BlockTypeEnum:
    enum:
      - CHAT_MESSAGE
      - CHAT_HISTORY
      - JINJA
      - FUNCTION_DEFINITION
    docs: |-
      * `CHAT_MESSAGE` - CHAT_MESSAGE
      * `CHAT_HISTORY` - CHAT_HISTORY
      * `JINJA` - JINJA
      * `FUNCTION_DEFINITION` - FUNCTION_DEFINITION
    source:
      openapi: ../openapi.yml
  ChatMessage:
    properties:
      text: string
      role: ChatMessageRole
    source:
      openapi: ../openapi.yml
  ChatMessageRequest:
    properties:
      text: string
      role: ChatMessageRole
    source:
      openapi: ../openapi.yml
  ChatMessageRole:
    enum:
      - SYSTEM
      - ASSISTANT
      - USER
      - FUNCTION
    docs: |-
      * `SYSTEM` - System
      * `ASSISTANT` - Assistant
      * `USER` - User
      * `FUNCTION` - Function
    source:
      openapi: ../openapi.yml
  ConditionalNodeResult:
    properties:
      data: ConditionalNodeResultData
    source:
      openapi: ../openapi.yml
  ConditionalNodeResultData:
    properties:
      source_handle_id: optional<string>
    source:
      openapi: ../openapi.yml
  ContentType:
    enum:
      - STRING
      - JSON
    docs: |-
      * `STRING` - STRING
      * `JSON` - JSON
    source:
      openapi: ../openapi.yml
  DeploymentNodeResult:
    properties:
      data: DeploymentNodeResultData
    source:
      openapi: ../openapi.yml
  DeploymentNodeResultData:
    properties:
      output_id: string
      text: optional<string>
      delta: optional<string>
    source:
      openapi: ../openapi.yml
  DeploymentRead:
    properties:
      id:
        type: string
        validation:
          format: uuid
      created: datetime
      label:
        type: string
        docs: A human-readable label for the deployment
        validation:
          maxLength: 150
      name:
        type: string
        docs: A name that uniquely identifies this deployment within its workspace
        validation:
          maxLength: 150
      status:
        type: optional<DeploymentReadStatusEnum>
        docs: |-
          The current status of the deployment

          * `ACTIVE` - Active
          * `INACTIVE` - Inactive
          * `ARCHIVED` - Archived
      environment:
        type: optional<EnvironmentEnum>
        docs: |-
          The environment this deployment is used in

          * `DEVELOPMENT` - Development
          * `STAGING` - Staging
          * `PRODUCTION` - Production
      model_type:
        type: ModelTypeEnum
        docs: |-
          The type of model this deployment serves

          * `GENERATE` - Generate
          * `CLASSIFY` - Classify
      active_model_version_ids: list<string>
      last_deployed_on: datetime
    source:
      openapi: ../openapi.yml
  DeploymentReadStatusEnum:
    enum:
      - ACTIVE
      - INACTIVE
      - ARCHIVED
    docs: |-
      * `ACTIVE` - Active
      * `INACTIVE` - Inactive
      * `ARCHIVED` - Archived
    source:
      openapi: ../openapi.yml
  Document:
    properties:
      id:
        type: string
        docs: The ID of the document.
        validation:
          format: uuid
      label:
        type: string
        docs: The human-readable name for the document.
        validation:
          maxLength: 1000
      external_id:
        type: optional<string>
        docs: >-
          The unique ID of the document as represented in an external system and
          specified when it was originally uploaded.
        validation:
          maxLength: 1000
    source:
      openapi: ../openapi.yml
  DocumentDocumentToDocumentIndex:
    properties:
      id:
        type: string
        docs: Vellum-generated ID that uniquely identifies this link.
        validation:
          format: uuid
      document_index_id:
        type: string
        docs: >-
          Vellum-generated ID that uniquely identifies the index this document
          is included in.
        validation:
          format: uuid
      indexing_state:
        type: optional<IndexingStateEnum>
        docs: >-
          An enum value representing where this document is along its indexing
          lifecycle for this index.


          * `AWAITING_PROCESSING` - Awaiting Processing

          * `QUEUED` - Queued

          * `INDEXING` - Indexing

          * `INDEXED` - Indexed

          * `FAILED` - Failed
    source:
      openapi: ../openapi.yml
  DocumentIndexRead:
    properties:
      id:
        type: string
        validation:
          format: uuid
      created: datetime
      label:
        type: string
        docs: A human-readable label for the document index
        validation:
          maxLength: 150
      name:
        type: string
        docs: A name that uniquely identifies this index within its workspace
        validation:
          maxLength: 150
      status:
        type: optional<DocumentIndexStatus>
        docs: |-
          The current status of the document index

          * `ACTIVE` - Active
          * `ARCHIVED` - Archived
      environment:
        type: optional<EnvironmentEnum>
        docs: |-
          The environment this document index is used in

          * `DEVELOPMENT` - Development
          * `STAGING` - Staging
          * `PRODUCTION` - Production
      indexing_config:
        type: map<string, unknown>
        docs: Configuration representing how documents should be indexed
    source:
      openapi: ../openapi.yml
  DocumentIndexStatus:
    enum:
      - ACTIVE
      - ARCHIVED
    docs: |-
      * `ACTIVE` - Active
      * `ARCHIVED` - Archived
    source:
      openapi: ../openapi.yml
  EnrichedNormalizedCompletion:
    properties:
      id:
        type: string
        docs: The Vellum-generated ID of the completion.
        validation:
          format: uuid
      external_id:
        type: optional<string>
        docs: >-
          The external ID that was originally provided along with the generation
          request, which uniquely identifies this generation in an external
          system.
      text:
        type: string
        docs: The text generated by the LLM.
      finish_reason:
        type: optional<FinishReasonEnum>
        docs: |-
          The reason the generation finished.

          * `LENGTH` - LENGTH
          * `STOP` - STOP
          * `UNKNOWN` - UNKNOWN
      logprobs:
        type: optional<NormalizedLogProbs>
        docs: >-
          The logprobs of the completion. Only present if specified in the
          original request options.
      model_version_id:
        type: string
        docs: The ID of the model version used to generate this completion.
      type: optional<ContentType>
    source:
      openapi: ../openapi.yml
  EnvironmentEnum:
    enum:
      - DEVELOPMENT
      - STAGING
      - PRODUCTION
    docs: |-
      * `DEVELOPMENT` - Development
      * `STAGING` - Staging
      * `PRODUCTION` - Production
    source:
      openapi: ../openapi.yml
  EvaluationParams:
    properties:
      target:
        type: optional<string>
        docs: >-
          The target value to compare the LLM output against. Typically what you
          expect or desire the LLM output to be.
    source:
      openapi: ../openapi.yml
  EvaluationParamsRequest:
    properties:
      target:
        type: optional<string>
        docs: >-
          The target value to compare the LLM output against. Typically what you
          expect or desire the LLM output to be.
    source:
      openapi: ../openapi.yml
  FinishReasonEnum:
    enum:
      - LENGTH
      - STOP
      - UNKNOWN
    docs: |-
      * `LENGTH` - LENGTH
      * `STOP` - STOP
      * `UNKNOWN` - UNKNOWN
    source:
      openapi: ../openapi.yml
  GenerateErrorResponse:
    properties:
      detail:
        type: string
        docs: Details about why the request failed.
    source:
      openapi: ../openapi.yml
  GenerateOptionsRequest:
    properties:
      logprobs:
        type: optional<LogprobsEnum>
        docs: |-
          Which logprobs to include, if any. Defaults to NONE.

          * `ALL` - ALL
          * `NONE` - NONE
    source:
      openapi: ../openapi.yml
  GenerateRequest:
    properties:
      input_values:
        type: map<string, unknown>
        docs: >-
          Key/value pairs for each template variable defined in the deployment's
          prompt.
      chat_history:
        type: optional<list<ChatMessageRequest>>
        docs: >-
          Optionally provide a list of chat messages that'll be used in place of
          the special {$chat_history} variable, if included in the prompt.
      external_ids:
        type: optional<list<string>>
        docs: >-
          Optionally include a unique identifier for each generation, as
          represented outside of Vellum. Note that this should generally be a
          list of length one.
    source:
      openapi: ../openapi.yml
  GenerateResponse:
    properties:
      results:
        docs: The results of each generation request.
        type: list<GenerateResult>
    source:
      openapi: ../openapi.yml
  GenerateResult:
    properties:
      data:
        type: optional<GenerateResultData>
        docs: >-
          An object containing the resulting generation. This key will be absent
          if the LLM provider experienced an error.
      error:
        type: optional<GenerateResultError>
        docs: >-
          An object containing details about the error that occurred. This key
          will be absent if the LLM provider did not experience an error.
    source:
      openapi: ../openapi.yml
  GenerateResultData:
    properties:
      completions:
        docs: >-
          The generated completions. This will generally be a list of length
          one.
        type: list<EnrichedNormalizedCompletion>
    source:
      openapi: ../openapi.yml
  GenerateResultError:
    properties:
      message:
        type: string
        docs: The error message returned by the LLM provider.
    source:
      openapi: ../openapi.yml
  GenerateStreamResponse:
    properties:
      delta: GenerateStreamResult
    source:
      openapi: ../openapi.yml
  GenerateStreamResult:
    properties:
      request_index: integer
      data: optional<GenerateStreamResultData>
      error: optional<GenerateResultError>
    source:
      openapi: ../openapi.yml
  GenerateStreamResultData:
    properties:
      completion_index: integer
      completion: EnrichedNormalizedCompletion
    source:
      openapi: ../openapi.yml
  IndexingStateEnum:
    enum:
      - AWAITING_PROCESSING
      - QUEUED
      - INDEXING
      - INDEXED
      - FAILED
    docs: |-
      * `AWAITING_PROCESSING` - Awaiting Processing
      * `QUEUED` - Queued
      * `INDEXING` - Indexing
      * `INDEXED` - Indexed
      * `FAILED` - Failed
    source:
      openapi: ../openapi.yml
  LogprobsEnum:
    enum:
      - ALL
      - NONE
    docs: |-
      * `ALL` - ALL
      * `NONE` - NONE
    source:
      openapi: ../openapi.yml
  ModelTypeEnum:
    enum:
      - GENERATE
      - CLASSIFY
    docs: |-
      * `GENERATE` - Generate
      * `CLASSIFY` - Classify
    source:
      openapi: ../openapi.yml
  ModelVersionBuildConfig:
    properties:
      base_model:
        type: string
        docs: >-
          The name of the base model used to create this model version, as
          identified by the LLM provider.
      sandbox_snapshot:
        type: optional<ModelVersionSandboxSnapshot>
        docs: >-
          Information about the sandbox snapshot that was used to create this
          model version, if applicable.
    source:
      openapi: ../openapi.yml
  ModelVersionCompilePromptResponse:
    properties:
      prompt:
        type: ModelVersionCompiledPrompt
        docs: Information about the compiled prompt.
    source:
      openapi: ../openapi.yml
  ModelVersionCompiledPrompt:
    properties:
      text:
        type: string
        docs: >-
          The fully compiled prompt in normalized ChatML syntax after all
          variable substitutions and templating functions are applied.
      num_tokens:
        type: integer
        docs: The approximate number of tokens used by the compiled prompt.
        validation:
          min: 0
    source:
      openapi: ../openapi.yml
  ModelVersionExecConfig:
    properties:
      parameters:
        type: ModelVersionExecConfigParameters
        docs: >-
          The generation parameters that are passed to the LLM provider at
          runtime.
      input_variables:
        docs: Names of the input variables specified in the prompt template.
        type: list<PromptTemplateInputVariable>
      prompt_template:
        type: optional<string>
        docs: The template used to generate prompts for this model version.
      prompt_block_data: optional<PromptTemplateBlockData>
      prompt_syntax_version: optional<integer>
    source:
      openapi: ../openapi.yml
  ModelVersionExecConfigParameters:
    properties:
      temperature: double
      max_tokens: integer
      top_p: double
      frequency_penalty: double
      presence_penalty: double
      logit_bias: optional<map<string, optional<double>>>
      stop: optional<list<string>>
      top_k: optional<double>
    source:
      openapi: ../openapi.yml
  ModelVersionRead:
    properties:
      id:
        type: string
        docs: Vellum-generated ID that uniquely identifies this model version.
        validation:
          format: uuid
      created:
        type: datetime
        docs: Timestamp of when this model version was created.
      label:
        type: string
        docs: Human-friendly name for this model version.
        validation:
          maxLength: 150
      model_type:
        type: ModelTypeEnum
        docs: |-
          The type of task this model is used for.

          * `GENERATE` - Generate
          * `CLASSIFY` - Classify
      provider:
        type: ProviderEnum
        docs: |-
          Which LLM provider this model version is associated with.

          * `ANTHROPIC` - Anthropic
          * `COHERE` - Cohere
          * `GOOGLE` - Google
          * `HOSTED` - Hosted
          * `MOSAICML` - MosaicML
          * `MYSTIC` - Mystic
          * `OPENAI` - OpenAI
          * `PYQ` - Pyq
      external_id:
        type: string
        docs: >-
          The unique id of this model version as it exists in the above
          provider's system.
        validation:
          maxLength: 250
      build_config:
        type: ModelVersionBuildConfig
        docs: Configuration used to build this model version.
      exec_config:
        type: ModelVersionExecConfig
        docs: Configuration used to execute this model version.
      status: optional<ModelVersionReadStatusEnum>
    source:
      openapi: ../openapi.yml
  ModelVersionReadStatusEnum:
    enum:
      - CREATING
      - READY
      - CREATION_FAILED
      - DISABLED
    docs: |-
      * `CREATING` - Creating
      * `READY` - Ready
      * `CREATION_FAILED` - Creation Failed
      * `DISABLED` - Disabled
    source:
      openapi: ../openapi.yml
  ModelVersionSandboxSnapshot:
    properties:
      id:
        type: string
        docs: The ID of the sandbox snapshot.
      prompt_index:
        type: optional<integer>
        docs: The index of the prompt in the sandbox snapshot.
        validation:
          min: 0
      prompt_id:
        type: optional<string>
        docs: The id of the prompt in the sandbox snapshot.
      sandbox_id: optional<string>
    source:
      openapi: ../openapi.yml
  NormalizedLogProbs:
    properties:
      tokens: list<NormalizedTokenLogProbs>
      likelihood: optional<double>
    source:
      openapi: ../openapi.yml
  NormalizedTokenLogProbs:
    properties:
      token: string
      logprob: optional<double>
      top_logprobs: optional<map<string, optional<double>>>
      text_offset: integer
    source:
      openapi: ../openapi.yml
  PaginatedSlimDocumentList:
    properties:
      count: optional<integer>
      next:
        type: optional<string>
        validation:
          format: uri
      previous:
        type: optional<string>
        validation:
          format: uri
      results: optional<list<SlimDocument>>
    source:
      openapi: ../openapi.yml
  ProcessingFailureReasonEnum:
    type: literal<"EXCEEDED_CHARACTER_LIMIT">
    docs: '* `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit'
  ProcessingStateEnum:
    enum:
      - QUEUED
      - PROCESSING
      - PROCESSED
      - FAILED
    docs: |-
      * `QUEUED` - Queued
      * `PROCESSING` - Processing
      * `PROCESSED` - Processed
      * `FAILED` - Failed
    source:
      openapi: ../openapi.yml
  PromptNodeResult:
    properties:
      data: PromptNodeResultData
    source:
      openapi: ../openapi.yml
  PromptNodeResultData:
    properties:
      output_id: string
      text: optional<string>
      delta: optional<string>
    source:
      openapi: ../openapi.yml
  PromptTemplateBlock:
    properties:
      id: string
      block_type: BlockTypeEnum
      properties: PromptTemplateBlockProperties
    source:
      openapi: ../openapi.yml
  PromptTemplateBlockData:
    properties:
      version: integer
      blocks: list<PromptTemplateBlock>
    source:
      openapi: ../openapi.yml
  PromptTemplateBlockDataRequest:
    properties:
      version: integer
      blocks: list<PromptTemplateBlockRequest>
    source:
      openapi: ../openapi.yml
  PromptTemplateBlockProperties:
    properties:
      chat_role: optional<ChatMessageRole>
      chat_message_unterminated:
        type: optional<boolean>
        default: false
      template: optional<string>
      template_type: optional<ContentType>
      function_name: optional<string>
      function_description: optional<string>
      function_parameters: optional<map<string, unknown>>
      blocks: optional<list<PromptTemplateBlock>>
    source:
      openapi: ../openapi.yml
  PromptTemplateBlockPropertiesRequest:
    properties:
      chat_role: optional<ChatMessageRole>
      chat_message_unterminated:
        type: optional<boolean>
        default: false
      template: optional<string>
      template_type: optional<ContentType>
      function_name:
        type: optional<string>
        validation:
          minLength: 1
      function_description:
        type: optional<string>
        validation:
          minLength: 1
      function_parameters: optional<map<string, unknown>>
      blocks: optional<list<PromptTemplateBlockRequest>>
    source:
      openapi: ../openapi.yml
  PromptTemplateBlockRequest:
    properties:
      id:
        type: string
        validation:
          minLength: 1
      block_type: BlockTypeEnum
      properties: PromptTemplateBlockPropertiesRequest
    source:
      openapi: ../openapi.yml
  PromptTemplateInputVariable:
    properties:
      key:
        type: string
        docs: The name of the input variable.
    source:
      openapi: ../openapi.yml
  PromptTemplateInputVariableRequest:
    properties:
      key:
        type: string
        docs: The name of the input variable.
        validation:
          minLength: 1
    source:
      openapi: ../openapi.yml
  ProviderEnum:
    enum:
      - ANTHROPIC
      - COHERE
      - GOOGLE
      - HOSTED
      - MOSAICML
      - MYSTIC
      - OPENAI
      - PYQ
    docs: |-
      * `ANTHROPIC` - Anthropic
      * `COHERE` - Cohere
      * `GOOGLE` - Google
      * `HOSTED` - Hosted
      * `MOSAICML` - MosaicML
      * `MYSTIC` - Mystic
      * `OPENAI` - OpenAI
      * `PYQ` - Pyq
    source:
      openapi: ../openapi.yml
  RegisterPromptErrorResponse:
    properties:
      detail:
        type: string
        docs: Details about why the request failed.
    source:
      openapi: ../openapi.yml
  RegisterPromptModelParametersRequest:
    properties:
      temperature: double
      max_tokens: integer
      stop: optional<list<string>>
      top_p: double
      top_k: optional<double>
      frequency_penalty: double
      presence_penalty: double
      logit_bias: optional<map<string, optional<double>>>
    source:
      openapi: ../openapi.yml
  RegisterPromptPrompt:
    properties:
      id:
        type: string
        docs: The ID of the generated prompt.
      label:
        type: string
        docs: A human-friendly label for the generated prompt.
    source:
      openapi: ../openapi.yml
  RegisterPromptPromptInfoRequest:
    properties:
      prompt_syntax_version:
        type: optional<integer>
        default: 2
      prompt_block_data: PromptTemplateBlockDataRequest
      input_variables:
        docs: Names of the input variables specified in the prompt template.
        type: list<PromptTemplateInputVariableRequest>
    source:
      openapi: ../openapi.yml
  RegisterPromptResponse:
    properties:
      prompt:
        type: RegisterPromptPrompt
        docs: Information about the generated prompt
      sandbox_snapshot:
        type: RegisteredPromptSandboxSnapshot
        docs: Information about the generated sandbox snapshot
      sandbox:
        type: RegisteredPromptSandbox
        docs: Information about the generated sandbox
      model_version:
        type: RegisteredPromptModelVersion
        docs: Information about the generated model version
      deployment:
        type: RegisteredPromptDeployment
        docs: Information about the generated deployment
    source:
      openapi: ../openapi.yml
  RegisteredPromptDeployment:
    properties:
      id:
        type: string
        docs: The ID of the generated deployment.
      name:
        type: string
        docs: A uniquely-identifying name for generated deployment.
      label:
        type: string
        docs: A human-friendly label for the generated deployment.
    source:
      openapi: ../openapi.yml
  RegisteredPromptModelVersion:
    properties:
      id:
        type: string
        docs: The ID of the generated model version.
      label:
        type: string
        docs: A human-friendly label for the generated model version.
    source:
      openapi: ../openapi.yml
  RegisteredPromptSandbox:
    properties:
      id:
        type: string
        docs: The ID of the generated sandbox.
      label:
        type: string
        docs: A human-friendly label for the generated sandbox.
    source:
      openapi: ../openapi.yml
  RegisteredPromptSandboxSnapshot:
    properties:
      id:
        type: string
        docs: The ID of the generated sandbox snapshot.
    source:
      openapi: ../openapi.yml
  SandboxMetricInputParams:
    properties:
      params: optional<EvaluationParams>
    source:
      openapi: ../openapi.yml
  SandboxMetricInputParamsRequest:
    properties:
      params: optional<EvaluationParamsRequest>
    source:
      openapi: ../openapi.yml
  SandboxNodeResult:
    properties:
      data: SandboxNodeResultData
    source:
      openapi: ../openapi.yml
  SandboxNodeResultData:
    properties:
      output_id: string
      text: optional<string>
      delta: optional<string>
    source:
      openapi: ../openapi.yml
  SandboxScenario:
    properties:
      label:
        type: optional<string>
        default: Untitled Scenario
      inputs:
        docs: The inputs for the scenario
        type: list<ScenarioInput>
      id:
        type: string
        docs: The id of the scenario
      metric_input_params: SandboxMetricInputParams
    source:
      openapi: ../openapi.yml
  ScenarioInput:
    properties:
      key: string
      type: optional<ScenarioInputTypeEnum>
      value: optional<string>
      chat_history: optional<list<ChatMessage>>
    source:
      openapi: ../openapi.yml
  ScenarioInputRequest:
    properties:
      key:
        type: string
        validation:
          minLength: 1
      type: optional<ScenarioInputTypeEnum>
      value: optional<string>
      chat_history: optional<list<ChatMessageRequest>>
    source:
      openapi: ../openapi.yml
  ScenarioInputTypeEnum:
    enum:
      - TEXT
      - CHAT_HISTORY
    docs: |-
      * `TEXT` - Text
      * `CHAT_HISTORY` - Chat History
    source:
      openapi: ../openapi.yml
  SearchErrorResponse:
    properties:
      detail:
        type: string
        docs: Details about why the request failed.
    source:
      openapi: ../openapi.yml
  SearchFiltersRequest:
    properties:
      external_ids:
        type: optional<list<string>>
        docs: The document external IDs to filter by
    source:
      openapi: ../openapi.yml
  SearchNodeResult:
    properties:
      data: SearchNodeResultData
    source:
      openapi: ../openapi.yml
  SearchNodeResultData:
    properties:
      results_output_id: string
      results: list<map<string, unknown>>
      text_output_id: optional<string>
      text: optional<string>
    source:
      openapi: ../openapi.yml
  SearchRequestOptionsRequest:
    properties:
      limit:
        type: optional<integer>
        docs: The maximum number of results to return.
      weights:
        type: optional<SearchWeightsRequest>
        docs: The weights to use for the search. Must add up to 1.0.
      result_merging:
        type: optional<SearchResultMergingRequest>
        docs: The configuration for merging results.
      filters:
        type: optional<SearchFiltersRequest>
        docs: The filters to apply to the search.
    source:
      openapi: ../openapi.yml
  SearchResponse:
    properties:
      results:
        docs: >-
          The results of the search. Each result represents a chunk that matches
          the search query.
        type: list<SearchResult>
    source:
      openapi: ../openapi.yml
  SearchResult:
    properties:
      document:
        type: Document
        docs: The document that contains the chunk that matched the search query.
      text:
        type: string
        docs: The text of the chunk that matched the search query.
      keywords: list<string>
      score:
        type: double
        docs: A score representing how well the chunk matches the search query.
    source:
      openapi: ../openapi.yml
  SearchResultMergingRequest:
    properties:
      enabled:
        type: boolean
        docs: Whether to enable merging results
    source:
      openapi: ../openapi.yml
  SearchWeightsRequest:
    properties:
      semantic_similarity:
        type: double
        docs: The relative weight to give to semantic similarity
      keywords:
        type: double
        docs: The relative weight to give to keyword matches
    source:
      openapi: ../openapi.yml
  SlimDocument:
    properties:
      id:
        type: string
        docs: Vellum-generated ID that uniquely identifies this document.
        validation:
          format: uuid
      external_id:
        type: optional<string>
        docs: >-
          The external ID that was originally provided when uploading the
          document.
        validation:
          maxLength: 1000
      last_uploaded_at:
        type: datetime
        docs: >-
          A timestamp representing when this document was most recently
          uploaded.
      label:
        type: string
        docs: Human-friendly name for this document.
        validation:
          maxLength: 1000
      processing_state:
        type: optional<ProcessingStateEnum>
        docs: >-
          An enum value representing where this document is along its processing
          lifecycle. Note that this is different than its indexing lifecycle.


          * `QUEUED` - Queued

          * `PROCESSING` - Processing

          * `PROCESSED` - Processed

          * `FAILED` - Failed
      processing_failure_reason:
        type: optional<ProcessingFailureReasonEnum>
        docs: >-
          An enum value representing why the document could not be processed. Is
          null unless processing_state is FAILED.


          * `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit
      status:
        type: optional<SlimDocumentStatusEnum>
        docs: |-
          The document's current status.

          * `ACTIVE` - Active
      keywords:
        type: optional<list<string>>
        docs: >-
          A list of keywords associated with this document. Originally provided
          when uploading the document.
      document_to_document_indexes: list<DocumentDocumentToDocumentIndex>
    source:
      openapi: ../openapi.yml
  SlimDocumentStatusEnum:
    type: literal<"ACTIVE">
    docs: '* `ACTIVE` - Active'
  SubmitCompletionActualRequest:
    properties:
      id:
        type: optional<string>
        docs: >-
          The Vellum-generated ID of a previously generated completion. Must
          provide either this or external_id.
        validation:
          minLength: 1
      external_id:
        type: optional<string>
        docs: >-
          The external ID that was originally provided when generating the
          completion that you'd now like to submit actuals for. Must provide
          either this or id.
        validation:
          minLength: 1
      text:
        type: optional<string>
        docs: Text representing what the completion _should_ have been.
      quality:
        type: optional<double>
        docs: >-
          A number between 0 and 1 representing the quality of the completion. 0
          is the worst, 1 is the best.
        validation:
          min: 0
          max: 1
      timestamp:
        type: optional<datetime>
        docs: >-
          Optionally provide the timestamp representing when this feedback was
          collected. Used for reporting purposes.
    source:
      openapi: ../openapi.yml
  SubmitCompletionActualsErrorResponse:
    properties:
      detail: string
    source:
      openapi: ../openapi.yml
  TerminalNodeChatHistoryResult:
    properties:
      name:
        type: string
        docs: The unique name given to the terminal node that produced this output.
      value: list<ChatMessage>
    source:
      openapi: ../openapi.yml
  TerminalNodeJsonResult:
    properties:
      name:
        type: string
        docs: The unique name given to the terminal node that produced this output.
      value: map<string, unknown>
    source:
      openapi: ../openapi.yml
  TerminalNodeResult:
    properties:
      data: TerminalNodeResultData
    source:
      openapi: ../openapi.yml
  TerminalNodeResultData:
    properties:
      output: TerminalNodeResultOutput
    source:
      openapi: ../openapi.yml
  TerminalNodeResultOutput:
    discriminant: type
    base-properties: {}
    union:
      STRING: TerminalNodeStringResult
      JSON: TerminalNodeJsonResult
      CHAT_HISTORY: TerminalNodeChatHistoryResult
    source:
      openapi: ../openapi.yml
  TerminalNodeStringResult:
    properties:
      name:
        type: string
        docs: The unique name given to the terminal node that produced this output.
      value: string
    source:
      openapi: ../openapi.yml
  TestSuiteTestCase:
    properties:
      test_case_id:
        type: optional<string>
        docs: >-
          The id of the test case to update. If none is provided, an id will be
          generated and a new test case will be appended.
      label:
        type: optional<string>
        docs: A human-friendly label for the test case.
      input_values:
        type: map<string, unknown>
        docs: Key/value pairs for each input variable that the Test Suite expects.
      evaluation_params:
        type: EvaluationParams
        docs: >-
          Parameters to use when evaluating the test case, specific to the test
          suite's evaluation metric.
    source:
      openapi: ../openapi.yml
  UploadDocumentErrorResponse:
    properties:
      detail: string
    source:
      openapi: ../openapi.yml
  UploadDocumentResponse:
    properties:
      document_id:
        type: string
        docs: The ID of the newly created document.
        validation:
          format: uuid
    source:
      openapi: ../openapi.yml
  WorkflowEventError:
    properties:
      message: string
      code: WorkflowExecutionEventErrorCode
    source:
      openapi: ../openapi.yml
  WorkflowExecutionEventErrorCode:
    enum:
      - WORKFLOW_INITIALIZATION
      - NODE_EXECUTION
    docs: |-
      * `WORKFLOW_INITIALIZATION` - WORKFLOW_INITIALIZATION
      * `NODE_EXECUTION` - NODE_EXECUTION
    source:
      openapi: ../openapi.yml
  WorkflowExecutionNodeResultEvent:
    properties:
      run_id: string
      external_id: optional<string>
      data: WorkflowNodeResultEvent
    source:
      openapi: ../openapi.yml
  WorkflowExecutionWorkflowResultEvent:
    properties:
      run_id: string
      external_id: optional<string>
      data: WorkflowResultEvent
    source:
      openapi: ../openapi.yml
  WorkflowNodeResultData:
    discriminant: type
    base-properties: {}
    union:
      PROMPT: PromptNodeResult
      SANDBOX: SandboxNodeResult
      DEPLOYMENT: DeploymentNodeResult
      SEARCH: SearchNodeResult
      CONDITIONAL: ConditionalNodeResult
      TERMINAL: TerminalNodeResult
    source:
      openapi: ../openapi.yml
  WorkflowNodeResultEvent:
    properties:
      id: string
      node_id: string
      node_result_id: string
      state: WorkflowNodeResultEventState
      ts: optional<datetime>
      data: optional<WorkflowNodeResultData>
      error: optional<WorkflowEventError>
    source:
      openapi: ../openapi.yml
  WorkflowNodeResultEventState:
    enum:
      - INITIATED
      - STREAMING
      - FULFILLED
      - REJECTED
    docs: |-
      * `INITIATED` - INITIATED
      * `STREAMING` - STREAMING
      * `FULFILLED` - FULFILLED
      * `REJECTED` - REJECTED
    source:
      openapi: ../openapi.yml
  WorkflowRequestChatHistoryInputRequest:
    properties:
      name:
        type: string
        docs: The variable's name, as defined in the Workflow.
        validation:
          minLength: 1
      value: list<ChatMessageRequest>
    source:
      openapi: ../openapi.yml
  WorkflowRequestInputRequest:
    discriminant: type
    base-properties: {}
    union:
      STRING: WorkflowRequestStringInputRequest
      JSON: WorkflowRequestJsonInputRequest
      CHAT_HISTORY: WorkflowRequestChatHistoryInputRequest
    source:
      openapi: ../openapi.yml
  WorkflowRequestJsonInputRequest:
    properties:
      name:
        type: string
        docs: The variable's name, as defined in the Workflow.
        validation:
          minLength: 1
      value: map<string, unknown>
    source:
      openapi: ../openapi.yml
  WorkflowRequestStringInputRequest:
    properties:
      name:
        type: string
        docs: The variable's name, as defined in the Workflow.
        validation:
          minLength: 1
      value: string
    source:
      openapi: ../openapi.yml
  WorkflowResultEvent:
    properties:
      id: string
      state: WorkflowNodeResultEventState
      ts: datetime
      output: optional<WorkflowResultEventOutputData>
      error: optional<WorkflowEventError>
    source:
      openapi: ../openapi.yml
  WorkflowResultEventOutputData:
    discriminant: type
    base-properties: {}
    union:
      STRING: WorkflowResultEventOutputDataString
      JSON: WorkflowResultEventOutputDataJson
      CHAT_HISTORY: WorkflowResultEventOutputDataChatHistory
    source:
      openapi: ../openapi.yml
  WorkflowResultEventOutputDataChatHistory:
    properties:
      name: string
      state: WorkflowNodeResultEventState
      node_id: string
      delta:
        type: optional<string>
        docs: >-
          The newly output string value. Only relevant for string outputs with a
          state of STREAMING.
      value: optional<list<ChatMessage>>
    source:
      openapi: ../openapi.yml
  WorkflowResultEventOutputDataJson:
    properties:
      name: string
      state: WorkflowNodeResultEventState
      node_id: string
      delta:
        type: optional<string>
        docs: >-
          The newly output string value. Only relevant for string outputs with a
          state of STREAMING.
      value: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
  WorkflowResultEventOutputDataString:
    properties:
      name: string
      state: WorkflowNodeResultEventState
      node_id: string
      delta:
        type: optional<string>
        docs: >-
          The newly output string value, meant to be concatenated with all
          previous. Will be non-null for events of state STREAMING.
      value:
        type: optional<string>
        docs: >-
          The entire string value. Will be non-null for events of state
          FULFILLED.
    source:
      openapi: ../openapi.yml
  WorkflowStreamEvent:
    discriminant: type
    base-properties: {}
    union:
      WORKFLOW: WorkflowExecutionWorkflowResultEvent
      NODE: WorkflowExecutionNodeResultEvent
    source:
      openapi: ../openapi.yml
",
    },
    "deployments.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "retrieve": {
              "auth": true,
              "docs": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a deployment given its ID or name.
",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "active_model_version_ids": [
                        "active_model_version_ids",
                      ],
                      "created": "2024-01-15T09:30:00Z",
                      "environment": "DEVELOPMENT",
                      "id": "id",
                      "label": "label",
                      "last_deployed_on": "2024-01-15T09:30:00Z",
                      "model_type": "GENERATE",
                      "name": "name",
                      "status": "ACTIVE",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/deployments/{id}",
              "path-parameters": {
                "id": {
                  "docs": "Either the Deployment's ID or its unique name",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "type": "root.DeploymentRead",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieve:
      path: /v1/deployments/{id}
      method: GET
      auth: true
      docs: >

        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Used to retrieve a deployment given its ID or name.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: Either the Deployment's ID or its unique name
      response:
        docs: ''
        type: root.DeploymentRead
      url: Default
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              created: '2024-01-15T09:30:00Z'
              label: label
              name: name
              status: ACTIVE
              environment: DEVELOPMENT
              model_type: GENERATE
              active_model_version_ids:
                - active_model_version_ids
              last_deployed_on: '2024-01-15T09:30:00Z'
  source:
    openapi: ../openapi.yml
",
    },
    "documentIndexes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Creates a new document index.",
              "examples": [
                {
                  "name": "Index Using Instructor Model",
                  "request": {
                    "indexing_config": {
                      "chunking": {
                        "chunker_config": {
                          "character_limit": 1000,
                          "min_overlap_ratio": 0.5,
                        },
                        "chunker_name": "sentence-chunker",
                      },
                      "vectorizer": {
                        "config": {
                          "instruction_document_text_type": "plain_text",
                          "instruction_domain": "",
                          "instruction_query_text_type": "plain_text",
                        },
                        "model_name": "hkunlp/instructor-xl",
                      },
                    },
                    "label": "My Document Index",
                    "name": "my-document-index",
                  },
                  "response": {
                    "body": {
                      "created": "2024-01-15T09:30:00Z",
                      "environment": "DEVELOPMENT",
                      "id": "id",
                      "indexing_config": {
                        "key": "value",
                      },
                      "label": "label",
                      "name": "name",
                      "status": "ACTIVE",
                    },
                  },
                },
                {
                  "name": "Index Using a Sentence Transformers Model",
                  "request": {
                    "indexing_config": {
                      "chunking": {
                        "chunker_config": {
                          "character_limit": 1000,
                          "min_overlap_ratio": 0.5,
                        },
                        "chunker_name": "sentence-chunker",
                      },
                      "vectorizer": {
                        "config": {},
                        "model_name": "sentence-transformers/multi-qa-mpnet-base-dot-v1",
                      },
                    },
                    "label": "My Document Index",
                    "name": "my-document-index",
                  },
                  "response": {
                    "body": {
                      "created": "2024-01-15T09:30:00Z",
                      "environment": "DEVELOPMENT",
                      "id": "id",
                      "indexing_config": {
                        "key": "value",
                      },
                      "label": "label",
                      "name": "name",
                      "status": "ACTIVE",
                    },
                  },
                },
                {
                  "name": "Index Using OpenAI Model",
                  "request": {
                    "indexing_config": {
                      "chunking": {
                        "chunker_config": {
                          "character_limit": 1000,
                          "min_overlap_ratio": 0.5,
                        },
                        "chunker_name": "sentence-chunker",
                      },
                      "vectorizer": {
                        "config": {
                          "add_openai_api_key": true,
                        },
                        "model_name": "text-embedding-ada-002",
                      },
                    },
                    "label": "My Document Index",
                    "name": "my-document-index",
                  },
                  "response": {
                    "body": {
                      "created": "2024-01-15T09:30:00Z",
                      "environment": "DEVELOPMENT",
                      "id": "id",
                      "indexing_config": {
                        "key": "value",
                      },
                      "label": "label",
                      "name": "name",
                      "status": "ACTIVE",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/document-indexes",
              "request": {
                "body": {
                  "properties": {
                    "copy_documents_from_index_id": {
                      "docs": "Optionally specify the id of a document index from which you'd like to copy and re-index its documents into this newly created index",
                      "type": "optional<string>",
                      "validation": {
                        "format": "uuid",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "environment": {
                      "docs": "The environment this document index is used in

* `DEVELOPMENT` - Development
* `STAGING` - Staging
* `PRODUCTION` - Production",
                      "type": "optional<root.EnvironmentEnum>",
                    },
                    "indexing_config": {
                      "docs": "Configuration representing how documents should be indexed",
                      "type": "map<string, unknown>",
                    },
                    "label": {
                      "docs": "A human-readable label for the document index",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 150,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "A name that uniquely identifies this index within its workspace",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 150,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "status": {
                      "docs": "The current status of the document index

* `ACTIVE` - Active
* `ARCHIVED` - Archived",
                      "type": "optional<root.DocumentIndexStatus>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DocumentIndexCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "root.DocumentIndexRead",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /v1/document-indexes
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Creates a new document index.
      source:
        openapi: ../openapi.yml
      request:
        name: DocumentIndexCreateRequest
        body:
          properties:
            label:
              type: string
              docs: A human-readable label for the document index
              validation:
                minLength: 1
                maxLength: 150
            name:
              type: string
              docs: A name that uniquely identifies this index within its workspace
              validation:
                minLength: 1
                maxLength: 150
            status:
              type: optional<root.DocumentIndexStatus>
              docs: |-
                The current status of the document index

                * `ACTIVE` - Active
                * `ARCHIVED` - Archived
            environment:
              type: optional<root.EnvironmentEnum>
              docs: |-
                The environment this document index is used in

                * `DEVELOPMENT` - Development
                * `STAGING` - Staging
                * `PRODUCTION` - Production
            indexing_config:
              type: map<string, unknown>
              docs: Configuration representing how documents should be indexed
            copy_documents_from_index_id:
              type: optional<string>
              docs: >-
                Optionally specify the id of a document index from which you'd
                like to copy and re-index its documents into this newly created
                index
              validation:
                format: uuid
        content-type: application/json
      response:
        docs: ''
        type: root.DocumentIndexRead
      url: Default
      examples:
        - name: Index Using Instructor Model
          request:
            label: My Document Index
            name: my-document-index
            indexing_config:
              chunking:
                chunker_name: sentence-chunker
                chunker_config:
                  character_limit: 1000
                  min_overlap_ratio: 0.5
              vectorizer:
                model_name: hkunlp/instructor-xl
                config:
                  instruction_domain: ''
                  instruction_document_text_type: plain_text
                  instruction_query_text_type: plain_text
          response:
            body:
              id: id
              created: '2024-01-15T09:30:00Z'
              label: label
              name: name
              status: ACTIVE
              environment: DEVELOPMENT
              indexing_config:
                key: value
        - name: Index Using a Sentence Transformers Model
          request:
            label: My Document Index
            name: my-document-index
            indexing_config:
              chunking:
                chunker_name: sentence-chunker
                chunker_config:
                  character_limit: 1000
                  min_overlap_ratio: 0.5
              vectorizer:
                model_name: sentence-transformers/multi-qa-mpnet-base-dot-v1
                config: {}
          response:
            body:
              id: id
              created: '2024-01-15T09:30:00Z'
              label: label
              name: name
              status: ACTIVE
              environment: DEVELOPMENT
              indexing_config:
                key: value
        - name: Index Using OpenAI Model
          request:
            label: My Document Index
            name: my-document-index
            indexing_config:
              chunking:
                chunker_name: sentence-chunker
                chunker_config:
                  character_limit: 1000
                  min_overlap_ratio: 0.5
              vectorizer:
                model_name: text-embedding-ada-002
                config:
                  add_openai_api_key: true
          response:
            body:
              id: id
              created: '2024-01-15T09:30:00Z'
              label: label
              name: name
              status: ACTIVE
              environment: DEVELOPMENT
              indexing_config:
                key: value
  source:
    openapi: ../openapi.yml
",
    },
    "documents.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "docs": "
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
              "examples": [
                {
                  "response": {
                    "body": {
                      "count": 123,
                      "next": "http://api.example.org/accounts/?offset=400&limit=100",
                      "previous": "http://api.example.org/accounts/?offset=200&limit=100",
                      "results": [
                        {
                          "document_to_document_indexes": [
                            {
                              "document_index_id": "document_index_id",
                              "id": "id",
                            },
                          ],
                          "external_id": "external_id",
                          "id": "id",
                          "keywords": [
                            "keywords",
                          ],
                          "label": "label",
                          "last_uploaded_at": "2024-01-15T09:30:00Z",
                          "processing_failure_reason": "EXCEEDED_CHARACTER_LIMIT",
                          "processing_state": "QUEUED",
                          "status": "ACTIVE",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/documents",
              "request": {
                "name": "DocumentsListRequest",
                "query-parameters": {
                  "document_index_id": {
                    "docs": "Filter down to only those documents that are included in the specified index. You may provide either the Vellum-generated ID or the unique name of the index specified upon initial creation.",
                    "type": "optional<string>",
                    "validation": {
                      "format": "uuid",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "pattern": undefined,
                    },
                  },
                  "limit": {
                    "docs": "Number of results to return per page.",
                    "type": "optional<integer>",
                  },
                  "offset": {
                    "docs": "The initial index from which to return the results.",
                    "type": "optional<integer>",
                  },
                  "ordering": {
                    "docs": "Which field to use when ordering the results.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "",
                "type": "root.PaginatedSlimDocumentList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
            "upload": {
              "auth": true,
              "docs": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of `https://documents.vellum.ai`.",
              "errors": [
                "root.BadRequestError",
                "root.NotFoundError",
                "root.InternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "label": "label",
                  },
                  "response": {
                    "body": {
                      "document_id": "document_id",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/upload-document",
              "request": {
                "body": {
                  "properties": {
                    "add_to_index_names": {
                      "docs": "Optionally include the names of all indexes that you'd like this document to be included in",
                      "type": "optional<list<string>>",
                    },
                    "contents": {
                      "docs": "The file contents of the document.",
                      "type": "file",
                    },
                    "external_id": {
                      "docs": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "keywords": {
                      "docs": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                      "type": "optional<list<string>>",
                    },
                    "label": {
                      "docs": "A human-friendly name for this document. Typically the filename.",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "multipart/form-data",
                "headers": undefined,
                "name": "UploadDocumentBodyRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "root.UploadDocumentResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Documents",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /v1/documents
      method: GET
      auth: true
      docs: >

        <strong style="background-color:#4caf50; color:white; padding:4px;
        border-radius:4px">Stable</strong>


        Used to list documents. Optionally filter on supported fields.
      source:
        openapi: ../openapi.yml
      request:
        name: DocumentsListRequest
        query-parameters:
          document_index_id:
            type: optional<string>
            docs: >-
              Filter down to only those documents that are included in the
              specified index. You may provide either the Vellum-generated ID or
              the unique name of the index specified upon initial creation.
            validation:
              format: uuid
          limit:
            type: optional<integer>
            docs: Number of results to return per page.
          offset:
            type: optional<integer>
            docs: The initial index from which to return the results.
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
      response:
        docs: ''
        type: root.PaginatedSlimDocumentList
      url: Default
      examples:
        - response:
            body:
              count: 123
              next: http://api.example.org/accounts/?offset=400&limit=100
              previous: http://api.example.org/accounts/?offset=200&limit=100
              results:
                - id: id
                  external_id: external_id
                  last_uploaded_at: '2024-01-15T09:30:00Z'
                  label: label
                  processing_state: QUEUED
                  processing_failure_reason: EXCEEDED_CHARACTER_LIMIT
                  status: ACTIVE
                  keywords:
                    - keywords
                  document_to_document_indexes:
                    - id: id
                      document_index_id: document_index_id
    upload:
      path: /v1/upload-document
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#4caf50; color:white; padding:4px;
        border-radius:4px">Stable</strong>


        Upload a document to be indexed and used for search.


        **Note:** Uses a base url of `https://documents.vellum.ai`.
      source:
        openapi: ../openapi.yml
      request:
        name: UploadDocumentBodyRequest
        body:
          properties:
            add_to_index_names:
              type: optional<list<string>>
              docs: >-
                Optionally include the names of all indexes that you'd like this
                document to be included in
            external_id:
              type: optional<string>
              docs: >-
                Optionally include an external ID for this document. This is
                useful if you want to re-upload the same document later when its
                contents change and would like it to be re-indexed.
              validation:
                minLength: 1
            label:
              type: string
              docs: A human-friendly name for this document. Typically the filename.
              validation:
                minLength: 1
            contents:
              type: file
              docs: The file contents of the document.
            keywords:
              type: optional<list<string>>
              docs: >-
                Optionally include a list of keywords that'll be associated with
                this document. Used when performing keyword searches.
        content-type: multipart/form-data
      response:
        docs: ''
        type: root.UploadDocumentResponse
      url: Documents
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.InternalServerError
      examples:
        - request:
            label: label
          response:
            body:
              document_id: document_id
  source:
    openapi: ../openapi.yml
",
    },
    "modelVersions.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "model_version_compile_prompt": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Compiles the prompt backing the model version using the provided input values.",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "input_values": {
                      "key": "value",
                    },
                  },
                  "response": {
                    "body": {
                      "prompt": {
                        "num_tokens": 1,
                        "text": "text",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/model-versions/{id}/compile-prompt",
              "path-parameters": {
                "id": {
                  "docs": "A UUID string identifying this model version.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "input_values": {
                      "docs": "Key/value pairs for each variable found within the model version's prompt template.",
                      "type": "map<string, unknown>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ModelVersionCompilePromptRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "root.ModelVersionCompilePromptResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
            "retrieve": {
              "auth": true,
              "docs": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a model version given its ID.
",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "build_config": {
                        "base_model": "base_model",
                        "sandbox_snapshot": {
                          "id": "id",
                          "prompt_id": "prompt_id",
                          "prompt_index": 1,
                          "sandbox_id": "sandbox_id",
                        },
                      },
                      "created": "2024-01-15T09:30:00Z",
                      "exec_config": {
                        "input_variables": [
                          {
                            "key": "key",
                          },
                        ],
                        "parameters": {
                          "frequency_penalty": 1.1,
                          "max_tokens": 1,
                          "presence_penalty": 1.1,
                          "stop": [
                            "stop",
                          ],
                          "temperature": 1.1,
                          "top_k": 1.1,
                          "top_p": 1.1,
                        },
                        "prompt_block_data": {
                          "blocks": [
                            {
                              "block_type": "CHAT_MESSAGE",
                              "id": "id",
                              "properties": {},
                            },
                          ],
                          "version": 1,
                        },
                        "prompt_syntax_version": 1,
                        "prompt_template": "prompt_template",
                      },
                      "external_id": "external_id",
                      "id": "id",
                      "label": "label",
                      "model_type": "GENERATE",
                      "provider": "ANTHROPIC",
                      "status": "CREATING",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/model-versions/{id}",
              "path-parameters": {
                "id": {
                  "docs": "A UUID string identifying this model version.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "",
                "type": "root.ModelVersionRead",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieve:
      path: /v1/model-versions/{id}
      method: GET
      auth: true
      docs: >

        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Used to retrieve a model version given its ID.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this model version.
      response:
        docs: ''
        type: root.ModelVersionRead
      url: Default
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              created: '2024-01-15T09:30:00Z'
              label: label
              model_type: GENERATE
              provider: ANTHROPIC
              external_id: external_id
              build_config:
                base_model: base_model
                sandbox_snapshot:
                  id: id
                  prompt_index: 1
                  prompt_id: prompt_id
                  sandbox_id: sandbox_id
              exec_config:
                parameters:
                  temperature: 1.1
                  max_tokens: 1
                  top_p: 1.1
                  frequency_penalty: 1.1
                  presence_penalty: 1.1
                  stop:
                    - stop
                  top_k: 1.1
                input_variables:
                  - key: key
                prompt_template: prompt_template
                prompt_block_data:
                  version: 1
                  blocks:
                    - id: id
                      block_type: CHAT_MESSAGE
                      properties: {}
                prompt_syntax_version: 1
              status: CREATING
    model_version_compile_prompt:
      path: /v1/model-versions/{id}/compile-prompt
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Compiles the prompt backing the model version using the provided input
        values.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this model version.
      request:
        name: ModelVersionCompilePromptRequestRequest
        body:
          properties:
            input_values:
              type: map<string, unknown>
              docs: >-
                Key/value pairs for each variable found within the model
                version's prompt template.
        content-type: application/json
      response:
        docs: ''
        type: root.ModelVersionCompilePromptResponse
      url: Default
      examples:
        - path-parameters:
            id: id
          request:
            input_values:
              key: value
          response:
            body:
              prompt:
                text: text
                num_tokens: 1
  source:
    openapi: ../openapi.yml
",
    },
    "registeredPrompts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "register_prompt": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Registers a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration
partners, not directly by Vellum users.

Under the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.",
              "errors": [
                "root.ConflictError",
              ],
              "examples": [
                {
                  "request": {
                    "label": "label",
                    "model": "model",
                    "name": "name",
                    "parameters": {
                      "frequency_penalty": 1.1,
                      "max_tokens": 1,
                      "presence_penalty": 1.1,
                      "temperature": 1.1,
                      "top_p": 1.1,
                    },
                    "prompt": {
                      "input_variables": [
                        {
                          "key": "key",
                        },
                      ],
                      "prompt_block_data": {
                        "blocks": [
                          {
                            "block_type": "CHAT_MESSAGE",
                            "id": "id",
                            "properties": {},
                          },
                        ],
                        "version": 1,
                      },
                    },
                    "provider": "ANTHROPIC",
                  },
                  "response": {
                    "body": {
                      "deployment": {
                        "id": "id",
                        "label": "label",
                        "name": "name",
                      },
                      "model_version": {
                        "id": "id",
                        "label": "label",
                      },
                      "prompt": {
                        "id": "id",
                        "label": "label",
                      },
                      "sandbox": {
                        "id": "id",
                        "label": "label",
                      },
                      "sandbox_snapshot": {
                        "id": "id",
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/registered-prompts/register",
              "request": {
                "body": {
                  "properties": {
                    "label": {
                      "docs": "A human-friendly label for corresponding entities created in Vellum.",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "meta": {
                      "docs": "Optionally include additional metadata to store along with the prompt.",
                      "type": "optional<map<string, unknown>>",
                    },
                    "model": {
                      "docs": "The initial model to use for this prompt",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "A uniquely-identifying name for corresponding entities created in Vellum.",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "parameters": {
                      "docs": "The initial model parameters to use for  this prompt",
                      "type": "root.RegisterPromptModelParametersRequest",
                    },
                    "prompt": {
                      "docs": "Information about how to execute the prompt template.",
                      "type": "root.RegisterPromptPromptInfoRequest",
                    },
                    "provider": {
                      "docs": "The initial LLM provider to use for this prompt

* `ANTHROPIC` - Anthropic
* `COHERE` - Cohere
* `GOOGLE` - Google
* `HOSTED` - Hosted
* `MOSAICML` - MosaicML
* `MYSTIC` - Mystic
* `OPENAI` - OpenAI
* `PYQ` - Pyq",
                      "type": "root.ProviderEnum",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RegisterPromptRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "root.RegisterPromptResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    register_prompt:
      path: /v1/registered-prompts/register
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Registers a prompt within Vellum and creates associated Vellum entities.
        Intended to be used by integration

        partners, not directly by Vellum users.


        Under the hood, this endpoint creates a new sandbox, a new model
        version, and a new deployment.
      source:
        openapi: ../openapi.yml
      request:
        name: RegisterPromptRequestRequest
        body:
          properties:
            label:
              type: string
              docs: >-
                A human-friendly label for corresponding entities created in
                Vellum.
              validation:
                minLength: 1
            name:
              type: string
              docs: >-
                A uniquely-identifying name for corresponding entities created
                in Vellum.
              validation:
                minLength: 1
            prompt:
              type: root.RegisterPromptPromptInfoRequest
              docs: Information about how to execute the prompt template.
            provider:
              type: root.ProviderEnum
              docs: |-
                The initial LLM provider to use for this prompt

                * `ANTHROPIC` - Anthropic
                * `COHERE` - Cohere
                * `GOOGLE` - Google
                * `HOSTED` - Hosted
                * `MOSAICML` - MosaicML
                * `MYSTIC` - Mystic
                * `OPENAI` - OpenAI
                * `PYQ` - Pyq
            model:
              type: string
              docs: The initial model to use for this prompt
              validation:
                minLength: 1
            parameters:
              type: root.RegisterPromptModelParametersRequest
              docs: The initial model parameters to use for  this prompt
            meta:
              type: optional<map<string, unknown>>
              docs: >-
                Optionally include additional metadata to store along with the
                prompt.
        content-type: application/json
      response:
        docs: ''
        type: root.RegisterPromptResponse
      url: Default
      errors:
        - root.ConflictError
      examples:
        - request:
            label: label
            name: name
            prompt:
              prompt_block_data:
                version: 1
                blocks:
                  - id: id
                    block_type: CHAT_MESSAGE
                    properties: {}
              input_variables:
                - key: key
            provider: ANTHROPIC
            model: model
            parameters:
              temperature: 1.1
              max_tokens: 1
              top_p: 1.1
              frequency_penalty: 1.1
              presence_penalty: 1.1
          response:
            body:
              prompt:
                id: id
                label: label
              sandbox_snapshot:
                id: id
              sandbox:
                id: id
                label: label
              model_version:
                id: id
                label: label
              deployment:
                id: id
                name: name
                label: label
  source:
    openapi: ../openapi.yml
",
    },
    "sandboxes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete_sandbox_scenario": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Deletes an existing scenario from a sandbox, keying off of the provided scenario id.",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                    "scenario_id": "scenario_id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/sandboxes/{id}/scenarios/{scenario_id}",
              "path-parameters": {
                "id": {
                  "docs": "A UUID string identifying this sandbox.",
                  "type": "string",
                },
                "scenario_id": {
                  "docs": "An id identifying the scenario that you'd like to delete",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
            "upsert_sandbox_scenario": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.

If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
is found, a new scenario will be appended to the end.

Note that a full replacement of the scenario is performed, so any fields not provided will be removed
or overwritten with default values.",
              "examples": [
                {
                  "name": "Basic Example",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "inputs": [
                      {
                        "key": "var_1",
                        "type": "TEXT",
                        "value": "Hello, world!",
                      },
                      {
                        "key": "var_2",
                        "type": "TEXT",
                        "value": "Why hello, there!",
                      },
                    ],
                    "label": "Scenario 1",
                  },
                  "response": {
                    "body": {
                      "id": "id",
                      "inputs": [
                        {
                          "chat_history": [
                            {
                              "role": "SYSTEM",
                              "text": "text",
                            },
                          ],
                          "key": "key",
                          "type": "TEXT",
                          "value": "value",
                        },
                      ],
                      "label": "label",
                      "metric_input_params": {
                        "params": {
                          "target": "target",
                        },
                      },
                    },
                  },
                },
                {
                  "name": "Chat History Example",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "inputs": [
                      {
                        "chat_history": [
                          {
                            "role": "USER",
                            "text": "What's your favorite color?",
                          },
                          {
                            "role": "ASSISTANT",
                            "text": "AI's don't have a favorite color.... Yet.",
                          },
                        ],
                        "key": "chat_history",
                        "type": "CHAT_HISTORY",
                      },
                    ],
                    "label": "Scenario 2",
                  },
                  "response": {
                    "body": {
                      "id": "id",
                      "inputs": [
                        {
                          "chat_history": [
                            {
                              "role": "SYSTEM",
                              "text": "text",
                            },
                          ],
                          "key": "key",
                          "type": "TEXT",
                          "value": "value",
                        },
                      ],
                      "label": "label",
                      "metric_input_params": {
                        "params": {
                          "target": "target",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/sandboxes/{id}/scenarios",
              "path-parameters": {
                "id": {
                  "docs": "A UUID string identifying this sandbox.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "inputs": {
                      "docs": "The inputs for the scenario",
                      "type": "list<root.ScenarioInputRequest>",
                    },
                    "label": {
                      "default": "Untitled Scenario",
                      "type": "optional<string>",
                    },
                    "metric_input_params": "optional<root.SandboxMetricInputParamsRequest>",
                    "scenario_id": {
                      "docs": "The id of the scenario to update. If none is provided, an id will be generated and a new scenario will be appended.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertSandboxScenarioRequestRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "root.SandboxScenario",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    upsert_sandbox_scenario:
      path: /v1/sandboxes/{id}/scenarios
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Upserts a new scenario for a sandbox, keying off of the optionally
        provided scenario id.


        If an id is provided and has a match, the scenario will be updated. If
        no id is provided or no match

        is found, a new scenario will be appended to the end.


        Note that a full replacement of the scenario is performed, so any fields
        not provided will be removed

        or overwritten with default values.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this sandbox.
      request:
        name: UpsertSandboxScenarioRequestRequest
        body:
          properties:
            label:
              type: optional<string>
              default: Untitled Scenario
            inputs:
              docs: The inputs for the scenario
              type: list<root.ScenarioInputRequest>
            scenario_id:
              type: optional<string>
              docs: >-
                The id of the scenario to update. If none is provided, an id
                will be generated and a new scenario will be appended.
              validation:
                minLength: 1
            metric_input_params: optional<root.SandboxMetricInputParamsRequest>
        content-type: application/json
      response:
        docs: ''
        type: root.SandboxScenario
      url: Default
      examples:
        - name: Basic Example
          path-parameters:
            id: id
          request:
            label: Scenario 1
            inputs:
              - key: var_1
                type: TEXT
                value: Hello, world!
              - key: var_2
                type: TEXT
                value: Why hello, there!
          response:
            body:
              label: label
              inputs:
                - key: key
                  type: TEXT
                  value: value
                  chat_history:
                    - text: text
                      role: SYSTEM
              id: id
              metric_input_params:
                params:
                  target: target
        - name: Chat History Example
          path-parameters:
            id: id
          request:
            label: Scenario 2
            inputs:
              - key: chat_history
                type: CHAT_HISTORY
                chat_history:
                  - text: What's your favorite color?
                    role: USER
                  - text: AI's don't have a favorite color.... Yet.
                    role: ASSISTANT
          response:
            body:
              label: label
              inputs:
                - key: key
                  type: TEXT
                  value: value
                  chat_history:
                    - text: text
                      role: SYSTEM
              id: id
              metric_input_params:
                params:
                  target: target
    delete_sandbox_scenario:
      path: /v1/sandboxes/{id}/scenarios/{scenario_id}
      method: DELETE
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Deletes an existing scenario from a sandbox, keying off of the provided
        scenario id.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this sandbox.
        scenario_id:
          type: string
          docs: An id identifying the scenario that you'd like to delete
      url: Default
      examples:
        - path-parameters:
            id: id
            scenario_id: scenario_id
  source:
    openapi: ../openapi.yml
",
    },
    "testSuites.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete_test_suite_test_case": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Deletes an existing test case for a test suite, keying off of the test case id.",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                    "test_case_id": "test_case_id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/test-suites/{id}/test-cases/{test_case_id}",
              "path-parameters": {
                "id": {
                  "docs": "A UUID string identifying this test suite.",
                  "type": "string",
                },
                "test_case_id": {
                  "docs": "An id identifying the test case that you'd like to delete",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
            "upsert_test_suite_test_case": {
              "auth": true,
              "docs": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Upserts a new test case for a test suite, keying off of the optionally provided test case id.

If an id is provided and has a match, the test case will be updated. If no id is provided or no match
is found, a new test case will be appended to the end.

Note that a full replacement of the test case is performed, so any fields not provided will be removed
or overwritten with default values.",
              "examples": [
                {
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "evaluation_params": {},
                    "input_values": {
                      "key": "value",
                    },
                  },
                  "response": {
                    "body": {
                      "evaluation_params": {
                        "target": "target",
                      },
                      "input_values": {
                        "key": "value",
                      },
                      "label": "label",
                      "test_case_id": "test_case_id",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/test-suites/{id}/test-cases",
              "path-parameters": {
                "id": {
                  "docs": "A UUID string identifying this test suite.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "evaluation_params": {
                      "docs": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
                      "type": "root.EvaluationParamsRequest",
                    },
                    "input_values": {
                      "docs": "Key/value pairs for each input variable that the Test Suite expects.",
                      "type": "map<string, unknown>",
                    },
                    "label": {
                      "docs": "A human-friendly label for the test case.",
                      "type": "optional<string>",
                    },
                    "test_case_id": {
                      "docs": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": undefined,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "TestSuiteTestCaseRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "",
                "type": "root.TestSuiteTestCase",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
              "url": "Default",
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    upsert_test_suite_test_case:
      path: /v1/test-suites/{id}/test-cases
      method: POST
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Upserts a new test case for a test suite, keying off of the optionally
        provided test case id.


        If an id is provided and has a match, the test case will be updated. If
        no id is provided or no match

        is found, a new test case will be appended to the end.


        Note that a full replacement of the test case is performed, so any
        fields not provided will be removed

        or overwritten with default values.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this test suite.
      request:
        name: TestSuiteTestCaseRequest
        body:
          properties:
            test_case_id:
              type: optional<string>
              docs: >-
                The id of the test case to update. If none is provided, an id
                will be generated and a new test case will be appended.
              validation:
                minLength: 1
            label:
              type: optional<string>
              docs: A human-friendly label for the test case.
            input_values:
              type: map<string, unknown>
              docs: >-
                Key/value pairs for each input variable that the Test Suite
                expects.
            evaluation_params:
              type: root.EvaluationParamsRequest
              docs: >-
                Parameters to use when evaluating the test case, specific to the
                test suite's evaluation metric.
        content-type: application/json
      response:
        docs: ''
        type: root.TestSuiteTestCase
      url: Default
      examples:
        - path-parameters:
            id: id
          request:
            input_values:
              key: value
            evaluation_params: {}
          response:
            body:
              test_case_id: test_case_id
              label: label
              input_values:
                key: value
              evaluation_params:
                target: target
    delete_test_suite_test_case:
      path: /v1/test-suites/{id}/test-cases/{test_case_id}
      method: DELETE
      auth: true
      docs: >-
        <strong style="background-color:#ffc107; color:white; padding:4px;
        border-radius:4px">Unstable</strong>


        Deletes an existing test case for a test suite, keying off of the test
        case id.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this test suite.
        test_case_id:
          type: string
          docs: An id identifying the test case that you'd like to delete
      url: Default
      examples:
        - path-parameters:
            id: id
            test_case_id: test_case_id
  source:
    openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "apiKeyAuth",
      "auth-schemes": {
        "apiKeyAuth": {
          "header": "X_API_KEY",
          "name": "apiKey",
          "type": "string",
        },
      },
      "default-environment": "Production",
      "display-name": "Vellum Client API",
      "environments": {
        "Production": {
          "urls": {
            "Default": "https://api.vellum.ai",
            "Documents": "https://documents.vellum.ai",
            "Predict": "https://predict.vellum.ai",
          },
        },
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Vellum Client API
environments:
  Production:
    urls:
      Default: https://api.vellum.ai
      Predict: https://predict.vellum.ai
      Documents: https://documents.vellum.ai
default-environment: Production
auth-schemes:
  apiKeyAuth:
    header: X_API_KEY
    name: apiKey
    type: string
auth: apiKeyAuth
",
  },
}