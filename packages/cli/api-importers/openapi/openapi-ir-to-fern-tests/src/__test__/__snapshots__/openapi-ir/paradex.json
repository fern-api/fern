{
  "title": "Paradex REST API",
  "description": "The following describe Paradex API. Bear in mind that this is still a work in\nprogress so all feedback is welcome.\n",
  "servers": [
    {
      "url": "https://api.testnet.paradex.trade/v1"
    }
  ],
  "tags": {
    "tagsById": {}
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "summary": "Get account information",
      "audiences": [],
      "operationId": "get-account",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Subaccount address",
          "name": "subaccount_address",
          "schema": {
            "generatedName": "GetAccountRequestSubaccountAddress",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetAccountRequestSubaccountAddress",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetAccountRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetAccountResponse",
          "schema": "responses.AccountSummaryResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Respond with requester's account information\n",
      "authed": true,
      "method": "GET",
      "path": "/account",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "account_value": {
                  "value": {
                    "value": "136285.06918911",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "free_collateral": {
                  "value": {
                    "value": "73276.47229774",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "initial_margin_requirement": {
                  "value": {
                    "value": "63008.59689218",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "maintenance_margin_requirement": {
                  "value": {
                    "value": "31597.25239676",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "margin_cushion": {
                  "value": {
                    "value": "104687.8167956",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "seq_no": {
                  "value": {
                    "value": 1681471234972000000,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "settlement_asset": {
                  "value": {
                    "value": "USDC",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": {
                    "value": "ACTIVE",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "total_collateral": {
                  "value": {
                    "value": "123003.62047353",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": 1681471234972,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Return account info of current account",
      "audiences": [],
      "operationId": "get-accounts-info",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetAccountsInfoRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetAccountsInfoResponse",
          "schema": "responses.GetAccountsInfoResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/account/info",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681471234972,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "derivation_path": {
                          "value": {
                            "value": "m/44'/9004'/0'/0/1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isolated_market": {
                          "value": {
                            "value": "ETHUSD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "kind": {
                          "value": "",
                          "type": "enum"
                        },
                        "parent_account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "public_key": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "username": {
                          "value": {
                            "value": "username",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get account margin configuration",
      "audiences": [],
      "operationId": "get-account-margin",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Market Name - example: BTC-USD-PERP",
          "name": "market",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetAccountMarginRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetAccountMarginRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetAccountMarginResponse",
          "schema": "message.AccountMarginConfig",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Not Found",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get margin configuration for an account and market",
      "authed": true,
      "method": "GET",
      "path": "/account/margin",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "market",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "account",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "leverage": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "margin_type": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "market",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Set margin configuration",
      "audiences": [],
      "operationId": "upsert-account-margin",
      "tags": [
        "Account"
      ],
      "pathParameters": [
        {
          "description": "Market Name - example: BTC-USD-PERP",
          "name": "market",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UpsertAccountMarginRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpsertAccountMarginRequest",
      "request": {
        "schema": {
          "generatedName": "UpsertAccountMarginRequest",
          "schema": "requests.AccountMarginRequest",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpsertAccountMarginResponse",
          "schema": "message.AccountMarginConfig",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Set margin configuration for an account and market",
      "authed": true,
      "method": "POST",
      "path": "/account/margin/{market}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "market",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "leverage": {
                "value": {
                  "value": 10,
                  "type": "int"
                },
                "type": "primitive"
              },
              "margin_type": {
                "value": {
                  "value": "CROSS",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "account",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "leverage": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "margin_type": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "market",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get account profile information",
      "audiences": [],
      "operationId": "get-account-profile",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetAccountProfileRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetAccountProfileResponse",
          "schema": "responses.AccountProfileResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Respond with requester's account information\n",
      "authed": true,
      "method": "GET",
      "path": "/account/profile",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "discord": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "is_username_private": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "max_slippage": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "nfts": {
                  "value": [
                    {
                      "properties": {
                        "collection_address": {
                          "value": {
                            "value": "collection_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "collection_name": {
                          "value": {
                            "value": "collection_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "image_url": {
                          "value": {
                            "value": "image_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "programs_eligibility": {
                  "properties": {
                    "affiliate": {
                      "value": {
                        "value": "Pending",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "fee": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "maker": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "referral": {
                      "value": {
                        "value": "False",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "referral_code": {
                  "value": {
                    "value": "cryptofox8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referred_by": {
                  "value": {
                    "value": "maxDegen",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "twitter": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "username": {
                  "value": {
                    "value": "username",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Updates account max slippage",
      "audiences": [],
      "operationId": "update-account-max-slippage",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateAccountMaxSlippageRequest",
      "request": {
        "schema": {
          "generatedName": "UpdateAccountMaxSlippageRequest",
          "schema": "requests.UpdateAccountMaxSlippageRequest",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateAccountMaxSlippageResponse",
          "schema": "responses.AccountProfileResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Respond with requester's account max_slippage\n",
      "authed": true,
      "method": "POST",
      "path": "/account/profile/max_slippage",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "max_slippage": {
                "value": {
                  "value": "max_slippage",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "discord": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "is_username_private": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "max_slippage": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "nfts": {
                  "value": [
                    {
                      "properties": {
                        "collection_address": {
                          "value": {
                            "value": "collection_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "collection_name": {
                          "value": {
                            "value": "collection_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "image_url": {
                          "value": {
                            "value": "image_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "programs_eligibility": {
                  "properties": {
                    "affiliate": {
                      "value": {
                        "value": "Pending",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "fee": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "maker": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "referral": {
                      "value": {
                        "value": "False",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "referral_code": {
                  "value": {
                    "value": "cryptofox8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referred_by": {
                  "value": {
                    "value": "maxDegen",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "twitter": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "username": {
                  "value": {
                    "value": "username",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Updates account profile fields",
      "audiences": [],
      "operationId": "update-account-profile-referral-code",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateAccountProfileReferralCodeRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateAccountProfileReferralCodeResponse",
          "schema": "responses.AccountProfileResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Respond with requester's account information\n",
      "authed": true,
      "method": "POST",
      "path": "/account/profile/referral_code",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "discord": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "is_username_private": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "max_slippage": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "nfts": {
                  "value": [
                    {
                      "properties": {
                        "collection_address": {
                          "value": {
                            "value": "collection_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "collection_name": {
                          "value": {
                            "value": "collection_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "image_url": {
                          "value": {
                            "value": "image_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "programs_eligibility": {
                  "properties": {
                    "affiliate": {
                      "value": {
                        "value": "Pending",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "fee": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "maker": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "referral": {
                      "value": {
                        "value": "False",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "referral_code": {
                  "value": {
                    "value": "cryptofox8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referred_by": {
                  "value": {
                    "value": "maxDegen",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "twitter": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "username": {
                  "value": {
                    "value": "username",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Updates account profile username fields",
      "audiences": [],
      "operationId": "update-account-profile-username",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpdateAccountProfileUsernameRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "UpdateAccountProfileUsernameResponse",
          "schema": "responses.AccountProfileResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Respond with requester's account information\n",
      "authed": true,
      "method": "POST",
      "path": "/account/profile/username",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "discord": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "is_username_private": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "max_slippage": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "nfts": {
                  "value": [
                    {
                      "properties": {
                        "collection_address": {
                          "value": {
                            "value": "collection_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "collection_name": {
                          "value": {
                            "value": "collection_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "image_url": {
                          "value": {
                            "value": "image_url",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "programs_eligibility": {
                  "properties": {
                    "affiliate": {
                      "value": {
                        "value": "Pending",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "fee": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "maker": {
                      "value": {
                        "value": "True",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "referral": {
                      "value": {
                        "value": "False",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "referral_code": {
                  "value": {
                    "value": "cryptofox8",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "referred_by": {
                  "value": {
                    "value": "maxDegen",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "twitter": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "image_url": {
                      "value": {
                        "value": "image_url",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "username": {
                  "value": {
                    "value": "username",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List sub-accounts of current account",
      "audiences": [],
      "operationId": "get-sub-accounts",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSubAccountsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetSubAccountsResponse",
          "schema": "responses.GetSubAccountsResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Respond with requester's list of sub-accounts\n",
      "authed": true,
      "method": "GET",
      "path": "/account/subaccounts",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681471234972,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "derivation_path": {
                          "value": {
                            "value": "m/44'/9004'/0'/0/1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "isolated_market": {
                          "value": {
                            "value": "ETHUSD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "kind": {
                          "value": "",
                          "type": "enum"
                        },
                        "parent_account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "public_key": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "username": {
                          "value": {
                            "value": "username",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get open algo orders",
      "audiences": [],
      "operationId": "get-open-algo-orders",
      "tags": [
        "Algos"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetOpenAlgoOrdersRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetOpenAlgoOrdersResponse",
          "schema": "responses.GetOpenAlgoOrders",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get current user all open algo orders\n",
      "authed": true,
      "method": "GET",
      "path": "/algo/orders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "algo_type": {
                          "value": "",
                          "type": "enum"
                        },
                        "avg_fill_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cancel_reason": {
                          "value": {
                            "value": "NOT_ENOUGH_MARGIN",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "end_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "123456",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remaining_size": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "NEW",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create algo order",
      "audiences": [],
      "operationId": "create-algo-order",
      "tags": [
        "Algos"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CreateAlgoOrderRequest",
      "request": {
        "schema": {
          "generatedName": "CreateAlgoOrderRequest",
          "schema": "requests.AlgoOrderRequest",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "CreateAlgoOrderResponse",
          "schema": "responses.AlgoOrderResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Open a new algo order\n\n### TWAP\n\nTWAP orders break a large trade into smaller ones over time to reduce market impact:\n- Sub-orders are placed every 30 seconds.\n- Order duration is between 30 and 86,400 seconds, in multiples of 30.\n- Supported sub order type: MARKET\n",
      "authed": true,
      "method": "POST",
      "path": "/algo/orders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "algo_type": {
                "value": {
                  "value": "TWAP",
                  "type": "string"
                },
                "type": "primitive"
              },
              "duration_seconds": {
                "value": {
                  "value": 3600,
                  "type": "int"
                },
                "type": "primitive"
              },
              "market": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              },
              "side": {
                "value": "BUY",
                "type": "enum"
              },
              "signature": {
                "value": {
                  "value": "signature",
                  "type": "string"
                },
                "type": "primitive"
              },
              "signature_timestamp": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              },
              "size": {
                "value": {
                  "value": "1.213",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "MARKET",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "algo_type": {
                  "value": "",
                  "type": "enum"
                },
                "avg_fill_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cancel_reason": {
                  "value": {
                    "value": "NOT_ENOUGH_MARGIN",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "end_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "123456",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "BTC-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remaining_size": {
                  "value": {
                    "value": "0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "side": {
                  "value": "BUY",
                  "type": "enum"
                },
                "size": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "NEW",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get algo orders history",
      "audiences": [],
      "operationId": "get-algo-orders-history",
      "tags": [
        "Algos"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Unique ID of client generating the order",
          "name": "client_id",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestClientId",
            "value": {
              "schema": {
                "example": "client-id",
                "type": "string"
              },
              "generatedName": "GetAlgoOrdersHistoryRequestClientId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetAlgoOrdersHistoryRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetAlgoOrdersHistoryRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Market for the order",
          "name": "market",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestMarket",
            "value": {
              "schema": {
                "example": "BTC-USD-PERP",
                "type": "string"
              },
              "generatedName": "GetAlgoOrdersHistoryRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetAlgoOrdersHistoryRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Order side",
          "name": "side",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestSide",
            "value": {
              "generatedName": "GetAlgoOrdersHistoryRequestSide",
              "values": [
                {
                  "generatedName": "BUY",
                  "value": "BUY",
                  "casing": {}
                },
                {
                  "generatedName": "SELL",
                  "value": "SELL",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetAlgoOrdersHistoryRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Order status",
          "name": "status",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestStatus",
            "value": {
              "generatedName": "GetAlgoOrdersHistoryRequestStatus",
              "values": [
                {
                  "generatedName": "OPEN",
                  "value": "OPEN",
                  "casing": {}
                },
                {
                  "generatedName": "CLOSED",
                  "value": "CLOSED",
                  "casing": {}
                },
                {
                  "generatedName": "NEW",
                  "value": "NEW",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Order type",
          "name": "type",
          "schema": {
            "generatedName": "GetAlgoOrdersHistoryRequestType",
            "value": {
              "generatedName": "GetAlgoOrdersHistoryRequestType",
              "values": [
                {
                  "generatedName": "LIMIT",
                  "value": "LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "MARKET",
                  "value": "MARKET",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_LIMIT",
                  "value": "STOP_LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_MARKET",
                  "value": "STOP_MARKET",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_LOSS_LIMIT",
                  "value": "STOP_LOSS_LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_LOSS_MARKET",
                  "value": "STOP_LOSS_MARKET",
                  "casing": {}
                },
                {
                  "generatedName": "TAKE_PROFIT_LIMIT",
                  "value": "TAKE_PROFIT_LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "TAKE_PROFIT_MARKET",
                  "value": "TAKE_PROFIT_MARKET",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetAlgoOrdersHistoryRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetAlgoOrdersHistoryResponse",
          "schema": "responses.GetAlgoOrders",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get current user algo orders filtered on attributes\n",
      "authed": true,
      "method": "GET",
      "path": "/algo/orders-history",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "client_id",
              "value": {
                "value": {
                  "value": "client-id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "algo_type": {
                          "value": "",
                          "type": "enum"
                        },
                        "avg_fill_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cancel_reason": {
                          "value": {
                            "value": "NOT_ENOUGH_MARGIN",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "end_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "123456",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remaining_size": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "NEW",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get algo order by id",
      "audiences": [],
      "operationId": "get-algo-order-by-id",
      "tags": [
        "Algos"
      ],
      "pathParameters": [
        {
          "description": "Algo ID",
          "name": "algo_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetAlgoOrderByIdRequestAlgoId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetAlgoOrderByIdRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetAlgoOrderByIdResponse",
          "schema": "responses.AlgoOrderResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Not Found",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get an algo order by id. Only return algo order in `OPEN` or `NEW` status.\n",
      "authed": true,
      "method": "GET",
      "path": "/algo/orders/{algo_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "algo_id",
              "value": {
                "value": {
                  "value": "algo_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "algo_type": {
                  "value": "",
                  "type": "enum"
                },
                "avg_fill_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cancel_reason": {
                  "value": {
                    "value": "NOT_ENOUGH_MARGIN",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "end_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "123456",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "BTC-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "remaining_size": {
                  "value": {
                    "value": "0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "side": {
                  "value": "BUY",
                  "type": "enum"
                },
                "size": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "NEW",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancel algo order by id",
      "audiences": [],
      "operationId": "cancel-algo-order",
      "tags": [
        "Algos"
      ],
      "pathParameters": [
        {
          "description": "Algo ID",
          "name": "algo_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "CancelAlgoOrderRequestAlgoId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "CancelAlgoOrderRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Not Found",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Cancel an existing algo order by id\n",
      "authed": true,
      "method": "DELETE",
      "path": "/algo/orders/{algo_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "algo_id",
              "value": {
                "value": {
                  "value": "algo_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get JWT",
      "audiences": [],
      "operationId": "auth",
      "tags": [
        "Authentication"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Starknet account",
          "name": "PARADEX-STARKNET-ACCOUNT",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AuthRequestParadexStarknetAccount",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Starknet signature",
          "name": "PARADEX-STARKNET-SIGNATURE",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AuthRequestParadexStarknetSignature",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Timestamp when the signature was created",
          "name": "PARADEX-TIMESTAMP",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AuthRequestParadexTimestamp",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Timestamp when signature expires (default 30 min | Max 1 week)",
          "name": "PARADEX-SIGNATURE-EXPIRATION",
          "schema": {
            "generatedName": "AuthRequestParadexSignatureExpiration",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthRequestParadexSignatureExpiration",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "AuthRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "AuthResponse",
          "schema": "responses.AuthResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Authenticate using signed payload to get a JWT for usage in other endpoints\n\nThere are multiple valid headers required to be sent as part of this request.\n\nFor onboarding examples, refer to `go`, `java` and `python` code in [code-samples](https://github.com/tradeparadex/code-samples).\n\n#### StarkNet Message Hash and Signature\n\nInspired by [EIP-712](https://eips.ethereum.org/EIPS/eip-712),\n(a standard for hashing and signing typed structured data)\nthe encoding of an off-chain message is defined as:\n\n`signed_data = Enc[PREFIX_MESSAGE, domain_separator, account, hash_struct(message)]`\n\nwhere:\n\n- `PREFIX_MESSAGE = \"StarkNet Message\"`\n- `domain_separator` is defined as the `hash_struct` of the StarkNetDomain struct:\n  * Struct contains: `name`, `chainId` and `version`\n  * `chainId` is can be obtained calling `GET /system/config`\n- `account` is the StarkNet account address\n- The message to be hashed is represented as a struct\n  * `hash_struct(message) = Enc[type_hash(MyStruct), Enc[param1], ..., Enc[paramN]]`\n  * where `type_hash` is defined as in EIP-712 (but using `selector` instead of `keccak`)\n  * More details on StarkNet - [Hash Functions](https://docs.starknet.io/architecture-and-concepts/cryptography/#hash_functions)\n\nIn case of more complex structure of object, you have to work in the spirit of EIP-712.\nThis json structure has 4 mandatory items: `types`, `primaryType`, `domain` and `message`.\nThese items are designed to be able to be an interface with a wallet.\nAt sign request, the wallet will display:\n\n- `message` will be displayed at the bottom of the wallet display,\nshowing clearly (not in hex) the message to sign.\nIts structure has to be in accordance with the type listed in primaryType,\ndefined in types.\n- `domain` will be shown above the message.\nIts structure has to be in accordance with `StarkNetDomain`.\n\nThe predefined types that you can use :\n\n- `felt` : for an integer on 251 bits.\n- `felt*` : for an array of felt.\n- `string` : for a shortString of 31 ASCII characters max.\n- `selector` : for a name of a smart contract function.\n- `merkletree` : for a Root of a Merkle tree, calculated with the provided data.\n\nSpecification details: [Signing transactions and off-chain messages](https://github.com/argentlabs/argent-x/discussions/14)\n\n#### Message Hash Sample Code\n\nFor a complete `message_hash` example, refer to `python` code in [code-samples](https://github.com/tradeparadex/code-samples).\n\n> Examples:\n\n```json\n{\n  \"paradex-signature-expiration\": 1682364556,\n  \"paradex-starknet-account\": \"0x129f3dc1b8962d8a87abc692424c78fda963ade0e1cd17bf3d1c26f8d41ee7a\",\n  \"paradex-starknet-signature\": [\n    \"1381323390094460587764867648394252677239485992175346764030313478865763678671\",\n    \"396490140510115262427678549757564216013606350105112805717359873954984880589\"\n  ],\n  \"paradex-timestamp\": 1681759756\n}\n```\n",
      "authed": false,
      "method": "POST",
      "path": "/auth",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "PARADEX-STARKNET-ACCOUNT",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-ACCOUNT",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-STARKNET-SIGNATURE",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-SIGNATURE",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-TIMESTAMP",
              "value": {
                "value": {
                  "value": "PARADEX-TIMESTAMP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "response": {
            "value": {
              "properties": {
                "jwt_token": {
                  "value": {
                    "value": "eyJhbGciOiJFUzM4NCIsInR5cCI6IkpXVCJ9.eyJ0eXAiOiJhdCtKV1QiLCJleHAiOjE2ODE0NTI5MDcsImlhdCI6MTY4MTQ1MjYwNywiaXNzIjoiUGFyYWRleCBzdGFnaW5nIiwic3ViIjoiMHg0OTVkMmViNTIzNmExMmI4YjRhZDdkMzg0OWNlNmEyMDNjZTIxYzQzZjQ3M2MyNDhkZmQ1Y2U3MGQ5NDU0ZmEifQ.BPihIbGhnnsuPlReqC9x12JFXldpswg5EdA6tTiDQm-_UHaRz_8RfVBqWc2fPN6CzFsXTq7GowZu-2qMxPvZK_fGcxEhTp2k1r8MUxowlUIT4vPu2scCwrsyIujlCAwS",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List balances",
      "audiences": [],
      "operationId": "get-balance",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBalanceRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetBalanceResponse",
          "schema": "responses.GetBalancesResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Respond with requester's own balances\n",
      "authed": true,
      "method": "GET",
      "path": "/balance",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "last_updated_at": {
                          "value": {
                            "value": 1681462770114,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "size": {
                          "value": {
                            "value": "123003.620",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "token": {
                          "value": {
                            "value": "USDC",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get market bbo",
      "audiences": [],
      "operationId": "get-bbo",
      "tags": [
        "Markets"
      ],
      "pathParameters": [
        {
          "description": "Market symbol - ex: BTC-USD-PERP",
          "name": "market",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetBboRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetBboRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetBboResponse",
          "schema": "responses.BBOResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get the best bid/ask for the given market\n",
      "authed": false,
      "method": "GET",
      "path": "/bbo/{market}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "market",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "ask": {
                  "value": {
                    "value": "30130.15",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "ask_size": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bid": {
                  "value": {
                    "value": "30112.22",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bid_size": {
                  "value": {
                    "value": "0.04",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681493939981,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "BTC-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "seq_no": {
                  "value": {
                    "value": 20784,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List fills",
      "audiences": [],
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetFillsRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetFillsRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetFillsRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetFillsRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "name": "market",
          "schema": {
            "generatedName": "GetFillsRequestMarket",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetFillsRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetFillsRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetFillsRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetFillsRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetFillsRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetFillsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetFillsResponse",
          "schema": "responses.GetFillsResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "This API returns a list of matched orders (i.e. fills) that have been sent to\r\nchain for settlement.\r\n",
      "authed": true,
      "method": "GET",
      "path": "/fills",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "client_id": {
                          "value": {
                            "value": "x1234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681375176910,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "fee": {
                          "value": {
                            "value": "7.56",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fee_currency": {
                          "value": {
                            "value": "USDC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "fill_type": {
                          "value": {
                            "value": "FILL",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "8615262148007718462",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "liquidity": {
                          "value": "TAKER",
                          "type": "enum"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "order_id": {
                          "value": {
                            "value": "1681462103821101699438490000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price": {
                          "value": {
                            "value": "30000.12",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_funding": {
                          "value": {
                            "value": "7.56",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_pnl": {
                          "value": {
                            "value": "7.56",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "remaining_size": {
                          "value": {
                            "value": "0.5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.5",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Funding data history",
      "audiences": [],
      "operationId": "get-funding-data",
      "tags": [
        "Markets"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetFundingDataRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetFundingDataRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetFundingDataRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetFundingDataRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Market for which funding payments are queried",
          "name": "market",
          "schema": {
            "schema": {
              "example": "BTC-USD-PERP",
              "type": "string"
            },
            "generatedName": "GetFundingDataRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetFundingDataRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetFundingDataRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetFundingDataRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetFundingDataRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetFundingDataRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetFundingDataResponse",
          "schema": "responses.FundingDataResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List historical funding data by market\n",
      "authed": false,
      "method": "GET",
      "path": "/funding/data",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "funding_index": {
                          "value": {
                            "value": "funding_index",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "funding_premium": {
                          "value": {
                            "value": "funding_premium",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "funding_rate": {
                          "value": {
                            "value": "funding_rate",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "market",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Funding payments history",
      "audiences": [],
      "operationId": "get-funding",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetFundingRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetFundingRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetFundingRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetFundingRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Market for which funding payments are queried",
          "name": "market",
          "schema": {
            "schema": {
              "example": "BTC-USD-PERP",
              "type": "string"
            },
            "generatedName": "GetFundingRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetFundingRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetFundingRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetFundingRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetFundingRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetFundingRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetFundingResponse",
          "schema": "responses.FundingHistoryResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List funding payments made by/to the requester's account\n\n*Funding payments are periodic payments between traders to make the perpetual\nfutures contract price is close to the index price.*\n",
      "authed": true,
      "method": "GET",
      "path": "/funding/payments",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": 1681375481000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "fill_id": {
                          "value": {
                            "value": "8615262148007718462",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "1681375578221101699352320000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "index": {
                          "value": {
                            "value": "-2819.53434361",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "payment": {
                          "value": {
                            "value": "34.4490622",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get insurance fund account information",
      "audiences": [],
      "operationId": "get-insurance-fund",
      "tags": [
        "Insurance"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetInsuranceFundRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetInsuranceFundResponse",
          "schema": "responses.InsuranceAccountResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get insurance fund account's information\n",
      "authed": false,
      "method": "GET",
      "path": "/insurance",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "account_value": {
                  "value": {
                    "value": "136285.069",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "settlement_asset": {
                  "value": {
                    "value": "USDC",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "updated_at": {
                  "value": {
                    "value": 1681471234972,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List liquidations",
      "audiences": [],
      "operationId": "get-liquidations",
      "tags": [
        "Liquidations"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Start Time (unix time millisecond)",
          "name": "from",
          "schema": {
            "generatedName": "GetLiquidationsRequestFrom",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetLiquidationsRequestFrom",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "to",
          "schema": {
            "generatedName": "GetLiquidationsRequestTo",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetLiquidationsRequestTo",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetLiquidationsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetLiquidationsResponse",
          "schema": "responses.GetLiquidations",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieves a list of liquidations associated to the requester's account\n",
      "authed": true,
      "method": "GET",
      "path": "/liquidations",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": 1697213130097,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "0x123456789",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List available markets",
      "audiences": [],
      "operationId": "get-markets",
      "tags": [
        "Markets"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Market Name - example: BTC-USD-PERP",
          "name": "market",
          "schema": {
            "generatedName": "GetMarketsRequestMarket",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetMarketsRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMarketsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetMarketsResponse",
          "schema": "responses.GetMarkets",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Not Found",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get markets static data component\n",
      "authed": false,
      "method": "GET",
      "path": "/markets",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "asset_kind": {
                          "value": {
                            "value": "PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "base_currency": {
                          "value": {
                            "value": "ETH",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "chain_details": {
                          "properties": {
                            "collateral_address": {
                              "value": {
                                "value": "0x1234567890",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "contract_address": {
                              "value": {
                                "value": "0x1234567890",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "fee_account_address": {
                              "value": {
                                "value": "0x1234567890",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "fee_maker": {
                              "value": {
                                "value": "0.01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "fee_taker": {
                              "value": {
                                "value": "0.01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "insurance_fund_address": {
                              "value": {
                                "value": "0x1234567890",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "liquidation_fee": {
                              "value": {
                                "value": "0.01",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "oracle_address": {
                              "value": {
                                "value": "0x1234567890",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "symbol": {
                              "value": {
                                "value": "ETH-USD-PERP",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "clamp_rate": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "delta1_cross_margin_params": {
                          "properties": {
                            "imf_base": {
                              "value": {
                                "value": "0.11",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "imf_factor": {
                              "value": {
                                "value": "0",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "imf_shift": {
                              "value": {
                                "value": "0",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "mmf_factor": {
                              "value": {
                                "value": "0.51",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "expiry_at": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "funding_period_hours": {
                          "value": {
                            "value": 8,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "interest_rate": {
                          "value": {
                            "value": "0.01",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "iv_bands_width": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market_kind": {
                          "value": {
                            "value": "cross",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_funding_rate": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_funding_rate_change": {
                          "value": {
                            "value": "0.0005",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_open_orders": {
                          "value": {
                            "value": 100,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "max_order_size": {
                          "value": {
                            "value": "100",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_tob_spread": {
                          "value": {
                            "value": "0.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "min_notional": {
                          "value": {
                            "value": "10",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "open_at": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "option_type": {
                          "value": {
                            "value": "PUT",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "oracle_ewma_factor": {
                          "value": {
                            "value": "0.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "order_size_increment": {
                          "value": {
                            "value": "0.001",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "position_limit": {
                          "value": {
                            "value": "500",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price_bands_width": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price_feed_id": {
                          "value": {
                            "value": "GVXRSBjFk6e6J3NbVPXohDJetcTjaeeuykUpbQF8UoMU",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price_tick_size": {
                          "value": {
                            "value": "0.01",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "quote_currency": {
                          "value": {
                            "value": "USD",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "settlement_currency": {
                          "value": {
                            "value": "USDC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "strike_price": {
                          "value": {
                            "value": "66500",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "symbol": {
                          "value": {
                            "value": "ETH-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tags": {
                          "value": [
                            {
                              "value": {
                                "value": "MEME",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            {
                              "value": {
                                "value": "DEFI",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "OHLCV for a symbol",
      "audiences": [],
      "operationId": "markets-klines",
      "tags": [
        "Markets"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "end time for klines in milliseconds",
          "name": "end_at",
          "schema": {
            "schema": {
              "type": "int"
            },
            "generatedName": "MarketsKlinesRequestEndAt",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "name": "price_kind",
          "schema": {
            "generatedName": "MarketsKlinesRequestPriceKind",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "MarketsKlinesRequestPriceKind",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "resolution in minutes: 1, 3, 5, 15, 30, 60",
          "name": "resolution",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "MarketsKlinesRequestResolution",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "start time for klines in milliseconds",
          "name": "start_at",
          "schema": {
            "schema": {
              "type": "int"
            },
            "generatedName": "MarketsKlinesRequestStartAt",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Symbol of the market pair",
          "name": "symbol",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "MarketsKlinesRequestSymbol",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "MarketsKlinesRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Klines for a symbol",
      "authed": false,
      "method": "GET",
      "path": "/markets/klines",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "end_at",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "resolution",
              "value": {
                "value": {
                  "value": "resolution",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "start_at",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "symbol",
              "value": {
                "value": {
                  "value": "symbol",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List available markets summary",
      "audiences": [],
      "operationId": "get-markets-summary",
      "tags": [
        "Markets"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "End Time (unix time millisecond)",
          "name": "end",
          "schema": {
            "generatedName": "GetMarketsSummaryRequestEnd",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetMarketsSummaryRequestEnd",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Name of the market for which summary is requested (for all available markets use ALL)",
          "name": "market",
          "schema": {
            "schema": {
              "example": "BTC-USD-PERP",
              "type": "string"
            },
            "generatedName": "GetMarketsSummaryRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start",
          "schema": {
            "generatedName": "GetMarketsSummaryRequestStart",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetMarketsSummaryRequestStart",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetMarketsSummaryRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetMarketsSummaryResponse",
          "schema": "responses.GetMarketSummary",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get markets dynamic data component\n",
      "authed": false,
      "method": "GET",
      "path": "/markets/summary",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "ask": {
                          "value": {
                            "value": "30130.15",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "ask_iv": {
                          "value": {
                            "value": "0.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "bid": {
                          "value": {
                            "value": "30112.22",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "bid_iv": {
                          "value": {
                            "value": "0.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "delta": {
                          "value": {
                            "value": "1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "funding_rate": {
                          "value": {
                            "value": "0.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "future_funding_rate": {
                          "value": {
                            "value": "0.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "greeks": {
                          "properties": {
                            "delta": {
                              "value": {
                                "value": "1",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "gamma": {
                              "value": {
                                "value": "0.2",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "vega": {
                              "value": {
                                "value": "0.2",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "last_iv": {
                          "value": {
                            "value": "0.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_traded_price": {
                          "value": {
                            "value": "30109.53",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mark_iv": {
                          "value": {
                            "value": "0.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "mark_price": {
                          "value": {
                            "value": "29799.70877478",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "open_interest": {
                          "value": {
                            "value": "6100048.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price_change_rate_24h": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "symbol": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "total_volume": {
                          "value": {
                            "value": "141341.0424",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "underlying_price": {
                          "value": {
                            "value": "29876.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "volume_24h": {
                          "value": {
                            "value": "47041.0424",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Onboarding",
      "audiences": [],
      "operationId": "onboarding",
      "tags": [
        "Authentication"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Ethereum account used to onboard",
          "name": "PARADEX-ETHEREUM-ACCOUNT",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OnboardingRequestParadexEthereumAccount",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Starknet address",
          "name": "PARADEX-STARKNET-ACCOUNT",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OnboardingRequestParadexStarknetAccount",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Starknet signature",
          "name": "PARADEX-STARKNET-SIGNATURE",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OnboardingRequestParadexStarknetSignature",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "OnboardingRequest",
      "request": {
        "schema": {
          "generatedName": "OnboardingRequestBody",
          "schema": "requests.Onboarding",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Onboarding verifies that the caller owns the StarkNet address and enters them\ninto the database. This call is idempotent.\n",
      "authed": false,
      "method": "POST",
      "path": "/onboarding",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "PARADEX-ETHEREUM-ACCOUNT",
              "value": {
                "value": {
                  "value": "PARADEX-ETHEREUM-ACCOUNT",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-STARKNET-ACCOUNT",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-ACCOUNT",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-STARKNET-SIGNATURE",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-SIGNATURE",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {},
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get market orderbook",
      "audiences": [],
      "operationId": "get-orderbook",
      "tags": [
        "Markets"
      ],
      "pathParameters": [
        {
          "description": "Market symbol - ex: BTC-USD-PERP",
          "name": "market",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "GetOrderbookRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Depth",
          "name": "depth",
          "schema": {
            "generatedName": "GetOrderbookRequestDepth",
            "value": {
              "schema": {
                "default": 20,
                "type": "int"
              },
              "generatedName": "GetOrderbookRequestDepth",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetOrderbookRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetOrderbookResponse",
          "schema": "responses.AskBidArray",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get snapshot of the orderbook for the given market\n",
      "authed": false,
      "method": "GET",
      "path": "/orderbook/{market}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "market",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "asks": {
                  "value": [
                    {
                      "value": [
                        {
                          "value": {
                            "value": "asks",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                },
                "bids": {
                  "value": [
                    {
                      "value": [
                        {
                          "value": {
                            "value": "bids",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681462770114,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "ETH-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "seq_no": {
                  "value": {
                    "value": 20784,
                    "type": "int"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get open orders",
      "audiences": [],
      "operationId": "get-open-orders",
      "tags": [
        "Orders"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Market symbol, ex: BTC-USD-PERP",
          "name": "market",
          "schema": {
            "generatedName": "GetOpenOrdersRequestMarket",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetOpenOrdersRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetOpenOrdersRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetOpenOrdersResponse",
          "schema": "responses.GetOpenOrders",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get current user all open orders\n",
      "authed": true,
      "method": "GET",
      "path": "/orders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "avg_fill_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cancel_reason": {
                          "value": {
                            "value": "NOT_ENOUGH_MARGIN",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "client_id": {
                          "value": {
                            "value": "x1234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "flags": {
                          "value": [
                            {
                              "value": "REDUCE_ONLY",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "id": {
                          "value": {
                            "value": "123456",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "instruction": {
                          "value": "GTC",
                          "type": "enum"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "published_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "received_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "remaining_size": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "seq_no": {
                          "value": {
                            "value": 1681471234972000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "NEW",
                          "type": "enum"
                        },
                        "stp": {
                          "value": "EXPIRE_MAKER",
                          "type": "enum"
                        },
                        "timestamp": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "trigger_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "MARKET",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create order",
      "audiences": [],
      "operationId": "orders-new",
      "tags": [
        "Orders"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "OrdersNewRequest",
      "request": {
        "schema": {
          "generatedName": "OrdersNewRequest",
          "schema": "requests.OrderRequest",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "OrdersNewResponse",
          "schema": "responses.OrderResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Open a new order\n",
      "authed": true,
      "method": "POST",
      "path": "/orders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "instruction": {
                "value": {
                  "value": "instruction",
                  "type": "string"
                },
                "type": "primitive"
              },
              "market": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              },
              "price": {
                "value": {
                  "value": "29500.12",
                  "type": "string"
                },
                "type": "primitive"
              },
              "side": {
                "value": "BUY",
                "type": "enum"
              },
              "signature": {
                "value": {
                  "value": "signature",
                  "type": "string"
                },
                "type": "primitive"
              },
              "signature_timestamp": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              },
              "size": {
                "value": {
                  "value": "1.213",
                  "type": "string"
                },
                "type": "primitive"
              },
              "type": {
                "value": "MARKET",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "avg_fill_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cancel_reason": {
                  "value": {
                    "value": "NOT_ENOUGH_MARGIN",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "client_id": {
                  "value": {
                    "value": "x1234",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "flags": {
                  "value": [
                    {
                      "value": "REDUCE_ONLY",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "123456",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "instruction": {
                  "value": "GTC",
                  "type": "enum"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "BTC-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "published_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "received_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "remaining_size": {
                  "value": {
                    "value": "0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "seq_no": {
                  "value": {
                    "value": 1681471234972000000,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "side": {
                  "value": "BUY",
                  "type": "enum"
                },
                "size": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "NEW",
                  "type": "enum"
                },
                "stp": {
                  "value": "EXPIRE_MAKER",
                  "type": "enum"
                },
                "timestamp": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "trigger_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "MARKET",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancel all open orders",
      "audiences": [],
      "operationId": "orders-cancel-all",
      "tags": [
        "Orders"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Market to cancel orders for",
          "name": "market",
          "schema": {
            "generatedName": "OrdersCancelAllRequestMarket",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "OrdersCancelAllRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "OrdersCancelAllRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/orders",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get orders",
      "audiences": [],
      "operationId": "get-orders",
      "tags": [
        "Orders"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Unique ID of client generating the order",
          "name": "client_id",
          "schema": {
            "generatedName": "GetOrdersRequestClientId",
            "value": {
              "schema": {
                "example": "client-id",
                "type": "string"
              },
              "generatedName": "GetOrdersRequestClientId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetOrdersRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetOrdersRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetOrdersRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetOrdersRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Market for the order",
          "name": "market",
          "schema": {
            "generatedName": "GetOrdersRequestMarket",
            "value": {
              "schema": {
                "example": "BTC-USD-PERP",
                "type": "string"
              },
              "generatedName": "GetOrdersRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetOrdersRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetOrdersRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Order side",
          "name": "side",
          "schema": {
            "generatedName": "GetOrdersRequestSide",
            "value": {
              "generatedName": "GetOrdersRequestSide",
              "values": [
                {
                  "generatedName": "BUY",
                  "value": "BUY",
                  "casing": {}
                },
                {
                  "generatedName": "SELL",
                  "value": "SELL",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetOrdersRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetOrdersRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Order status",
          "name": "status",
          "schema": {
            "generatedName": "GetOrdersRequestStatus",
            "value": {
              "generatedName": "GetOrdersRequestStatus",
              "values": [
                {
                  "generatedName": "OPEN",
                  "value": "OPEN",
                  "casing": {}
                },
                {
                  "generatedName": "CLOSED",
                  "value": "CLOSED",
                  "casing": {}
                },
                {
                  "generatedName": "NEW",
                  "value": "NEW",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Order type",
          "name": "type",
          "schema": {
            "generatedName": "GetOrdersRequestType",
            "value": {
              "generatedName": "GetOrdersRequestType",
              "values": [
                {
                  "generatedName": "LIMIT",
                  "value": "LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "MARKET",
                  "value": "MARKET",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_LIMIT",
                  "value": "STOP_LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_MARKET",
                  "value": "STOP_MARKET",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_LOSS_LIMIT",
                  "value": "STOP_LOSS_LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "STOP_LOSS_MARKET",
                  "value": "STOP_LOSS_MARKET",
                  "casing": {}
                },
                {
                  "generatedName": "TAKE_PROFIT_LIMIT",
                  "value": "TAKE_PROFIT_LIMIT",
                  "casing": {}
                },
                {
                  "generatedName": "TAKE_PROFIT_MARKET",
                  "value": "TAKE_PROFIT_MARKET",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetOrdersRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetOrdersResponse",
          "schema": "responses.GetOrders",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get current user orders filtered on attributes\n",
      "authed": true,
      "method": "GET",
      "path": "/orders-history",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "client_id",
              "value": {
                "value": {
                  "value": "client-id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "avg_fill_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cancel_reason": {
                          "value": {
                            "value": "NOT_ENOUGH_MARGIN",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "client_id": {
                          "value": {
                            "value": "x1234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "flags": {
                          "value": [
                            {
                              "value": "REDUCE_ONLY",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "id": {
                          "value": {
                            "value": "123456",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "instruction": {
                          "value": "GTC",
                          "type": "enum"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "published_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "received_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "remaining_size": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "seq_no": {
                          "value": {
                            "value": 1681471234972000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "NEW",
                          "type": "enum"
                        },
                        "stp": {
                          "value": "EXPIRE_MAKER",
                          "type": "enum"
                        },
                        "timestamp": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "trigger_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "MARKET",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create batch of orders",
      "audiences": [],
      "operationId": "orders-batch",
      "tags": [
        "Orders"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "OrdersBatchRequest",
      "request": {
        "schema": {
          "value": {
            "generatedName": "OrdersBatchRequestItem",
            "schema": "requests.OrderRequest",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "OrdersBatchRequest",
          "groupName": [],
          "type": "array"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "OrdersBatchResponse",
          "schema": "responses.BatchResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "[Experimental] Place a batch of orders<br>\n- Valid batch size is between 1-10 order(s)<br>\n- If basic validation(including signature) fails - all orders will be rejected.<br>\n- Orders are queued for risk checking independently and failure of one order doesn't affect processing of another order.\n",
      "authed": true,
      "method": "POST",
      "path": "/orders/batch",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": [
              {
                "properties": {
                  "instruction": {
                    "value": {
                      "value": "instruction",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "market": {
                    "value": {
                      "value": "BTC-USD-PERP",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "price": {
                    "value": {
                      "value": "29500.12",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "side": {
                    "value": "BUY",
                    "type": "enum"
                  },
                  "signature": {
                    "value": {
                      "value": "signature",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "signature_timestamp": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  },
                  "size": {
                    "value": {
                      "value": "1.213",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "type": {
                    "value": "MARKET",
                    "type": "enum"
                  }
                },
                "type": "object"
              }
            ],
            "type": "array"
          },
          "response": {
            "value": {
              "properties": {
                "errors": {
                  "value": [
                    {
                      "properties": {
                        "error": {
                          "value": "VALIDATION_ERROR",
                          "type": "enum"
                        },
                        "message": {
                          "value": {
                            "value": "message",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "orders": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "avg_fill_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cancel_reason": {
                          "value": {
                            "value": "NOT_ENOUGH_MARGIN",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "client_id": {
                          "value": {
                            "value": "x1234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "flags": {
                          "value": [
                            {
                              "value": "REDUCE_ONLY",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "id": {
                          "value": {
                            "value": "123456",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "instruction": {
                          "value": "GTC",
                          "type": "enum"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "published_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "received_at": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "remaining_size": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "seq_no": {
                          "value": {
                            "value": 1681471234972000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.05",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "NEW",
                          "type": "enum"
                        },
                        "stp": {
                          "value": "EXPIRE_MAKER",
                          "type": "enum"
                        },
                        "timestamp": {
                          "value": {
                            "value": 1681493746016,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "trigger_price": {
                          "value": {
                            "value": "26000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "MARKET",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get order by client id",
      "audiences": [],
      "operationId": "orders-get-by-client-id",
      "tags": [
        "Orders"
      ],
      "pathParameters": [
        {
          "description": "Client Order Id",
          "name": "client_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OrdersGetByClientIdRequestClientId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "OrdersGetByClientIdRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "OrdersGetByClientIdResponse",
          "schema": "responses.OrderResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get an order by client id. Only returns orders in `OPEN` status.\n",
      "authed": true,
      "method": "GET",
      "path": "/orders/by_client_id/{client_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "client_id",
              "value": {
                "value": {
                  "value": "client_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "avg_fill_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cancel_reason": {
                  "value": {
                    "value": "NOT_ENOUGH_MARGIN",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "client_id": {
                  "value": {
                    "value": "x1234",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "flags": {
                  "value": [
                    {
                      "value": "REDUCE_ONLY",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "123456",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "instruction": {
                  "value": "GTC",
                  "type": "enum"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "BTC-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "published_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "received_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "remaining_size": {
                  "value": {
                    "value": "0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "seq_no": {
                  "value": {
                    "value": 1681471234972000000,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "side": {
                  "value": "BUY",
                  "type": "enum"
                },
                "size": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "NEW",
                  "type": "enum"
                },
                "stp": {
                  "value": "EXPIRE_MAKER",
                  "type": "enum"
                },
                "timestamp": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "trigger_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "MARKET",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancel open order by client order id",
      "audiences": [],
      "operationId": "orders-cancel-by-client-id",
      "tags": [
        "Orders"
      ],
      "pathParameters": [
        {
          "description": "Client Order Id",
          "name": "client_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OrdersCancelByClientIdRequestClientId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "OrdersCancelByClientIdRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "DELETE",
      "path": "/orders/by_client_id/{client_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "client_id",
              "value": {
                "value": {
                  "value": "client_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get order",
      "audiences": [],
      "operationId": "orders-get",
      "tags": [
        "Orders"
      ],
      "pathParameters": [
        {
          "description": "Order Id",
          "name": "order_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OrdersGetRequestOrderId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "OrdersGetRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "OrdersGetResponse",
          "schema": "responses.OrderResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get an order by id. Only return orders in `OPEN` or `NEW` status.\n",
      "authed": true,
      "method": "GET",
      "path": "/orders/{order_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "order_id",
              "value": {
                "value": {
                  "value": "order_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "account": {
                  "value": {
                    "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "avg_fill_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "cancel_reason": {
                  "value": {
                    "value": "NOT_ENOUGH_MARGIN",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "client_id": {
                  "value": {
                    "value": "x1234",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "flags": {
                  "value": [
                    {
                      "value": "REDUCE_ONLY",
                      "type": "enum"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "123456",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "instruction": {
                  "value": "GTC",
                  "type": "enum"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "market": {
                  "value": {
                    "value": "BTC-USD-PERP",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "published_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "received_at": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "remaining_size": {
                  "value": {
                    "value": "0",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "seq_no": {
                  "value": {
                    "value": 1681471234972000000,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "side": {
                  "value": "BUY",
                  "type": "enum"
                },
                "size": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "NEW",
                  "type": "enum"
                },
                "stp": {
                  "value": "EXPIRE_MAKER",
                  "type": "enum"
                },
                "timestamp": {
                  "value": {
                    "value": 1681493746016,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "trigger_price": {
                  "value": {
                    "value": "26000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "type": {
                  "value": "MARKET",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Cancel order",
      "audiences": [],
      "operationId": "orders-cancel",
      "tags": [
        "Orders"
      ],
      "pathParameters": [
        {
          "description": "Order Id",
          "name": "order_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "OrdersCancelRequestOrderId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "OrdersCancelRequest",
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Cancel an existing order\n",
      "authed": true,
      "method": "DELETE",
      "path": "/orders/{order_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "order_id",
              "value": {
                "value": {
                  "value": "order_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List open positions",
      "audiences": [],
      "operationId": "get-positions",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetPositionsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetPositionsResponse",
          "schema": "responses.GetPositionsResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get all positions owned by current user\n",
      "authed": true,
      "method": "GET",
      "path": "/positions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "average_entry_price": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "average_entry_price_usd": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "average_exit_price": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cached_funding_index": {
                          "value": {
                            "value": "1234.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "closed_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "cost": {
                          "value": {
                            "value": "-10005.4623",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cost_usd": {
                          "value": {
                            "value": "-10005.4623",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "1234234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_fill_id": {
                          "value": {
                            "value": "1234234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "leverage": {
                          "value": {
                            "value": "leverage",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "liquidation_price": {
                          "value": {
                            "value": "liquidation_price",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_positional_funding_pnl": {
                          "value": {
                            "value": "realized_positional_funding_pnl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_positional_pnl": {
                          "value": {
                            "value": "realized_positional_pnl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "seq_no": {
                          "value": {
                            "value": 1681471234972000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "SHORT",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "-0.345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "OPEN",
                          "type": "enum"
                        },
                        "unrealized_funding_pnl": {
                          "value": {
                            "value": "12.234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "unrealized_pnl": {
                          "value": {
                            "value": "-123.23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List closed positions history",
      "audiences": [],
      "operationId": "get-positions-with-filter",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetPositionsWithFilterRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetPositionsWithFilterRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetPositionsWithFilterRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetPositionsWithFilterRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "name": "market",
          "schema": {
            "generatedName": "GetPositionsWithFilterRequestMarket",
            "value": {
              "schema": {
                "example": "BTC-USD-PERP",
                "type": "string"
              },
              "generatedName": "GetPositionsWithFilterRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetPositionsWithFilterRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetPositionsWithFilterRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "name": "side",
          "schema": {
            "generatedName": "GetPositionsWithFilterRequestSide",
            "value": {
              "generatedName": "GetPositionsWithFilterRequestSide",
              "values": [
                {
                  "generatedName": "LONG",
                  "value": "LONG",
                  "casing": {}
                },
                {
                  "generatedName": "SHORT",
                  "value": "SHORT",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetPositionsWithFilterRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetPositionsWithFilterRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetPositionsWithFilterRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetPositionsWithFilterResponse",
          "schema": "responses.GetPositionsHistoryResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get all positions owned by current user\n",
      "authed": true,
      "method": "GET",
      "path": "/positions-history",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "average_entry_price": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "average_entry_price_usd": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "average_exit_price": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cached_funding_index": {
                          "value": {
                            "value": "1234.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "closed_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "cost": {
                          "value": {
                            "value": "-10005.4623",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cost_usd": {
                          "value": {
                            "value": "-10005.4623",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "1234234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_fill_id": {
                          "value": {
                            "value": "1234234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "leverage": {
                          "value": {
                            "value": "leverage",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "liquidation_price": {
                          "value": {
                            "value": "liquidation_price",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_positional_funding_pnl": {
                          "value": {
                            "value": "realized_positional_funding_pnl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_positional_pnl": {
                          "value": {
                            "value": "realized_positional_pnl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "seq_no": {
                          "value": {
                            "value": 1681471234972000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "SHORT",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "-0.345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "OPEN",
                          "type": "enum"
                        },
                        "unrealized_funding_pnl": {
                          "value": {
                            "value": "12.234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "unrealized_pnl": {
                          "value": {
                            "value": "-123.23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get referral config",
      "audiences": [],
      "operationId": "get-referral-config",
      "tags": [
        "Referrals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetReferralConfigRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetReferralConfigResponse",
          "schema": "responses.GetReferralConfig",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get referral program config data\n",
      "authed": false,
      "method": "GET",
      "path": "/referrals/config",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "commission_rate": {
                          "value": {
                            "value": "0.1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "commission_volume_cap": {
                          "value": {
                            "value": "1000000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "discount_rate": {
                          "value": {
                            "value": "0.1",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "discount_volume_cap": {
                          "value": {
                            "value": "30000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "minimum_volume": {
                          "value": {
                            "value": "0.123",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referral_type": {
                          "value": {
                            "value": "Referral",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get Referral QR Code",
      "audiences": [],
      "operationId": "get-referral-qr-code",
      "tags": [
        "Referrals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetReferralQrCodeRequest",
      "response": {
        "description": "QR code image",
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Returns a QR code image containing the user's referral link",
      "authed": true,
      "method": "GET",
      "path": "/referrals/qr-code",
      "examples": [],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get account referral details",
      "audiences": [],
      "operationId": "get-referrals-summary",
      "tags": [
        "Referrals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetReferralsSummaryRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetReferralsSummaryResponse",
          "schema": "responses.GetReferrals",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Unauthorized",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get latest referee data for requester's account\n",
      "authed": true,
      "method": "GET",
      "path": "/referrals/summary",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "address": {
                          "value": {
                            "value": "address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1715592690488,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "referral_code": {
                          "value": {
                            "value": "maxdegen01",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "referral_rewards": {
                          "value": {
                            "value": "0.123",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "volume_traded": {
                          "value": {
                            "value": "0.123",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get system config",
      "audiences": [],
      "tags": [
        "System"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSystemConfigRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetSystemConfigResponse",
          "schema": "responses.SystemConfigResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get clearing and settlement layer config for Paradex\n",
      "authed": false,
      "method": "GET",
      "path": "/system/config",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "block_explorer_url": {
                  "value": {
                    "value": "https://voyager.testnet.paradex.trade/",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bridged_tokens": {
                  "value": [
                    {
                      "properties": {
                        "decimals": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "l1_bridge_address": {
                          "value": {
                            "value": "l1_bridge_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "l1_token_address": {
                          "value": {
                            "value": "l1_token_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "l2_bridge_address": {
                          "value": {
                            "value": "l2_bridge_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "l2_token_address": {
                          "value": {
                            "value": "l2_token_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "symbol": {
                          "value": {
                            "value": "symbol",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "environment": {
                  "value": {
                    "value": "local",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "l1_chain_id": {
                  "value": {
                    "value": "5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "l1_core_contract_address": {
                  "value": {
                    "value": "0x182FE62c57461d4c5Ab1aE6F04f1D51aA1607daf",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "l1_operator_address": {
                  "value": {
                    "value": "0x63e762538C70442758Fd622116d817761c94FD6A",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "l1_withdraw_relayer_address": {
                  "value": {
                    "value": "0x63e762538C70442758Fd622116d817761c94FD6A",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "l2_withdraw_relayer_address": {
                  "value": {
                    "value": "0x63e762538C70442758Fd622116d817761c94FD6A",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "liquidation_fee": {
                  "value": {
                    "value": "0.20",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "oracle_address": {
                  "value": {
                    "value": "0x47c622ce5f7ff7fa17725df596f4f506364e49be0621eb142a75b44ee3689c6",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "paraclear_account_hash": {
                  "value": {
                    "value": "0x033434ad846cdd5f23eb73ff09fe6fddd568284a0fb7d1be20ee482f044dabe2",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "paraclear_account_proxy_hash": {
                  "value": {
                    "value": "0x3530cc4759d78042f1b543bf797f5f3d647cde0388c33734cf91b7f7b9314a9",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "paraclear_address": {
                  "value": {
                    "value": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7554d",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "paraclear_decimals": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "partial_liquidation_buffer": {
                  "value": {
                    "value": "0.2",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "partial_liquidation_share_increment": {
                  "value": {
                    "value": "0.05",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "starknet_chain_id": {
                  "value": {
                    "value": "SN_CHAIN_ID",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "starknet_fullnode_rpc_url": {
                  "value": {
                    "value": "https://pathfinder.api.testnet.paradex.trade/rpc/v0_7",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "starknet_gateway_url": {
                  "value": {
                    "value": "https://potc-testnet-02.starknet.io",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "universal_deployer_address": {
                  "value": {
                    "value": "0x1f3f9d3f1f0b7f3f9f3f9f3f9f3f9f3f9f3f9f3f",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get system state",
      "audiences": [],
      "tags": [
        "System"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSystemStateRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetSystemStateResponse",
          "schema": "responses.SystemStateResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get the current state of the Paradex system\n",
      "authed": false,
      "method": "GET",
      "path": "/system/state",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "status": {
                  "value": "ok",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get system time (unix milliseconds)",
      "audiences": [],
      "tags": [
        "System"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GetSystemTimeRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetSystemTimeResponse",
          "schema": "responses.SystemTimeResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get the current time in the Paradex\n",
      "authed": false,
      "method": "GET",
      "path": "/system/time",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "server_time": {
                  "value": {
                    "value": "1681493415023",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List tradebusts",
      "audiences": [],
      "operationId": "tradebusts",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "TradebustsRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TradebustsRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "TradebustsRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TradebustsRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "TradebustsRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "TradebustsRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "TradebustsRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TradebustsRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TradebustsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "TradebustsResponse",
          "schema": "responses.GetTradebustsResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieves a list of tradebusts associated to the requester's account\n",
      "authed": true,
      "method": "GET",
      "path": "/tradebusts",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "busted_fill_id": {
                          "value": {
                            "value": "12342345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681497002041,
                            "type": "int"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Trade tape",
      "audiences": [],
      "operationId": "trades",
      "tags": [
        "Trades"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "TradesRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TradesRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "TradesRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TradesRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Market name",
          "name": "market",
          "schema": {
            "schema": {
              "example": "BTC-USD-PERP",
              "type": "string"
            },
            "generatedName": "TradesRequestMarket",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "TradesRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "TradesRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "TradesRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TradesRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TradesRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "TradesResponse",
          "schema": "responses.GetTradesResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "List trades that happened on a given market (trade tape).\n",
      "authed": false,
      "method": "GET",
      "path": "/trades",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "market",
              "value": {
                "value": {
                  "value": "BTC-USD-PERP",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "created_at": {
                          "value": {
                            "value": 1681497002041,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "12345643",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "price": {
                          "value": {
                            "value": "30001.2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "BUY",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "0.01",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "trade_type": {
                          "value": {
                            "value": "FILL",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List transactions",
      "audiences": [],
      "operationId": "transactions",
      "tags": [
        "Account"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "TransactionsRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TransactionsRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "TransactionsRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TransactionsRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "TransactionsRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "TransactionsRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "TransactionsRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TransactionsRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TransactionsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "TransactionsResponse",
          "schema": "responses.GetTransactionResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieves a list of transactions initiated by the user\n",
      "authed": true,
      "method": "GET",
      "path": "/transactions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "completed_at": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "hash": {
                          "value": {
                            "value": "0x445c05d6bfb899e39338440d199971c4d7f4cde7878ed3888df3f716efb8df2",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "12342423",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "ACCEPTED_ON_L1",
                          "type": "enum"
                        },
                        "type": {
                          "value": "TRANSACTION_FILL",
                          "type": "enum"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "List account's transfers, i.e. deposits and withdrawals",
      "audiences": [],
      "operationId": "get-transfers",
      "tags": [
        "Transfers"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Returns the ‘next’ paginated page.",
          "name": "cursor",
          "schema": {
            "generatedName": "GetTransfersRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "GetTransfersRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "End Time (unix time millisecond)",
          "name": "end_at",
          "schema": {
            "generatedName": "GetTransfersRequestEndAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetTransfersRequestEndAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Limit the number of responses in the page",
          "name": "page_size",
          "schema": {
            "generatedName": "GetTransfersRequestPageSize",
            "value": {
              "schema": {
                "default": 100,
                "minimum": 1,
                "maximum": 5000,
                "type": "int"
              },
              "generatedName": "GetTransfersRequestPageSize",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Start Time (unix time millisecond)",
          "name": "start_at",
          "schema": {
            "generatedName": "GetTransfersRequestStartAt",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GetTransfersRequestStartAt",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "name": "status",
          "schema": {
            "generatedName": "GetTransfersRequestStatus",
            "value": {
              "generatedName": "GetTransfersRequestStatus",
              "values": [
                {
                  "generatedName": "PENDING",
                  "value": "PENDING",
                  "casing": {}
                },
                {
                  "generatedName": "AVAILABLE",
                  "value": "AVAILABLE",
                  "casing": {}
                },
                {
                  "generatedName": "COMPLETED",
                  "value": "COMPLETED",
                  "casing": {}
                },
                {
                  "generatedName": "FAILED",
                  "value": "FAILED",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "enum"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "GetTransfersRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "GetTransfersResponse",
          "schema": "responses.GetTransfersResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "authed": true,
      "method": "GET",
      "path": "/transfers",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next": {
                  "value": {
                    "value": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev": {
                  "value": {
                    "value": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": "100",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "auto_withdrawal_fee": {
                          "value": {
                            "value": "4.5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "bridge": {
                          "value": "",
                          "type": "enum"
                        },
                        "counterparty": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681497002041,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "direction": {
                          "value": "IN",
                          "type": "enum"
                        },
                        "external_account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "external_chain": {
                          "value": {
                            "value": "ETHEREUM",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "external_txn_hash": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "failure_reason": {
                          "value": {
                            "value": "Gas fee too low",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "123456789",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "kind": {
                          "value": "DEPOSIT",
                          "type": "enum"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681497002041,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "socialized_loss_factor": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "PENDING",
                          "type": "enum"
                        },
                        "token": {
                          "value": {
                            "value": "USDC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "txn_hash": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vault_address": {
                          "value": {
                            "value": "0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vault_unwind_completion_percentage": {
                          "value": {
                            "value": "0.35",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vaults",
      "audiences": [],
      "operationId": "vaults-get",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "generatedName": "VaultsGetRequestAddress",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "VaultsGetRequestAddress",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetResponse",
          "schema": "responses.GetVaultsResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get list of available vaults.\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "address": {
                          "value": {
                            "value": "0x1234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1517171717,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "My description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "kind": {
                          "value": "user",
                          "type": "enum"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1617171717,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "lockup_period": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "max_tvl": {
                          "value": {
                            "value": 1000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "MyVault",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "operator_account": {
                          "value": {
                            "value": "0x1234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "owner_account": {
                          "value": {
                            "value": "0x0234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "profit_share": {
                          "value": {
                            "value": 10,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "INITIALIZING",
                          "type": "enum"
                        },
                        "strategies": {
                          "value": [
                            {
                              "properties": {
                                "address": {
                                  "value": {
                                    "value": "0x1234567890abcdef",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "Alpha Strategy",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        },
                        "token_address": {
                          "value": {
                            "value": "token_address",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Create vault",
      "audiences": [],
      "operationId": "vaults-create",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [
        {
          "description": "Onboarded by prdx:0xa123456789",
          "name": "PARADEX-PARENT-ACCOUNT",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsCreateRequestParadexParentAccount",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Starknet signature",
          "name": "PARADEX-STARKNET-SIGNATURE",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsCreateRequestParadexStarknetSignature",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Starknet address",
          "name": "PARADEX-STARKNET-ACCOUNT",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsCreateRequestParadexStarknetAccount",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Account derivation path - m/44'/9004'/0'/0/1",
          "name": "PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsCreateRequestParadexStarknetAccountDerivationPath",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "generatedRequestName": "VaultsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "VaultsCreateRequestBody",
          "schema": "requests.CreateVault",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Created",
        "schema": {
          "generatedName": "VaultsCreateResponse",
          "schema": "responses.VaultResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Create a new vault by providing deployment parameters.Current user will\nbe set as owner of the account and a new sub-account will be deployed as\nvault operator.\n",
      "authed": false,
      "method": "POST",
      "path": "/vaults",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": "PARADEX-PARENT-ACCOUNT",
              "value": {
                "value": {
                  "value": "PARADEX-PARENT-ACCOUNT",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-STARKNET-SIGNATURE",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-SIGNATURE",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-STARKNET-ACCOUNT",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-ACCOUNT",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH",
              "value": {
                "value": {
                  "value": "PARADEX-STARKNET-ACCOUNT-DERIVATION-PATH",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "address": {
                  "value": {
                    "value": "0x1234567890abcdef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created_at": {
                  "value": {
                    "value": 1517171717,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "description": {
                  "value": {
                    "value": "My description",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "kind": {
                  "value": "user",
                  "type": "enum"
                },
                "last_updated_at": {
                  "value": {
                    "value": 1617171717,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "lockup_period": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "max_tvl": {
                  "value": {
                    "value": 1000000,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "MyVault",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "operator_account": {
                  "value": {
                    "value": "0x1234567890abcdef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "owner_account": {
                  "value": {
                    "value": "0x0234567890abcdef",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "profit_share": {
                  "value": {
                    "value": 10,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "INITIALIZING",
                  "type": "enum"
                },
                "strategies": {
                  "value": [
                    {
                      "properties": {
                        "address": {
                          "value": {
                            "value": "0x1234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "Alpha Strategy",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "token_address": {
                  "value": {
                    "value": "token_address",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vault account summary",
      "audiences": [],
      "operationId": "vaults-get-account-summary",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "generatedName": "VaultsGetAccountSummaryRequestAddress",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "VaultsGetAccountSummaryRequestAddress",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetAccountSummaryRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetAccountSummaryResponse",
          "schema": "responses.GetVaultAccountSummariesResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get current user summary metrics for all vaults or for the single vault\nspecified by address. User metrics are only returned if the current user\nis a depositor for the vault.\n",
      "authed": true,
      "method": "GET",
      "path": "/vaults/account-summary",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "address": {
                          "value": {
                            "value": "0x1234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1717171717,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "deposited_amount": {
                          "value": {
                            "value": "123.45",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "total_pnl": {
                          "value": {
                            "value": "149.12",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "total_roi": {
                          "value": {
                            "value": "0.724",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vtoken_amount": {
                          "value": {
                            "value": "123.45",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vault balances",
      "audiences": [],
      "operationId": "vaults-get-balance",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsGetBalanceRequestAddress",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Vault Strategy Address",
          "name": "strategy",
          "schema": {
            "generatedName": "VaultsGetBalanceRequestStrategy",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "VaultsGetBalanceRequestStrategy",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetBalanceRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetBalanceResponse",
          "schema": "responses.GetBalancesResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get spot balance of a vault\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults/balance",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "address",
              "value": {
                "value": {
                  "value": "address",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "last_updated_at": {
                          "value": {
                            "value": 1681462770114,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "size": {
                          "value": {
                            "value": "123003.620",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "token": {
                          "value": {
                            "value": "USDC",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vaults config",
      "audiences": [],
      "operationId": "vaults-get-config",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "VaultsGetConfigRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetConfigResponse",
          "schema": "responses.VaultsConfigResponse",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get vaults global configuration.\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults/config",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "max_lockup_period_days": {
                  "value": {
                    "value": "4",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "max_profit_share_percentage": {
                  "value": {
                    "value": "50",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "min_initial_deposit": {
                  "value": {
                    "value": "1000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "min_lockup_period_days": {
                  "value": {
                    "value": "1",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "min_owner_share_percentage": {
                  "value": {
                    "value": "5",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "vault_factory_address": {
                  "value": {
                    "value": "0x1234567890abcdef",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vault historical data",
      "audiences": [],
      "operationId": "vaults-get-historical-data",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsGetHistoricalDataRequestAddress",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Vault Strategy Address",
          "name": "strategy",
          "schema": {
            "generatedName": "VaultsGetHistoricalDataRequestStrategy",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "VaultsGetHistoricalDataRequestStrategy",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Type of data",
          "name": "type",
          "schema": {
            "generatedName": "VaultsGetHistoricalDataRequestType",
            "values": [
              {
                "generatedName": "pnl",
                "value": "pnl",
                "casing": {}
              },
              {
                "generatedName": "value",
                "value": "value",
                "casing": {}
              },
              {
                "generatedName": "price",
                "value": "price",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Resolution of data",
          "name": "resolution",
          "schema": {
            "generatedName": "VaultsGetHistoricalDataRequestResolution",
            "values": [
              {
                "generatedName": "alltime",
                "value": "alltime",
                "casing": {}
              },
              {
                "generatedName": "OneH",
                "value": "1h",
                "casing": {}
              },
              {
                "generatedName": "EightH",
                "value": "8h",
                "casing": {}
              }
            ],
            "groupName": [],
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetHistoricalDataRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetHistoricalDataResponse",
          "schema": "responses.GetVaultHistoricalDataResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get PnL and Account value historical timeseries for the given vault.\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults/history",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "address",
              "value": {
                "value": {
                  "value": "address",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "type",
              "value": {
                "value": "pnl",
                "type": "enum"
              }
            },
            {
              "name": "resolution",
              "value": {
                "value": "alltime",
                "type": "enum"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "address": {
                          "value": {
                            "value": "0x1234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": [
                            {
                              "value": {
                                "value": 1.1,
                                "type": "double"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "timestamps": {
                          "value": [
                            {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vault positions",
      "audiences": [],
      "operationId": "vaults-get-positions",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsGetPositionsRequestAddress",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        },
        {
          "description": "Vault Strategy Address",
          "name": "strategy",
          "schema": {
            "generatedName": "VaultsGetPositionsRequestStrategy",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "VaultsGetPositionsRequestStrategy",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetPositionsRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetPositionsResponse",
          "schema": "responses.VaultPositionsResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get positions opened by the given vault.\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults/positions",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "address",
              "value": {
                "value": {
                  "value": "address",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "average_entry_price": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "average_entry_price_usd": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "average_exit_price": {
                          "value": {
                            "value": "29001.34",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cached_funding_index": {
                          "value": {
                            "value": "1234.3",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "closed_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "cost": {
                          "value": {
                            "value": "-10005.4623",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "cost_usd": {
                          "value": {
                            "value": "-10005.4623",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "1234234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_fill_id": {
                          "value": {
                            "value": "1234234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681493939981,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "leverage": {
                          "value": {
                            "value": "leverage",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "liquidation_price": {
                          "value": {
                            "value": "liquidation_price",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "market": {
                          "value": {
                            "value": "BTC-USD-PERP",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_positional_funding_pnl": {
                          "value": {
                            "value": "realized_positional_funding_pnl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "realized_positional_pnl": {
                          "value": {
                            "value": "realized_positional_pnl",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "seq_no": {
                          "value": {
                            "value": 1681471234972000000,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "side": {
                          "value": "SHORT",
                          "type": "enum"
                        },
                        "size": {
                          "value": {
                            "value": "-0.345",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "OPEN",
                          "type": "enum"
                        },
                        "unrealized_funding_pnl": {
                          "value": {
                            "value": "12.234",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "unrealized_pnl": {
                          "value": {
                            "value": "-123.23",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vault summary",
      "audiences": [],
      "operationId": "vaults-get-summary",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "generatedName": "VaultsGetSummaryRequestAddress",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "VaultsGetSummaryRequestAddress",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetSummaryRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetSummaryResponse",
          "schema": "responses.GetVaultSummariesResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get vaults summary metrics for all vaults or for the single vault specified by address.\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults/summary",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "address": {
                          "value": {
                            "value": "0x1234567890abcdef",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_month_return": {
                          "value": {
                            "value": "0.023",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_drawdown": {
                          "value": {
                            "value": "0.1916",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_drawdown_24h": {
                          "value": {
                            "value": "0.0138",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_drawdown_30d": {
                          "value": {
                            "value": "0.1821",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "max_drawdown_7d": {
                          "value": {
                            "value": "0.1124",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "net_deposits": {
                          "value": {
                            "value": "1000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "num_depositors": {
                          "value": {
                            "value": 100,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "owner_equity": {
                          "value": {
                            "value": "0.145",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pnl_24h": {
                          "value": {
                            "value": "13.41",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pnl_30d": {
                          "value": {
                            "value": "114.19",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "pnl_7d": {
                          "value": {
                            "value": "91.31",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roi_24h": {
                          "value": {
                            "value": "0.034",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roi_30d": {
                          "value": {
                            "value": "0.003",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "roi_7d": {
                          "value": {
                            "value": "0.123",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "total_pnl": {
                          "value": {
                            "value": "149.12",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "total_roi": {
                          "value": {
                            "value": "0.724",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "tvl": {
                          "value": {
                            "value": "1000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "volume": {
                          "value": {
                            "value": "12345678.16",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "volume_24h": {
                          "value": {
                            "value": "45678.16",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "volume_30d": {
                          "value": {
                            "value": "2345678.16",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "volume_7d": {
                          "value": {
                            "value": "345678.16",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vtoken_price": {
                          "value": {
                            "value": "1.23",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vtoken_supply": {
                          "value": {
                            "value": "1000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    },
    {
      "summary": "Get vault transfers",
      "audiences": [],
      "operationId": "vaults-get-transfers",
      "tags": [
        "Vaults"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Vault Address",
          "name": "address",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "VaultsGetTransfersRequestAddress",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "VaultsGetTransfersRequest",
      "response": {
        "description": "OK",
        "schema": {
          "generatedName": "VaultsGetTransfersResponse",
          "schema": "responses.VaultTransfersResp",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "responses.ApiError",
            "source": {
              "file": "../openapi.json",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "Bad Request",
          "source": {
            "file": "../openapi.json",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "message": {
                    "value": {
                      "value": "User has never called /onboarding endpoint",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Get deposits and withdrawals related to the given vault.\n",
      "authed": false,
      "method": "GET",
      "path": "/vaults/transfers",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "address",
              "value": {
                "value": {
                  "value": "address",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "amount": {
                          "value": {
                            "value": "100",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "auto_withdrawal_fee": {
                          "value": {
                            "value": "4.5",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "bridge": {
                          "value": "",
                          "type": "enum"
                        },
                        "counterparty": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "created_at": {
                          "value": {
                            "value": 1681497002041,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "direction": {
                          "value": "IN",
                          "type": "enum"
                        },
                        "external_account": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "external_chain": {
                          "value": {
                            "value": "ETHEREUM",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "external_txn_hash": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "failure_reason": {
                          "value": {
                            "value": "Gas fee too low",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "123456789",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "kind": {
                          "value": "DEPOSIT",
                          "type": "enum"
                        },
                        "last_updated_at": {
                          "value": {
                            "value": 1681497002041,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "socialized_loss_factor": {
                          "value": {
                            "value": "0",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "PENDING",
                          "type": "enum"
                        },
                        "token": {
                          "value": {
                            "value": "USDC",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "txn_hash": {
                          "value": {
                            "value": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vault_address": {
                          "value": {
                            "value": "0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "vault_unwind_completion_percentage": {
                          "value": {
                            "value": "0.35",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.json",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channels": {},
  "groupedSchemas": {
    "rootSchemas": {
      "message.AccountMarginConfig": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "messageAccountMarginConfigAccount",
            "key": "account",
            "schema": {
              "generatedName": "messageAccountMarginConfigAccount",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageAccountMarginConfigAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageAccountMarginConfigLeverage",
            "key": "leverage",
            "schema": {
              "generatedName": "messageAccountMarginConfigLeverage",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "MessageAccountMarginConfigLeverage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageAccountMarginConfigMarginType",
            "key": "margin_type",
            "schema": {
              "generatedName": "messageAccountMarginConfigMarginType",
              "value": {
                "generatedName": "MessageAccountMarginConfigMarginType",
                "schema": "message.MarginType",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "messageAccountMarginConfigMarket",
            "key": "market",
            "schema": {
              "generatedName": "messageAccountMarginConfigMarket",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageAccountMarginConfigMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MessageAccountMarginConfig",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "message.DiscordProfile": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "messageDiscordProfileId",
            "key": "id",
            "schema": {
              "generatedName": "messageDiscordProfileId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageDiscordProfileId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageDiscordProfileImageUrl",
            "key": "image_url",
            "schema": {
              "generatedName": "messageDiscordProfileImageUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageDiscordProfileImageUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageDiscordProfileUsername",
            "key": "username",
            "schema": {
              "generatedName": "messageDiscordProfileUsername",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageDiscordProfileUsername",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MessageDiscordProfile",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "message.MarginType": {
        "schema": {
          "type": "int"
        },
        "generatedName": "MessageMarginType",
        "groupName": [],
        "type": "primitive"
      },
      "message.OwnedNft": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "messageOwnedNftCollectionAddress",
            "key": "collection_address",
            "schema": {
              "generatedName": "messageOwnedNftCollectionAddress",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageOwnedNftCollectionAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageOwnedNftCollectionName",
            "key": "collection_name",
            "schema": {
              "generatedName": "messageOwnedNftCollectionName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageOwnedNftCollectionName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageOwnedNftDescription",
            "key": "description",
            "schema": {
              "generatedName": "messageOwnedNftDescription",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageOwnedNftDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageOwnedNftId",
            "key": "id",
            "schema": {
              "generatedName": "messageOwnedNftId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageOwnedNftId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageOwnedNftImageUrl",
            "key": "image_url",
            "schema": {
              "generatedName": "messageOwnedNftImageUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageOwnedNftImageUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageOwnedNftName",
            "key": "name",
            "schema": {
              "generatedName": "messageOwnedNftName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageOwnedNftName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MessageOwnedNft",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "message.TwitterProfile": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "messageTwitterProfileId",
            "key": "id",
            "schema": {
              "generatedName": "messageTwitterProfileId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageTwitterProfileId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageTwitterProfileImageUrl",
            "key": "image_url",
            "schema": {
              "generatedName": "messageTwitterProfileImageUrl",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageTwitterProfileImageUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "messageTwitterProfileUsername",
            "key": "username",
            "schema": {
              "generatedName": "messageTwitterProfileUsername",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "MessageTwitterProfileUsername",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "MessageTwitterProfile",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "requests.AccountMarginRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestsAccountMarginRequestLeverage",
            "key": "leverage",
            "schema": {
              "description": "Leverage value (1 up to market's maximum leverage)",
              "schema": {
                "example": 10,
                "type": "int"
              },
              "generatedName": "RequestsAccountMarginRequestLeverage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAccountMarginRequestMarginType",
            "key": "margin_type",
            "schema": {
              "description": "Margin type (CROSS or ISOLATED)",
              "schema": {
                "example": "CROSS",
                "type": "string"
              },
              "generatedName": "RequestsAccountMarginRequestMarginType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RequestsAccountMarginRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "requests.AlgoOrderRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestAlgoType",
            "key": "algo_type",
            "schema": {
              "description": "Algo type, required for algo orders creation",
              "schema": {
                "example": "TWAP",
                "type": "string"
              },
              "generatedName": "RequestsAlgoOrderRequestAlgoType",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestDurationSeconds",
            "key": "duration_seconds",
            "schema": {
              "description": "Duration in seconds for which the algo order will be running, required for algo orders creation",
              "schema": {
                "example": 3600,
                "type": "int"
              },
              "generatedName": "RequestsAlgoOrderRequestDurationSeconds",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestMarket",
            "key": "market",
            "schema": {
              "description": "Market for which order is created",
              "schema": {
                "example": "BTC-USD-PERP",
                "type": "string"
              },
              "generatedName": "RequestsAlgoOrderRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestSide",
            "key": "side",
            "schema": {
              "description": "Algo order side",
              "generatedName": "RequestsAlgoOrderRequestSide",
              "schema": "responses.OrderSide",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestSignature",
            "key": "signature",
            "schema": {
              "description": "Order Payload signed with STARK Private Key",
              "schema": {
                "type": "string"
              },
              "generatedName": "RequestsAlgoOrderRequestSignature",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestSignatureTimestamp",
            "key": "signature_timestamp",
            "schema": {
              "description": "Timestamp of order creation, used for signature verification",
              "schema": {
                "type": "int"
              },
              "generatedName": "RequestsAlgoOrderRequestSignatureTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestSize",
            "key": "size",
            "schema": {
              "description": "Size of the algo order",
              "schema": {
                "example": "1.213",
                "type": "string"
              },
              "generatedName": "RequestsAlgoOrderRequestSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsAlgoOrderRequestType",
            "key": "type",
            "schema": {
              "description": "Algo order type, only MARKET is supported",
              "generatedName": "RequestsAlgoOrderRequestType",
              "schema": "responses.OrderType",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RequestsAlgoOrderRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "requests.CreateVault": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultDepositTxSignature",
            "key": "deposit_tx_signature",
            "schema": {
              "generatedName": "requestsCreateVaultDepositTxSignature",
              "value": {
                "description": "Initial deposit transfer by vault owner",
                "schema": {
                  "example": "[",
                  "type": "string"
                },
                "generatedName": "RequestsCreateVaultDepositTxSignature",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultDescription",
            "key": "description",
            "schema": {
              "generatedName": "requestsCreateVaultDescription",
              "value": {
                "description": "Description for the vault",
                "schema": {
                  "example": "My vault description",
                  "type": "string"
                },
                "generatedName": "RequestsCreateVaultDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultLockupPeriod",
            "key": "lockup_period",
            "schema": {
              "generatedName": "requestsCreateVaultLockupPeriod",
              "value": {
                "description": "User's deposits lockup period in days",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "RequestsCreateVaultLockupPeriod",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultMaxTvl",
            "key": "max_tvl",
            "schema": {
              "generatedName": "requestsCreateVaultMaxTvl",
              "value": {
                "description": "Max TVL locked by the Vault, if any. 0 for unlimited",
                "schema": {
                  "example": 1000000,
                  "type": "int"
                },
                "generatedName": "RequestsCreateVaultMaxTvl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultName",
            "key": "name",
            "schema": {
              "generatedName": "requestsCreateVaultName",
              "value": {
                "description": "Unique name for the vault",
                "schema": {
                  "example": "MyVault",
                  "type": "string"
                },
                "generatedName": "RequestsCreateVaultName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultProfitShare",
            "key": "profit_share",
            "schema": {
              "generatedName": "requestsCreateVaultProfitShare",
              "value": {
                "description": "Vault owner profit share (percentage)",
                "schema": {
                  "example": 10,
                  "type": "int"
                },
                "generatedName": "RequestsCreateVaultProfitShare",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsCreateVaultPublicKey",
            "key": "public_key",
            "schema": {
              "generatedName": "requestsCreateVaultPublicKey",
              "value": {
                "description": "Public key of vault operator",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "RequestsCreateVaultPublicKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RequestsCreateVault",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "requests.Onboarding": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestsOnboardingPublicKey",
            "key": "public_key",
            "schema": {
              "generatedName": "requestsOnboardingPublicKey",
              "value": {
                "description": "Public key of the user being onboarded.",
                "schema": {
                  "example": "0x3d9f2b2e5f50c1aade60ca540368cd7490160f41270c192c05729fe35b656a9",
                  "type": "string"
                },
                "generatedName": "RequestsOnboardingPublicKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOnboardingReferralCode",
            "key": "referral_code",
            "schema": {
              "generatedName": "requestsOnboardingReferralCode",
              "value": {
                "description": "Referral code of the user who referred the user being onboarded.",
                "schema": {
                  "example": "cryptofox8",
                  "type": "string"
                },
                "generatedName": "RequestsOnboardingReferralCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RequestsOnboarding",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "requests.OrderRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "requestsOrderRequestClientId",
              "value": {
                "description": "Unique client assigned ID for the order",
                "schema": {
                  "maxLength": 64,
                  "example": "123454321",
                  "type": "string"
                },
                "generatedName": "RequestsOrderRequestClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestFlags",
            "key": "flags",
            "schema": {
              "generatedName": "requestsOrderRequestFlags",
              "value": {
                "description": "Order flags, allow flag: REDUCE_ONLY",
                "value": {
                  "generatedName": "RequestsOrderRequestFlagsItem",
                  "schema": "responses.OrderFlag",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "RequestsOrderRequestFlags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestInstruction",
            "key": "instruction",
            "schema": {
              "description": "Order Instruction, GTC, IOC or POST_ONLY if empty GTC",
              "schema": {
                "type": "string"
              },
              "generatedName": "RequestsOrderRequestInstruction",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestMarket",
            "key": "market",
            "schema": {
              "description": "Market for which order is created",
              "schema": {
                "example": "BTC-USD-PERP",
                "type": "string"
              },
              "generatedName": "RequestsOrderRequestMarket",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestPrice",
            "key": "price",
            "schema": {
              "description": "Order price",
              "schema": {
                "example": "29500.12",
                "type": "string"
              },
              "generatedName": "RequestsOrderRequestPrice",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestRecvWindow",
            "key": "recv_window",
            "schema": {
              "generatedName": "requestsOrderRequestRecvWindow",
              "value": {
                "description": "Order will be created if it is received by API within RecvWindow milliseconds from signature timestamp, minimum is 10 milliseconds",
                "schema": {
                  "type": "int"
                },
                "generatedName": "RequestsOrderRequestRecvWindow",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestSide",
            "key": "side",
            "schema": {
              "description": "Order side",
              "generatedName": "RequestsOrderRequestSide",
              "schema": "responses.OrderSide",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestSignature",
            "key": "signature",
            "schema": {
              "description": "Order Payload signed with STARK Private Key",
              "schema": {
                "type": "string"
              },
              "generatedName": "RequestsOrderRequestSignature",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestSignatureTimestamp",
            "key": "signature_timestamp",
            "schema": {
              "description": "Timestamp of order creation, used for signature verification",
              "schema": {
                "type": "int"
              },
              "generatedName": "RequestsOrderRequestSignatureTimestamp",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestSize",
            "key": "size",
            "schema": {
              "description": "Size of the order",
              "schema": {
                "example": "1.213",
                "type": "string"
              },
              "generatedName": "RequestsOrderRequestSize",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestStp",
            "key": "stp",
            "schema": {
              "generatedName": "requestsOrderRequestStp",
              "value": {
                "description": "Self Trade Prevention, EXPIRE_MAKER, EXPIRE_TAKER or EXPIRE_BOTH, if empty EXPIRE_TAKER",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestsOrderRequestStp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestTriggerPrice",
            "key": "trigger_price",
            "schema": {
              "generatedName": "requestsOrderRequestTriggerPrice",
              "value": {
                "description": "Trigger price for stop order",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RequestsOrderRequestTriggerPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "requestsOrderRequestType",
            "key": "type",
            "schema": {
              "description": "Order type",
              "generatedName": "RequestsOrderRequestType",
              "schema": "responses.OrderType",
              "groupName": [],
              "source": {
                "file": "../openapi.json",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RequestsOrderRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "requests.UpdateAccountMaxSlippageRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "requestsUpdateAccountMaxSlippageRequestMaxSlippage",
            "key": "max_slippage",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RequestsUpdateAccountMaxSlippageRequestMaxSlippage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RequestsUpdateAccountMaxSlippageRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AccountInfoResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesAccountInfoResponseAccount",
              "value": {
                "description": "Starknet address of the account",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountInfoResponseAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesAccountInfoResponseCreatedAt",
              "value": {
                "description": "Account creation time",
                "schema": {
                  "example": 1681471234972,
                  "type": "int"
                },
                "generatedName": "ResponsesAccountInfoResponseCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseDerivationPath",
            "key": "derivation_path",
            "schema": {
              "generatedName": "responsesAccountInfoResponseDerivationPath",
              "value": {
                "description": "Account derivation path used to derive the account, if a sub-account",
                "schema": {
                  "example": "m/44'/9004'/0'/0/1",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountInfoResponseDerivationPath",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseIsolatedMarket",
            "key": "isolated_market",
            "schema": {
              "generatedName": "responsesAccountInfoResponseIsolatedMarket",
              "value": {
                "description": "Isolated market for the account",
                "schema": {
                  "example": "ETHUSD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountInfoResponseIsolatedMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseKind",
            "key": "kind",
            "schema": {
              "generatedName": "responsesAccountInfoResponseKind",
              "value": {
                "description": "Account kind",
                "generatedName": "ResponsesAccountInfoResponseKind",
                "schema": "responses.AccountKind",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseParentAccount",
            "key": "parent_account",
            "schema": {
              "generatedName": "responsesAccountInfoResponseParentAccount",
              "value": {
                "description": "Starknet address of the parent account",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountInfoResponseParentAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponsePublicKey",
            "key": "public_key",
            "schema": {
              "generatedName": "responsesAccountInfoResponsePublicKey",
              "value": {
                "description": "Starknet public key",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountInfoResponsePublicKey",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountInfoResponseUsername",
            "key": "username",
            "schema": {
              "generatedName": "responsesAccountInfoResponseUsername",
              "value": {
                "description": "Username of the account",
                "schema": {
                  "example": "username",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountInfoResponseUsername",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesAccountInfoResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AccountKind": {
        "generatedName": "ResponsesAccountKind",
        "values": [
          {
            "nameOverride": "Unspecified",
            "generatedName": "EMPTY",
            "value": "",
            "casing": {}
          },
          {
            "nameOverride": "Main",
            "generatedName": "main",
            "value": "main",
            "casing": {}
          },
          {
            "nameOverride": "Subaccount",
            "generatedName": "subaccount",
            "value": "subaccount",
            "casing": {}
          },
          {
            "nameOverride": "VaultOperator",
            "generatedName": "vault_operator",
            "value": "vault_operator",
            "casing": {}
          },
          {
            "nameOverride": "VaultSubOperator",
            "generatedName": "vault_sub_operator",
            "value": "vault_sub_operator",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.AccountProfileResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespDiscord",
            "key": "discord",
            "schema": {
              "generatedName": "responsesAccountProfileRespDiscord",
              "value": {
                "generatedName": "ResponsesAccountProfileRespDiscord",
                "schema": "message.DiscordProfile",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespIsUsernamePrivate",
            "key": "is_username_private",
            "schema": {
              "generatedName": "responsesAccountProfileRespIsUsernamePrivate",
              "value": {
                "schema": {
                  "example": true,
                  "type": "boolean"
                },
                "generatedName": "ResponsesAccountProfileRespIsUsernamePrivate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespMaxSlippage",
            "key": "max_slippage",
            "schema": {
              "generatedName": "responsesAccountProfileRespMaxSlippage",
              "value": {
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountProfileRespMaxSlippage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespNfts",
            "key": "nfts",
            "schema": {
              "generatedName": "responsesAccountProfileRespNfts",
              "value": {
                "value": {
                  "generatedName": "ResponsesAccountProfileRespNftsItem",
                  "schema": "message.OwnedNft",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesAccountProfileRespNfts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespProgramsEligibility",
            "key": "programs_eligibility",
            "schema": {
              "generatedName": "responsesAccountProfileRespProgramsEligibility",
              "value": {
                "generatedName": "ResponsesAccountProfileRespProgramsEligibility",
                "schema": "responses.ProgramsEligibility",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespReferralCode",
            "key": "referral_code",
            "schema": {
              "generatedName": "responsesAccountProfileRespReferralCode",
              "value": {
                "schema": {
                  "example": "cryptofox8",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountProfileRespReferralCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespReferredBy",
            "key": "referred_by",
            "schema": {
              "generatedName": "responsesAccountProfileRespReferredBy",
              "value": {
                "schema": {
                  "example": "maxDegen",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountProfileRespReferredBy",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespTwitter",
            "key": "twitter",
            "schema": {
              "generatedName": "responsesAccountProfileRespTwitter",
              "value": {
                "generatedName": "ResponsesAccountProfileRespTwitter",
                "schema": "message.TwitterProfile",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountProfileRespUsername",
            "key": "username",
            "schema": {
              "generatedName": "responsesAccountProfileRespUsername",
              "value": {
                "schema": {
                  "example": "username",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountProfileRespUsername",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesAccountProfileResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AccountSummaryResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseAccount",
              "value": {
                "description": "User's starknet account",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseAccountValue",
            "key": "account_value",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseAccountValue",
              "value": {
                "description": "Current account value [with unrealized P&Ls]",
                "schema": {
                  "example": "136285.06918911",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseAccountValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseFreeCollateral",
            "key": "free_collateral",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseFreeCollateral",
              "value": {
                "description": "Free collateral available (Account value in excess of Initial Margin required)",
                "schema": {
                  "example": "73276.47229774",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseFreeCollateral",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseInitialMarginRequirement",
            "key": "initial_margin_requirement",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseInitialMarginRequirement",
              "value": {
                "description": "Amount required to open trade for the existing positions",
                "schema": {
                  "example": "63008.59689218",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseInitialMarginRequirement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseMaintenanceMarginRequirement",
            "key": "maintenance_margin_requirement",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseMaintenanceMarginRequirement",
              "value": {
                "description": "Amount required to maintain exisiting positions",
                "schema": {
                  "example": "31597.25239676",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseMaintenanceMarginRequirement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseMarginCushion",
            "key": "margin_cushion",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseMarginCushion",
              "value": {
                "description": "Acc value in excess of maintenance margin required",
                "schema": {
                  "example": "104687.8167956",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseMarginCushion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseSeqNo",
            "key": "seq_no",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseSeqNo",
              "value": {
                "description": "Unique increasing number (non-sequential) that is assigned to this account update. Can be used to deduplicate multiple feeds",
                "schema": {
                  "example": 1681471234972000000,
                  "type": "int"
                },
                "generatedName": "ResponsesAccountSummaryResponseSeqNo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseSettlementAsset",
            "key": "settlement_asset",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseSettlementAsset",
              "value": {
                "description": "Settlement asset for the account",
                "schema": {
                  "example": "USDC",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseSettlementAsset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseStatus",
              "value": {
                "description": "Status of the acc - like ACTIVE, LIQUIDATION",
                "schema": {
                  "example": "ACTIVE",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseStatus",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseTotalCollateral",
            "key": "total_collateral",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseTotalCollateral",
              "value": {
                "description": "User's total collateral",
                "schema": {
                  "example": "123003.62047353",
                  "type": "string"
                },
                "generatedName": "ResponsesAccountSummaryResponseTotalCollateral",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAccountSummaryResponseUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "responsesAccountSummaryResponseUpdatedAt",
              "value": {
                "description": "Account last updated time",
                "schema": {
                  "example": 1681471234972,
                  "type": "int"
                },
                "generatedName": "ResponsesAccountSummaryResponseUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesAccountSummaryResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AlgoOrderResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesAlgoOrderRespAccount",
              "value": {
                "description": "Account identifier (user's account address)",
                "schema": {
                  "example": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespAlgoType",
            "key": "algo_type",
            "schema": {
              "generatedName": "responsesAlgoOrderRespAlgoType",
              "value": {
                "description": "Algo type",
                "generatedName": "ResponsesAlgoOrderRespAlgoType",
                "schema": "responses.AlgoType",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespAvgFillPrice",
            "key": "avg_fill_price",
            "schema": {
              "generatedName": "responsesAlgoOrderRespAvgFillPrice",
              "value": {
                "description": "Average fill price of the order",
                "schema": {
                  "example": "26000",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespAvgFillPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespCancelReason",
            "key": "cancel_reason",
            "schema": {
              "generatedName": "responsesAlgoOrderRespCancelReason",
              "value": {
                "description": "Reason for algo cancellation if it was closed by cancel",
                "schema": {
                  "example": "NOT_ENOUGH_MARGIN",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespCancelReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesAlgoOrderRespCreatedAt",
              "value": {
                "description": "Algo creation time",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesAlgoOrderRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespEndAt",
            "key": "end_at",
            "schema": {
              "generatedName": "responsesAlgoOrderRespEndAt",
              "value": {
                "description": "Algo end time",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesAlgoOrderRespEndAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespId",
            "key": "id",
            "schema": {
              "generatedName": "responsesAlgoOrderRespId",
              "value": {
                "description": "Unique algo identifier",
                "schema": {
                  "example": "123456",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesAlgoOrderRespLastUpdatedAt",
              "value": {
                "description": "Algo last update time.  No changes once status=CLOSED",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesAlgoOrderRespLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesAlgoOrderRespMarket",
              "value": {
                "description": "Market to which algo belongs",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespRemainingSize",
            "key": "remaining_size",
            "schema": {
              "generatedName": "responsesAlgoOrderRespRemainingSize",
              "value": {
                "description": "Remaining size of the algo",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespRemainingSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespSide",
            "key": "side",
            "schema": {
              "generatedName": "responsesAlgoOrderRespSide",
              "value": {
                "description": "Algo side",
                "generatedName": "ResponsesAlgoOrderRespSide",
                "schema": "responses.OrderSide",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespSize",
            "key": "size",
            "schema": {
              "generatedName": "responsesAlgoOrderRespSize",
              "value": {
                "description": "Algo size",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesAlgoOrderRespSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAlgoOrderRespStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesAlgoOrderRespStatus",
              "value": {
                "description": "Algo status",
                "generatedName": "ResponsesAlgoOrderRespStatus",
                "schema": "responses.OrderStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesAlgoOrderResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AlgoType": {
        "generatedName": "ResponsesAlgoType",
        "values": [
          {
            "nameOverride": "Unspecified",
            "generatedName": "EMPTY",
            "value": "",
            "casing": {}
          },
          {
            "nameOverride": "TWAP",
            "generatedName": "TWAP",
            "value": "TWAP",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.ApiError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesApiErrorData",
            "key": "data",
            "schema": {
              "generatedName": "responsesApiErrorData",
              "value": {
                "generatedName": "ResponsesApiErrorData",
                "type": "unknown"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesApiErrorError",
            "key": "error",
            "schema": {
              "generatedName": "responsesApiErrorError",
              "value": {
                "description": "unique immutable string identifier for specific error",
                "generatedName": "ResponsesApiErrorError",
                "schema": "responses.ErrorCode",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesApiErrorMessage",
            "key": "message",
            "schema": {
              "generatedName": "responsesApiErrorMessage",
              "value": {
                "description": "detailed description of error and how to address it",
                "schema": {
                  "example": "User has never called /onboarding endpoint",
                  "type": "string"
                },
                "generatedName": "ResponsesApiErrorMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesApiError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AskBidArray": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesAskBidArrayAsks",
            "key": "asks",
            "schema": {
              "generatedName": "responsesAskBidArrayAsks",
              "value": {
                "description": "List of Ask sizes and prices",
                "value": {
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ResponsesAskBidArrayAsksItemItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ResponsesAskBidArrayAsksItem",
                  "groupName": [],
                  "type": "array"
                },
                "generatedName": "ResponsesAskBidArrayAsks",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAskBidArrayBids",
            "key": "bids",
            "schema": {
              "generatedName": "responsesAskBidArrayBids",
              "value": {
                "description": "List of Bid sizes and prices",
                "value": {
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ResponsesAskBidArrayBidsItemItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ResponsesAskBidArrayBidsItem",
                  "groupName": [],
                  "type": "array"
                },
                "generatedName": "ResponsesAskBidArrayBids",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAskBidArrayLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesAskBidArrayLastUpdatedAt",
              "value": {
                "description": "Last update to the orderbook in milliseconds",
                "schema": {
                  "example": 1681462770114,
                  "type": "int"
                },
                "generatedName": "ResponsesAskBidArrayLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAskBidArrayMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesAskBidArrayMarket",
              "value": {
                "description": "Market name",
                "schema": {
                  "example": "ETH-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesAskBidArrayMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesAskBidArraySeqNo",
            "key": "seq_no",
            "schema": {
              "generatedName": "responsesAskBidArraySeqNo",
              "value": {
                "description": "Sequence number of the orderbook",
                "schema": {
                  "example": 20784,
                  "type": "int"
                },
                "generatedName": "ResponsesAskBidArraySeqNo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesAskBidArray",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.AuthResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesAuthRespJwtToken",
            "key": "jwt_token",
            "schema": {
              "generatedName": "responsesAuthRespJwtToken",
              "value": {
                "description": "Authentication token",
                "schema": {
                  "example": "eyJhbGciOiJFUzM4NCIsInR5cCI6IkpXVCJ9.eyJ0eXAiOiJhdCtKV1QiLCJleHAiOjE2ODE0NTI5MDcsImlhdCI6MTY4MTQ1MjYwNywiaXNzIjoiUGFyYWRleCBzdGFnaW5nIiwic3ViIjoiMHg0OTVkMmViNTIzNmExMmI4YjRhZDdkMzg0OWNlNmEyMDNjZTIxYzQzZjQ3M2MyNDhkZmQ1Y2U3MGQ5NDU0ZmEifQ.BPihIbGhnnsuPlReqC9x12JFXldpswg5EdA6tTiDQm-_UHaRz_8RfVBqWc2fPN6CzFsXTq7GowZu-2qMxPvZK_fGcxEhTp2k1r8MUxowlUIT4vPu2scCwrsyIujlCAwS",
                  "type": "string"
                },
                "generatedName": "ResponsesAuthRespJwtToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesAuthResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.BBOResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesBboRespAsk",
            "key": "ask",
            "schema": {
              "generatedName": "responsesBboRespAsk",
              "value": {
                "description": "Best ask price",
                "schema": {
                  "example": "30130.15",
                  "type": "string"
                },
                "generatedName": "ResponsesBboRespAsk",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBboRespAskSize",
            "key": "ask_size",
            "schema": {
              "generatedName": "responsesBboRespAskSize",
              "value": {
                "description": "Best ask size",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesBboRespAskSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBboRespBid",
            "key": "bid",
            "schema": {
              "generatedName": "responsesBboRespBid",
              "value": {
                "description": "Best bid price",
                "schema": {
                  "example": "30112.22",
                  "type": "string"
                },
                "generatedName": "ResponsesBboRespBid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBboRespBidSize",
            "key": "bid_size",
            "schema": {
              "generatedName": "responsesBboRespBidSize",
              "value": {
                "description": "Best bid size",
                "schema": {
                  "example": "0.04",
                  "type": "string"
                },
                "generatedName": "ResponsesBboRespBidSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBboRespLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesBboRespLastUpdatedAt",
              "value": {
                "description": "Last update to the orderbook in milliseconds",
                "schema": {
                  "example": 1681493939981,
                  "type": "int"
                },
                "generatedName": "ResponsesBboRespLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBboRespMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesBboRespMarket",
              "value": {
                "description": "Symbol of the market",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesBboRespMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBboRespSeqNo",
            "key": "seq_no",
            "schema": {
              "generatedName": "responsesBboRespSeqNo",
              "value": {
                "description": "Sequence number of the orderbook",
                "schema": {
                  "example": 20784,
                  "type": "int"
                },
                "generatedName": "ResponsesBboRespSeqNo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesBboResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.BalanceResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesBalanceRespLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesBalanceRespLastUpdatedAt",
              "value": {
                "description": "Balance last updated time",
                "schema": {
                  "example": 1681462770114,
                  "type": "int"
                },
                "generatedName": "ResponsesBalanceRespLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBalanceRespSize",
            "key": "size",
            "schema": {
              "generatedName": "responsesBalanceRespSize",
              "value": {
                "description": "Balance amount of settlement token (includes deposits, withdrawals, realized PnL, realized funding, and fees)",
                "schema": {
                  "example": "123003.620",
                  "type": "string"
                },
                "generatedName": "ResponsesBalanceRespSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBalanceRespToken",
            "key": "token",
            "schema": {
              "generatedName": "responsesBalanceRespToken",
              "value": {
                "description": "Name of the token",
                "schema": {
                  "example": "USDC",
                  "type": "string"
                },
                "generatedName": "ResponsesBalanceRespToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesBalanceResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.BatchResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesBatchResponseErrors",
            "key": "errors",
            "schema": {
              "generatedName": "responsesBatchResponseErrors",
              "value": {
                "value": {
                  "generatedName": "ResponsesBatchResponseErrorsItem",
                  "schema": "responses.ErrorResponse",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesBatchResponseErrors",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBatchResponseOrders",
            "key": "orders",
            "schema": {
              "generatedName": "responsesBatchResponseOrders",
              "value": {
                "value": {
                  "generatedName": "ResponsesBatchResponseOrdersItem",
                  "schema": "responses.OrderResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesBatchResponseOrders",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesBatchResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.BridgedToken": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenDecimals",
            "key": "decimals",
            "schema": {
              "generatedName": "responsesBridgedTokenDecimals",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "ResponsesBridgedTokenDecimals",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenL1BridgeAddress",
            "key": "l1_bridge_address",
            "schema": {
              "generatedName": "responsesBridgedTokenL1BridgeAddress",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesBridgedTokenL1BridgeAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenL1TokenAddress",
            "key": "l1_token_address",
            "schema": {
              "generatedName": "responsesBridgedTokenL1TokenAddress",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesBridgedTokenL1TokenAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenL2BridgeAddress",
            "key": "l2_bridge_address",
            "schema": {
              "generatedName": "responsesBridgedTokenL2BridgeAddress",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesBridgedTokenL2BridgeAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenL2TokenAddress",
            "key": "l2_token_address",
            "schema": {
              "generatedName": "responsesBridgedTokenL2TokenAddress",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesBridgedTokenL2TokenAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenName",
            "key": "name",
            "schema": {
              "generatedName": "responsesBridgedTokenName",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesBridgedTokenName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesBridgedTokenSymbol",
            "key": "symbol",
            "schema": {
              "generatedName": "responsesBridgedTokenSymbol",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesBridgedTokenSymbol",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesBridgedToken",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.Delta1CrossMarginParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesDelta1CrossMarginParamsImfBase",
            "key": "imf_base",
            "schema": {
              "generatedName": "responsesDelta1CrossMarginParamsImfBase",
              "value": {
                "description": "Initial Margin Base",
                "schema": {
                  "example": "0.11",
                  "type": "string"
                },
                "generatedName": "ResponsesDelta1CrossMarginParamsImfBase",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesDelta1CrossMarginParamsImfFactor",
            "key": "imf_factor",
            "schema": {
              "generatedName": "responsesDelta1CrossMarginParamsImfFactor",
              "value": {
                "description": "Initial Margin Factor, always 0.",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "ResponsesDelta1CrossMarginParamsImfFactor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesDelta1CrossMarginParamsImfShift",
            "key": "imf_shift",
            "schema": {
              "generatedName": "responsesDelta1CrossMarginParamsImfShift",
              "value": {
                "description": "Initial Margin Shift, unused, always 0.",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "ResponsesDelta1CrossMarginParamsImfShift",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesDelta1CrossMarginParamsMmfFactor",
            "key": "mmf_factor",
            "schema": {
              "generatedName": "responsesDelta1CrossMarginParamsMmfFactor",
              "value": {
                "description": "Maintenance Margin Factor",
                "schema": {
                  "example": "0.51",
                  "type": "string"
                },
                "generatedName": "ResponsesDelta1CrossMarginParamsMmfFactor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesDelta1CrossMarginParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.ErrorCode": {
        "generatedName": "ResponsesErrorCode",
        "values": [
          {
            "generatedName": "VALIDATION_ERROR",
            "value": "VALIDATION_ERROR",
            "casing": {}
          },
          {
            "generatedName": "BINDING_ERROR",
            "value": "BINDING_ERROR",
            "casing": {}
          },
          {
            "generatedName": "INTERNAL_ERROR",
            "value": "INTERNAL_ERROR",
            "casing": {}
          },
          {
            "generatedName": "NOT_FOUND",
            "value": "NOT_FOUND",
            "casing": {}
          },
          {
            "generatedName": "SERVICE_UNAVAILABLE",
            "value": "SERVICE_UNAVAILABLE",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidParameter",
            "generatedName": "INVALID_REQUEST_PARAMETER",
            "value": "INVALID_REQUEST_PARAMETER",
            "casing": {}
          },
          {
            "nameOverride": "String_OrderIdNotFound",
            "generatedName": "ORDER_ID_NOT_FOUND",
            "value": "ORDER_ID_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_OrderIsClosed",
            "generatedName": "ORDER_IS_CLOSED",
            "value": "ORDER_IS_CLOSED",
            "casing": {}
          },
          {
            "nameOverride": "String_OrderIsNotOpen",
            "generatedName": "ORDER_IS_NOT_OPEN",
            "value": "ORDER_IS_NOT_OPEN",
            "casing": {}
          },
          {
            "nameOverride": "String_ClientOrderIdNotFound",
            "generatedName": "CLIENT_ORDER_ID_NOT_FOUND",
            "value": "CLIENT_ORDER_ID_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_DuplicatedClientOrderId",
            "generatedName": "DUPLICATED_CLIENT_ID",
            "value": "DUPLICATED_CLIENT_ID",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidPricePrecision",
            "generatedName": "INVALID_PRICE_PRECISION",
            "value": "INVALID_PRICE_PRECISION",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidSymbol",
            "generatedName": "INVALID_SYMBOL",
            "value": "INVALID_SYMBOL",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidToken",
            "generatedName": "INVALID_TOKEN",
            "value": "INVALID_TOKEN",
            "casing": {}
          },
          {
            "nameOverride": "String_BadEthAddress",
            "generatedName": "INVALID_ETHEREUM_ADDRESS",
            "value": "INVALID_ETHEREUM_ADDRESS",
            "casing": {}
          },
          {
            "nameOverride": "String_BadEthSignature",
            "generatedName": "INVALID_ETHEREUM_SIGNATURE",
            "value": "INVALID_ETHEREUM_SIGNATURE",
            "casing": {}
          },
          {
            "nameOverride": "String_BadStarkNetAddress",
            "generatedName": "INVALID_STARKNET_ADDRESS",
            "value": "INVALID_STARKNET_ADDRESS",
            "casing": {}
          },
          {
            "nameOverride": "String_BadStarkNetSignature",
            "generatedName": "INVALID_STARKNET_SIGNATURE",
            "value": "INVALID_STARKNET_SIGNATURE",
            "casing": {}
          },
          {
            "nameOverride": "String_StarknetSigVerificationFailed",
            "generatedName": "STARKNET_SIGNATURE_VERIFICATION_FAILED",
            "value": "STARKNET_SIGNATURE_VERIFICATION_FAILED",
            "casing": {}
          },
          {
            "nameOverride": "String_BadFormatStarknetCall",
            "generatedName": "BAD_STARKNET_REQUEST",
            "value": "BAD_STARKNET_REQUEST",
            "casing": {}
          },
          {
            "nameOverride": "String_SignerMismatch",
            "generatedName": "ETHEREUM_SIGNER_MISMATCH",
            "value": "ETHEREUM_SIGNER_MISMATCH",
            "casing": {}
          },
          {
            "nameOverride": "String_HashMismatch",
            "generatedName": "ETHEREUM_HASH_MISMATCH",
            "value": "ETHEREUM_HASH_MISMATCH",
            "casing": {}
          },
          {
            "nameOverride": "String_NotOnboarded",
            "generatedName": "NOT_ONBOARDED",
            "value": "NOT_ONBOARDED",
            "casing": {}
          },
          {
            "nameOverride": "String_BadTimestamp",
            "generatedName": "INVALID_TIMESTAMP",
            "value": "INVALID_TIMESTAMP",
            "casing": {}
          },
          {
            "nameOverride": "String_BadExpiration",
            "generatedName": "INVALID_SIGNATURE_EXPIRATION",
            "value": "INVALID_SIGNATURE_EXPIRATION",
            "casing": {}
          },
          {
            "nameOverride": "String_AccountIdNotFound",
            "generatedName": "ACCOUNT_NOT_FOUND",
            "value": "ACCOUNT_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidOrderSignature",
            "generatedName": "INVALID_ORDER_SIGNATURE",
            "value": "INVALID_ORDER_SIGNATURE",
            "casing": {}
          },
          {
            "nameOverride": "String_BadPublicKey",
            "generatedName": "PUBLIC_KEY_INVALID",
            "value": "PUBLIC_KEY_INVALID",
            "casing": {}
          },
          {
            "nameOverride": "String_UnauthorizedEthAddress",
            "generatedName": "UNAUTHORIZED_ETHEREUM_ADDRESS",
            "value": "UNAUTHORIZED_ETHEREUM_ADDRESS",
            "casing": {}
          },
          {
            "nameOverride": "String_EthAddressAlreadyOnboarded",
            "generatedName": "ETHEREUM_ADDRESS_ALREADY_ONBOARDED",
            "value": "ETHEREUM_ADDRESS_ALREADY_ONBOARDED",
            "casing": {}
          },
          {
            "nameOverride": "String_MarketNotFound",
            "generatedName": "MARKET_NOT_FOUND",
            "value": "MARKET_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_AllowlistNotFound",
            "generatedName": "ALLOWLIST_ENTRY_NOT_FOUND",
            "value": "ALLOWLIST_ENTRY_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_UsernameInUse",
            "generatedName": "USERNAME_IN_USE",
            "value": "USERNAME_IN_USE",
            "casing": {}
          },
          {
            "nameOverride": "String_GeoIPBlock",
            "generatedName": "GEO_IP_BLOCK",
            "value": "GEO_IP_BLOCK",
            "casing": {}
          },
          {
            "nameOverride": "String_EthAddressBlocked",
            "generatedName": "ETHEREUM_ADDRESS_BLOCKED",
            "value": "ETHEREUM_ADDRESS_BLOCKED",
            "casing": {}
          },
          {
            "nameOverride": "String_ProgramNotFound",
            "generatedName": "PROGRAM_NOT_FOUND",
            "value": "PROGRAM_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_ProgramNotSupported",
            "generatedName": "PROGRAM_NOT_SUPPORTED",
            "value": "PROGRAM_NOT_SUPPORTED",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidDashboard",
            "generatedName": "INVALID_DASHBOARD",
            "value": "INVALID_DASHBOARD",
            "casing": {}
          },
          {
            "nameOverride": "String_MarketNotOpen",
            "generatedName": "MARKET_NOT_OPEN",
            "value": "MARKET_NOT_OPEN",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidReferralCode",
            "generatedName": "INVALID_REFERRAL_CODE",
            "value": "INVALID_REFERRAL_CODE",
            "casing": {}
          },
          {
            "nameOverride": "String_RequestNotAllowed",
            "generatedName": "REQUEST_NOT_ALLOWED",
            "value": "REQUEST_NOT_ALLOWED",
            "casing": {}
          },
          {
            "nameOverride": "String_ParentAddressAlreadyOnboarded",
            "generatedName": "PARENT_ADDRESS_ALREADY_ONBOARDED",
            "value": "PARENT_ADDRESS_ALREADY_ONBOARDED",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidParentAccount",
            "generatedName": "INVALID_PARENT_ACCOUNT",
            "value": "INVALID_PARENT_ACCOUNT",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidVaultOperatorChain",
            "generatedName": "INVALID_VAULT_OPERATOR_CHAIN",
            "value": "INVALID_VAULT_OPERATOR_CHAIN",
            "casing": {}
          },
          {
            "nameOverride": "String_VaultOperatorAlreadyOnboarded",
            "generatedName": "VAULT_OPERATOR_ALREADY_ONBOARDED",
            "value": "VAULT_OPERATOR_ALREADY_ONBOARDED",
            "casing": {}
          },
          {
            "nameOverride": "String_VaultNameInUse",
            "generatedName": "VAULT_NAME_IN_USE",
            "value": "VAULT_NAME_IN_USE",
            "casing": {}
          },
          {
            "nameOverride": "String_VaultNotFound",
            "generatedName": "VAULT_NOT_FOUND",
            "value": "VAULT_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_VaultStrategyNotFound",
            "generatedName": "VAULT_STRATEGY_NOT_FOUND",
            "value": "VAULT_STRATEGY_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_VaultLimitReached",
            "generatedName": "VAULT_LIMIT_REACHED",
            "value": "VAULT_LIMIT_REACHED",
            "casing": {}
          },
          {
            "nameOverride": "String_BatchSizeOutOfRange",
            "generatedName": "BATCH_SIZE_OUT_OF_RANGE",
            "value": "BATCH_SIZE_OUT_OF_RANGE",
            "casing": {}
          },
          {
            "nameOverride": "String_IsolatedMarketAccountMismatch",
            "generatedName": "ISOLATED_MARKET_ACCOUNT_MISMATCH",
            "value": "ISOLATED_MARKET_ACCOUNT_MISMATCH",
            "casing": {}
          },
          {
            "nameOverride": "String_NoAccessToMarket",
            "generatedName": "NO_ACCESS_TO_MARKET",
            "value": "NO_ACCESS_TO_MARKET",
            "casing": {}
          },
          {
            "nameOverride": "String_PointsSummaryNotFound",
            "generatedName": "POINTS_SUMMARY_NOT_FOUND",
            "value": "POINTS_SUMMARY_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_AlgoIdNotFound",
            "generatedName": "ALGO_ID_NOT_FOUND",
            "value": "ALGO_ID_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidDerivationPath",
            "generatedName": "INVALID_DERIVATION_PATH",
            "value": "INVALID_DERIVATION_PATH",
            "casing": {}
          },
          {
            "nameOverride": "String_ProfileStatsNotFound",
            "generatedName": "PROFILE_STATS_NOT_FOUND",
            "value": "PROFILE_STATS_NOT_FOUND",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidChain",
            "generatedName": "INVALID_CHAIN",
            "value": "INVALID_CHAIN",
            "casing": {}
          },
          {
            "nameOverride": "String_InvalidLayerswapSwap",
            "generatedName": "INVALID_LAYERSWAP_SWAP",
            "value": "INVALID_LAYERSWAP_SWAP",
            "casing": {}
          },
          {
            "nameOverride": "String_SocialUsernameInUse",
            "generatedName": "SOCIAL_USERNAME_IN_USE",
            "value": "SOCIAL_USERNAME_IN_USE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.ErrorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesErrorResponseError",
            "key": "error",
            "schema": {
              "generatedName": "responsesErrorResponseError",
              "value": {
                "generatedName": "ResponsesErrorResponseError",
                "schema": "responses.ErrorCode",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "responsesErrorResponseMessage",
            "key": "message",
            "schema": {
              "generatedName": "responsesErrorResponseMessage",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesErrorResponseMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesErrorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.FillResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesFillResultClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "responsesFillResultClientId",
              "value": {
                "description": "Unique client assigned ID for the order",
                "schema": {
                  "example": "x1234",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesFillResultCreatedAt",
              "value": {
                "description": "Fill time",
                "schema": {
                  "example": 1681375176910,
                  "type": "int"
                },
                "generatedName": "ResponsesFillResultCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultFee",
            "key": "fee",
            "schema": {
              "generatedName": "responsesFillResultFee",
              "value": {
                "description": "Fee paid by the user",
                "schema": {
                  "example": "7.56",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultFee",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultFeeCurrency",
            "key": "fee_currency",
            "schema": {
              "generatedName": "responsesFillResultFeeCurrency",
              "value": {
                "description": "Asset that fee is charged in",
                "schema": {
                  "example": "USDC",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultFeeCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultFillType",
            "key": "fill_type",
            "schema": {
              "generatedName": "responsesFillResultFillType",
              "value": {
                "description": "Fill type, can be FILL, LIQUIDATION or TRANSFER",
                "schema": {
                  "example": "FILL",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultFillType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultId",
            "key": "id",
            "schema": {
              "generatedName": "responsesFillResultId",
              "value": {
                "description": "Unique string ID of fill per FillType",
                "schema": {
                  "example": "8615262148007718462",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultLiquidity",
            "key": "liquidity",
            "schema": {
              "generatedName": "responsesFillResultLiquidity",
              "value": {
                "description": "Maker or Taker",
                "generatedName": "ResponsesFillResultLiquidity",
                "schema": "responses.TraderRole",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesFillResultMarket",
              "value": {
                "description": "Market name",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultOrderId",
            "key": "order_id",
            "schema": {
              "generatedName": "responsesFillResultOrderId",
              "value": {
                "description": "Order ID",
                "schema": {
                  "example": "1681462103821101699438490000",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultOrderId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultPrice",
            "key": "price",
            "schema": {
              "generatedName": "responsesFillResultPrice",
              "value": {
                "description": "Price at which order was filled",
                "schema": {
                  "example": "30000.12",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultRealizedFunding",
            "key": "realized_funding",
            "schema": {
              "generatedName": "responsesFillResultRealizedFunding",
              "value": {
                "description": "Realized funding of the fill",
                "schema": {
                  "example": "7.56",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultRealizedFunding",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultRealizedPnl",
            "key": "realized_pnl",
            "schema": {
              "generatedName": "responsesFillResultRealizedPnl",
              "value": {
                "description": "Realized PnL of the fill",
                "schema": {
                  "example": "7.56",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultRealizedPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultRemainingSize",
            "key": "remaining_size",
            "schema": {
              "generatedName": "responsesFillResultRemainingSize",
              "value": {
                "description": "Remaining size of the order",
                "schema": {
                  "example": "0.5",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultRemainingSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultSide",
            "key": "side",
            "schema": {
              "generatedName": "responsesFillResultSide",
              "value": {
                "description": "Taker side",
                "generatedName": "ResponsesFillResultSide",
                "schema": "responses.OrderSide",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFillResultSize",
            "key": "size",
            "schema": {
              "generatedName": "responsesFillResultSize",
              "value": {
                "description": "Size of the fill",
                "schema": {
                  "example": "0.5",
                  "type": "string"
                },
                "generatedName": "ResponsesFillResultSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesFillResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.FundingDataResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesFundingDataRespNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesFundingDataRespNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingDataRespNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingDataRespPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesFundingDataRespPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingDataRespPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingDataRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesFundingDataRespResults",
              "value": {
                "description": "Funding Data Response data list",
                "value": {
                  "generatedName": "ResponsesFundingDataRespResultsItem",
                  "schema": "responses.FundingDataResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesFundingDataRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesFundingDataResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.FundingDataResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesFundingDataResultCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesFundingDataResultCreatedAt",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "ResponsesFundingDataResultCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingDataResultFundingIndex",
            "key": "funding_index",
            "schema": {
              "generatedName": "responsesFundingDataResultFundingIndex",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesFundingDataResultFundingIndex",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingDataResultFundingPremium",
            "key": "funding_premium",
            "schema": {
              "generatedName": "responsesFundingDataResultFundingPremium",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesFundingDataResultFundingPremium",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingDataResultFundingRate",
            "key": "funding_rate",
            "schema": {
              "generatedName": "responsesFundingDataResultFundingRate",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesFundingDataResultFundingRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingDataResultMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesFundingDataResultMarket",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesFundingDataResultMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesFundingDataResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.FundingHistoryResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesFundingHistoryRespNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesFundingHistoryRespNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingHistoryRespNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingHistoryRespPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesFundingHistoryRespPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingHistoryRespPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingHistoryRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesFundingHistoryRespResults",
              "value": {
                "description": "Funding Response data list",
                "value": {
                  "generatedName": "ResponsesFundingHistoryRespResultsItem",
                  "schema": "responses.FundingResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesFundingHistoryRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesFundingHistoryResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.FundingResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesFundingRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesFundingRespCreatedAt",
              "value": {
                "description": "Funding payments time",
                "schema": {
                  "example": 1681375481000,
                  "type": "int"
                },
                "generatedName": "ResponsesFundingRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingRespFillId",
            "key": "fill_id",
            "schema": {
              "generatedName": "responsesFundingRespFillId",
              "value": {
                "description": "Unique string ID for the fill that triggered the payment (if any)",
                "schema": {
                  "example": "8615262148007718462",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingRespFillId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingRespId",
            "key": "id",
            "schema": {
              "generatedName": "responsesFundingRespId",
              "value": {
                "description": "Unique string ID to identify the payment",
                "schema": {
                  "example": "1681375578221101699352320000",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingRespId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingRespIndex",
            "key": "index",
            "schema": {
              "generatedName": "responsesFundingRespIndex",
              "value": {
                "description": "Value of the funding index at the time of payment",
                "schema": {
                  "example": "-2819.53434361",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingRespIndex",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingRespMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesFundingRespMarket",
              "value": {
                "description": "Perpetual market against which payment is made",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingRespMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesFundingRespPayment",
            "key": "payment",
            "schema": {
              "generatedName": "responsesFundingRespPayment",
              "value": {
                "description": "Payment amount in settlement asset",
                "schema": {
                  "example": "34.4490622",
                  "type": "string"
                },
                "generatedName": "ResponsesFundingRespPayment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesFundingResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetAccountsInfoResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetAccountsInfoResponseResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetAccountsInfoResponseResults",
              "value": {
                "value": {
                  "generatedName": "ResponsesGetAccountsInfoResponseResultsItem",
                  "schema": "responses.AccountInfoResponse",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetAccountsInfoResponseResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetAccountsInfoResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetAlgoOrders": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetAlgoOrdersNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetAlgoOrdersNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetAlgoOrdersNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetAlgoOrdersPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetAlgoOrdersPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetAlgoOrdersPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetAlgoOrdersResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetAlgoOrdersResults",
              "value": {
                "description": "List of Algo orders responses",
                "value": {
                  "generatedName": "ResponsesGetAlgoOrdersResultsItem",
                  "schema": "responses.AlgoOrderResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetAlgoOrdersResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetAlgoOrders",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetBalancesResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetBalancesRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetBalancesRespResults",
              "value": {
                "description": "Array of token balances held",
                "value": {
                  "generatedName": "ResponsesGetBalancesRespResultsItem",
                  "schema": "responses.BalanceResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetBalancesRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetBalancesResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetFillsResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetFillsRespNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetFillsRespNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetFillsRespNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetFillsRespPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetFillsRespPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetFillsRespPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetFillsRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetFillsRespResults",
              "value": {
                "description": "Fill Results List",
                "value": {
                  "generatedName": "ResponsesGetFillsRespResultsItem",
                  "schema": "responses.FillResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetFillsRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetFillsResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetLiquidations": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetLiquidationsResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetLiquidationsResults",
              "value": {
                "description": "List of liquidations",
                "value": {
                  "generatedName": "ResponsesGetLiquidationsResultsItem",
                  "schema": "responses.LiquidationResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetLiquidationsResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetLiquidations",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetMarketSummary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetMarketSummaryResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetMarketSummaryResults",
              "value": {
                "description": "List of market summaries",
                "value": {
                  "generatedName": "ResponsesGetMarketSummaryResultsItem",
                  "schema": "responses.MarketSummaryResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetMarketSummaryResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetMarketSummary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetMarkets": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetMarketsResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetMarketsResults",
              "value": {
                "description": "List of available active markets",
                "value": {
                  "generatedName": "ResponsesGetMarketsResultsItem",
                  "schema": "responses.MarketResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetMarketsResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetMarkets",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetOpenAlgoOrders": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetOpenAlgoOrdersResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetOpenAlgoOrdersResults",
              "value": {
                "description": "List of Algo orders responses",
                "value": {
                  "generatedName": "ResponsesGetOpenAlgoOrdersResultsItem",
                  "schema": "responses.AlgoOrderResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetOpenAlgoOrdersResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetOpenAlgoOrders",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetOpenOrders": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetOpenOrdersResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetOpenOrdersResults",
              "value": {
                "description": "Orders list",
                "value": {
                  "generatedName": "ResponsesGetOpenOrdersResultsItem",
                  "schema": "responses.OrderResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetOpenOrdersResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetOpenOrders",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetOrders": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetOrdersNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetOrdersNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetOrdersNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetOrdersPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetOrdersPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetOrdersPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetOrdersResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetOrdersResults",
              "value": {
                "description": "List of Orders",
                "value": {
                  "generatedName": "ResponsesGetOrdersResultsItem",
                  "schema": "responses.OrderResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetOrdersResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetOrders",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetPositionsHistoryResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetPositionsHistoryRespNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetPositionsHistoryRespNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetPositionsHistoryRespNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetPositionsHistoryRespPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetPositionsHistoryRespPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetPositionsHistoryRespPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetPositionsHistoryRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetPositionsHistoryRespResults",
              "value": {
                "value": {
                  "generatedName": "ResponsesGetPositionsHistoryRespResultsItem",
                  "schema": "responses.PositionResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetPositionsHistoryRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetPositionsHistoryResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetPositionsResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetPositionsRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetPositionsRespResults",
              "value": {
                "value": {
                  "generatedName": "ResponsesGetPositionsRespResultsItem",
                  "schema": "responses.PositionResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetPositionsRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetPositionsResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetReferralConfig": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetReferralConfigResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetReferralConfigResults",
              "value": {
                "description": "List of referral config",
                "value": {
                  "generatedName": "ResponsesGetReferralConfigResultsItem",
                  "schema": "responses.ReferralConfigResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetReferralConfigResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetReferralConfig",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetReferrals": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetReferralsResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetReferralsResults",
              "value": {
                "description": "List of referral details",
                "value": {
                  "generatedName": "ResponsesGetReferralsResultsItem",
                  "schema": "responses.ReferralsResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetReferralsResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetReferrals",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetSubAccountsResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetSubAccountsResponseResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetSubAccountsResponseResults",
              "value": {
                "value": {
                  "generatedName": "ResponsesGetSubAccountsResponseResultsItem",
                  "schema": "responses.AccountInfoResponse",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetSubAccountsResponseResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetSubAccountsResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetTradebustsResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetTradebustsRespNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetTradebustsRespNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTradebustsRespNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTradebustsRespPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetTradebustsRespPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTradebustsRespPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTradebustsRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetTradebustsRespResults",
              "value": {
                "description": "List of tradebusts",
                "value": {
                  "generatedName": "ResponsesGetTradebustsRespResultsItem",
                  "schema": "responses.TradebustResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetTradebustsRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetTradebustsResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetTradesResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetTradesRespNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetTradesRespNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTradesRespNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTradesRespPrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetTradesRespPrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTradesRespPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTradesRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetTradesRespResults",
              "value": {
                "description": "List of trade details",
                "value": {
                  "generatedName": "ResponsesGetTradesRespResultsItem",
                  "schema": "responses.TradeResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetTradesRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetTradesResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetTransactionResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetTransactionResponseNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetTransactionResponseNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTransactionResponseNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTransactionResponsePrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetTransactionResponsePrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTransactionResponsePrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTransactionResponseResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetTransactionResponseResults",
              "value": {
                "description": "List of transaction responses",
                "value": {
                  "generatedName": "ResponsesGetTransactionResponseResultsItem",
                  "schema": "responses.TransactionResponse",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetTransactionResponseResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetTransactionResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetTransfersResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetTransfersResponseNext",
            "key": "next",
            "schema": {
              "generatedName": "responsesGetTransfersResponseNext",
              "value": {
                "description": "The pointer to fetch next set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiMsIm1hcmtlciI6eyJtYXJrZXIiOiIxNjc1NjUwMDE3NDMxMTAxNjk5N=",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTransfersResponseNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTransfersResponsePrev",
            "key": "prev",
            "schema": {
              "generatedName": "responsesGetTransfersResponsePrev",
              "value": {
                "description": "The pointer to fetch previous set of records (null if there are no records left)",
                "schema": {
                  "example": "eyJmaWx0ZXIiOnsiTGltaXQiOjkwfSwidGltZSI6MTY4MTY3OTgzNzk3MTMwOTk1MywibWFya2VyIjp7Im1zMjExMD==",
                  "type": "string"
                },
                "generatedName": "ResponsesGetTransfersResponsePrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGetTransfersResponseResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetTransfersResponseResults",
              "value": {
                "description": "List of transaction responses",
                "value": {
                  "generatedName": "ResponsesGetTransfersResponseResultsItem",
                  "schema": "responses.TransferResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetTransfersResponseResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetTransfersResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetVaultAccountSummariesResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetVaultAccountSummariesRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetVaultAccountSummariesRespResults",
              "value": {
                "description": "List of vaults account summaries",
                "value": {
                  "generatedName": "ResponsesGetVaultAccountSummariesRespResultsItem",
                  "schema": "responses.VaultAccountSummaryResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetVaultAccountSummariesRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetVaultAccountSummariesResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetVaultHistoricalDataResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetVaultHistoricalDataRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetVaultHistoricalDataRespResults",
              "value": {
                "description": "List of requested vault timeseries",
                "value": {
                  "generatedName": "ResponsesGetVaultHistoricalDataRespResultsItem",
                  "schema": "responses.VaultHistoricalDataResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetVaultHistoricalDataRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetVaultHistoricalDataResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetVaultSummariesResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetVaultSummariesRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetVaultSummariesRespResults",
              "value": {
                "description": "List of vaults summaries",
                "value": {
                  "generatedName": "ResponsesGetVaultSummariesRespResultsItem",
                  "schema": "responses.VaultSummaryResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetVaultSummariesRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetVaultSummariesResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.GetVaultsResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGetVaultsRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesGetVaultsRespResults",
              "value": {
                "description": "List of vaults",
                "value": {
                  "generatedName": "ResponsesGetVaultsRespResultsItem",
                  "schema": "responses.VaultResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesGetVaultsRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGetVaultsResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.Greeks": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesGreeksDelta",
            "key": "delta",
            "schema": {
              "generatedName": "responsesGreeksDelta",
              "value": {
                "description": "Market Delta",
                "schema": {
                  "example": "1",
                  "type": "string"
                },
                "generatedName": "ResponsesGreeksDelta",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGreeksGamma",
            "key": "gamma",
            "schema": {
              "generatedName": "responsesGreeksGamma",
              "value": {
                "description": "Market Gamma",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesGreeksGamma",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesGreeksVega",
            "key": "vega",
            "schema": {
              "generatedName": "responsesGreeksVega",
              "value": {
                "description": "Market Vega",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesGreeksVega",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesGreeks",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.InsuranceAccountResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesInsuranceAccountRespAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesInsuranceAccountRespAccount",
              "value": {
                "description": "Starknet address of the Insurance fund",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesInsuranceAccountRespAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesInsuranceAccountRespAccountValue",
            "key": "account_value",
            "schema": {
              "generatedName": "responsesInsuranceAccountRespAccountValue",
              "value": {
                "description": "Total account value of insurance fund",
                "schema": {
                  "example": "136285.069",
                  "type": "string"
                },
                "generatedName": "ResponsesInsuranceAccountRespAccountValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesInsuranceAccountRespSettlementAsset",
            "key": "settlement_asset",
            "schema": {
              "generatedName": "responsesInsuranceAccountRespSettlementAsset",
              "value": {
                "description": "Settlement Asset for the account",
                "schema": {
                  "example": "USDC",
                  "type": "string"
                },
                "generatedName": "ResponsesInsuranceAccountRespSettlementAsset",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesInsuranceAccountRespUpdatedAt",
            "key": "updated_at",
            "schema": {
              "generatedName": "responsesInsuranceAccountRespUpdatedAt",
              "value": {
                "description": "Account last updated time",
                "schema": {
                  "example": 1681471234972,
                  "type": "int"
                },
                "generatedName": "ResponsesInsuranceAccountRespUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesInsuranceAccountResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.LiquidationResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesLiquidationRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesLiquidationRespCreatedAt",
              "value": {
                "description": "Liquidation created at timestamp",
                "schema": {
                  "example": 1697213130097,
                  "type": "int"
                },
                "generatedName": "ResponsesLiquidationRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesLiquidationRespId",
            "key": "id",
            "schema": {
              "generatedName": "responsesLiquidationRespId",
              "value": {
                "description": "Liquidation transaction hash",
                "schema": {
                  "example": "0x123456789",
                  "type": "string"
                },
                "generatedName": "ResponsesLiquidationRespId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesLiquidationResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.MarketChainDetails": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsCollateralAddress",
            "key": "collateral_address",
            "schema": {
              "generatedName": "responsesMarketChainDetailsCollateralAddress",
              "value": {
                "description": "Collateral address",
                "schema": {
                  "example": "0x1234567890",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsCollateralAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsContractAddress",
            "key": "contract_address",
            "schema": {
              "generatedName": "responsesMarketChainDetailsContractAddress",
              "value": {
                "description": "Contract address",
                "schema": {
                  "example": "0x1234567890",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsContractAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsFeeAccountAddress",
            "key": "fee_account_address",
            "schema": {
              "generatedName": "responsesMarketChainDetailsFeeAccountAddress",
              "value": {
                "description": "Fee account address",
                "schema": {
                  "example": "0x1234567890",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsFeeAccountAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsFeeMaker",
            "key": "fee_maker",
            "schema": {
              "generatedName": "responsesMarketChainDetailsFeeMaker",
              "value": {
                "description": "Maker fee",
                "schema": {
                  "example": "0.01",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsFeeMaker",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsFeeTaker",
            "key": "fee_taker",
            "schema": {
              "generatedName": "responsesMarketChainDetailsFeeTaker",
              "value": {
                "description": "Taker fee",
                "schema": {
                  "example": "0.01",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsFeeTaker",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsInsuranceFundAddress",
            "key": "insurance_fund_address",
            "schema": {
              "generatedName": "responsesMarketChainDetailsInsuranceFundAddress",
              "value": {
                "description": "Insurance fund address",
                "schema": {
                  "example": "0x1234567890",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsInsuranceFundAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsLiquidationFee",
            "key": "liquidation_fee",
            "schema": {
              "generatedName": "responsesMarketChainDetailsLiquidationFee",
              "value": {
                "description": "Liquidation fee",
                "schema": {
                  "example": "0.01",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsLiquidationFee",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsOracleAddress",
            "key": "oracle_address",
            "schema": {
              "generatedName": "responsesMarketChainDetailsOracleAddress",
              "value": {
                "description": "Oracle address",
                "schema": {
                  "example": "0x1234567890",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsOracleAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketChainDetailsSymbol",
            "key": "symbol",
            "schema": {
              "generatedName": "responsesMarketChainDetailsSymbol",
              "value": {
                "description": "Market symbol",
                "schema": {
                  "example": "ETH-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketChainDetailsSymbol",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesMarketChainDetails",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.MarketResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesMarketRespAssetKind",
            "key": "asset_kind",
            "schema": {
              "generatedName": "responsesMarketRespAssetKind",
              "value": {
                "description": "Type of asset",
                "schema": {
                  "example": "PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespAssetKind",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespBaseCurrency",
            "key": "base_currency",
            "schema": {
              "generatedName": "responsesMarketRespBaseCurrency",
              "value": {
                "description": "Base currency of the market pair",
                "schema": {
                  "example": "ETH",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespBaseCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespChainDetails",
            "key": "chain_details",
            "schema": {
              "generatedName": "responsesMarketRespChainDetails",
              "value": {
                "description": "Chain details",
                "generatedName": "ResponsesMarketRespChainDetails",
                "schema": "responses.MarketChainDetails",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespClampRate",
            "key": "clamp_rate",
            "schema": {
              "generatedName": "responsesMarketRespClampRate",
              "value": {
                "description": "Clamp rate",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespClampRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespDelta1CrossMarginParams",
            "key": "delta1_cross_margin_params",
            "schema": {
              "generatedName": "responsesMarketRespDelta1CrossMarginParams",
              "value": {
                "description": "Delta1 Cross margin parameters",
                "generatedName": "ResponsesMarketRespDelta1CrossMarginParams",
                "schema": "responses.Delta1CrossMarginParams",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespExpiryAt",
            "key": "expiry_at",
            "schema": {
              "generatedName": "responsesMarketRespExpiryAt",
              "value": {
                "description": "Market expiry time",
                "schema": {
                  "example": 0,
                  "type": "int"
                },
                "generatedName": "ResponsesMarketRespExpiryAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespFundingPeriodHours",
            "key": "funding_period_hours",
            "schema": {
              "generatedName": "responsesMarketRespFundingPeriodHours",
              "value": {
                "description": "Funding period in hours",
                "schema": {
                  "example": 8,
                  "type": "double"
                },
                "generatedName": "ResponsesMarketRespFundingPeriodHours",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespInterestRate",
            "key": "interest_rate",
            "schema": {
              "generatedName": "responsesMarketRespInterestRate",
              "value": {
                "description": "Interest rate",
                "schema": {
                  "example": "0.01",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespInterestRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespIvBandsWidth",
            "key": "iv_bands_width",
            "schema": {
              "generatedName": "responsesMarketRespIvBandsWidth",
              "value": {
                "description": "IV Bands Width",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespIvBandsWidth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMarketKind",
            "key": "market_kind",
            "schema": {
              "generatedName": "responsesMarketRespMarketKind",
              "value": {
                "description": "Type of market - always 'cross'",
                "schema": {
                  "example": "cross",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespMarketKind",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMaxFundingRate",
            "key": "max_funding_rate",
            "schema": {
              "generatedName": "responsesMarketRespMaxFundingRate",
              "value": {
                "description": "Max funding rate",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespMaxFundingRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMaxFundingRateChange",
            "key": "max_funding_rate_change",
            "schema": {
              "generatedName": "responsesMarketRespMaxFundingRateChange",
              "value": {
                "description": "Max funding rate change",
                "schema": {
                  "example": "0.0005",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespMaxFundingRateChange",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMaxOpenOrders",
            "key": "max_open_orders",
            "schema": {
              "generatedName": "responsesMarketRespMaxOpenOrders",
              "value": {
                "description": "Max open orders",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ResponsesMarketRespMaxOpenOrders",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMaxOrderSize",
            "key": "max_order_size",
            "schema": {
              "generatedName": "responsesMarketRespMaxOrderSize",
              "value": {
                "description": "Maximum order size",
                "schema": {
                  "example": "100",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespMaxOrderSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMaxTobSpread",
            "key": "max_tob_spread",
            "schema": {
              "generatedName": "responsesMarketRespMaxTobSpread",
              "value": {
                "description": "The maximum TOB spread allowed to apply funding rate changes",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespMaxTobSpread",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespMinNotional",
            "key": "min_notional",
            "schema": {
              "generatedName": "responsesMarketRespMinNotional",
              "value": {
                "description": "Minimum order size in USD",
                "schema": {
                  "example": "10",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespMinNotional",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespOpenAt",
            "key": "open_at",
            "schema": {
              "generatedName": "responsesMarketRespOpenAt",
              "value": {
                "description": "Market open time in milliseconds",
                "schema": {
                  "example": 0,
                  "type": "int"
                },
                "generatedName": "ResponsesMarketRespOpenAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespOptionCrossMarginParams",
            "key": "option_cross_margin_params",
            "schema": {
              "generatedName": "responsesMarketRespOptionCrossMarginParams",
              "value": {
                "description": "Option Cross margin parameters",
                "generatedName": "ResponsesMarketRespOptionCrossMarginParams",
                "schema": "responses.PerpetualOptionCrossMarginParams",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespOptionType",
            "key": "option_type",
            "schema": {
              "generatedName": "responsesMarketRespOptionType",
              "value": {
                "description": "Type of option (PUT or CALL)",
                "schema": {
                  "example": "PUT",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespOptionType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespOracleEwmaFactor",
            "key": "oracle_ewma_factor",
            "schema": {
              "generatedName": "responsesMarketRespOracleEwmaFactor",
              "value": {
                "description": "Oracle EWMA factor",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespOracleEwmaFactor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespOrderSizeIncrement",
            "key": "order_size_increment",
            "schema": {
              "generatedName": "responsesMarketRespOrderSizeIncrement",
              "value": {
                "description": "Minimum size increment for base currency",
                "schema": {
                  "example": "0.001",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespOrderSizeIncrement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespPositionLimit",
            "key": "position_limit",
            "schema": {
              "generatedName": "responsesMarketRespPositionLimit",
              "value": {
                "description": "Position limit",
                "schema": {
                  "example": "500",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespPositionLimit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespPriceBandsWidth",
            "key": "price_bands_width",
            "schema": {
              "generatedName": "responsesMarketRespPriceBandsWidth",
              "value": {
                "description": "Price Bands Width, 0.05 means 5% price deviation allowed from mark price",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespPriceBandsWidth",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespPriceFeedId",
            "key": "price_feed_id",
            "schema": {
              "generatedName": "responsesMarketRespPriceFeedId",
              "value": {
                "description": "Price feed id. Pyth price account used to price underlying asset",
                "schema": {
                  "example": "GVXRSBjFk6e6J3NbVPXohDJetcTjaeeuykUpbQF8UoMU",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespPriceFeedId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespPriceTickSize",
            "key": "price_tick_size",
            "schema": {
              "generatedName": "responsesMarketRespPriceTickSize",
              "value": {
                "description": "Minimum price increment of the market in USD",
                "schema": {
                  "example": "0.01",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespPriceTickSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespQuoteCurrency",
            "key": "quote_currency",
            "schema": {
              "generatedName": "responsesMarketRespQuoteCurrency",
              "value": {
                "description": "Quote currency of the market pair",
                "schema": {
                  "example": "USD",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespQuoteCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespSettlementCurrency",
            "key": "settlement_currency",
            "schema": {
              "generatedName": "responsesMarketRespSettlementCurrency",
              "value": {
                "description": "Settlement currency of the market pair",
                "schema": {
                  "example": "USDC",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespSettlementCurrency",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespStrikePrice",
            "key": "strike_price",
            "schema": {
              "generatedName": "responsesMarketRespStrikePrice",
              "value": {
                "description": "Strike price for option market",
                "schema": {
                  "example": "66500",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespStrikePrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespSymbol",
            "key": "symbol",
            "schema": {
              "generatedName": "responsesMarketRespSymbol",
              "value": {
                "description": "Market symbol",
                "schema": {
                  "example": "ETH-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketRespSymbol",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketRespTags",
            "key": "tags",
            "schema": {
              "generatedName": "responsesMarketRespTags",
              "value": {
                "description": "Market tags",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ResponsesMarketRespTagsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResponsesMarketRespTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesMarketResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.MarketSummaryResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespAsk",
            "key": "ask",
            "schema": {
              "generatedName": "responsesMarketSummaryRespAsk",
              "value": {
                "description": "Best ask price",
                "schema": {
                  "example": "30130.15",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespAsk",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespAskIv",
            "key": "ask_iv",
            "schema": {
              "generatedName": "responsesMarketSummaryRespAskIv",
              "value": {
                "description": "Ask implied volatility, for options",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespAskIv",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespBid",
            "key": "bid",
            "schema": {
              "generatedName": "responsesMarketSummaryRespBid",
              "value": {
                "description": "Best bid price",
                "schema": {
                  "example": "30112.22",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespBid",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespBidIv",
            "key": "bid_iv",
            "schema": {
              "generatedName": "responsesMarketSummaryRespBidIv",
              "value": {
                "description": "Bid implied volatility, for options",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespBidIv",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesMarketSummaryRespCreatedAt",
              "value": {
                "description": "Market summary creation time",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ResponsesMarketSummaryRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespDelta",
            "key": "delta",
            "schema": {
              "generatedName": "responsesMarketSummaryRespDelta",
              "value": {
                "description": "Deprecated: Use greeks.delta instead",
                "schema": {
                  "example": "1",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespDelta",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespFundingRate",
            "key": "funding_rate",
            "schema": {
              "generatedName": "responsesMarketSummaryRespFundingRate",
              "value": {
                "description": "[8 hour funding rate](https://docs.paradex.trade/risk-system/funding-mechanism#funding-rate)",
                "schema": {
                  "example": "0.3",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespFundingRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespFutureFundingRate",
            "key": "future_funding_rate",
            "schema": {
              "generatedName": "responsesMarketSummaryRespFutureFundingRate",
              "value": {
                "description": "Future funding rate, for options",
                "schema": {
                  "example": "0.3",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespFutureFundingRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespGreeks",
            "key": "greeks",
            "schema": {
              "generatedName": "responsesMarketSummaryRespGreeks",
              "value": {
                "description": "Greeks",
                "generatedName": "ResponsesMarketSummaryRespGreeks",
                "schema": "responses.Greeks",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespLastIv",
            "key": "last_iv",
            "schema": {
              "generatedName": "responsesMarketSummaryRespLastIv",
              "value": {
                "description": "Last traded price implied volatility, for options",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespLastIv",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespLastTradedPrice",
            "key": "last_traded_price",
            "schema": {
              "generatedName": "responsesMarketSummaryRespLastTradedPrice",
              "value": {
                "description": "Last traded price",
                "schema": {
                  "example": "30109.53",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespLastTradedPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespMarkIv",
            "key": "mark_iv",
            "schema": {
              "generatedName": "responsesMarketSummaryRespMarkIv",
              "value": {
                "description": "Mark implied volatility, for options",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespMarkIv",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespMarkPrice",
            "key": "mark_price",
            "schema": {
              "generatedName": "responsesMarketSummaryRespMarkPrice",
              "value": {
                "description": "[Mark price](https://docs.paradex.trade/risk-system/mark-price-calculation)",
                "schema": {
                  "example": "29799.70877478",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespMarkPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespOpenInterest",
            "key": "open_interest",
            "schema": {
              "generatedName": "responsesMarketSummaryRespOpenInterest",
              "value": {
                "description": "Open interest in base currency",
                "schema": {
                  "example": "6100048.3",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespOpenInterest",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespPriceChangeRate24H",
            "key": "price_change_rate_24h",
            "schema": {
              "generatedName": "responsesMarketSummaryRespPriceChangeRate24H",
              "value": {
                "description": "Price change rate in the last 24 hours",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespPriceChangeRate24H",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespSymbol",
            "key": "symbol",
            "schema": {
              "generatedName": "responsesMarketSummaryRespSymbol",
              "value": {
                "description": "Market symbol",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespSymbol",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespTotalVolume",
            "key": "total_volume",
            "schema": {
              "generatedName": "responsesMarketSummaryRespTotalVolume",
              "value": {
                "description": "Lifetime total traded volume in USD",
                "schema": {
                  "example": "141341.0424",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespTotalVolume",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespUnderlyingPrice",
            "key": "underlying_price",
            "schema": {
              "generatedName": "responsesMarketSummaryRespUnderlyingPrice",
              "value": {
                "description": "Underlying asset price (spot oracle price)",
                "schema": {
                  "example": "29876.3",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespUnderlyingPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesMarketSummaryRespVolume24H",
            "key": "volume_24h",
            "schema": {
              "generatedName": "responsesMarketSummaryRespVolume24H",
              "value": {
                "description": "24 hour volume in USD",
                "schema": {
                  "example": "47041.0424",
                  "type": "string"
                },
                "generatedName": "ResponsesMarketSummaryRespVolume24H",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesMarketSummaryResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.OrderFlag": {
        "generatedName": "ResponsesOrderFlag",
        "values": [
          {
            "nameOverride": "ReduceOnly",
            "generatedName": "REDUCE_ONLY",
            "value": "REDUCE_ONLY",
            "casing": {}
          },
          {
            "nameOverride": "StopConditionBelowTrigger",
            "generatedName": "STOP_CONDITION_BELOW_TRIGGER",
            "value": "STOP_CONDITION_BELOW_TRIGGER",
            "casing": {}
          },
          {
            "nameOverride": "StopConditionAboveTrigger",
            "generatedName": "STOP_CONDITION_ABOVE_TRIGGER",
            "value": "STOP_CONDITION_ABOVE_TRIGGER",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.OrderInstruction": {
        "generatedName": "ResponsesOrderInstruction",
        "values": [
          {
            "nameOverride": "GTC",
            "generatedName": "GTC",
            "value": "GTC",
            "casing": {}
          },
          {
            "nameOverride": "PostOnly",
            "generatedName": "POST_ONLY",
            "value": "POST_ONLY",
            "casing": {}
          },
          {
            "nameOverride": "IOC",
            "generatedName": "IOC",
            "value": "IOC",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.OrderResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesOrderRespAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesOrderRespAccount",
              "value": {
                "description": "Account identifier (user's account address)",
                "schema": {
                  "example": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7512x",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespAvgFillPrice",
            "key": "avg_fill_price",
            "schema": {
              "generatedName": "responsesOrderRespAvgFillPrice",
              "value": {
                "description": "Average fill price of the order",
                "schema": {
                  "example": "26000",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespAvgFillPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespCancelReason",
            "key": "cancel_reason",
            "schema": {
              "generatedName": "responsesOrderRespCancelReason",
              "value": {
                "description": "Reason for order cancellation if it was closed by cancel",
                "schema": {
                  "example": "NOT_ENOUGH_MARGIN",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespCancelReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "responsesOrderRespClientId",
              "value": {
                "description": "Client id passed on order creation",
                "schema": {
                  "example": "x1234",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesOrderRespCreatedAt",
              "value": {
                "description": "Order creation time",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesOrderRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespFlags",
            "key": "flags",
            "schema": {
              "generatedName": "responsesOrderRespFlags",
              "value": {
                "description": "Order flags, allow flag: REDUCE_ONLY",
                "value": {
                  "generatedName": "ResponsesOrderRespFlagsItem",
                  "schema": "responses.OrderFlag",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesOrderRespFlags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespId",
            "key": "id",
            "schema": {
              "generatedName": "responsesOrderRespId",
              "value": {
                "description": "Unique order identifier",
                "schema": {
                  "example": "123456",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespInstruction",
            "key": "instruction",
            "schema": {
              "generatedName": "responsesOrderRespInstruction",
              "value": {
                "description": "OrderInstruction (GTC, IOC, POST_ONLY)",
                "generatedName": "ResponsesOrderRespInstruction",
                "schema": "responses.OrderInstruction",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesOrderRespLastUpdatedAt",
              "value": {
                "description": "Order last update time.  No changes once status=CLOSED",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesOrderRespLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesOrderRespMarket",
              "value": {
                "description": "Market to which order belongs",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespPrice",
            "key": "price",
            "schema": {
              "generatedName": "responsesOrderRespPrice",
              "value": {
                "description": "Order price. 0 for MARKET orders",
                "schema": {
                  "example": "26000",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespPublishedAt",
            "key": "published_at",
            "schema": {
              "generatedName": "responsesOrderRespPublishedAt",
              "value": {
                "description": "Order published to the client time",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesOrderRespPublishedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespReceivedAt",
            "key": "received_at",
            "schema": {
              "generatedName": "responsesOrderRespReceivedAt",
              "value": {
                "description": "Order received from the client time",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesOrderRespReceivedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespRemainingSize",
            "key": "remaining_size",
            "schema": {
              "generatedName": "responsesOrderRespRemainingSize",
              "value": {
                "description": "Remaining size of the order",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespRemainingSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespSeqNo",
            "key": "seq_no",
            "schema": {
              "generatedName": "responsesOrderRespSeqNo",
              "value": {
                "description": "Unique increasing number (non-sequential) that is assigned to this order update and changes on every order update. Can be used to deduplicate multiple feeds. WebSocket and REST responses use independently generated seq_no per event.",
                "schema": {
                  "example": 1681471234972000000,
                  "type": "int"
                },
                "generatedName": "ResponsesOrderRespSeqNo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespSide",
            "key": "side",
            "schema": {
              "generatedName": "responsesOrderRespSide",
              "value": {
                "description": "Order side",
                "generatedName": "ResponsesOrderRespSide",
                "schema": "responses.OrderSide",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespSize",
            "key": "size",
            "schema": {
              "generatedName": "responsesOrderRespSize",
              "value": {
                "description": "Order size",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesOrderRespStatus",
              "value": {
                "description": "Order status",
                "generatedName": "ResponsesOrderRespStatus",
                "schema": "responses.OrderStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespStp",
            "key": "stp",
            "schema": {
              "generatedName": "responsesOrderRespStp",
              "value": {
                "description": "Self Trade Prevention mode (EXEPIRE_MAKER, EXPIRE_TAKER, EXPIRE_BOTH)",
                "generatedName": "ResponsesOrderRespStp",
                "schema": "responses.STPMode",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "responsesOrderRespTimestamp",
              "value": {
                "description": "Order signature timestamp",
                "schema": {
                  "example": 1681493746016,
                  "type": "int"
                },
                "generatedName": "ResponsesOrderRespTimestamp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespTriggerPrice",
            "key": "trigger_price",
            "schema": {
              "generatedName": "responsesOrderRespTriggerPrice",
              "value": {
                "description": "Trigger price for stop order",
                "schema": {
                  "example": "26000",
                  "type": "string"
                },
                "generatedName": "ResponsesOrderRespTriggerPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesOrderRespType",
            "key": "type",
            "schema": {
              "generatedName": "responsesOrderRespType",
              "value": {
                "description": "Order type",
                "generatedName": "ResponsesOrderRespType",
                "schema": "responses.OrderType",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesOrderResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.OrderSide": {
        "generatedName": "ResponsesOrderSide",
        "values": [
          {
            "nameOverride": "Buy",
            "generatedName": "BUY",
            "value": "BUY",
            "casing": {}
          },
          {
            "nameOverride": "Sell",
            "generatedName": "SELL",
            "value": "SELL",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.OrderStatus": {
        "generatedName": "ResponsesOrderStatus",
        "values": [
          {
            "nameOverride": "New",
            "generatedName": "NEW",
            "value": "NEW",
            "casing": {}
          },
          {
            "nameOverride": "Untriggered",
            "generatedName": "UNTRIGGERED",
            "value": "UNTRIGGERED",
            "casing": {}
          },
          {
            "nameOverride": "Open",
            "generatedName": "OPEN",
            "value": "OPEN",
            "casing": {}
          },
          {
            "nameOverride": "Closed",
            "generatedName": "CLOSED",
            "value": "CLOSED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.OrderType": {
        "generatedName": "ResponsesOrderType",
        "values": [
          {
            "nameOverride": "Market",
            "generatedName": "MARKET",
            "value": "MARKET",
            "casing": {}
          },
          {
            "nameOverride": "Limit",
            "generatedName": "LIMIT",
            "value": "LIMIT",
            "casing": {}
          },
          {
            "nameOverride": "StopLimit",
            "generatedName": "STOP_LIMIT",
            "value": "STOP_LIMIT",
            "casing": {}
          },
          {
            "nameOverride": "StopMarket",
            "generatedName": "STOP_MARKET",
            "value": "STOP_MARKET",
            "casing": {}
          },
          {
            "nameOverride": "TakeProfitLimit",
            "generatedName": "TAKE_PROFIT_LIMIT",
            "value": "TAKE_PROFIT_LIMIT",
            "casing": {}
          },
          {
            "nameOverride": "TakeProfitMarket",
            "generatedName": "TAKE_PROFIT_MARKET",
            "value": "TAKE_PROFIT_MARKET",
            "casing": {}
          },
          {
            "nameOverride": "StopLossMarket",
            "generatedName": "STOP_LOSS_MARKET",
            "value": "STOP_LOSS_MARKET",
            "casing": {}
          },
          {
            "nameOverride": "StopLossLimit",
            "generatedName": "STOP_LOSS_LIMIT",
            "value": "STOP_LOSS_LIMIT",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.PerpetualOptionCrossMarginParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionCrossMarginParamsImf",
            "key": "imf",
            "schema": {
              "generatedName": "responsesPerpetualOptionCrossMarginParamsImf",
              "value": {
                "generatedName": "ResponsesPerpetualOptionCrossMarginParamsImf",
                "schema": "responses.PerpetualOptionMarginParams",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionCrossMarginParamsMmf",
            "key": "mmf",
            "schema": {
              "generatedName": "responsesPerpetualOptionCrossMarginParamsMmf",
              "value": {
                "generatedName": "ResponsesPerpetualOptionCrossMarginParamsMmf",
                "schema": "responses.PerpetualOptionMarginParams",
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesPerpetualOptionCrossMarginParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.PerpetualOptionMarginParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionMarginParamsLongItm",
            "key": "long_itm",
            "schema": {
              "generatedName": "responsesPerpetualOptionMarginParamsLongItm",
              "value": {
                "description": "Margin fraction for long ITM options",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesPerpetualOptionMarginParamsLongItm",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionMarginParamsPremiumMultiplier",
            "key": "premium_multiplier",
            "schema": {
              "generatedName": "responsesPerpetualOptionMarginParamsPremiumMultiplier",
              "value": {
                "description": "Multiplier for margin fraction for premium",
                "schema": {
                  "example": "1.2",
                  "type": "string"
                },
                "generatedName": "ResponsesPerpetualOptionMarginParamsPremiumMultiplier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionMarginParamsShortItm",
            "key": "short_itm",
            "schema": {
              "generatedName": "responsesPerpetualOptionMarginParamsShortItm",
              "value": {
                "description": "Margin fraction for short ITM options",
                "schema": {
                  "example": "0.4",
                  "type": "string"
                },
                "generatedName": "ResponsesPerpetualOptionMarginParamsShortItm",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionMarginParamsShortOtm",
            "key": "short_otm",
            "schema": {
              "generatedName": "responsesPerpetualOptionMarginParamsShortOtm",
              "value": {
                "description": "Margin fraction for short OTM options",
                "schema": {
                  "example": "0.25",
                  "type": "string"
                },
                "generatedName": "ResponsesPerpetualOptionMarginParamsShortOtm",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPerpetualOptionMarginParamsShortPutCap",
            "key": "short_put_cap",
            "schema": {
              "generatedName": "responsesPerpetualOptionMarginParamsShortPutCap",
              "value": {
                "description": "Cap for margin fraction for short put options",
                "schema": {
                  "example": "0.5",
                  "type": "string"
                },
                "generatedName": "ResponsesPerpetualOptionMarginParamsShortPutCap",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesPerpetualOptionMarginParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.PositionResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesPositionRespAverageEntryPrice",
            "key": "average_entry_price",
            "schema": {
              "generatedName": "responsesPositionRespAverageEntryPrice",
              "value": {
                "description": "Average entry price",
                "schema": {
                  "example": "29001.34",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespAverageEntryPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespAverageEntryPriceUsd",
            "key": "average_entry_price_usd",
            "schema": {
              "generatedName": "responsesPositionRespAverageEntryPriceUsd",
              "value": {
                "description": "Average entry price in USD",
                "schema": {
                  "example": "29001.34",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespAverageEntryPriceUsd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespAverageExitPrice",
            "key": "average_exit_price",
            "schema": {
              "generatedName": "responsesPositionRespAverageExitPrice",
              "value": {
                "description": "Average exit price",
                "schema": {
                  "example": "29001.34",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespAverageExitPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespCachedFundingIndex",
            "key": "cached_funding_index",
            "schema": {
              "generatedName": "responsesPositionRespCachedFundingIndex",
              "value": {
                "description": "Position cached funding index",
                "schema": {
                  "example": "1234.3",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespCachedFundingIndex",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespClosedAt",
            "key": "closed_at",
            "schema": {
              "generatedName": "responsesPositionRespClosedAt",
              "value": {
                "description": "Position closed time",
                "schema": {
                  "example": 1681493939981,
                  "type": "int"
                },
                "generatedName": "ResponsesPositionRespClosedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespCost",
            "key": "cost",
            "schema": {
              "generatedName": "responsesPositionRespCost",
              "value": {
                "description": "Position cost",
                "schema": {
                  "example": "-10005.4623",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespCost",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespCostUsd",
            "key": "cost_usd",
            "schema": {
              "generatedName": "responsesPositionRespCostUsd",
              "value": {
                "description": "Position cost in USD",
                "schema": {
                  "example": "-10005.4623",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespCostUsd",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesPositionRespCreatedAt",
              "value": {
                "description": "Position creation time",
                "schema": {
                  "example": 1681493939981,
                  "type": "int"
                },
                "generatedName": "ResponsesPositionRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespId",
            "key": "id",
            "schema": {
              "generatedName": "responsesPositionRespId",
              "value": {
                "description": "Unique string ID for the position",
                "schema": {
                  "example": "1234234",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespLastFillId",
            "key": "last_fill_id",
            "schema": {
              "generatedName": "responsesPositionRespLastFillId",
              "value": {
                "description": "Last fill ID to which the position is referring",
                "schema": {
                  "example": "1234234",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespLastFillId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesPositionRespLastUpdatedAt",
              "value": {
                "description": "Position last update time",
                "schema": {
                  "example": 1681493939981,
                  "type": "int"
                },
                "generatedName": "ResponsesPositionRespLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespLeverage",
            "key": "leverage",
            "schema": {
              "generatedName": "responsesPositionRespLeverage",
              "value": {
                "description": "Leverage of the position",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespLeverage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespLiquidationPrice",
            "key": "liquidation_price",
            "schema": {
              "generatedName": "responsesPositionRespLiquidationPrice",
              "value": {
                "description": "Liquidation price of the position",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespLiquidationPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesPositionRespMarket",
              "value": {
                "description": "Market for position",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespRealizedPositionalFundingPnl",
            "key": "realized_positional_funding_pnl",
            "schema": {
              "generatedName": "responsesPositionRespRealizedPositionalFundingPnl",
              "value": {
                "description": "Realized Funding PnL for the position. Reset to 0 when position is closed or flipped.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespRealizedPositionalFundingPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespRealizedPositionalPnl",
            "key": "realized_positional_pnl",
            "schema": {
              "generatedName": "responsesPositionRespRealizedPositionalPnl",
              "value": {
                "description": "Realized PnL including both positional PnL and funding payments. Reset to 0 when position is closed or flipped.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespRealizedPositionalPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespSeqNo",
            "key": "seq_no",
            "schema": {
              "generatedName": "responsesPositionRespSeqNo",
              "value": {
                "description": "Unique increasing number (non-sequential) that is assigned to this position update. Can be used to deduplicate multiple feeds",
                "schema": {
                  "example": 1681471234972000000,
                  "type": "int"
                },
                "generatedName": "ResponsesPositionRespSeqNo",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespSide",
            "key": "side",
            "schema": {
              "generatedName": "responsesPositionRespSide",
              "value": {
                "description": "Position Side : Long or Short",
                "generatedName": "ResponsesPositionRespSide",
                "values": [
                  {
                    "generatedName": "SHORT",
                    "value": "SHORT",
                    "casing": {}
                  },
                  {
                    "generatedName": "LONG",
                    "value": "LONG",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespSize",
            "key": "size",
            "schema": {
              "generatedName": "responsesPositionRespSize",
              "value": {
                "description": "Size of the position with sign (positive if long or negative if short)",
                "schema": {
                  "example": "-0.345",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesPositionRespStatus",
              "value": {
                "description": "Status of Position : Open or Closed",
                "generatedName": "ResponsesPositionRespStatus",
                "values": [
                  {
                    "generatedName": "OPEN",
                    "value": "OPEN",
                    "casing": {}
                  },
                  {
                    "generatedName": "CLOSED",
                    "value": "CLOSED",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespUnrealizedFundingPnl",
            "key": "unrealized_funding_pnl",
            "schema": {
              "generatedName": "responsesPositionRespUnrealizedFundingPnl",
              "value": {
                "description": "Unrealized running funding P&L for the position",
                "schema": {
                  "example": "12.234",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespUnrealizedFundingPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesPositionRespUnrealizedPnl",
            "key": "unrealized_pnl",
            "schema": {
              "generatedName": "responsesPositionRespUnrealizedPnl",
              "value": {
                "description": "Unrealized P&L of the position in the quote asset",
                "schema": {
                  "example": "-123.23",
                  "type": "string"
                },
                "generatedName": "ResponsesPositionRespUnrealizedPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesPositionResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.ProgramsEligibility": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesProgramsEligibilityAffiliate",
            "key": "affiliate",
            "schema": {
              "generatedName": "responsesProgramsEligibilityAffiliate",
              "value": {
                "schema": {
                  "example": "Pending",
                  "type": "string"
                },
                "generatedName": "ResponsesProgramsEligibilityAffiliate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesProgramsEligibilityFee",
            "key": "fee",
            "schema": {
              "generatedName": "responsesProgramsEligibilityFee",
              "value": {
                "schema": {
                  "example": "True",
                  "type": "string"
                },
                "generatedName": "ResponsesProgramsEligibilityFee",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesProgramsEligibilityMaker",
            "key": "maker",
            "schema": {
              "generatedName": "responsesProgramsEligibilityMaker",
              "value": {
                "schema": {
                  "example": "True",
                  "type": "string"
                },
                "generatedName": "ResponsesProgramsEligibilityMaker",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesProgramsEligibilityReferral",
            "key": "referral",
            "schema": {
              "generatedName": "responsesProgramsEligibilityReferral",
              "value": {
                "schema": {
                  "example": "False",
                  "type": "string"
                },
                "generatedName": "ResponsesProgramsEligibilityReferral",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesProgramsEligibility",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.ReferralConfigResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesReferralConfigRespCommissionRate",
            "key": "commission_rate",
            "schema": {
              "generatedName": "responsesReferralConfigRespCommissionRate",
              "value": {
                "description": "Commission rate for the referer",
                "schema": {
                  "example": "0.1",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralConfigRespCommissionRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralConfigRespCommissionVolumeCap",
            "key": "commission_volume_cap",
            "schema": {
              "generatedName": "responsesReferralConfigRespCommissionVolumeCap",
              "value": {
                "description": "Volume cap for commission",
                "schema": {
                  "example": "1000000000",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralConfigRespCommissionVolumeCap",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralConfigRespDiscountRate",
            "key": "discount_rate",
            "schema": {
              "generatedName": "responsesReferralConfigRespDiscountRate",
              "value": {
                "description": "Discount rate for the referee",
                "schema": {
                  "example": "0.1",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralConfigRespDiscountRate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralConfigRespDiscountVolumeCap",
            "key": "discount_volume_cap",
            "schema": {
              "generatedName": "responsesReferralConfigRespDiscountVolumeCap",
              "value": {
                "description": "Volume cap for discount",
                "schema": {
                  "example": "30000000",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralConfigRespDiscountVolumeCap",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralConfigRespMinimumVolume",
            "key": "minimum_volume",
            "schema": {
              "generatedName": "responsesReferralConfigRespMinimumVolume",
              "value": {
                "description": "Minimum volume required to be eligible for Program",
                "schema": {
                  "example": "0.123",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralConfigRespMinimumVolume",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralConfigRespReferralType",
            "key": "referral_type",
            "schema": {
              "generatedName": "responsesReferralConfigRespReferralType",
              "value": {
                "description": "Referral type",
                "schema": {
                  "example": "Referral",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralConfigRespReferralType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesReferralConfigResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.ReferralsResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesReferralsRespAddress",
            "key": "address",
            "schema": {
              "generatedName": "responsesReferralsRespAddress",
              "value": {
                "description": "referee address",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesReferralsRespAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralsRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesReferralsRespCreatedAt",
              "value": {
                "description": "Joined at timestamp in milliseconds",
                "schema": {
                  "example": 1715592690488,
                  "type": "int"
                },
                "generatedName": "ResponsesReferralsRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralsRespReferralCode",
            "key": "referral_code",
            "schema": {
              "generatedName": "responsesReferralsRespReferralCode",
              "value": {
                "description": "Referral code used to onboard the referee",
                "schema": {
                  "example": "maxdegen01",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralsRespReferralCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralsRespReferralRewards",
            "key": "referral_rewards",
            "schema": {
              "generatedName": "responsesReferralsRespReferralRewards",
              "value": {
                "description": "Total referral commission earned from the fee of referee",
                "schema": {
                  "example": "0.123",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralsRespReferralRewards",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesReferralsRespVolumeTraded",
            "key": "volume_traded",
            "schema": {
              "generatedName": "responsesReferralsRespVolumeTraded",
              "value": {
                "description": "Total volume traded by referee",
                "schema": {
                  "example": "0.123",
                  "type": "string"
                },
                "generatedName": "ResponsesReferralsRespVolumeTraded",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesReferralsResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.STPMode": {
        "generatedName": "ResponsesStpMode",
        "values": [
          {
            "nameOverride": "Maker",
            "generatedName": "EXPIRE_MAKER",
            "value": "EXPIRE_MAKER",
            "casing": {}
          },
          {
            "nameOverride": "Taker",
            "generatedName": "EXPIRE_TAKER",
            "value": "EXPIRE_TAKER",
            "casing": {}
          },
          {
            "nameOverride": "Both",
            "generatedName": "EXPIRE_BOTH",
            "value": "EXPIRE_BOTH",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.Strategy": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesStrategyAddress",
            "key": "address",
            "schema": {
              "generatedName": "responsesStrategyAddress",
              "value": {
                "description": "Contract address of the sub-operator",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesStrategyAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesStrategyName",
            "key": "name",
            "schema": {
              "generatedName": "responsesStrategyName",
              "value": {
                "description": "Strategy name",
                "schema": {
                  "example": "Alpha Strategy",
                  "type": "string"
                },
                "generatedName": "ResponsesStrategyName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesStrategy",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.SystemConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseBlockExplorerUrl",
            "key": "block_explorer_url",
            "schema": {
              "generatedName": "responsesSystemConfigResponseBlockExplorerUrl",
              "value": {
                "description": "Block explorer URL for the current SN Instance",
                "schema": {
                  "example": "https://voyager.testnet.paradex.trade/",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseBlockExplorerUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseBridgedTokens",
            "key": "bridged_tokens",
            "schema": {
              "generatedName": "responsesSystemConfigResponseBridgedTokens",
              "value": {
                "description": "bridged tokens config\nhttps://github.com/starknet-io/starknet-addresses/blob/master/bridged_tokens/goerli.json",
                "value": {
                  "generatedName": "ResponsesSystemConfigResponseBridgedTokensItem",
                  "schema": "responses.BridgedToken",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesSystemConfigResponseBridgedTokens",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "responsesSystemConfigResponseEnvironment",
              "value": {
                "description": "Environment of the Paradex Instance",
                "schema": {
                  "example": "local",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseEnvironment",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseL1ChainId",
            "key": "l1_chain_id",
            "schema": {
              "generatedName": "responsesSystemConfigResponseL1ChainId",
              "value": {
                "description": "L1 chain ID value",
                "schema": {
                  "example": "5",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseL1ChainId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseL1CoreContractAddress",
            "key": "l1_core_contract_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseL1CoreContractAddress",
              "value": {
                "description": "Address of Starknet L1 core contract",
                "schema": {
                  "example": "0x182FE62c57461d4c5Ab1aE6F04f1D51aA1607daf",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseL1CoreContractAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseL1OperatorAddress",
            "key": "l1_operator_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseL1OperatorAddress",
              "value": {
                "description": "Address of Starknet L1 operator",
                "schema": {
                  "example": "0x63e762538C70442758Fd622116d817761c94FD6A",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseL1OperatorAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseL1WithdrawRelayerAddress",
            "key": "l1_withdraw_relayer_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseL1WithdrawRelayerAddress",
              "value": {
                "description": "Address of L1 Withdraw Relayer",
                "schema": {
                  "example": "0x63e762538C70442758Fd622116d817761c94FD6A",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseL1WithdrawRelayerAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseL2WithdrawRelayerAddress",
            "key": "l2_withdraw_relayer_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseL2WithdrawRelayerAddress",
              "value": {
                "description": "Address of L2 Withdraw Relayer",
                "schema": {
                  "example": "0x63e762538C70442758Fd622116d817761c94FD6A",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseL2WithdrawRelayerAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseLiquidationFee",
            "key": "liquidation_fee",
            "schema": {
              "generatedName": "responsesSystemConfigResponseLiquidationFee",
              "value": {
                "description": "Liquidation fee",
                "schema": {
                  "example": "0.20",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseLiquidationFee",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseOracleAddress",
            "key": "oracle_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseOracleAddress",
              "value": {
                "description": "Oracle contract address",
                "schema": {
                  "example": "0x47c622ce5f7ff7fa17725df596f4f506364e49be0621eb142a75b44ee3689c6",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseOracleAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseParaclearAccountHash",
            "key": "paraclear_account_hash",
            "schema": {
              "generatedName": "responsesSystemConfigResponseParaclearAccountHash",
              "value": {
                "description": "Class hash of the account contract",
                "schema": {
                  "example": "0x033434ad846cdd5f23eb73ff09fe6fddd568284a0fb7d1be20ee482f044dabe2",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseParaclearAccountHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseParaclearAccountProxyHash",
            "key": "paraclear_account_proxy_hash",
            "schema": {
              "generatedName": "responsesSystemConfigResponseParaclearAccountProxyHash",
              "value": {
                "description": "Proxy hash of the account contract",
                "schema": {
                  "example": "0x3530cc4759d78042f1b543bf797f5f3d647cde0388c33734cf91b7f7b9314a9",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseParaclearAccountProxyHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseParaclearAddress",
            "key": "paraclear_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseParaclearAddress",
              "value": {
                "description": "Paraclear contract address",
                "schema": {
                  "example": "0x4638e3041366aa71720be63e32e53e1223316c7f0d56f7aa617542ed1e7554d",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseParaclearAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseParaclearDecimals",
            "key": "paraclear_decimals",
            "schema": {
              "generatedName": "responsesSystemConfigResponseParaclearDecimals",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "ResponsesSystemConfigResponseParaclearDecimals",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponsePartialLiquidationBuffer",
            "key": "partial_liquidation_buffer",
            "schema": {
              "generatedName": "responsesSystemConfigResponsePartialLiquidationBuffer",
              "value": {
                "description": "Partial liquidation buffer. Account value is supposed to be at least this much above the MMR after partial liquidation",
                "schema": {
                  "example": "0.2",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponsePartialLiquidationBuffer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponsePartialLiquidationShareIncrement",
            "key": "partial_liquidation_share_increment",
            "schema": {
              "generatedName": "responsesSystemConfigResponsePartialLiquidationShareIncrement",
              "value": {
                "description": "Minimum granularity of partial liquidation share. The share is rounded up to the nearest multiple of this value",
                "schema": {
                  "example": "0.05",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponsePartialLiquidationShareIncrement",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseStarknetChainId",
            "key": "starknet_chain_id",
            "schema": {
              "generatedName": "responsesSystemConfigResponseStarknetChainId",
              "value": {
                "description": "Chain ID for the Starknet Instance",
                "schema": {
                  "example": "SN_CHAIN_ID",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseStarknetChainId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseStarknetFullnodeRpcUrl",
            "key": "starknet_fullnode_rpc_url",
            "schema": {
              "generatedName": "responsesSystemConfigResponseStarknetFullnodeRpcUrl",
              "value": {
                "description": "Full node RPC URL from Starknet",
                "schema": {
                  "example": "https://pathfinder.api.testnet.paradex.trade/rpc/v0_7",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseStarknetFullnodeRpcUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseStarknetGatewayUrl",
            "key": "starknet_gateway_url",
            "schema": {
              "generatedName": "responsesSystemConfigResponseStarknetGatewayUrl",
              "value": {
                "description": "Feeder Gateway URL from Starknet",
                "schema": {
                  "example": "https://potc-testnet-02.starknet.io",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseStarknetGatewayUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesSystemConfigResponseUniversalDeployerAddress",
            "key": "universal_deployer_address",
            "schema": {
              "generatedName": "responsesSystemConfigResponseUniversalDeployerAddress",
              "value": {
                "description": "Universal deployer address",
                "schema": {
                  "example": "0x1f3f9d3f1f0b7f3f9f3f9f3f9f3f9f3f9f3f9f3f",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemConfigResponseUniversalDeployerAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesSystemConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.SystemStateResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesSystemStateResponseStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesSystemStateResponseStatus",
              "value": {
                "description": "Status of the system",
                "generatedName": "ResponsesSystemStateResponseStatus",
                "schema": "responses.SystemStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesSystemStateResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.SystemStatus": {
        "generatedName": "ResponsesSystemStatus",
        "values": [
          {
            "nameOverride": "Ok",
            "generatedName": "ok",
            "value": "ok",
            "casing": {}
          },
          {
            "nameOverride": "Maintenance",
            "generatedName": "maintenance",
            "value": "maintenance",
            "casing": {}
          },
          {
            "nameOverride": "CancelOnly",
            "generatedName": "cancel_only",
            "value": "cancel_only",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.SystemTimeResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesSystemTimeResponseServerTime",
            "key": "server_time",
            "schema": {
              "generatedName": "responsesSystemTimeResponseServerTime",
              "value": {
                "description": "Paradex Server time",
                "schema": {
                  "example": "1681493415023",
                  "type": "string"
                },
                "generatedName": "ResponsesSystemTimeResponseServerTime",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesSystemTimeResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.TradeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesTradeResultCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesTradeResultCreatedAt",
              "value": {
                "description": "Unix Millisecond timestamp at which trade was done",
                "schema": {
                  "example": 1681497002041,
                  "type": "int"
                },
                "generatedName": "ResponsesTradeResultCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradeResultId",
            "key": "id",
            "schema": {
              "generatedName": "responsesTradeResultId",
              "value": {
                "description": "Unique Trade ID per TradeType",
                "schema": {
                  "example": "12345643",
                  "type": "string"
                },
                "generatedName": "ResponsesTradeResultId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradeResultMarket",
            "key": "market",
            "schema": {
              "generatedName": "responsesTradeResultMarket",
              "value": {
                "description": "Market for which trade was done",
                "schema": {
                  "example": "BTC-USD-PERP",
                  "type": "string"
                },
                "generatedName": "ResponsesTradeResultMarket",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradeResultPrice",
            "key": "price",
            "schema": {
              "generatedName": "responsesTradeResultPrice",
              "value": {
                "description": "Trade price",
                "schema": {
                  "example": "30001.2",
                  "type": "string"
                },
                "generatedName": "ResponsesTradeResultPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradeResultSide",
            "key": "side",
            "schema": {
              "generatedName": "responsesTradeResultSide",
              "value": {
                "description": "Taker side",
                "generatedName": "ResponsesTradeResultSide",
                "schema": "responses.OrderSide",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradeResultSize",
            "key": "size",
            "schema": {
              "generatedName": "responsesTradeResultSize",
              "value": {
                "description": "Trade size",
                "schema": {
                  "example": "0.01",
                  "type": "string"
                },
                "generatedName": "ResponsesTradeResultSize",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradeResultTradeType",
            "key": "trade_type",
            "schema": {
              "generatedName": "responsesTradeResultTradeType",
              "value": {
                "description": "Trade type, can be FILL or LIQUIDATION",
                "schema": {
                  "example": "FILL",
                  "type": "string"
                },
                "generatedName": "ResponsesTradeResultTradeType",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesTradeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.TradebustResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesTradebustResultAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesTradebustResultAccount",
              "value": {
                "description": "Starknet Account from which fill was created",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesTradebustResultAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradebustResultBustedFillId",
            "key": "busted_fill_id",
            "schema": {
              "generatedName": "responsesTradebustResultBustedFillId",
              "value": {
                "description": "Unique string ID of the busted fill",
                "schema": {
                  "example": "12342345",
                  "type": "string"
                },
                "generatedName": "ResponsesTradebustResultBustedFillId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTradebustResultCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesTradebustResultCreatedAt",
              "value": {
                "description": "Unix Millis timestamp when bust was created",
                "schema": {
                  "example": 1681497002041,
                  "type": "int"
                },
                "generatedName": "ResponsesTradebustResultCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesTradebustResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.TraderRole": {
        "generatedName": "ResponsesTraderRole",
        "values": [
          {
            "nameOverride": "Taker",
            "generatedName": "TAKER",
            "value": "TAKER",
            "casing": {}
          },
          {
            "nameOverride": "Maker",
            "generatedName": "MAKER",
            "value": "MAKER",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.TransactionResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesTransactionResponseCompletedAt",
            "key": "completed_at",
            "schema": {
              "generatedName": "responsesTransactionResponseCompletedAt",
              "value": {
                "description": "Timestamp from when the transaction was completed",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ResponsesTransactionResponseCompletedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransactionResponseCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesTransactionResponseCreatedAt",
              "value": {
                "description": "Timestamp from when the transaction was sent to blockchain gateway",
                "schema": {
                  "type": "int"
                },
                "generatedName": "ResponsesTransactionResponseCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransactionResponseHash",
            "key": "hash",
            "schema": {
              "generatedName": "responsesTransactionResponseHash",
              "value": {
                "description": "Tx Hash of the settled trade                                                // Hash of the transaction",
                "schema": {
                  "example": "0x445c05d6bfb899e39338440d199971c4d7f4cde7878ed3888df3f716efb8df2",
                  "type": "string"
                },
                "generatedName": "ResponsesTransactionResponseHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransactionResponseId",
            "key": "id",
            "schema": {
              "generatedName": "responsesTransactionResponseId",
              "value": {
                "description": "Unique string ID of the event that triggered the transaction. For example, fill ID or liquidation ID",
                "schema": {
                  "example": "12342423",
                  "type": "string"
                },
                "generatedName": "ResponsesTransactionResponseId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransactionResponseState",
            "key": "state",
            "schema": {
              "generatedName": "responsesTransactionResponseState",
              "value": {
                "description": "Status of the transaction on Starknet",
                "generatedName": "ResponsesTransactionResponseState",
                "values": [
                  {
                    "generatedName": "ACCEPTED_ON_L1",
                    "value": "ACCEPTED_ON_L1",
                    "casing": {}
                  },
                  {
                    "generatedName": "ACCEPTED_ON_L2",
                    "value": "ACCEPTED_ON_L2",
                    "casing": {}
                  },
                  {
                    "generatedName": "NOT_RECEIVED",
                    "value": "NOT_RECEIVED",
                    "casing": {}
                  },
                  {
                    "generatedName": "RECEIVED",
                    "value": "RECEIVED",
                    "casing": {}
                  },
                  {
                    "generatedName": "REJECTED",
                    "value": "REJECTED",
                    "casing": {}
                  },
                  {
                    "generatedName": "REVERTED",
                    "value": "REVERTED",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransactionResponseType",
            "key": "type",
            "schema": {
              "generatedName": "responsesTransactionResponseType",
              "value": {
                "description": "Event that triggered the transaction",
                "generatedName": "ResponsesTransactionResponseType",
                "values": [
                  {
                    "generatedName": "TRANSACTION_FILL",
                    "value": "TRANSACTION_FILL",
                    "casing": {}
                  },
                  {
                    "generatedName": "TRANSACTION_LIQUIDATE",
                    "value": "TRANSACTION_LIQUIDATE",
                    "casing": {}
                  },
                  {
                    "generatedName": "TRANSACTION_SETTLE_MARKET",
                    "value": "TRANSACTION_SETTLE_MARKET",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesTransactionResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.TransferBridge": {
        "generatedName": "ResponsesTransferBridge",
        "values": [
          {
            "nameOverride": "Unspecified",
            "generatedName": "EMPTY",
            "value": "",
            "casing": {}
          },
          {
            "nameOverride": "Starkgate",
            "generatedName": "STARKGATE",
            "value": "STARKGATE",
            "casing": {}
          },
          {
            "nameOverride": "Layerswap",
            "generatedName": "LAYERSWAP",
            "value": "LAYERSWAP",
            "casing": {}
          },
          {
            "nameOverride": "Rhinofi",
            "generatedName": "RHINOFI",
            "value": "RHINOFI",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.TransferDirection": {
        "generatedName": "ResponsesTransferDirection",
        "values": [
          {
            "nameOverride": "In",
            "generatedName": "IN",
            "value": "IN",
            "casing": {}
          },
          {
            "nameOverride": "Out",
            "generatedName": "OUT",
            "value": "OUT",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.TransferKind": {
        "generatedName": "ResponsesTransferKind",
        "values": [
          {
            "nameOverride": "Deposit",
            "generatedName": "DEPOSIT",
            "value": "DEPOSIT",
            "casing": {}
          },
          {
            "nameOverride": "Withdrawal",
            "generatedName": "WITHDRAWAL",
            "value": "WITHDRAWAL",
            "casing": {}
          },
          {
            "nameOverride": "Unwinding",
            "generatedName": "UNWINDING",
            "value": "UNWINDING",
            "casing": {}
          },
          {
            "nameOverride": "VaultDeposit",
            "generatedName": "VAULT_DEPOSIT",
            "value": "VAULT_DEPOSIT",
            "casing": {}
          },
          {
            "nameOverride": "VaultWithdrawal",
            "generatedName": "VAULT_WITHDRAWAL",
            "value": "VAULT_WITHDRAWAL",
            "casing": {}
          },
          {
            "nameOverride": "AutoWithdrawal",
            "generatedName": "AUTO_WITHDRAWAL",
            "value": "AUTO_WITHDRAWAL",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.TransferResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesTransferResultAccount",
            "key": "account",
            "schema": {
              "generatedName": "responsesTransferResultAccount",
              "value": {
                "description": "Starknet Account address",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultAmount",
            "key": "amount",
            "schema": {
              "generatedName": "responsesTransferResultAmount",
              "value": {
                "description": "Transferred amount",
                "schema": {
                  "example": "100",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultAutoWithdrawalFee",
            "key": "auto_withdrawal_fee",
            "schema": {
              "generatedName": "responsesTransferResultAutoWithdrawalFee",
              "value": {
                "description": "Fee for auto withdrawal in USDC",
                "schema": {
                  "example": "4.5",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultAutoWithdrawalFee",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultBridge",
            "key": "bridge",
            "schema": {
              "generatedName": "responsesTransferResultBridge",
              "value": {
                "description": "Bridge used for the transfer",
                "generatedName": "ResponsesTransferResultBridge",
                "schema": "responses.TransferBridge",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultCounterparty",
            "key": "counterparty",
            "schema": {
              "generatedName": "responsesTransferResultCounterparty",
              "value": {
                "description": "Counterparty address",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultCounterparty",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesTransferResultCreatedAt",
              "value": {
                "description": "Unix Millis timestamp transfer was created on L2",
                "schema": {
                  "example": 1681497002041,
                  "type": "int"
                },
                "generatedName": "ResponsesTransferResultCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultDirection",
            "key": "direction",
            "schema": {
              "generatedName": "responsesTransferResultDirection",
              "value": {
                "description": "Transfer direction (IN, OUT)",
                "generatedName": "ResponsesTransferResultDirection",
                "schema": "responses.TransferDirection",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultExternalAccount",
            "key": "external_account",
            "schema": {
              "generatedName": "responsesTransferResultExternalAccount",
              "value": {
                "description": "External chain account address",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultExternalAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultExternalChain",
            "key": "external_chain",
            "schema": {
              "generatedName": "responsesTransferResultExternalChain",
              "value": {
                "description": "External chain used for the transfer",
                "schema": {
                  "example": "ETHEREUM",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultExternalChain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultExternalTxnHash",
            "key": "external_txn_hash",
            "schema": {
              "generatedName": "responsesTransferResultExternalTxnHash",
              "value": {
                "description": "Transaction hash on the external chain",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultExternalTxnHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultFailureReason",
            "key": "failure_reason",
            "schema": {
              "generatedName": "responsesTransferResultFailureReason",
              "value": {
                "description": "Reason for transfer failure",
                "schema": {
                  "example": "Gas fee too low",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultFailureReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultId",
            "key": "id",
            "schema": {
              "generatedName": "responsesTransferResultId",
              "value": {
                "description": "Transfer auto-generated ID",
                "schema": {
                  "example": "123456789",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultKind",
            "key": "kind",
            "schema": {
              "generatedName": "responsesTransferResultKind",
              "value": {
                "description": "Transfer Kind (DEPOSIT, WITHDRAWAL)",
                "generatedName": "ResponsesTransferResultKind",
                "schema": "responses.TransferKind",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesTransferResultLastUpdatedAt",
              "value": {
                "description": "Unix Millis timestamp transfer was last updated on L2",
                "schema": {
                  "example": 1681497002041,
                  "type": "int"
                },
                "generatedName": "ResponsesTransferResultLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultSocializedLossFactor",
            "key": "socialized_loss_factor",
            "schema": {
              "generatedName": "responsesTransferResultSocializedLossFactor",
              "value": {
                "description": "Withdrawal's socialized loss factor",
                "schema": {
                  "example": "0",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultSocializedLossFactor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesTransferResultStatus",
              "value": {
                "description": "Transfer External State (PENDING, AVAILABLE, COMPLETED, FAILED)",
                "generatedName": "ResponsesTransferResultStatus",
                "schema": "responses.TransferStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultToken",
            "key": "token",
            "schema": {
              "generatedName": "responsesTransferResultToken",
              "value": {
                "description": "Transferred token name",
                "schema": {
                  "example": "USDC",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultTxnHash",
            "key": "txn_hash",
            "schema": {
              "generatedName": "responsesTransferResultTxnHash",
              "value": {
                "description": "Transaction hash on Paradex chain",
                "schema": {
                  "example": "0x495d2eb5236a12b8b4ad7d3849ce6a203ce21c43f473c248dfd5ce70d9454fa",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultTxnHash",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultVaultAddress",
            "key": "vault_address",
            "schema": {
              "generatedName": "responsesTransferResultVaultAddress",
              "value": {
                "description": "Vault address",
                "schema": {
                  "example": "0x7a3b1c8f9e2d4e6f8a0c2b4d6e8f0a2c4b6e8d0a",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultVaultAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesTransferResultVaultUnwindCompletionPercentage",
            "key": "vault_unwind_completion_percentage",
            "schema": {
              "generatedName": "responsesTransferResultVaultUnwindCompletionPercentage",
              "value": {
                "description": "Vault unwind completion percentage",
                "schema": {
                  "example": "0.35",
                  "type": "string"
                },
                "generatedName": "ResponsesTransferResultVaultUnwindCompletionPercentage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "TransferResult",
        "generatedName": "ResponsesTransferResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.TransferStatus": {
        "generatedName": "ResponsesTransferStatus",
        "values": [
          {
            "nameOverride": "Pending",
            "generatedName": "PENDING",
            "value": "PENDING",
            "casing": {}
          },
          {
            "nameOverride": "Available",
            "generatedName": "AVAILABLE",
            "value": "AVAILABLE",
            "casing": {}
          },
          {
            "nameOverride": "Completed",
            "generatedName": "COMPLETED",
            "value": "COMPLETED",
            "casing": {}
          },
          {
            "nameOverride": "Failed",
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.VaultAccountSummaryResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultAccountSummaryRespAddress",
            "key": "address",
            "schema": {
              "generatedName": "responsesVaultAccountSummaryRespAddress",
              "value": {
                "description": "Contract address of the vault",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultAccountSummaryRespAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultAccountSummaryRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesVaultAccountSummaryRespCreatedAt",
              "value": {
                "description": "Unix timestamp in milliseconds of when the user joined the vault.",
                "schema": {
                  "example": 1717171717,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultAccountSummaryRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultAccountSummaryRespDepositedAmount",
            "key": "deposited_amount",
            "schema": {
              "generatedName": "responsesVaultAccountSummaryRespDepositedAmount",
              "value": {
                "description": "Amount deposited on the vault by the user in USDC",
                "schema": {
                  "example": "123.45",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultAccountSummaryRespDepositedAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultAccountSummaryRespTotalPnl",
            "key": "total_pnl",
            "schema": {
              "generatedName": "responsesVaultAccountSummaryRespTotalPnl",
              "value": {
                "description": "Total P&L realized by the user in USD.",
                "schema": {
                  "example": "149.12",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultAccountSummaryRespTotalPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultAccountSummaryRespTotalRoi",
            "key": "total_roi",
            "schema": {
              "generatedName": "responsesVaultAccountSummaryRespTotalRoi",
              "value": {
                "description": "Total ROI realized by the user in percentage, i.e. 0.1 means 10%.",
                "schema": {
                  "example": "0.724",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultAccountSummaryRespTotalRoi",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultAccountSummaryRespVtokenAmount",
            "key": "vtoken_amount",
            "schema": {
              "generatedName": "responsesVaultAccountSummaryRespVtokenAmount",
              "value": {
                "description": "Amount of vault tokens owned by the user",
                "schema": {
                  "example": "123.45",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultAccountSummaryRespVtokenAmount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultAccountSummaryResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultHistoricalDataResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultHistoricalDataRespAddress",
            "key": "address",
            "schema": {
              "generatedName": "responsesVaultHistoricalDataRespAddress",
              "value": {
                "description": "Contract address of the vault",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultHistoricalDataRespAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultHistoricalDataRespData",
            "key": "data",
            "schema": {
              "generatedName": "responsesVaultHistoricalDataRespData",
              "value": {
                "description": "Ordered list of datapoints",
                "value": {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "ResponsesVaultHistoricalDataRespDataItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResponsesVaultHistoricalDataRespData",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultHistoricalDataRespTimestamps",
            "key": "timestamps",
            "schema": {
              "generatedName": "responsesVaultHistoricalDataRespTimestamps",
              "value": {
                "description": "Ordered list of timestamps",
                "value": {
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "ResponsesVaultHistoricalDataRespTimestampsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "ResponsesVaultHistoricalDataRespTimestamps",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultHistoricalDataResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultKind": {
        "generatedName": "ResponsesVaultKind",
        "values": [
          {
            "nameOverride": "User",
            "generatedName": "user",
            "value": "user",
            "casing": {}
          },
          {
            "nameOverride": "Protocol",
            "generatedName": "protocol",
            "value": "protocol",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.VaultPositionsResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultPositionsRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesVaultPositionsRespResults",
              "value": {
                "description": "List of the vault's positions",
                "value": {
                  "generatedName": "ResponsesVaultPositionsRespResultsItem",
                  "schema": "responses.PositionResp",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesVaultPositionsRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultPositionsResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultRespAddress",
            "key": "address",
            "schema": {
              "generatedName": "responsesVaultRespAddress",
              "value": {
                "description": "Contract address of the vault",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultRespAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespCreatedAt",
            "key": "created_at",
            "schema": {
              "generatedName": "responsesVaultRespCreatedAt",
              "value": {
                "description": "Unix timestamp in milliseconds of when the vault has been created",
                "schema": {
                  "example": 1517171717,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultRespCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespDescription",
            "key": "description",
            "schema": {
              "generatedName": "responsesVaultRespDescription",
              "value": {
                "description": "Description of the vault",
                "schema": {
                  "example": "My description",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultRespDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespKind",
            "key": "kind",
            "schema": {
              "generatedName": "responsesVaultRespKind",
              "value": {
                "description": "Kind of the vault: 'user' for user-defined vaults, 'protocol' for vaults controlled by Paradex",
                "generatedName": "ResponsesVaultRespKind",
                "schema": "responses.VaultKind",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespLastUpdatedAt",
            "key": "last_updated_at",
            "schema": {
              "generatedName": "responsesVaultRespLastUpdatedAt",
              "value": {
                "description": "Unix timestamp in milliseconds of when the vault was last updated",
                "schema": {
                  "example": 1617171717,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultRespLastUpdatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespLockupPeriod",
            "key": "lockup_period",
            "schema": {
              "generatedName": "responsesVaultRespLockupPeriod",
              "value": {
                "description": "Lockup period of the vault in days",
                "schema": {
                  "example": 1,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultRespLockupPeriod",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespMaxTvl",
            "key": "max_tvl",
            "schema": {
              "generatedName": "responsesVaultRespMaxTvl",
              "value": {
                "description": "Maximum amount of assets the vault can hold in USDC",
                "schema": {
                  "example": 1000000,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultRespMaxTvl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespName",
            "key": "name",
            "schema": {
              "generatedName": "responsesVaultRespName",
              "value": {
                "description": "Name of the vault",
                "schema": {
                  "example": "MyVault",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultRespName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespOperatorAccount",
            "key": "operator_account",
            "schema": {
              "generatedName": "responsesVaultRespOperatorAccount",
              "value": {
                "description": "Operator account of the vault",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultRespOperatorAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespOwnerAccount",
            "key": "owner_account",
            "schema": {
              "generatedName": "responsesVaultRespOwnerAccount",
              "value": {
                "description": "Owner account of the vault",
                "schema": {
                  "example": "0x0234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultRespOwnerAccount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespProfitShare",
            "key": "profit_share",
            "schema": {
              "generatedName": "responsesVaultRespProfitShare",
              "value": {
                "description": "Profit share of the vault in percentage, i.e. 10 means 10%",
                "schema": {
                  "example": 10,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultRespProfitShare",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespStatus",
            "key": "status",
            "schema": {
              "generatedName": "responsesVaultRespStatus",
              "value": {
                "description": "Status of the vault",
                "generatedName": "ResponsesVaultRespStatus",
                "schema": "responses.VaultStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.json",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespStrategies",
            "key": "strategies",
            "schema": {
              "generatedName": "responsesVaultRespStrategies",
              "value": {
                "description": "Strategies of the vault",
                "value": {
                  "generatedName": "ResponsesVaultRespStrategiesItem",
                  "schema": "responses.Strategy",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesVaultRespStrategies",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultRespTokenAddress",
            "key": "token_address",
            "schema": {
              "generatedName": "responsesVaultRespTokenAddress",
              "value": {
                "description": "LP token address",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResponsesVaultRespTokenAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultStatus": {
        "generatedName": "ResponsesVaultStatus",
        "values": [
          {
            "nameOverride": "Initializing",
            "generatedName": "INITIALIZING",
            "value": "INITIALIZING",
            "casing": {}
          },
          {
            "nameOverride": "Active",
            "generatedName": "ACTIVE",
            "value": "ACTIVE",
            "casing": {}
          },
          {
            "nameOverride": "Closed",
            "generatedName": "CLOSED",
            "value": "CLOSED",
            "casing": {}
          },
          {
            "nameOverride": "Failed",
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "enum"
      },
      "responses.VaultSummaryResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespAddress",
            "key": "address",
            "schema": {
              "generatedName": "responsesVaultSummaryRespAddress",
              "value": {
                "description": "Contract address of the vault",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespLastMonthReturn",
            "key": "last_month_return",
            "schema": {
              "generatedName": "responsesVaultSummaryRespLastMonthReturn",
              "value": {
                "description": "APR return of the vault in the last trailing month in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.023",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespLastMonthReturn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespMaxDrawdown",
            "key": "max_drawdown",
            "schema": {
              "generatedName": "responsesVaultSummaryRespMaxDrawdown",
              "value": {
                "description": "Max all time drawdown realized by the vault in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.1916",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespMaxDrawdown",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespMaxDrawdown24H",
            "key": "max_drawdown_24h",
            "schema": {
              "generatedName": "responsesVaultSummaryRespMaxDrawdown24H",
              "value": {
                "description": "Max drawdown realized by the vault in the last 24 hours in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.0138",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespMaxDrawdown24H",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespMaxDrawdown30D",
            "key": "max_drawdown_30d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespMaxDrawdown30D",
              "value": {
                "description": "Max drawdown realized by the vault in the last 30 days in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.1821",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespMaxDrawdown30D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespMaxDrawdown7D",
            "key": "max_drawdown_7d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespMaxDrawdown7D",
              "value": {
                "description": "Max drawdown realized by the vault in the last 7 days in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.1124",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespMaxDrawdown7D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespNetDeposits",
            "key": "net_deposits",
            "schema": {
              "generatedName": "responsesVaultSummaryRespNetDeposits",
              "value": {
                "description": "Net deposits of the vault in USDC",
                "schema": {
                  "example": "1000000",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespNetDeposits",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespNumDepositors",
            "key": "num_depositors",
            "schema": {
              "generatedName": "responsesVaultSummaryRespNumDepositors",
              "value": {
                "description": "Number of depositors on the vault",
                "schema": {
                  "example": 100,
                  "type": "int"
                },
                "generatedName": "ResponsesVaultSummaryRespNumDepositors",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespOwnerEquity",
            "key": "owner_equity",
            "schema": {
              "generatedName": "responsesVaultSummaryRespOwnerEquity",
              "value": {
                "description": "Vault equity of the owner (% of ownership) in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.145",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespOwnerEquity",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespPnl24H",
            "key": "pnl_24h",
            "schema": {
              "generatedName": "responsesVaultSummaryRespPnl24H",
              "value": {
                "description": "P&L of the vault in the last 24 hours in USD",
                "schema": {
                  "example": "13.41",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespPnl24H",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespPnl30D",
            "key": "pnl_30d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespPnl30D",
              "value": {
                "description": "P&L of the vault in the last 30 days in USD",
                "schema": {
                  "example": "114.19",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespPnl30D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespPnl7D",
            "key": "pnl_7d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespPnl7D",
              "value": {
                "description": "P&L of the vault in the last 7 days in USD",
                "schema": {
                  "example": "91.31",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespPnl7D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespRoi24H",
            "key": "roi_24h",
            "schema": {
              "generatedName": "responsesVaultSummaryRespRoi24H",
              "value": {
                "description": "Return of the vault in the last 24 hours in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.034",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespRoi24H",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespRoi30D",
            "key": "roi_30d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespRoi30D",
              "value": {
                "description": "Return of the vault in the last 30 days in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.003",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespRoi30D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespRoi7D",
            "key": "roi_7d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespRoi7D",
              "value": {
                "description": "Return of the vault in the last 7 days in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.123",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespRoi7D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespTotalPnl",
            "key": "total_pnl",
            "schema": {
              "generatedName": "responsesVaultSummaryRespTotalPnl",
              "value": {
                "description": "Total P&L of the vault in USD",
                "schema": {
                  "example": "149.12",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespTotalPnl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespTotalRoi",
            "key": "total_roi",
            "schema": {
              "generatedName": "responsesVaultSummaryRespTotalRoi",
              "value": {
                "description": "Total ROI of the vault in percentage, i.e. 0.1 means 10%",
                "schema": {
                  "example": "0.724",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespTotalRoi",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespTvl",
            "key": "tvl",
            "schema": {
              "generatedName": "responsesVaultSummaryRespTvl",
              "value": {
                "description": "Net deposits of the vault in USDC (deprecated; use net_deposits instead)",
                "schema": {
                  "example": "1000000",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespTvl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespVolume",
            "key": "volume",
            "schema": {
              "generatedName": "responsesVaultSummaryRespVolume",
              "value": {
                "description": "All time volume traded by the vault in USD",
                "schema": {
                  "example": "12345678.16",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespVolume",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespVolume24H",
            "key": "volume_24h",
            "schema": {
              "generatedName": "responsesVaultSummaryRespVolume24H",
              "value": {
                "description": "Volume traded by the vault in the last 24 hours in USD",
                "schema": {
                  "example": "45678.16",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespVolume24H",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespVolume30D",
            "key": "volume_30d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespVolume30D",
              "value": {
                "description": "Volume traded by the vault in the last 30 days in USD",
                "schema": {
                  "example": "2345678.16",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespVolume30D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespVolume7D",
            "key": "volume_7d",
            "schema": {
              "generatedName": "responsesVaultSummaryRespVolume7D",
              "value": {
                "description": "Volume traded by the vault in the last 7 days in USD",
                "schema": {
                  "example": "345678.16",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespVolume7D",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespVtokenPrice",
            "key": "vtoken_price",
            "schema": {
              "generatedName": "responsesVaultSummaryRespVtokenPrice",
              "value": {
                "description": "Current value of vault token price in USD",
                "schema": {
                  "example": "1.23",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespVtokenPrice",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultSummaryRespVtokenSupply",
            "key": "vtoken_supply",
            "schema": {
              "generatedName": "responsesVaultSummaryRespVtokenSupply",
              "value": {
                "description": "Total amount of available vault tokens",
                "schema": {
                  "example": "1000000",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultSummaryRespVtokenSupply",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultSummaryResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultTradesResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultTradesRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesVaultTradesRespResults",
              "value": {
                "description": "List of the vault's trades",
                "value": {
                  "generatedName": "ResponsesVaultTradesRespResultsItem",
                  "schema": "responses.TradeResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesVaultTradesRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultTradesResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultTransfersResp": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultTransfersRespResults",
            "key": "results",
            "schema": {
              "generatedName": "responsesVaultTransfersRespResults",
              "value": {
                "description": "List of the vault's transfers",
                "value": {
                  "generatedName": "ResponsesVaultTransfersRespResultsItem",
                  "schema": "responses.TransferResult",
                  "source": {
                    "file": "../openapi.json",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ResponsesVaultTransfersRespResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultTransfersResp",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      },
      "responses.VaultsConfigResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "responsesVaultsConfigResponseMaxLockupPeriodDays",
            "key": "max_lockup_period_days",
            "schema": {
              "generatedName": "responsesVaultsConfigResponseMaxLockupPeriodDays",
              "value": {
                "description": "Maximum lockup period in days an owner can configure for a vault",
                "schema": {
                  "example": "4",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultsConfigResponseMaxLockupPeriodDays",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultsConfigResponseMaxProfitSharePercentage",
            "key": "max_profit_share_percentage",
            "schema": {
              "generatedName": "responsesVaultsConfigResponseMaxProfitSharePercentage",
              "value": {
                "description": "Maximum profit share percentage (0-100) an owner can configure for a vault",
                "schema": {
                  "example": "50",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultsConfigResponseMaxProfitSharePercentage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultsConfigResponseMinInitialDeposit",
            "key": "min_initial_deposit",
            "schema": {
              "generatedName": "responsesVaultsConfigResponseMinInitialDeposit",
              "value": {
                "description": "Minimum initial collateral deposit (in currency units) at vault creation. Only applies to the owner",
                "schema": {
                  "example": "1000",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultsConfigResponseMinInitialDeposit",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultsConfigResponseMinLockupPeriodDays",
            "key": "min_lockup_period_days",
            "schema": {
              "generatedName": "responsesVaultsConfigResponseMinLockupPeriodDays",
              "value": {
                "description": "Minimum lockup period in days an owner can configure for a vault",
                "schema": {
                  "example": "1",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultsConfigResponseMinLockupPeriodDays",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultsConfigResponseMinOwnerSharePercentage",
            "key": "min_owner_share_percentage",
            "schema": {
              "generatedName": "responsesVaultsConfigResponseMinOwnerSharePercentage",
              "value": {
                "description": "Minimum share percentage (0-100) the vault owner must maintain on the vault",
                "schema": {
                  "example": "5",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultsConfigResponseMinOwnerSharePercentage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "responsesVaultsConfigResponseVaultFactoryAddress",
            "key": "vault_factory_address",
            "schema": {
              "generatedName": "responsesVaultsConfigResponseVaultFactoryAddress",
              "value": {
                "description": "Address of the vault factory contract",
                "schema": {
                  "example": "0x1234567890abcdef",
                  "type": "string"
                },
                "generatedName": "ResponsesVaultsConfigResponseVaultFactoryAddress",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ResponsesVaultsConfigResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.json",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "BearerToken": {
      "headerName": "Authorization",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}