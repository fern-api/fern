{
  "title": "DevRev REST API",
  "description": "DevRev's REST API.",
  "servers": [
    {
      "url": "https://api.devrev.ai",
      "description": "DevRev API endpoint."
    }
  ],
  "tags": {
    "tagsById": {
      "artifacts": {
        "id": "artifacts",
        "description": "Artifact (file) management APIs."
      },
      "auth-connection": {
        "id": "auth-connection",
        "description": "Auth Connections of DevOrg."
      },
      "auth-tokens": {
        "id": "auth-tokens",
        "description": "Security token interactions."
      },
      "dev-orgs": {
        "id": "dev-orgs",
        "description": "Dev organization interactions."
      },
      "dev-users": {
        "id": "dev-users",
        "description": "Dev user interactions."
      },
      "parts": {
        "id": "parts",
        "description": "DevRev part interactions."
      },
      "rev-orgs": {
        "id": "rev-orgs",
        "description": "Rev organization interactions."
      },
      "tags": {
        "id": "tags",
        "description": "DevRev tag interactions."
      },
      "timeline-entries": {
        "id": "timeline-entries",
        "description": "APIs to manage timeline entries for objects."
      },
      "webhooks": {
        "id": "webhooks",
        "description": "Webhook event APIs."
      },
      "works": {
        "id": "works",
        "description": "DevRev work interactions."
      }
    },
    "orderedTagIds": [
      "artifacts",
      "auth-connection",
      "auth-tokens",
      "dev-orgs",
      "dev-users",
      "parts",
      "rev-orgs",
      "tags",
      "timeline-entries",
      "webhooks",
      "works"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "audiences": [],
      "operationId": "artifacts-locate",
      "tags": [
        "artifacts"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the artifact to get the URL for.",
          "name": "id",
          "schema": {
            "schema": {
              "example": "don:<partition>:core:devo/<dev-org-id>:artifact/<artifact-id>",
              "type": "string"
            },
            "generatedName": "ArtifactsLocateRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ArtifactsLocateRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "ArtifactsLocateResponse",
          "schema": "artifacts-locate-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets the download URL for the artifact.",
      "authed": true,
      "method": "GET",
      "path": "/artifacts.locate",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:artifact/<artifact-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "expires_at": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "artifacts-prepare",
      "tags": [
        "artifacts"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ArtifactsPrepareRequest",
      "request": {
        "schema": {
          "generatedName": "ArtifactsPrepareRequest",
          "schema": "artifacts-prepare-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "ArtifactsPrepareResponse",
          "schema": "artifacts-prepare-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates an artifact and generates an upload URL for its data.\n",
      "authed": true,
      "method": "POST",
      "path": "/artifacts.prepare",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "file_name": {
                "value": {
                  "value": "file_name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "form_data": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "key",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "don:<partition>:core:devo/<dev-org-id>:artifact/<artifact-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "auth-tokens-create",
      "tags": [
        "auth-tokens"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AuthTokensCreateRequest",
      "request": {
        "schema": {
          "generatedName": "AuthTokensCreateRequest",
          "schema": "auth-tokens-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "AuthTokensCreateResponse",
          "schema": "auth-tokens-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a JWT corresponding to the requested token type for the\nauthenticated user.\n",
      "authed": true,
      "method": "POST",
      "path": "/auth-tokens.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "access_token": {
                  "value": {
                    "value": "access_token",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "client_id": {
                  "value": {
                    "value": "client_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "expires_in": {
                  "value": {
                    "value": 1000000,
                    "type": "int64"
                  },
                  "type": "primitive"
                },
                "refresh_token": {
                  "value": {
                    "value": "refresh_token",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "scope": {
                  "value": {
                    "value": "scope",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "token_type": {
                  "value": {
                    "value": "bearer",
                    "type": "string"
                  },
                  "type": "literal"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "auth-tokens-delete",
      "tags": [
        "auth-tokens"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AuthTokensDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "AuthTokensDeleteRequest",
          "schema": "auth-tokens-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Revokes the token that matches the given token ID issued under the\ngiven Dev organization.\n",
      "authed": true,
      "method": "POST",
      "path": "/auth-tokens.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "auth-tokens-get",
      "tags": [
        "auth-tokens"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The unique identifier of the token under a given Dev organization.\n",
          "name": "token_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AuthTokensGetRequestTokenId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AuthTokensGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "AuthTokensGetResponse",
          "schema": "auth-tokens-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets the token metadata corresponding to the given token ID under the\ngiven Dev organization.\n",
      "authed": true,
      "method": "GET",
      "path": "/auth-tokens.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "token_id",
              "value": {
                "value": {
                  "value": "token_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "token": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "client_id": {
                      "value": {
                        "value": "client_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "expires_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "issued_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "requested_token_type": {
                      "value": "urn:devrev:params:oauth:token-type:aat",
                      "type": "enum"
                    },
                    "scopes": {
                      "value": [
                        {
                          "value": {
                            "value": "scopes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "status": {
                      "value": "active",
                      "type": "enum"
                    },
                    "subject": {
                      "value": {
                        "value": "subject",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "token_hint": {
                      "value": {
                        "value": "token_hint",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "auth-tokens-list",
      "tags": [
        "auth-tokens"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "An identifier that represents the application, which requested the\ntoken. Only relevant for application access tokens.\n",
          "name": "client_id",
          "schema": {
            "generatedName": "AuthTokensListRequestClientId",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthTokensListRequestClientId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The type of the requested token. If no value is specified, the\nresponse will include tokens of all the types.\n",
          "name": "requested_token_type",
          "schema": {
            "generatedName": "AuthTokensListRequestRequestedTokenType",
            "value": {
              "generatedName": "AuthTokensListRequestRequestedTokenType",
              "schema": "auth-token-requested-token-type",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The subject associated with the token. In the absence of this\nparameter, the ID of the authenticated entity is treated as the\nsubject.\n",
          "name": "subject",
          "schema": {
            "generatedName": "AuthTokensListRequestSubject",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthTokensListRequestSubject",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "AuthTokensListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "AuthTokensListResponse",
          "schema": "auth-tokens-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets the token metadata for all the tokens corresponding to the given\ntoken type issued for a given subject.\n",
      "authed": true,
      "method": "GET",
      "path": "/auth-tokens.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "tokens": {
                  "value": [
                    {
                      "properties": {
                        "created_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "created_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "created_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_id": {
                          "value": {
                            "value": "display_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "modified_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "modified_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "modified_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "client_id": {
                          "value": {
                            "value": "client_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "expires_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "issued_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "requested_token_type": {
                          "value": "urn:devrev:params:oauth:token-type:aat",
                          "type": "enum"
                        },
                        "scopes": {
                          "value": [
                            {
                              "value": {
                                "value": "scopes",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "status": {
                          "value": "active",
                          "type": "enum"
                        },
                        "subject": {
                          "value": {
                            "value": "subject",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "token_hint": {
                          "value": {
                            "value": "token_hint",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "auth-tokens-self-delete",
      "tags": [
        "auth-tokens"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AuthTokensSelfDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "AuthTokensSelfDeleteRequest",
          "schema": "auth-tokens-self-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Revokes all the tokens that matches the given token type created by the\nauthenticated user.\n",
      "authed": true,
      "method": "POST",
      "path": "/auth-tokens.self.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {},
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "auth-tokens-update",
      "tags": [
        "auth-tokens"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AuthTokensUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "AuthTokensUpdateRequest",
          "schema": "auth-tokens-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "AuthTokensUpdateResponse",
          "schema": "auth-tokens-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates token metadata of a token issued under a given Dev\norganization.\n",
      "authed": true,
      "method": "POST",
      "path": "/auth-tokens.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "token_hint": {
                "value": {
                  "value": "token_hint",
                  "type": "string"
                },
                "type": "primitive"
              },
              "token_id": {
                "value": {
                  "value": "token_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "token": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "client_id": {
                      "value": {
                        "value": "client_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "expires_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "issued_at": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "requested_token_type": {
                      "value": "urn:devrev:params:oauth:token-type:aat",
                      "type": "enum"
                    },
                    "scopes": {
                      "value": [
                        {
                          "value": {
                            "value": "scopes",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "status": {
                      "value": "active",
                      "type": "enum"
                    },
                    "subject": {
                      "value": {
                        "value": "subject",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "token_hint": {
                      "value": {
                        "value": "token_hint",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-org-auth-connections-create",
      "tags": [
        "auth-connection",
        "dev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "DevOrgAuthConnectionsCreateRequest",
          "schema": "dev-org-auth-connections-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "schema": "dev-org-auth-connections-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new enterprise authentication connection for a Dev\norganization. This authentication connection will not be enabled by\ndefault for the organization and the user will need to explicitly\nenable this. Keep in mind that at a time, only one authentication\nconnection can be enabled for a Dev organization. At present, only 5\nenterprise connections can be created by an organization.\n",
      "authed": true,
      "method": "POST",
      "path": "/dev-orgs.auth-connections.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "waad",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "auth_connection": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "waad",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "client_id": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "client_secret": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "domain": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "display_name": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "enabled": {
                        "value": {
                          "value": true,
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-org-auth-connections-delete",
      "tags": [
        "auth-connection",
        "dev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "schema": "dev-org-auth-connections-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes an authentication connection. Only enterprise connections which\nare explicitly set up for a Dev organization can be deleted. Default\nconnections can not be deleted using this method.\n",
      "authed": true,
      "method": "POST",
      "path": "/dev-orgs.auth-connections.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-org-auth-connections-get",
      "tags": [
        "auth-connection",
        "dev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID of the authentication connection.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DevOrgAuthConnectionsGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "schema": "dev-org-auth-connections-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieves the details for an authentication connection.",
      "authed": true,
      "method": "GET",
      "path": "/dev-orgs.auth-connections.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auth_connection": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "waad",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "client_id": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "client_secret": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "domain": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "display_name": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "enabled": {
                        "value": {
                          "value": true,
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-org-auth-connections-list",
      "tags": [
        "auth-connection",
        "dev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DevOrgAuthConnectionsListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "schema": "dev-org-auth-connections-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists all the authentication connections available for a Dev\norganization. This list will include both social and enterprise\nconnections which are either available by default or are explicitly\ncreated by the user.\n",
      "authed": true,
      "method": "GET",
      "path": "/dev-orgs.auth-connections.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "auth_connections": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "waad",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "client_id": {
                            "value": {
                              "value": "auth_connections",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "client_secret": {
                            "value": {
                              "value": "auth_connections",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "domain": {
                            "value": {
                              "value": "auth_connections",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "auth_connections",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "enabled": {
                            "value": {
                              "value": true,
                              "type": "boolean"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "auth_connections",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-org-auth-connections-toggle",
      "tags": [
        "auth-connection",
        "dev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
      "request": {
        "schema": {
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "schema": "dev-org-auth-connections-toggle-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Enable or disable an authentication connection for a Dev organization.\nCurrently, only 1 authentication connection can be enabled at a time.\nWhen a new authentication connection is enabled, the connection which\nis currently enabled for the Dev organization is automatically\ndisabled.\n",
      "authed": true,
      "method": "POST",
      "path": "/dev-orgs.auth-connections.toggle",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-org-auth-connections-update",
      "tags": [
        "auth-connection",
        "dev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "DevOrgAuthConnectionsUpdateRequest",
          "schema": "dev-org-auth-connections-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "schema": "dev-org-auth-connections-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates an authentication connection.",
      "authed": true,
      "method": "POST",
      "path": "/dev-orgs.auth-connections.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "waad",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "auth_connection": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "waad",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "client_id": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "client_secret": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "domain": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "display_name": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "enabled": {
                        "value": {
                          "value": true,
                          "type": "boolean"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "auth_connection",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-users-list",
      "tags": [
        "dev-users"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
          "name": "cursor",
          "schema": {
            "generatedName": "DevUsersListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "DevUsersListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters Dev users based on email addresses.",
          "name": "email",
          "schema": {
            "generatedName": "DevUsersListRequestEmail",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "DevUsersListRequestEmailItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "DevUsersListRequestEmail",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The maximum number of Dev users to return. The default is '50'.\n",
          "name": "limit",
          "schema": {
            "generatedName": "DevUsersListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "DevUsersListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
          "name": "mode",
          "schema": {
            "generatedName": "DevUsersListRequestMode",
            "value": {
              "generatedName": "DevUsersListRequestMode",
              "schema": "list-mode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Fields to sort the Dev users by and the direction to sort them.\n",
          "name": "sort_by",
          "schema": {
            "generatedName": "DevUsersListRequestSortBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "DevUsersListRequestSortByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "DevUsersListRequestSortBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters Dev users based on state.",
          "name": "state",
          "schema": {
            "generatedName": "DevUsersListRequestState",
            "value": {
              "value": {
                "generatedName": "DevUsersListRequestStateItem",
                "schema": "user-state",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "DevUsersListRequestState",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DevUsersListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "DevUsersListResponse",
          "schema": "dev-users-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists users within your organization.",
      "authed": true,
      "method": "GET",
      "path": "/dev-users.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "dev_users": {
                  "value": [
                    {
                      "properties": {
                        "created_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "created_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "created_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_id": {
                          "value": {
                            "value": "display_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "modified_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "modified_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "modified_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_name": {
                          "value": {
                            "value": "display_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "display_picture": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "email": {
                          "value": {
                            "value": "email",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "full_name": {
                          "value": {
                            "value": "full_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "phone_numbers": {
                          "value": [
                            {
                              "value": {
                                "value": "phone_numbers",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "state": {
                          "value": "active",
                          "type": "enum"
                        },
                        "external_identities": {
                          "value": [
                            {
                              "value": [
                                {
                                  "key": {
                                    "value": "key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": {
                                        "value": "value",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "type": "unknown"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev_cursor": {
                  "value": {
                    "value": "prev_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "dev-users-self",
      "tags": [
        "dev-users"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DevUsersSelfRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "DevUsersSelfResponse",
          "schema": "dev-users-self-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets the authenticated user's information.",
      "authed": true,
      "method": "GET",
      "path": "/dev-users.self",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "dev_user": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_name": {
                      "value": {
                        "value": "display_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "display_picture": {
                      "properties": {
                        "display_id": {
                          "value": {
                            "value": "display_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "email": {
                      "value": {
                        "value": "email",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "full_name": {
                      "value": {
                        "value": "full_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "phone_numbers": {
                      "value": [
                        {
                          "value": {
                            "value": "phone_numbers",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "state": {
                      "value": "active",
                      "type": "enum"
                    },
                    "external_identities": {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": {
                                    "value": "value",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "type": "unknown"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "parts-create",
      "tags": [
        "parts"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PartsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "PartsCreateRequest",
          "schema": "parts-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "PartsCreateResponse",
          "schema": "parts-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
      "authed": true,
      "method": "POST",
      "path": "/parts.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "feature",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parent_part": {
                  "value": [
                    {
                      "value": {
                        "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "name": {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "owned_by": {
                  "value": [
                    {
                      "value": {
                        "value": "don:<partition>:identity:devo/<dev-org-id>:devu/<dev-user-id>",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "part": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "product",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "description": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "name": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "owned_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "part",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "parts-delete",
      "tags": [
        "parts"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PartsDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "PartsDeleteRequest",
          "schema": "parts-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "PartsDeleteResponse",
          "schema": "parts-delete-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
      "authed": true,
      "method": "POST",
      "path": "/parts.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "parts-get",
      "tags": [
        "parts"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the part to retrieve.",
          "name": "id",
          "schema": {
            "schema": {
              "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
              "type": "string"
            },
            "generatedName": "PartsGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PartsGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "PartsGetResponse",
          "schema": "parts-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.\n",
      "authed": true,
      "method": "GET",
      "path": "/parts.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "part": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "product",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "description": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "name": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "owned_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "part",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "parts-list",
      "tags": [
        "parts"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for parts created by any of these users.",
          "name": "created_by",
          "schema": {
            "generatedName": "PartsListRequestCreatedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsListRequestCreatedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "PartsListRequestCreatedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
          "name": "cursor",
          "schema": {
            "generatedName": "PartsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PartsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The maximum number of parts to return. The default is '50'.\n",
          "name": "limit",
          "schema": {
            "generatedName": "PartsListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PartsListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
          "name": "mode",
          "schema": {
            "generatedName": "PartsListRequestMode",
            "value": {
              "generatedName": "PartsListRequestMode",
              "schema": "list-mode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for parts of the provided name(s).",
          "name": "name",
          "schema": {
            "generatedName": "PartsListRequestName",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsListRequestNameItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "PartsListRequestName",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for parts owned by any of these users.",
          "name": "owned_by",
          "schema": {
            "generatedName": "PartsListRequestOwnedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsListRequestOwnedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "PartsListRequestOwnedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for parts of the provided type(s).",
          "name": "type",
          "schema": {
            "generatedName": "PartsListRequestType",
            "value": {
              "value": {
                "generatedName": "PartsListRequestTypeItem",
                "schema": "part-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PartsListRequestType",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "PartsListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "PartsListResponse",
          "schema": "parts-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).\n",
      "authed": true,
      "method": "GET",
      "path": "/parts.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "parts": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "product",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "created_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "parts",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "created_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "parts",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "parts",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "modified_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "parts",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "modified_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "artifacts": {
                            "value": [
                              {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "description": {
                            "value": {
                              "value": "parts",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "name": {
                            "value": {
                              "value": "parts",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "owned_by": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "type": {
                                      "value": {
                                        "value": "sys_user",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "id": {
                                      "value": {
                                        "value": "parts",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "discriminated"
                                },
                                "type": "oneOf"
                              }
                            ],
                            "type": "array"
                          },
                          "tags": {
                            "value": [
                              {
                                "properties": {
                                  "tag": {
                                    "properties": {
                                      "id": {
                                        "value": {
                                          "value": "id",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "name": {
                                        "value": {
                                          "value": "name",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                },
                "prev_cursor": {
                  "value": {
                    "value": "prev_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "parts-update",
      "tags": [
        "parts"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "PartsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "PartsUpdateRequest",
          "schema": "parts-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "PartsUpdateResponse",
          "schema": "parts-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.\n",
      "authed": true,
      "method": "POST",
      "path": "/parts.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "enhancement",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "part": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "product",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "part",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "description": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "name": {
                        "value": {
                          "value": "part",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "owned_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "part",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "rev-orgs-create",
      "tags": [
        "rev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RevOrgsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "RevOrgsCreateRequest",
          "schema": "rev-orgs-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "RevOrgsCreateResponse",
          "schema": "rev-orgs-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a Rev organization in the authenticated user's Dev\norganization.\n",
      "authed": true,
      "method": "POST",
      "path": "/rev-orgs.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "display_name": {
                "value": {
                  "value": "display_name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "rev_org": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_name": {
                      "value": {
                        "value": "display_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "domain": {
                      "value": {
                        "value": "domain",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "external_ref": {
                      "value": {
                        "value": "external_ref",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "rev-orgs-delete",
      "tags": [
        "rev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RevOrgsDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "RevOrgsDeleteRequest",
          "schema": "rev-orgs-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "RevOrgsDeleteResponse",
          "schema": "rev-orgs-delete-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the Rev organization.",
      "authed": true,
      "method": "POST",
      "path": "/rev-orgs.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "rev-orgs-get",
      "tags": [
        "rev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the required Rev organization.",
          "name": "id",
          "schema": {
            "schema": {
              "example": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
              "type": "string"
            },
            "generatedName": "RevOrgsGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RevOrgsGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "RevOrgsGetResponse",
          "schema": "rev-orgs-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Retrieves the Rev organization's information.",
      "authed": true,
      "method": "GET",
      "path": "/rev-orgs.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "rev_org": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_name": {
                      "value": {
                        "value": "display_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "domain": {
                      "value": {
                        "value": "domain",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "external_ref": {
                      "value": {
                        "value": "external_ref",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "rev-orgs-list",
      "tags": [
        "rev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters by creator.",
          "name": "created_by",
          "schema": {
            "generatedName": "RevOrgsListRequestCreatedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsListRequestCreatedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RevOrgsListRequestCreatedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).\n",
          "name": "created_date.after",
          "schema": {
            "generatedName": "RevOrgsListRequestCreatedDateAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RevOrgsListRequestCreatedDateAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
          "name": "created_date.before",
          "schema": {
            "generatedName": "RevOrgsListRequestCreatedDateBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RevOrgsListRequestCreatedDateBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
          "name": "cursor",
          "schema": {
            "generatedName": "RevOrgsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RevOrgsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "List of external refs to filter Rev organizations for.",
          "name": "external_ref",
          "schema": {
            "generatedName": "RevOrgsListRequestExternalRef",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsListRequestExternalRefItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RevOrgsListRequestExternalRef",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The maximum number of Rev organizations to be retrieved per page.\n",
          "name": "limit",
          "schema": {
            "generatedName": "RevOrgsListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "RevOrgsListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
          "name": "mode",
          "schema": {
            "generatedName": "RevOrgsListRequestMode",
            "value": {
              "generatedName": "RevOrgsListRequestMode",
              "schema": "list-mode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).\n",
          "name": "modified_date.after",
          "schema": {
            "generatedName": "RevOrgsListRequestModifiedDateAfter",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RevOrgsListRequestModifiedDateAfter",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
          "name": "modified_date.before",
          "schema": {
            "generatedName": "RevOrgsListRequestModifiedDateBefore",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "RevOrgsListRequestModifiedDateBefore",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Fields to sort the Rev organizations by and the direction to sort\nthem.\n",
          "name": "sort_by",
          "schema": {
            "generatedName": "RevOrgsListRequestSortBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsListRequestSortByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "RevOrgsListRequestSortBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RevOrgsListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "RevOrgsListResponse",
          "schema": "rev-orgs-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets the list of Rev organizations' information belonging to the\nauthenticated user's Dev Organization which the user is also authorized\nto access.\n",
      "authed": true,
      "method": "GET",
      "path": "/rev-orgs.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev_cursor": {
                  "value": {
                    "value": "prev_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rev_orgs": {
                  "value": [
                    {
                      "properties": {
                        "created_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "created_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "created_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_id": {
                          "value": {
                            "value": "display_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "modified_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "modified_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "modified_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_name": {
                          "value": {
                            "value": "display_name",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "domain": {
                          "value": {
                            "value": "domain",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "external_ref": {
                          "value": {
                            "value": "external_ref",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "rev-orgs-update",
      "tags": [
        "rev-orgs"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RevOrgsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "RevOrgsUpdateRequest",
          "schema": "rev-orgs-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "RevOrgsUpdateResponse",
          "schema": "rev-orgs-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates the Rev organization's information.",
      "authed": true,
      "method": "POST",
      "path": "/rev-orgs.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "rev_org": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_name": {
                      "value": {
                        "value": "display_name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "domain": {
                      "value": {
                        "value": "domain",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "external_ref": {
                      "value": {
                        "value": "external_ref",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "tags-create",
      "tags": [
        "tags"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TagsCreateRequest",
      "request": {
        "schema": {
          "generatedName": "TagsCreateRequest",
          "schema": "tags-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TagsCreateResponse",
          "schema": "tags-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new tag, which is used to create associations between objects\nand a logical concept denoted by the tag's name.\n",
      "authed": true,
      "method": "POST",
      "path": "/tags.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "tag": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "allowed_values": {
                      "value": [
                        {
                          "value": {
                            "value": "allowed_values",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "tags-delete",
      "tags": [
        "tags"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TagsDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "TagsDeleteRequest",
          "schema": "tags-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TagsDeleteResponse",
          "schema": "tags-delete-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes a tag.",
      "authed": true,
      "method": "POST",
      "path": "/tags.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "tags-get",
      "tags": [
        "tags"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The requested tag's ID.",
          "name": "id",
          "schema": {
            "schema": {
              "example": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
              "type": "string"
            },
            "generatedName": "TagsGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TagsGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TagsGetResponse",
          "schema": "tags-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a tag's information.",
      "authed": true,
      "method": "GET",
      "path": "/tags.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "tag": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "allowed_values": {
                      "value": [
                        {
                          "value": {
                            "value": "allowed_values",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "tags-list",
      "tags": [
        "tags"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
          "name": "cursor",
          "schema": {
            "generatedName": "TagsListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TagsListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The maximum number of tags to return. The default is '50'.",
          "name": "limit",
          "schema": {
            "generatedName": "TagsListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TagsListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
          "name": "mode",
          "schema": {
            "generatedName": "TagsListRequestMode",
            "value": {
              "generatedName": "TagsListRequestMode",
              "schema": "list-mode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TagsListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TagsListResponse",
          "schema": "tags-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists the available tags.",
      "authed": true,
      "method": "GET",
      "path": "/tags.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev_cursor": {
                  "value": {
                    "value": "prev_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "created_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "created_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "created_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_id": {
                          "value": {
                            "value": "display_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "modified_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "modified_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "modified_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "allowed_values": {
                          "value": [
                            {
                              "value": {
                                "value": "allowed_values",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "description": {
                          "value": {
                            "value": "description",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "name",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "tags-update",
      "tags": [
        "tags"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TagsUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "TagsUpdateRequest",
          "schema": "tags-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TagsUpdateResponse",
          "schema": "tags-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates a tag's information.",
      "authed": true,
      "method": "POST",
      "path": "/tags.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "tag": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "allowed_values": {
                      "value": [
                        {
                          "value": {
                            "value": "allowed_values",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "description": {
                      "value": {
                        "value": "description",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "timeline-entries-create",
      "tags": [
        "timeline-entries"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TimelineEntriesCreateRequest",
      "request": {
        "schema": {
          "generatedName": "TimelineEntriesCreateRequest",
          "schema": "timeline-entries-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TimelineEntriesCreateResponse",
          "schema": "timeline-entries-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new entry on an object's timeline.",
      "authed": true,
      "method": "POST",
      "path": "/timeline-entries.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "timeline_comment",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "object": {
                  "value": {
                    "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "timeline_entry": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "timeline_comment",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "body": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "body_type": {
                        "value": "snap_kit",
                        "type": "enum"
                      },
                      "snap_kit_body": {
                        "value": [
                          {
                            "key": {
                              "value": "key",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "timeline-entries-get",
      "tags": [
        "timeline-entries"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the timeline entry to get.",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "TimelineEntriesGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TimelineEntriesGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TimelineEntriesGetResponse",
          "schema": "timeline-entries-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets an entry on an object's timeline.",
      "authed": true,
      "method": "GET",
      "path": "/timeline-entries.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "timeline_entry": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "timeline_comment",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "body": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "body_type": {
                        "value": "snap_kit",
                        "type": "enum"
                      },
                      "snap_kit_body": {
                        "value": [
                          {
                            "key": {
                              "value": "key",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "timeline-entries-list",
      "tags": [
        "timeline-entries"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the object to list timeline entries for.",
          "name": "object",
          "schema": {
            "schema": {
              "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
              "type": "string"
            },
            "generatedName": "TimelineEntriesListRequestObject",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
          "name": "cursor",
          "schema": {
            "generatedName": "TimelineEntriesListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TimelineEntriesListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The maximum number of entries to return. If not set, then this\ndefaults to `50`.\n",
          "name": "limit",
          "schema": {
            "generatedName": "TimelineEntriesListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "TimelineEntriesListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
          "name": "mode",
          "schema": {
            "generatedName": "TimelineEntriesListRequestMode",
            "value": {
              "generatedName": "TimelineEntriesListRequestMode",
              "schema": "list-mode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "TimelineEntriesListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TimelineEntriesListResponse",
          "schema": "timeline-entries-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists the timeline entries for an object.",
      "authed": true,
      "method": "GET",
      "path": "/timeline-entries.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "object",
              "value": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev_cursor": {
                  "value": {
                    "value": "prev_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "timeline_entries": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "timeline_comment",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "created_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "timeline_entries",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "created_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "timeline_entries",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "timeline_entries",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "modified_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "timeline_entries",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "modified_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "artifacts": {
                            "value": [
                              {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "body": {
                            "value": {
                              "value": "timeline_entries",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "body_type": {
                            "value": "snap_kit",
                            "type": "enum"
                          },
                          "snap_kit_body": {
                            "value": [
                              {
                                "key": {
                                  "value": "key",
                                  "type": "string"
                                },
                                "value": {
                                  "value": {
                                    "value": {
                                      "value": "value",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "type": "unknown"
                                }
                              }
                            ],
                            "type": "map"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "timeline-entries-update",
      "tags": [
        "timeline-entries"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "TimelineEntriesUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "TimelineEntriesUpdateRequest",
          "schema": "timeline-entries-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "TimelineEntriesUpdateResponse",
          "schema": "timeline-entries-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates an entry on an object's timeline.",
      "authed": true,
      "method": "POST",
      "path": "/timeline-entries.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "timeline_comment",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "timeline_entry": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "timeline_comment",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "timeline_entry",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "body": {
                        "value": {
                          "value": "timeline_entry",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "body_type": {
                        "value": "snap_kit",
                        "type": "enum"
                      },
                      "snap_kit_body": {
                        "value": [
                          {
                            "key": {
                              "value": "key",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhooks-create",
      "tags": [
        "webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WebhooksCreateRequest",
      "request": {
        "schema": {
          "generatedName": "WebhooksCreateRequest",
          "schema": "webhooks-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WebhooksCreateResponse",
          "schema": "webhooks-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates a new webhook target.",
      "authed": true,
      "method": "POST",
      "path": "/webhooks.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "url": {
                "value": {
                  "value": "url",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "webhook": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "event_types": {
                      "value": [
                        {
                          "value": "part_created",
                          "type": "enum"
                        }
                      ],
                      "type": "array"
                    },
                    "secret": {
                      "value": {
                        "value": "secret",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "active",
                      "type": "enum"
                    },
                    "url": {
                      "value": {
                        "value": "url",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhooks-delete",
      "tags": [
        "webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WebhooksDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "WebhooksDeleteRequest",
          "schema": "webhooks-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WebhooksDeleteResponse",
          "schema": "webhooks-delete-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes the requested webhook.",
      "authed": true,
      "method": "POST",
      "path": "/webhooks.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhooks-get",
      "tags": [
        "webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID for the webhook.",
          "name": "id",
          "schema": {
            "schema": {
              "example": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
              "type": "string"
            },
            "generatedName": "WebhooksGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "WebhooksGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WebhooksGetResponse",
          "schema": "webhooks-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets the requested webhook's information.",
      "authed": true,
      "method": "GET",
      "path": "/webhooks.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "webhook": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "event_types": {
                      "value": [
                        {
                          "value": "part_created",
                          "type": "enum"
                        }
                      ],
                      "type": "array"
                    },
                    "secret": {
                      "value": {
                        "value": "secret",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "active",
                      "type": "enum"
                    },
                    "url": {
                      "value": {
                        "value": "url",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhooks-list",
      "tags": [
        "webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WebhooksListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WebhooksListResponse",
          "schema": "webhooks-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists the webhooks.",
      "authed": true,
      "method": "GET",
      "path": "/webhooks.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "webhooks": {
                  "value": [
                    {
                      "properties": {
                        "created_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "created_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "created_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "display_id": {
                          "value": {
                            "value": "display_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "modified_by": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "sys_user",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "id": {
                                "value": {
                                  "value": "modified_by",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "modified_date": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "event_types": {
                          "value": [
                            {
                              "value": "part_created",
                              "type": "enum"
                            }
                          ],
                          "type": "array"
                        },
                        "secret": {
                          "value": {
                            "value": "secret",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "status": {
                          "value": "active",
                          "type": "enum"
                        },
                        "url": {
                          "value": {
                            "value": "url",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "webhooks-update",
      "tags": [
        "webhooks"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WebhooksUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "WebhooksUpdateRequest",
          "schema": "webhooks-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WebhooksUpdateResponse",
          "schema": "webhooks-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates the requested webhook.",
      "authed": true,
      "method": "POST",
      "path": "/webhooks.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "webhook": {
                  "properties": {
                    "created_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "created_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "created_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "display_id": {
                      "value": {
                        "value": "display_id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "modified_by": {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "sys_user",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "display_picture": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "email": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "full_name": {
                            "value": {
                              "value": "modified_by",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "state": {
                            "value": "active",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    },
                    "modified_date": {
                      "value": {
                        "value": "2024-01-15T09:30:00Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    },
                    "event_types": {
                      "value": [
                        {
                          "value": "part_created",
                          "type": "enum"
                        }
                      ],
                      "type": "array"
                    },
                    "secret": {
                      "value": {
                        "value": "secret",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "status": {
                      "value": "active",
                      "type": "enum"
                    },
                    "url": {
                      "value": {
                        "value": "url",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "works-create",
      "tags": [
        "works"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WorksCreateRequest",
      "request": {
        "schema": {
          "generatedName": "WorksCreateRequest",
          "schema": "works-create-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WorksCreateResponse",
          "schema": "works-create-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),\n[ticket](https://devrev.ai/docs/product/support)) item.\n",
      "authed": true,
      "method": "POST",
      "path": "/works.create",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "ticket",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "rev_org": {
                  "value": {
                    "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "applies_to_part": {
                  "value": {
                    "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "owned_by": {
                  "value": [
                    {
                      "value": {
                        "value": "don:<partition>:identity:devo/<dev-org-id>:devu/<dev-user-id>",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "tags": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "title": {
                  "value": {
                    "value": "string",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "work": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "ticket",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "applies_to_part": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "product",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "body": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "owned_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "work",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "reported_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "work",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "target_close_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "title": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "group": {
                        "properties": {
                          "display_id": {
                            "value": {
                              "value": "display_id",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "id",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "rev_org": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "rev_org",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "severity": {
                        "value": "blocker",
                        "type": "enum"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "works-delete",
      "tags": [
        "works"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WorksDeleteRequest",
      "request": {
        "schema": {
          "generatedName": "WorksDeleteRequest",
          "schema": "works-delete-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WorksDeleteResponse",
          "schema": "works-delete-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Deletes a work item.",
      "authed": true,
      "method": "POST",
      "path": "/works.delete",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "id": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "key": {
                    "value": "key",
                    "type": "string"
                  },
                  "value": {
                    "value": {
                      "value": {
                        "value": "value",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                }
              ],
              "type": "map"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "works-export",
      "tags": [
        "works"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for work belonging to any of the provided parts.",
          "name": "applies_to_part",
          "schema": {
            "generatedName": "WorksExportRequestAppliesToPart",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksExportRequestAppliesToPartItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksExportRequestAppliesToPart",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for work created by any of these users.",
          "name": "created_by",
          "schema": {
            "generatedName": "WorksExportRequestCreatedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksExportRequestCreatedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksExportRequestCreatedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The number of work items to return. The default is '50', the maximum\nis '5000'.\n",
          "name": "first",
          "schema": {
            "generatedName": "WorksExportRequestFirst",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "WorksExportRequestFirst",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for issues with any of the provided priorities.",
          "name": "issue.priority",
          "schema": {
            "generatedName": "WorksExportRequestIssuePriority",
            "value": {
              "value": {
                "generatedName": "WorksExportRequestIssuePriorityItem",
                "schema": "issue-priority",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksExportRequestIssuePriority",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for issues with any of the provided Rev organizations.\n",
          "name": "issue.rev_orgs",
          "schema": {
            "generatedName": "WorksExportRequestIssueRevOrgs",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksExportRequestIssueRevOrgsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksExportRequestIssueRevOrgs",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for work owned by any of these users.",
          "name": "owned_by",
          "schema": {
            "generatedName": "WorksExportRequestOwnedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksExportRequestOwnedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksExportRequestOwnedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for records in the provided stage(s).",
          "name": "stage.name",
          "schema": {
            "generatedName": "WorksExportRequestStageName",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksExportRequestStageNameItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksExportRequestStageName",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for tickets that are associated with any of the provided Rev\norganizations.\n",
          "name": "ticket.rev_org",
          "schema": {
            "generatedName": "WorksExportRequestTicketRevOrg",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksExportRequestTicketRevOrgItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksExportRequestTicketRevOrg",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for tickets with any of the provided severities.",
          "name": "ticket.severity",
          "schema": {
            "generatedName": "WorksExportRequestTicketSeverity",
            "value": {
              "value": {
                "generatedName": "WorksExportRequestTicketSeverityItem",
                "schema": "ticket-severity",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksExportRequestTicketSeverity",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for work of the provided types.",
          "name": "type",
          "schema": {
            "generatedName": "WorksExportRequestType",
            "value": {
              "value": {
                "generatedName": "WorksExportRequestTypeItem",
                "schema": "work-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksExportRequestType",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "WorksExportRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WorksExportResponse",
          "schema": "works-export-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Exports a collection of work items.",
      "authed": true,
      "method": "GET",
      "path": "/works.export",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "works": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "ticket",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "created_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "created_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "modified_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "modified_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "applies_to_part": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "product",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "artifacts": {
                            "value": [
                              {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "body": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "owned_by": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "type": {
                                      "value": {
                                        "value": "sys_user",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "id": {
                                      "value": {
                                        "value": "works",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "discriminated"
                                },
                                "type": "oneOf"
                              }
                            ],
                            "type": "array"
                          },
                          "reported_by": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "type": {
                                      "value": {
                                        "value": "sys_user",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "id": {
                                      "value": {
                                        "value": "works",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "discriminated"
                                },
                                "type": "oneOf"
                              }
                            ],
                            "type": "array"
                          },
                          "stage": {
                            "properties": {
                              "name": {
                                "value": {
                                  "value": "name",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "tags": {
                            "value": [
                              {
                                "properties": {
                                  "tag": {
                                    "properties": {
                                      "id": {
                                        "value": {
                                          "value": "id",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "name": {
                                        "value": {
                                          "value": "name",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "target_close_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "title": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "group": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "rev_org": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "rev_org",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "severity": {
                            "value": "blocker",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "works-get",
      "tags": [
        "works"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The work's ID.",
          "name": "id",
          "schema": {
            "schema": {
              "example": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
              "type": "string"
            },
            "generatedName": "WorksGetRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "WorksGetRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WorksGetResponse",
          "schema": "works-get-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Gets a work item's information.",
      "authed": true,
      "method": "GET",
      "path": "/works.get",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "work": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "ticket",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "applies_to_part": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "product",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "body": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "owned_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "work",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "reported_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "work",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "target_close_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "title": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "group": {
                        "properties": {
                          "display_id": {
                            "value": {
                              "value": "display_id",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "id",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "rev_org": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "rev_org",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "severity": {
                        "value": "blocker",
                        "type": "enum"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "works-list",
      "tags": [
        "works"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for work belonging to any of the provided parts.",
          "name": "applies_to_part",
          "schema": {
            "generatedName": "WorksListRequestAppliesToPart",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListRequestAppliesToPartItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksListRequestAppliesToPart",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for work created by any of these users.",
          "name": "created_by",
          "schema": {
            "generatedName": "WorksListRequestCreatedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListRequestCreatedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksListRequestCreatedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
          "name": "cursor",
          "schema": {
            "generatedName": "WorksListRequestCursor",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorksListRequestCursor",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for issues with any of the provided priorities.",
          "name": "issue.priority",
          "schema": {
            "generatedName": "WorksListRequestIssuePriority",
            "value": {
              "value": {
                "generatedName": "WorksListRequestIssuePriorityItem",
                "schema": "issue-priority",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksListRequestIssuePriority",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for issues with any of the provided Rev organizations.\n",
          "name": "issue.rev_orgs",
          "schema": {
            "generatedName": "WorksListRequestIssueRevOrgs",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListRequestIssueRevOrgsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksListRequestIssueRevOrgs",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The maximum number of works to return. The default is '50'.\n",
          "name": "limit",
          "schema": {
            "generatedName": "WorksListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "WorksListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
          "name": "mode",
          "schema": {
            "generatedName": "WorksListRequestMode",
            "value": {
              "generatedName": "WorksListRequestMode",
              "schema": "list-mode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for work owned by any of these users.",
          "name": "owned_by",
          "schema": {
            "generatedName": "WorksListRequestOwnedBy",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListRequestOwnedByItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksListRequestOwnedBy",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for records in the provided stage(s).",
          "name": "stage.name",
          "schema": {
            "generatedName": "WorksListRequestStageName",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListRequestStageNameItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksListRequestStageName",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for tickets that are associated with any of the provided Rev\norganizations.\n",
          "name": "ticket.rev_org",
          "schema": {
            "generatedName": "WorksListRequestTicketRevOrg",
            "value": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListRequestTicketRevOrgItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "WorksListRequestTicketRevOrg",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for tickets with any of the provided severities.",
          "name": "ticket.severity",
          "schema": {
            "generatedName": "WorksListRequestTicketSeverity",
            "value": {
              "value": {
                "generatedName": "WorksListRequestTicketSeverityItem",
                "schema": "ticket-severity",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksListRequestTicketSeverity",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Filters for work of the provided types.",
          "name": "type",
          "schema": {
            "generatedName": "WorksListRequestType",
            "value": {
              "value": {
                "generatedName": "WorksListRequestTypeItem",
                "schema": "work-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksListRequestType",
              "groupName": [],
              "type": "array"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "WorksListRequest",
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WorksListResponse",
          "schema": "works-list-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Lists a collection of work items.",
      "authed": true,
      "method": "GET",
      "path": "/works.list",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "next_cursor": {
                  "value": {
                    "value": "next_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "prev_cursor": {
                  "value": {
                    "value": "prev_cursor",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "works": {
                  "value": [
                    {
                      "value": {
                        "value": {
                          "type": {
                            "value": {
                              "value": "ticket",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "created_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "created_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "display_id": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "modified_by": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "modified_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "applies_to_part": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "product",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "name": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "artifacts": {
                            "value": [
                              {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "body": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "owned_by": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "type": {
                                      "value": {
                                        "value": "sys_user",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "id": {
                                      "value": {
                                        "value": "works",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "discriminated"
                                },
                                "type": "oneOf"
                              }
                            ],
                            "type": "array"
                          },
                          "reported_by": {
                            "value": [
                              {
                                "value": {
                                  "value": {
                                    "type": {
                                      "value": {
                                        "value": "sys_user",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "id": {
                                      "value": {
                                        "value": "works",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "discriminated"
                                },
                                "type": "oneOf"
                              }
                            ],
                            "type": "array"
                          },
                          "stage": {
                            "properties": {
                              "name": {
                                "value": {
                                  "value": "name",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "tags": {
                            "value": [
                              {
                                "properties": {
                                  "tag": {
                                    "properties": {
                                      "id": {
                                        "value": {
                                          "value": "id",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      },
                                      "name": {
                                        "value": {
                                          "value": "name",
                                          "type": "string"
                                        },
                                        "type": "primitive"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "type": "array"
                          },
                          "target_close_date": {
                            "value": {
                              "value": "2024-01-15T09:30:00Z",
                              "type": "datetime"
                            },
                            "type": "primitive"
                          },
                          "title": {
                            "value": {
                              "value": "works",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "group": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          },
                          "rev_org": {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "rev_org",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "works",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          },
                          "severity": {
                            "value": "blocker",
                            "type": "enum"
                          }
                        },
                        "type": "discriminated"
                      },
                      "type": "oneOf"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "works-update",
      "tags": [
        "works"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "WorksUpdateRequest",
      "request": {
        "schema": {
          "generatedName": "WorksUpdateRequest",
          "schema": "works-update-request",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Success.",
        "schema": {
          "generatedName": "WorksUpdateResponse",
          "schema": "works-update-response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "error-bad-request",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "400 Bad Request.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "401": {
          "generatedName": "UnauthorizedError",
          "schema": {
            "generatedName": "UnauthorizedErrorBody",
            "schema": "error-unauthorized",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "401 Unauthorized.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "error-forbidden",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "403 Forbidden.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "error-not-found",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "404 Not Found.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "429": {
          "generatedName": "TooManyRequestsError",
          "schema": {
            "generatedName": "TooManyRequestsErrorBody",
            "schema": "error-too-many-requests",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "429 Too Many Requests.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "error-internal-server-error",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "500 Internal Server Error.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        },
        "503": {
          "generatedName": "ServiceUnavailableError",
          "schema": {
            "generatedName": "ServiceUnavailableErrorBody",
            "schema": "error-service-unavailable",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "503 Service Unavailable.",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Updates a work item's information.",
      "authed": true,
      "method": "POST",
      "path": "/works.update",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": {
                "type": {
                  "value": {
                    "value": "ticket",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "applies_to_part": {
                  "value": {
                    "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "discriminated"
            },
            "type": "oneOf"
          },
          "response": {
            "value": {
              "properties": {
                "work": {
                  "value": {
                    "value": {
                      "type": {
                        "value": {
                          "value": "ticket",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "created_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "created_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "display_id": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "id": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "modified_by": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "sys_user",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_picture": {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            },
                            "email": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "full_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "state": {
                              "value": "active",
                              "type": "enum"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "modified_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "applies_to_part": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "product",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "artifacts": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "body": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "owned_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "work",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "reported_by": {
                        "value": [
                          {
                            "value": {
                              "value": {
                                "type": {
                                  "value": {
                                    "value": "sys_user",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "id": {
                                  "value": {
                                    "value": "work",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "discriminated"
                            },
                            "type": "oneOf"
                          }
                        ],
                        "type": "array"
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "value": {
                              "value": "name",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "tags": {
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "value": {
                                      "value": "id",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  },
                                  "name": {
                                    "value": {
                                      "value": "name",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      },
                      "target_close_date": {
                        "value": {
                          "value": "2024-01-15T09:30:00Z",
                          "type": "datetime"
                        },
                        "type": "primitive"
                      },
                      "title": {
                        "value": {
                          "value": "work",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "group": {
                        "properties": {
                          "display_id": {
                            "value": {
                              "value": "display_id",
                              "type": "string"
                            },
                            "type": "primitive"
                          },
                          "id": {
                            "value": {
                              "value": "id",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      },
                      "rev_org": {
                        "value": {
                          "value": {
                            "type": {
                              "value": {
                                "value": "rev_org",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "display_name": {
                              "value": {
                                "value": "work",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "discriminated"
                        },
                        "type": "oneOf"
                      },
                      "severity": {
                        "value": "blocker",
                        "type": "enum"
                      }
                    },
                    "type": "discriminated"
                  },
                  "type": "oneOf"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "artifact-summary": {
        "generatedName": "ArtifactSummary",
        "schema": "atom-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "artifacts-locate-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "artifactsLocateResponseExpiresAt",
            "key": "expires_at",
            "schema": {
              "generatedName": "artifactsLocateResponseExpiresAt",
              "title": "artifacts-locate-response",
              "value": {
                "description": "The expiration timestamp of the URL.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "ArtifactsLocateResponseExpiresAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "artifactsLocateResponseUrl",
            "key": "url",
            "schema": {
              "description": "The artifact's download URL.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ArtifactsLocateResponseUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to getting an artifact's download URL.",
        "generatedName": "ArtifactsLocateResponse",
        "title": "artifacts-locate-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "artifacts-prepare-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "artifactsPrepareRequestFileName",
            "key": "file_name",
            "schema": {
              "description": "The name of the file that's being uploaded.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ArtifactsPrepareRequestFileName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to prepare a URL to upload a file.",
        "generatedName": "ArtifactsPrepareRequest",
        "title": "artifacts-prepare-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "artifacts-prepare-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "artifactsPrepareResponseFormData",
            "key": "form_data",
            "schema": {
              "description": "The POST policy form data.",
              "value": {
                "generatedName": "ArtifactsPrepareResponseFormDataItem",
                "schema": "artifacts-prepare-response-form-data",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ArtifactsPrepareResponseFormData",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "artifactsPrepareResponseId",
            "key": "id",
            "schema": {
              "description": "The generated artifact's ID.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:artifact/<artifact-id>",
                "type": "string"
              },
              "generatedName": "ArtifactsPrepareResponseId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "artifactsPrepareResponseUrl",
            "key": "url",
            "schema": {
              "description": "The URL that the file's data should be uploaded to.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ArtifactsPrepareResponseUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to preparing a URL to upload a file.",
        "generatedName": "ArtifactsPrepareResponse",
        "title": "artifacts-prepare-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "artifacts-prepare-response-form-data": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "artifactsPrepareResponseFormDataKey",
            "key": "key",
            "schema": {
              "description": "Key of the form field.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ArtifactsPrepareResponseFormDataKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "artifactsPrepareResponseFormDataValue",
            "key": "value",
            "schema": {
              "description": "Value corresponding to the key.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ArtifactsPrepareResponseFormDataValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ArtifactsPrepareResponseFormData",
        "title": "artifacts-prepare-response-form-data",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "atom-base": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "atomBaseCreatedBy",
            "key": "created_by",
            "schema": {
              "generatedName": "atomBaseCreatedBy",
              "title": "atom-base",
              "value": {
                "generatedName": "AtomBaseCreatedBy",
                "schema": "user-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "atomBaseCreatedDate",
            "key": "created_date",
            "schema": {
              "generatedName": "atomBaseCreatedDate",
              "title": "atom-base",
              "value": {
                "description": "Timestamp when the object was created.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AtomBaseCreatedDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "atomBaseDisplayId",
            "key": "display_id",
            "schema": {
              "generatedName": "atomBaseDisplayId",
              "title": "atom-base",
              "value": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AtomBaseDisplayId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "atomBaseId",
            "key": "id",
            "schema": {
              "description": "Globally unique object ID.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AtomBaseId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "atomBaseModifiedBy",
            "key": "modified_by",
            "schema": {
              "generatedName": "atomBaseModifiedBy",
              "title": "atom-base",
              "value": {
                "generatedName": "AtomBaseModifiedBy",
                "schema": "user-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "atomBaseModifiedDate",
            "key": "modified_date",
            "schema": {
              "generatedName": "atomBaseModifiedDate",
              "title": "atom-base",
              "value": {
                "description": "Timestamp when the object was last modified.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AtomBaseModifiedDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AtomBase",
        "title": "atom-base",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "atom-base-summary": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "atomBaseSummaryDisplayId",
            "key": "display_id",
            "schema": {
              "generatedName": "atomBaseSummaryDisplayId",
              "title": "atom-base-summary",
              "value": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AtomBaseSummaryDisplayId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "atomBaseSummaryId",
            "key": "id",
            "schema": {
              "description": "Globally unique object ID.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AtomBaseSummaryId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AtomBaseSummary",
        "title": "atom-base-summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-connection": {
        "value": {
          "commonProperties": [
            {
              "key": "display_name",
              "schema": {
                "generatedName": "AuthConnectionDisplayName",
                "description": "Display name of the authentication connection. This name will be\nvisible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                "value": {
                  "description": "Display name of the authentication connection. This name will be\nvisible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AuthConnectionDisplayName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "enabled",
              "schema": {
                "generatedName": "AuthConnectionEnabled",
                "description": "Whether the authentication connection is enabled or disabled. If\nset to false, the authentication connection will not show up on the\nlogin screen as a login option.\n",
                "value": {
                  "description": "Whether the authentication connection is enabled or disabled. If\nset to false, the authentication connection will not show up on the\nlogin screen as a login option.\n",
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "AuthConnectionEnabled",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionId",
                "groupName": [],
                "type": "primitive"
              }
            }
          ],
          "description": "Connection object that specifies the configuration for an\nauthentication connection that is set up for a Dev organization.\n",
          "discriminantProperty": "type",
          "generatedName": "AuthConnection",
          "title": "auth-connection",
          "schemas": {
            "google_apps": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
              "schema": "auth-connection-options-google-apps",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "oidc": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
              "schema": "auth-connection-options-oidc",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "samlp": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
              "schema": "auth-connection-options-saml",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "social": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsSocial",
              "schema": "auth-connection-options-social",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "waad": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
              "schema": "auth-connection-options-azure-ad",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "auth-connection-options-azure-ad": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsAzureAdClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "authConnectionOptionsAzureAdClientId",
              "title": "auth-connection-options-azure-ad",
              "value": {
                "description": "Client ID for the Azure authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsAzureAdClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsAzureAdClientSecret",
            "key": "client_secret",
            "schema": {
              "generatedName": "authConnectionOptionsAzureAdClientSecret",
              "title": "auth-connection-options-azure-ad",
              "value": {
                "description": "Client secret for the Azure authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsAzureAdClientSecret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsAzureAdDomain",
            "key": "domain",
            "schema": {
              "generatedName": "authConnectionOptionsAzureAdDomain",
              "title": "auth-connection-options-azure-ad",
              "value": {
                "description": "Domain URL of the Azure authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsAzureAdDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Object encapsulating the configuration parameters for an Azure AD\nauthentication connection.\n",
        "generatedName": "AuthConnectionOptionsAzureAd",
        "title": "auth-connection-options-azure-ad",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-connection-options-google-apps": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsGoogleAppsClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "authConnectionOptionsGoogleAppsClientId",
              "title": "auth-connection-options-google-apps",
              "value": {
                "description": "Client ID for the Google Apps authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsGoogleAppsClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
            "key": "client_secret",
            "schema": {
              "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
              "title": "auth-connection-options-google-apps",
              "value": {
                "description": "Client secret for the Google Apps authentication connection.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsGoogleAppsClientSecret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
            "key": "tenant_domain",
            "schema": {
              "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
              "title": "auth-connection-options-google-apps",
              "value": {
                "description": "Tenant domain URL of the Google Apps authentication connection.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsGoogleAppsTenantDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Object encapsulating the configuration parameters for a Google Apps\nauthentication connection.\n",
        "generatedName": "AuthConnectionOptionsGoogleApps",
        "title": "auth-connection-options-google-apps",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-connection-options-oidc": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsOidcClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "authConnectionOptionsOidcClientId",
              "title": "auth-connection-options-oidc",
              "value": {
                "description": "Client ID for the OIDC authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsOidcClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsOidcClientSecret",
            "key": "client_secret",
            "schema": {
              "generatedName": "authConnectionOptionsOidcClientSecret",
              "title": "auth-connection-options-oidc",
              "value": {
                "description": "Client secret for the OIDC authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsOidcClientSecret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsOidcIssuer",
            "key": "issuer",
            "schema": {
              "generatedName": "authConnectionOptionsOidcIssuer",
              "title": "auth-connection-options-oidc",
              "value": {
                "description": "Issuer URL of the OIDC authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsOidcIssuer",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Object encapsulating the configuration parameters for an OIDC\nauthentication connection.\n",
        "generatedName": "AuthConnectionOptionsOidc",
        "title": "auth-connection-options-oidc",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-connection-options-saml": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsSamlSignInEndpoint",
            "key": "sign_in_endpoint",
            "schema": {
              "generatedName": "authConnectionOptionsSamlSignInEndpoint",
              "title": "auth-connection-options-saml",
              "value": {
                "description": "Sign In endpoint for the SAML authentication connection.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsSamlSignInEndpoint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authConnectionOptionsSamlSigningCert",
            "key": "signing_cert",
            "schema": {
              "generatedName": "authConnectionOptionsSamlSigningCert",
              "title": "auth-connection-options-saml",
              "value": {
                "description": "Signing certificate for the SAML authentication connection.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthConnectionOptionsSamlSigningCert",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Object encapsulating the configuration parameters for a SAML\nauthentication connection.\n",
        "generatedName": "AuthConnectionOptionsSaml",
        "title": "auth-connection-options-saml",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-connection-options-social": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "AuthConnectionOptionsSocialKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "AuthConnectionOptionsSocialValue",
          "type": "unknown"
        },
        "generatedName": "AuthConnectionOptionsSocial",
        "title": "auth-connection-options-social",
        "groupName": [],
        "type": "map"
      },
      "auth-connection-toggle": {
        "generatedName": "AuthConnectionToggle",
        "values": [
          {
            "generatedName": "disable",
            "value": "disable",
            "casing": {}
          },
          {
            "generatedName": "enable",
            "value": "enable",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "auth-connection-type": {
        "description": "Defines the type for the authentication connection. The configuration\nfor each authentication connection will depend on the type value.\n",
        "generatedName": "AuthConnectionType",
        "values": [
          {
            "generatedName": "google_apps",
            "value": "google_apps",
            "casing": {}
          },
          {
            "generatedName": "oidc",
            "value": "oidc",
            "casing": {}
          },
          {
            "generatedName": "samlp",
            "value": "samlp",
            "casing": {}
          },
          {
            "generatedName": "social",
            "value": "social",
            "casing": {}
          },
          {
            "generatedName": "waad",
            "value": "waad",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "auth-token": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokenClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "authTokenClientId",
              "value": {
                "description": "An identifier that represents the application that requested the\ntoken. Only applicable for application access tokens.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokenClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokenExpiresAt",
            "key": "expires_at",
            "schema": {
              "generatedName": "authTokenExpiresAt",
              "value": {
                "description": "The time at which the token expires.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AuthTokenExpiresAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokenIssuedAt",
            "key": "issued_at",
            "schema": {
              "generatedName": "authTokenIssuedAt",
              "value": {
                "description": "The time at which the token was issued.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AuthTokenIssuedAt",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokenRequestedTokenType",
            "key": "requested_token_type",
            "schema": {
              "generatedName": "authTokenRequestedTokenType",
              "value": {
                "generatedName": "AuthTokenRequestedTokenType",
                "schema": "auth-token-requested-token-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokenScopes",
            "key": "scopes",
            "schema": {
              "generatedName": "authTokenScopes",
              "value": {
                "description": "The scopes associated with the issued token.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AuthTokenScopesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AuthTokenScopes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokenStatus",
            "key": "status",
            "schema": {
              "generatedName": "authTokenStatus",
              "value": {
                "generatedName": "AuthTokenStatus",
                "schema": "auth-token-status",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokenSubject",
            "key": "subject",
            "schema": {
              "generatedName": "authTokenSubject",
              "value": {
                "description": "The subject of the token.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokenSubject",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokenTokenHint",
            "key": "token_hint",
            "schema": {
              "generatedName": "authTokenTokenHint",
              "value": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokenTokenHint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "AuthToken",
        "title": "auth-token",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-token-grant-type": {
        "description": "Specifies the process of obtaining a token.",
        "generatedName": "AuthTokenGrantType",
        "values": [
          {
            "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
            "value": "urn:devrev:params:oauth:grant-type:token-issue",
            "casing": {}
          },
          {
            "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
            "value": "urn:ietf:params:oauth:grant-type:token-exchange",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "auth-token-requested-token-type": {
        "description": "The type of the requested token.",
        "generatedName": "AuthTokenRequestedTokenType",
        "values": [
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
            "value": "urn:devrev:params:oauth:token-type:aat",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
            "value": "urn:devrev:params:oauth:token-type:aat:public",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
            "value": "urn:devrev:params:oauth:token-type:dev",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypePat",
            "value": "urn:devrev:params:oauth:token-type:pat",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
            "value": "urn:devrev:params:oauth:token-type:rev",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
            "value": "urn:devrev:params:oauth:token-type:session",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
            "value": "urn:devrev:params:oauth:token-type:session:dev0",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
            "value": "urn:devrev:params:oauth:token-type:sys",
            "casing": {}
          },
          {
            "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
            "value": "urn:ietf:params:oauth:token-type:jwt",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "auth-token-status": {
        "description": "The status of the token.",
        "generatedName": "AuthTokenStatus",
        "values": [
          {
            "generatedName": "active",
            "value": "active",
            "casing": {}
          },
          {
            "generatedName": "expired",
            "value": "expired",
            "casing": {}
          },
          {
            "generatedName": "revoked",
            "value": "revoked",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "auth-token-subject-token-type": {
        "description": "The type of the subject token.",
        "generatedName": "AuthTokenSubjectTokenType",
        "values": [
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
            "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
            "value": "urn:devrev:params:oauth:token-type:jwt:dev",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
            "value": "urn:devrev:params:oauth:token-type:revinfo",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
            "value": "urn:devrev:params:oauth:token-type:sysu",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
            "value": "urn:devrev:params:oauth:token-type:userinfo",
            "casing": {}
          },
          {
            "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
            "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
            "casing": {}
          },
          {
            "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
            "value": "urn:ietf:params:oauth:token-type:jwt",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "auth-token-token-type": {
        "description": "The type of the issued token. Bearer is the only supported token type.\n",
        "value": {
          "value": "bearer",
          "type": "string"
        },
        "generatedName": "AuthTokenTokenType",
        "groupName": [],
        "type": "literal"
      },
      "auth-tokens-create-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestAud",
            "key": "aud",
            "schema": {
              "generatedName": "authTokensCreateRequestAud",
              "title": "auth-tokens-create-request",
              "value": {
                "description": "The expected audience values with respect to the token.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AuthTokensCreateRequestAudItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "AuthTokensCreateRequestAud",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "authTokensCreateRequestClientId",
              "title": "auth-tokens-create-request",
              "value": {
                "description": "An identifier that represents the application which is requesting\nthe token. If no client_id is present in the request to generate an\napplication access token (AAT), DevRev will generate a client_id.\nThis client_id is only associated with an AAT.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateRequestClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestExpiresIn",
            "key": "expires_in",
            "schema": {
              "generatedName": "authTokensCreateRequestExpiresIn",
              "title": "auth-tokens-create-request",
              "value": {
                "description": "The expected validity lifetime of the token in number of days.\n",
                "schema": {
                  "type": "int64"
                },
                "generatedName": "AuthTokensCreateRequestExpiresIn",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestGrantType",
            "key": "grant_type",
            "schema": {
              "generatedName": "authTokensCreateRequestGrantType",
              "title": "auth-tokens-create-request",
              "value": {
                "generatedName": "AuthTokensCreateRequestGrantType",
                "schema": "auth-token-grant-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestRequestedTokenType",
            "key": "requested_token_type",
            "schema": {
              "generatedName": "authTokensCreateRequestRequestedTokenType",
              "title": "auth-tokens-create-request",
              "value": {
                "generatedName": "AuthTokensCreateRequestRequestedTokenType",
                "schema": "auth-token-requested-token-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestRevInfo",
            "key": "rev_info",
            "schema": {
              "generatedName": "authTokensCreateRequestRevInfo",
              "title": "auth-tokens-create-request",
              "value": {
                "generatedName": "AuthTokensCreateRequestRevInfo",
                "schema": "auth-tokens-rev-info",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestScope",
            "key": "scope",
            "schema": {
              "generatedName": "authTokensCreateRequestScope",
              "title": "auth-tokens-create-request",
              "value": {
                "description": "The requested set of scopes associated with the issued token. A\nspace-delimited list of values in which the order of values does\nnot matter.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateRequestScope",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestSubjectToken",
            "key": "subject_token",
            "schema": {
              "generatedName": "authTokensCreateRequestSubjectToken",
              "title": "auth-tokens-create-request",
              "value": {
                "description": "Represents the entity that requests the token. Not required when\nrequesting an application access token (AAT).\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateRequestSubjectToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestSubjectTokenType",
            "key": "subject_token_type",
            "schema": {
              "generatedName": "authTokensCreateRequestSubjectTokenType",
              "title": "auth-tokens-create-request",
              "value": {
                "generatedName": "AuthTokensCreateRequestSubjectTokenType",
                "schema": "auth-token-subject-token-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateRequestTokenHint",
            "key": "token_hint",
            "schema": {
              "generatedName": "authTokensCreateRequestTokenHint",
              "title": "auth-tokens-create-request",
              "value": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateRequestTokenHint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A request to create a new token corresponding to the requested token\ntype.\n",
        "generatedName": "AuthTokensCreateRequest",
        "title": "auth-tokens-create-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensCreateResponseAccessToken",
            "key": "access_token",
            "schema": {
              "description": "The issued JSON Web Token (JWT) corresponding to the requested\ntoken type.\n",
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthTokensCreateResponseAccessToken",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateResponseClientId",
            "key": "client_id",
            "schema": {
              "generatedName": "authTokensCreateResponseClientId",
              "title": "auth-tokens-create-response",
              "value": {
                "description": "An identifier that represents the application which is requesting\nthe token. Only present in a response corresponding to an\napplication access token (AAT).\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateResponseClientId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateResponseExpiresIn",
            "key": "expires_in",
            "schema": {
              "description": "The validity lifetime of the token specified in seconds since Unix\nepoch.\n",
              "schema": {
                "type": "int64"
              },
              "generatedName": "AuthTokensCreateResponseExpiresIn",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateResponseRefreshToken",
            "key": "refresh_token",
            "schema": {
              "generatedName": "authTokensCreateResponseRefreshToken",
              "title": "auth-tokens-create-response",
              "value": {
                "description": "A token to refresh the issued token.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateResponseRefreshToken",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateResponseScope",
            "key": "scope",
            "schema": {
              "generatedName": "authTokensCreateResponseScope",
              "title": "auth-tokens-create-response",
              "value": {
                "description": "The scopes associated with the issued token. A space-delimited list\nof values in which the order of values does not matter.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensCreateResponseScope",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensCreateResponseTokenType",
            "key": "token_type",
            "schema": {
              "generatedName": "AuthTokensCreateResponseTokenType",
              "schema": "auth-token-token-type",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response for the request to create a new token corresponding to the\nrequested token type.\n",
        "generatedName": "AuthTokensCreateResponse",
        "title": "auth-tokens-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensDeleteRequestTokenId",
            "key": "token_id",
            "schema": {
              "generatedName": "authTokensDeleteRequestTokenId",
              "title": "auth-tokens-delete-request",
              "value": {
                "description": "The unique identifier for the token under a given Dev organization.\nIf no token ID is provided, then the token ID will be set from the\nJTI claim of the token in the authorization header.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensDeleteRequestTokenId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to revoke the token.",
        "generatedName": "AuthTokensDeleteRequest",
        "title": "auth-tokens-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensGetResponseToken",
            "key": "token",
            "schema": {
              "generatedName": "AuthTokensGetResponseToken",
              "schema": "auth-token",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to get the token metadata.",
        "generatedName": "AuthTokensGetResponse",
        "title": "auth-tokens-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensListResponseTokens",
            "key": "tokens",
            "schema": {
              "description": "The list of token metadata.",
              "value": {
                "generatedName": "AuthTokensListResponseTokensItem",
                "schema": "auth-token",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "AuthTokensListResponseTokens",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to list the token metadata.",
        "generatedName": "AuthTokensListResponse",
        "title": "auth-tokens-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-org-traits": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensOrgTraitsDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "authTokensOrgTraitsDisplayName",
              "title": "auth-tokens-org-traits",
              "value": {
                "description": "The display name of the Rev org.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensOrgTraitsDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensOrgTraitsDomain",
            "key": "domain",
            "schema": {
              "generatedName": "authTokensOrgTraitsDomain",
              "title": "auth-tokens-org-traits",
              "value": {
                "description": "The domain of the Rev org.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensOrgTraitsDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Carries Rev org info.",
        "generatedName": "AuthTokensOrgTraits",
        "title": "auth-tokens-org-traits",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-rev-info": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensRevInfoOrgRef",
            "key": "org_ref",
            "schema": {
              "generatedName": "authTokensRevInfoOrgRef",
              "title": "auth-tokens-rev-info",
              "value": {
                "description": "An identifier which uniquely identifies a Rev org.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensRevInfoOrgRef",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensRevInfoOrgTraits",
            "key": "org_traits",
            "schema": {
              "generatedName": "authTokensRevInfoOrgTraits",
              "title": "auth-tokens-rev-info",
              "value": {
                "generatedName": "AuthTokensRevInfoOrgTraits",
                "schema": "auth-tokens-org-traits",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "authTokensRevInfoRevUserId",
            "key": "rev_user_id",
            "schema": {
              "generatedName": "authTokensRevInfoRevUserId",
              "title": "auth-tokens-rev-info",
              "value": {
                "description": "The unique ID of the Rev user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensRevInfoRevUserId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensRevInfoUserRef",
            "key": "user_ref",
            "schema": {
              "description": "An identifier which uniquely identifies a Rev user.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthTokensRevInfoUserRef",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensRevInfoUserTraits",
            "key": "user_traits",
            "schema": {
              "generatedName": "authTokensRevInfoUserTraits",
              "title": "auth-tokens-rev-info",
              "value": {
                "generatedName": "AuthTokensRevInfoUserTraits",
                "schema": "auth-tokens-user-traits",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Carries info corresponding to the Rev user to be provisioned and/or\nissue a Rev session token.\n",
        "generatedName": "AuthTokensRevInfo",
        "title": "auth-tokens-rev-info",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-self-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
            "key": "requested_token_type",
            "schema": {
              "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
              "title": "auth-tokens-self-delete-request",
              "value": {
                "generatedName": "AuthTokensSelfDeleteRequestRequestedTokenType",
                "schema": "auth-token-requested-token-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to delete all the tokens created by the authenticated user,\nthat match with the provided token type.\n",
        "generatedName": "AuthTokensSelfDeleteRequest",
        "title": "auth-tokens-self-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-update-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensUpdateRequestTokenHint",
            "key": "token_hint",
            "schema": {
              "description": "A hint that identifies the token.",
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthTokensUpdateRequestTokenHint",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensUpdateRequestTokenId",
            "key": "token_id",
            "schema": {
              "description": "The unique identifier of the token under a given Dev organization.\n",
              "schema": {
                "type": "string"
              },
              "generatedName": "AuthTokensUpdateRequestTokenId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A request to update the token metadata.",
        "generatedName": "AuthTokensUpdateRequest",
        "title": "auth-tokens-update-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensUpdateResponseToken",
            "key": "token",
            "schema": {
              "generatedName": "AuthTokensUpdateResponseToken",
              "schema": "auth-token",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response for the request to update the token metadata.",
        "generatedName": "AuthTokensUpdateResponse",
        "title": "auth-tokens-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "auth-tokens-user-traits": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "authTokensUserTraitsDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "authTokensUserTraitsDisplayName",
              "title": "auth-tokens-user-traits",
              "value": {
                "description": "The display name of the Rev user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensUserTraitsDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensUserTraitsEmail",
            "key": "email",
            "schema": {
              "generatedName": "authTokensUserTraitsEmail",
              "title": "auth-tokens-user-traits",
              "value": {
                "description": "The email address of the Rev user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensUserTraitsEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "authTokensUserTraitsFullName",
            "key": "full_name",
            "schema": {
              "generatedName": "authTokensUserTraitsFullName",
              "title": "auth-tokens-user-traits",
              "value": {
                "description": "The full name of the Rev user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AuthTokensUserTraitsFullName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Carries Rev user info.",
        "generatedName": "AuthTokensUserTraits",
        "title": "auth-tokens-user-traits",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "capability": {
        "generatedName": "Capability",
        "schema": "part-base",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "capability-summary": {
        "generatedName": "CapabilitySummary",
        "schema": "part-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "dev-org-auth-connections-create-request": {
        "value": {
          "commonProperties": [
            {
              "key": "display_name",
              "schema": {
                "generatedName": "DevOrgAuthConnectionsCreateRequestDisplayName",
                "description": "Display name of the authentication connection. This name will be\nvisible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                "value": {
                  "description": "Display name of the authentication connection. This name will be\nvisible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DevOrgAuthConnectionsCreateRequestDisplayName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            }
          ],
          "description": "Request to create a new enterprise authentication connection.\n",
          "discriminantProperty": "type",
          "generatedName": "DevOrgAuthConnectionsCreateRequest",
          "title": "dev-org-auth-connections-create-request",
          "schemas": {
            "google_apps": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
              "schema": "auth-connection-options-google-apps",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "oidc": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
              "schema": "auth-connection-options-oidc",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "samlp": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
              "schema": "auth-connection-options-saml",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "waad": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
              "schema": "auth-connection-options-azure-ad",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "dev-org-auth-connections-create-request-type": {
        "description": "Defines the type for the authentication connection. Different types of\nauthentication connections have different configuration parameters.\n",
        "generatedName": "DevOrgAuthConnectionsCreateRequestType",
        "values": [
          {
            "generatedName": "google_apps",
            "value": "google_apps",
            "casing": {}
          },
          {
            "generatedName": "oidc",
            "value": "oidc",
            "casing": {}
          },
          {
            "generatedName": "samlp",
            "value": "samlp",
            "casing": {}
          },
          {
            "generatedName": "waad",
            "value": "waad",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "dev-org-auth-connections-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsCreateResponseAuthConnection",
            "key": "auth_connection",
            "schema": {
              "generatedName": "DevOrgAuthConnectionsCreateResponseAuthConnection",
              "schema": "auth-connection",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response for the request to create a new enterprise authentication\nconnection.\n",
        "generatedName": "DevOrgAuthConnectionsCreateResponse",
        "title": "dev-org-auth-connections-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-org-auth-connections-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsDeleteRequestId",
            "key": "id",
            "schema": {
              "description": "ID of the authentication connection to be deleted.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DevOrgAuthConnectionsDeleteRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request to delete an enterprise authentication connection for a Dev\norganization. A default connection and a connection which is currently\nenabled cannot be deleted.\n",
        "generatedName": "DevOrgAuthConnectionsDeleteRequest",
        "title": "dev-org-auth-connections-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-org-auth-connections-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsGetResponseAuthConnection",
            "key": "auth_connection",
            "schema": {
              "generatedName": "DevOrgAuthConnectionsGetResponseAuthConnection",
              "schema": "auth-connection",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response object encapsulating the configuration details of an\nauthentication connection.\n",
        "generatedName": "DevOrgAuthConnectionsGetResponse",
        "title": "dev-org-auth-connections-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-org-auth-connections-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsListResponseAuthConnections",
            "key": "auth_connections",
            "schema": {
              "description": "List of all the authentication connections currently configured for\na Dev organization.\n",
              "value": {
                "generatedName": "DevOrgAuthConnectionsListResponseAuthConnectionsItem",
                "schema": "auth-connection",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "DevOrgAuthConnectionsListResponseAuthConnections",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response object for the request to list all the social and enterprise\nauthentication connections configured for a Dev organization.\n",
        "generatedName": "DevOrgAuthConnectionsListResponse",
        "title": "dev-org-auth-connections-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-org-auth-connections-toggle-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsToggleRequestId",
            "key": "id",
            "schema": {
              "description": "ID of the authentication connection to be toggled.",
              "schema": {
                "type": "string"
              },
              "generatedName": "DevOrgAuthConnectionsToggleRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
            "key": "toggle",
            "schema": {
              "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
              "title": "dev-org-auth-connections-toggle-request",
              "value": {
                "generatedName": "DevOrgAuthConnectionsToggleRequestToggle",
                "schema": "auth-connection-toggle",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request to enable or disable an authentication connection for a Dev\norganization.\n",
        "generatedName": "DevOrgAuthConnectionsToggleRequest",
        "title": "dev-org-auth-connections-toggle-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-org-auth-connections-update-request": {
        "value": {
          "commonProperties": [
            {
              "key": "display_name",
              "schema": {
                "generatedName": "DevOrgAuthConnectionsUpdateRequestDisplayName",
                "description": "New display name of the authentication connection. This name will\nbe visible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                "value": {
                  "description": "New display name of the authentication connection. This name will\nbe visible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DevOrgAuthConnectionsUpdateRequestDisplayName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection which is to be updated.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DevOrgAuthConnectionsUpdateRequestId",
                "groupName": [],
                "type": "primitive"
              }
            }
          ],
          "description": "Request to update an enterprise authentication connection for a Dev\norganization.\n",
          "discriminantProperty": "type",
          "generatedName": "DevOrgAuthConnectionsUpdateRequest",
          "title": "dev-org-auth-connections-update-request",
          "schemas": {
            "google_apps": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
              "schema": "auth-connection-options-google-apps",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "none": {
              "generatedName": "ComponentsSchemasEmpty",
              "schema": "empty",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "oidc": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
              "schema": "auth-connection-options-oidc",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "samlp": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
              "schema": "auth-connection-options-saml",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "waad": {
              "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
              "schema": "auth-connection-options-azure-ad",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "dev-org-auth-connections-update-request-type": {
        "description": "Specifies the type for the authentication connection. Different types\nof authentication connections have different configuration parameters\nthat can be updated.\n",
        "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
        "values": [
          {
            "generatedName": "google_apps",
            "value": "google_apps",
            "casing": {}
          },
          {
            "generatedName": "none",
            "value": "none",
            "casing": {}
          },
          {
            "generatedName": "oidc",
            "value": "oidc",
            "casing": {}
          },
          {
            "generatedName": "samlp",
            "value": "samlp",
            "casing": {}
          },
          {
            "generatedName": "waad",
            "value": "waad",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "dev-org-auth-connections-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devOrgAuthConnectionsUpdateResponseAuthConnection",
            "key": "auth_connection",
            "schema": {
              "generatedName": "DevOrgAuthConnectionsUpdateResponseAuthConnection",
              "schema": "auth-connection",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response for the request to update an enterprise authentication\nconnection.\n",
        "generatedName": "DevOrgAuthConnectionsUpdateResponse",
        "title": "dev-org-auth-connections-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-user": {
        "allOf": [
          {
            "generatedName": "UserBase",
            "schema": "user-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devUserExternalIdentities",
            "key": "external_identities",
            "schema": {
              "generatedName": "devUserExternalIdentities",
              "value": {
                "description": "IDs of the Dev User outside the DevRev SOR.",
                "value": {
                  "generatedName": "DevUserExternalIdentitiesItem",
                  "schema": "external-identity",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "DevUserExternalIdentities",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DevUser",
        "title": "dev-user",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-user-summary": {
        "generatedName": "DevUserSummary",
        "schema": "user-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "dev-users-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devUsersListResponseDevUsers",
            "key": "dev_users",
            "schema": {
              "description": "The list of Dev users.",
              "value": {
                "generatedName": "DevUsersListResponseDevUsersItem",
                "schema": "dev-user",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "DevUsersListResponseDevUsers",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "devUsersListResponseNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "devUsersListResponseNextCursor",
              "title": "dev-users-list-response",
              "value": {
                "description": "The cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DevUsersListResponseNextCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "devUsersListResponsePrevCursor",
            "key": "prev_cursor",
            "schema": {
              "generatedName": "devUsersListResponsePrevCursor",
              "title": "dev-users-list-response",
              "value": {
                "description": "The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "DevUsersListResponsePrevCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to listing the Dev users.",
        "generatedName": "DevUsersListResponse",
        "title": "dev-users-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "dev-users-self-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "devUsersSelfResponseDevUser",
            "key": "dev_user",
            "schema": {
              "generatedName": "DevUsersSelfResponseDevUser",
              "schema": "dev-user",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to getting the information for the authenticated user.\n",
        "generatedName": "DevUsersSelfResponse",
        "title": "dev-users-self-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "empty": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "EmptyKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "EmptyValue",
          "type": "unknown"
        },
        "generatedName": "Empty",
        "title": "empty",
        "nameOverride": "empty",
        "groupName": [],
        "type": "map"
      },
      "enhancement": {
        "allOf": [
          {
            "generatedName": "PartBase",
            "schema": "part-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "enhancementTargetCloseDate",
            "key": "target_close_date",
            "schema": {
              "generatedName": "enhancementTargetCloseDate",
              "value": {
                "description": "Timestamp when the enhancement is expected to be closed.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "EnhancementTargetCloseDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Enhancement",
        "nameOverride": "enhancement",
        "title": "enhancement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "part-base": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partBaseArtifacts",
            "key": "artifacts",
            "schema": {
              "generatedName": "partBaseArtifacts",
              "value": {
                "description": "The attached artifacts.",
                "value": {
                  "generatedName": "PartBaseArtifactsItem",
                  "schema": "artifact-summary",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PartBaseArtifacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partBaseDescription",
            "key": "description",
            "schema": {
              "generatedName": "partBaseDescription",
              "value": {
                "description": "Description of the part.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartBaseDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partBaseName",
            "key": "name",
            "schema": {
              "description": "Name of the part.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PartBaseName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partBaseOwnedBy",
            "key": "owned_by",
            "schema": {
              "description": "The users that own the part.",
              "value": {
                "generatedName": "PartBaseOwnedByItem",
                "schema": "user-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PartBaseOwnedBy",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partBaseTags",
            "key": "tags",
            "schema": {
              "generatedName": "partBaseTags",
              "value": {
                "description": "Tags associated with the object.",
                "value": {
                  "generatedName": "PartBaseTagsItem",
                  "schema": "tag-with-value",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PartBaseTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartBase",
        "title": "part-base",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "enhancement-summary": {
        "generatedName": "EnhancementSummary",
        "schema": "part-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "error-bad-request": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorBadRequest",
        "title": "error-bad-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-bad-request-bad-request": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorBadRequestBadRequestKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorBadRequestBadRequestValue",
          "type": "unknown"
        },
        "generatedName": "ErrorBadRequestBadRequest",
        "title": "error-bad-request-bad-request",
        "groupName": [],
        "type": "map"
      },
      "error-bad-request-invalid-enum-value": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorBadRequestInvalidEnumValueAllowedValues",
            "key": "allowed_values",
            "schema": {
              "description": "The allowed values for the field.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ErrorBadRequestInvalidEnumValueAllowedValuesItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ErrorBadRequestInvalidEnumValueAllowedValues",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorBadRequestInvalidEnumValueFieldName",
            "key": "field_name",
            "schema": {
              "description": "The field whose enum value is invalid.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ErrorBadRequestInvalidEnumValueFieldName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorBadRequestInvalidEnumValueValue",
            "key": "value",
            "schema": {
              "description": "The value that was received.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ErrorBadRequestInvalidEnumValueValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorBadRequestInvalidEnumValue",
        "title": "error-bad-request-invalid-enum-value",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-bad-request-missing-required-field": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorBadRequestMissingRequiredFieldFieldName",
            "key": "field_name",
            "schema": {
              "description": "The missing field's name.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ErrorBadRequestMissingRequiredFieldFieldName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorBadRequestMissingRequiredField",
        "title": "error-bad-request-missing-required-field",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-bad-request-parse-error": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorBadRequestParseErrorKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorBadRequestParseErrorValue",
          "type": "unknown"
        },
        "generatedName": "ErrorBadRequestParseError",
        "title": "error-bad-request-parse-error",
        "groupName": [],
        "type": "map"
      },
      "error-bad-request-type": {
        "generatedName": "ErrorBadRequestType",
        "values": [
          {
            "generatedName": "bad_request",
            "value": "bad_request",
            "casing": {}
          },
          {
            "generatedName": "invalid_enum_value",
            "value": "invalid_enum_value",
            "casing": {}
          },
          {
            "generatedName": "missing_required_field",
            "value": "missing_required_field",
            "casing": {}
          },
          {
            "generatedName": "parse_error",
            "value": "parse_error",
            "casing": {}
          },
          {
            "generatedName": "value_not_permitted",
            "value": "value_not_permitted",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "error-bad-request-value-not-permitted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorBadRequestValueNotPermittedFieldName",
            "key": "field_name",
            "schema": {
              "description": "The field whose value is not permitted.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ErrorBadRequestValueNotPermittedFieldName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "errorBadRequestValueNotPermittedReason",
            "key": "reason",
            "schema": {
              "generatedName": "errorBadRequestValueNotPermittedReason",
              "title": "error-bad-request-value-not-permitted",
              "value": {
                "description": "The reason the value isn't permitted.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ErrorBadRequestValueNotPermittedReason",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorBadRequestValueNotPermitted",
        "title": "error-bad-request-value-not-permitted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-base": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "errorBaseMessage",
            "key": "message",
            "schema": {
              "generatedName": "errorBaseMessage",
              "title": "error-base",
              "value": {
                "description": "The message associated with the error.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ErrorBaseMessage",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorBase",
        "title": "error-base",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-forbidden": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorForbidden",
        "title": "error-forbidden",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-forbidden-forbidden": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorForbiddenForbiddenKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorForbiddenForbiddenValue",
          "type": "unknown"
        },
        "generatedName": "ErrorForbiddenForbidden",
        "title": "error-forbidden-forbidden",
        "groupName": [],
        "type": "map"
      },
      "error-forbidden-type": {
        "value": {
          "value": "forbidden",
          "type": "string"
        },
        "generatedName": "ErrorForbiddenType",
        "groupName": [],
        "type": "literal"
      },
      "error-internal-server-error": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorInternalServerError",
        "title": "error-internal-server-error",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-internal-server-error-internal-error": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorInternalServerErrorInternalErrorKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorInternalServerErrorInternalErrorValue",
          "type": "unknown"
        },
        "generatedName": "ErrorInternalServerErrorInternalError",
        "title": "error-internal-server-error-internal-error",
        "groupName": [],
        "type": "map"
      },
      "error-internal-server-error-type": {
        "value": {
          "value": "internal_error",
          "type": "string"
        },
        "generatedName": "ErrorInternalServerErrorType",
        "groupName": [],
        "type": "literal"
      },
      "error-not-found": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorNotFound",
        "title": "error-not-found",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-not-found-not-found": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorNotFoundNotFoundKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorNotFoundNotFoundValue",
          "type": "unknown"
        },
        "generatedName": "ErrorNotFoundNotFound",
        "title": "error-not-found-not-found",
        "groupName": [],
        "type": "map"
      },
      "error-not-found-type": {
        "value": {
          "value": "not_found",
          "type": "string"
        },
        "generatedName": "ErrorNotFoundType",
        "groupName": [],
        "type": "literal"
      },
      "error-service-unavailable": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorServiceUnavailable",
        "title": "error-service-unavailable",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-service-unavailable-service-unavailable": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorServiceUnavailableServiceUnavailableKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorServiceUnavailableServiceUnavailableValue",
          "type": "unknown"
        },
        "generatedName": "ErrorServiceUnavailableServiceUnavailable",
        "title": "error-service-unavailable-service-unavailable",
        "groupName": [],
        "type": "map"
      },
      "error-service-unavailable-type": {
        "value": {
          "value": "service_unavailable",
          "type": "string"
        },
        "generatedName": "ErrorServiceUnavailableType",
        "groupName": [],
        "type": "literal"
      },
      "error-too-many-requests": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorTooManyRequests",
        "title": "error-too-many-requests",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-too-many-requests-too-many-requests": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorTooManyRequestsTooManyRequestsKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorTooManyRequestsTooManyRequestsValue",
          "type": "unknown"
        },
        "generatedName": "ErrorTooManyRequestsTooManyRequests",
        "title": "error-too-many-requests-too-many-requests",
        "groupName": [],
        "type": "map"
      },
      "error-too-many-requests-type": {
        "value": {
          "value": "too_many_requests",
          "type": "string"
        },
        "generatedName": "ErrorTooManyRequestsType",
        "groupName": [],
        "type": "literal"
      },
      "error-unauthorized": {
        "allOf": [
          {
            "generatedName": "ErrorBase",
            "schema": "error-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [],
        "allOfPropertyConflicts": [],
        "generatedName": "ErrorUnauthorized",
        "title": "error-unauthorized",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "error-unauthorized-type": {
        "value": {
          "value": "unauthenticated",
          "type": "string"
        },
        "generatedName": "ErrorUnauthorizedType",
        "groupName": [],
        "type": "literal"
      },
      "error-unauthorized-unauthenticated": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ErrorUnauthorizedUnauthenticatedKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ErrorUnauthorizedUnauthenticatedValue",
          "type": "unknown"
        },
        "generatedName": "ErrorUnauthorizedUnauthenticated",
        "title": "error-unauthorized-unauthenticated",
        "groupName": [],
        "type": "map"
      },
      "event-part-created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventPartCreatedPart",
            "key": "part",
            "schema": {
              "generatedName": "EventPartCreatedPart",
              "schema": "part",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventPartCreated",
        "title": "event-part-created",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-part-deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventPartDeletedId",
            "key": "id",
            "schema": {
              "description": "The ID of the part that was deleted.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                "type": "string"
              },
              "generatedName": "EventPartDeletedId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventPartDeleted",
        "title": "event-part-deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-part-updated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventPartUpdatedPart",
            "key": "part",
            "schema": {
              "generatedName": "EventPartUpdatedPart",
              "schema": "part",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventPartUpdated",
        "title": "event-part-updated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-rev-org-created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventRevOrgCreatedRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "EventRevOrgCreatedRevOrg",
              "schema": "rev-org",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventRevOrgCreated",
        "title": "event-rev-org-created",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-rev-org-deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventRevOrgDeletedId",
            "key": "id",
            "schema": {
              "description": "The ID of the Rev organization that was deleted.",
              "schema": {
                "example": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                "type": "string"
              },
              "generatedName": "EventRevOrgDeletedId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventRevOrgDeleted",
        "title": "event-rev-org-deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-rev-org-updated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventRevOrgUpdatedRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "EventRevOrgUpdatedRevOrg",
              "schema": "rev-org",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventRevOrgUpdated",
        "title": "event-rev-org-updated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-tag-created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventTagCreatedTag",
            "key": "tag",
            "schema": {
              "generatedName": "EventTagCreatedTag",
              "schema": "tag",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventTagCreated",
        "title": "event-tag-created",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-tag-deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventTagDeletedId",
            "key": "id",
            "schema": {
              "description": "The ID of the tag that was deleted.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                "type": "string"
              },
              "generatedName": "EventTagDeletedId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventTagDeleted",
        "title": "event-tag-deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-tag-updated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventTagUpdatedTag",
            "key": "tag",
            "schema": {
              "generatedName": "EventTagUpdatedTag",
              "schema": "tag",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventTagUpdated",
        "title": "event-tag-updated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-timeline-entry-created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventTimelineEntryCreatedEntry",
            "key": "entry",
            "schema": {
              "generatedName": "EventTimelineEntryCreatedEntry",
              "schema": "timeline-entry",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventTimelineEntryCreated",
        "title": "event-timeline-entry-created",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-timeline-entry-deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventTimelineEntryDeletedId",
            "key": "id",
            "schema": {
              "description": "The ID of the timeline entry that was deleted.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EventTimelineEntryDeletedId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventTimelineEntryDeleted",
        "title": "event-timeline-entry-deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-timeline-entry-updated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventTimelineEntryUpdatedEntry",
            "key": "entry",
            "schema": {
              "generatedName": "EventTimelineEntryUpdatedEntry",
              "schema": "timeline-entry",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventTimelineEntryUpdated",
        "title": "event-timeline-entry-updated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-webhook-created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventWebhookCreatedWebhook",
            "key": "webhook",
            "schema": {
              "generatedName": "EventWebhookCreatedWebhook",
              "schema": "webhook",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventWebhookCreated",
        "title": "event-webhook-created",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-webhook-deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventWebhookDeletedId",
            "key": "id",
            "schema": {
              "description": "The ID of the webhook that was deleted.",
              "schema": {
                "example": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                "type": "string"
              },
              "generatedName": "EventWebhookDeletedId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventWebhookDeleted",
        "title": "event-webhook-deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-webhook-updated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventWebhookUpdatedWebhook",
            "key": "webhook",
            "schema": {
              "generatedName": "EventWebhookUpdatedWebhook",
              "schema": "webhook",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventWebhookUpdated",
        "title": "event-webhook-updated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-work-created": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventWorkCreatedWork",
            "key": "work",
            "schema": {
              "generatedName": "EventWorkCreatedWork",
              "schema": "work",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventWorkCreated",
        "title": "event-work-created",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-work-deleted": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventWorkDeletedId",
            "key": "id",
            "schema": {
              "description": "The ID of the work that was deleted.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                "type": "string"
              },
              "generatedName": "EventWorkDeletedId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventWorkDeleted",
        "title": "event-work-deleted",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "event-work-updated": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "eventWorkUpdatedWork",
            "key": "work",
            "schema": {
              "generatedName": "EventWorkUpdatedWork",
              "schema": "work",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EventWorkUpdated",
        "title": "event-work-updated",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "external-identity": {
        "description": "External identity of a user.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "ExternalIdentityKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "ExternalIdentityValue",
          "type": "unknown"
        },
        "generatedName": "ExternalIdentity",
        "title": "external-identity",
        "groupName": [],
        "type": "map"
      },
      "feature": {
        "generatedName": "Feature",
        "schema": "part-base",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "feature-summary": {
        "generatedName": "FeatureSummary",
        "schema": "part-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "group-summary": {
        "generatedName": "GroupSummary",
        "schema": "atom-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "issue": {
        "allOf": [
          {
            "generatedName": "WorkBase",
            "schema": "work-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "issuePriority",
            "key": "priority",
            "schema": {
              "generatedName": "issuePriority",
              "value": {
                "generatedName": "IssuePriority",
                "schema": "issue-priority",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Issue",
        "nameOverride": "issue",
        "title": "issue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "work-base": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workBaseAppliesToPart",
            "key": "applies_to_part",
            "schema": {
              "generatedName": "workBaseAppliesToPart",
              "value": {
                "generatedName": "WorkBaseAppliesToPart",
                "schema": "part-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workBaseArtifacts",
            "key": "artifacts",
            "schema": {
              "generatedName": "workBaseArtifacts",
              "value": {
                "description": "The artifacts attached to the work item.",
                "value": {
                  "generatedName": "WorkBaseArtifactsItem",
                  "schema": "artifact-summary",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WorkBaseArtifacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workBaseBody",
            "key": "body",
            "schema": {
              "generatedName": "workBaseBody",
              "value": {
                "description": "Body of the work object.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkBaseBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workBaseOwnedBy",
            "key": "owned_by",
            "schema": {
              "description": "The users that own the work.",
              "value": {
                "generatedName": "WorkBaseOwnedByItem",
                "schema": "user-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorkBaseOwnedBy",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workBaseReportedBy",
            "key": "reported_by",
            "schema": {
              "generatedName": "workBaseReportedBy",
              "value": {
                "description": "Users that reported the work.",
                "value": {
                  "generatedName": "WorkBaseReportedByItem",
                  "schema": "user-summary",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WorkBaseReportedBy",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workBaseStage",
            "key": "stage",
            "schema": {
              "generatedName": "workBaseStage",
              "value": {
                "generatedName": "WorkBaseStage",
                "schema": "stage",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workBaseTags",
            "key": "tags",
            "schema": {
              "generatedName": "workBaseTags",
              "value": {
                "description": "Tags associated with the object.",
                "value": {
                  "generatedName": "WorkBaseTagsItem",
                  "schema": "tag-with-value",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WorkBaseTags",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workBaseTargetCloseDate",
            "key": "target_close_date",
            "schema": {
              "generatedName": "workBaseTargetCloseDate",
              "value": {
                "description": "Timestamp when the work is expected to be complete.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "WorkBaseTargetCloseDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workBaseTitle",
            "key": "title",
            "schema": {
              "description": "Title of the work object.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkBaseTitle",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkBase",
        "title": "work-base",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "issue-priority": {
        "description": "Priority of the work based upon impact and criticality.",
        "generatedName": "IssuePriority",
        "values": [
          {
            "generatedName": "p0",
            "value": "p0",
            "casing": {}
          },
          {
            "generatedName": "p1",
            "value": "p1",
            "casing": {}
          },
          {
            "generatedName": "p2",
            "value": "p2",
            "casing": {}
          },
          {
            "generatedName": "p3",
            "value": "p3",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "list-mode": {
        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
        "generatedName": "ListMode",
        "values": [
          {
            "generatedName": "after",
            "value": "after",
            "casing": {}
          },
          {
            "generatedName": "before",
            "value": "before",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "org-base": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "orgBaseDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "orgBaseDisplayName",
              "value": {
                "description": "Name of the Organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgBaseDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrgBase",
        "title": "org-base",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "org-base-summary": {
        "allOf": [
          {
            "generatedName": "AtomBaseSummary",
            "schema": "atom-base-summary",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "orgBaseSummaryDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "orgBaseSummaryDisplayName",
              "value": {
                "description": "Name of the Organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "OrgBaseSummaryDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "OrgBaseSummary",
        "title": "org-base-summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "org-environment": {
        "description": "The environment of the Org. Defaults to 'production' if not specified.\n",
        "generatedName": "OrgEnvironment",
        "values": [
          {
            "generatedName": "production",
            "value": "production",
            "casing": {}
          },
          {
            "generatedName": "staging",
            "value": "staging",
            "casing": {}
          },
          {
            "generatedName": "test",
            "value": "test",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "org-summary": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "OrgSummary",
          "title": "org-summary",
          "schemas": {
            "rev_org": {
              "generatedName": "ComponentsSchemasRevOrgSummary",
              "schema": "rev-org-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "org-type": {
        "value": {
          "value": "rev_org",
          "type": "string"
        },
        "generatedName": "OrgType",
        "groupName": [],
        "type": "literal"
      },
      "part": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "Part",
          "title": "part",
          "nameOverride": "part",
          "schemas": {
            "capability": {
              "generatedName": "ComponentsSchemasCapability",
              "schema": "capability",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "enhancement": {
              "generatedName": "ComponentsSchemasEnhancement",
              "schema": "enhancement",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "feature": {
              "generatedName": "ComponentsSchemasFeature",
              "schema": "feature",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "product": {
              "generatedName": "ComponentsSchemasProduct",
              "schema": "product",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "part-base-summary": {
        "allOf": [
          {
            "generatedName": "AtomBaseSummary",
            "schema": "atom-base-summary",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partBaseSummaryName",
            "key": "name",
            "schema": {
              "description": "Name of the part.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PartBaseSummaryName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartBaseSummary",
        "title": "part-base-summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "part-summary": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "PartSummary",
          "title": "part-summary",
          "schemas": {
            "capability": {
              "generatedName": "ComponentsSchemasCapabilitySummary",
              "schema": "capability-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "enhancement": {
              "generatedName": "ComponentsSchemasEnhancementSummary",
              "schema": "enhancement-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "feature": {
              "generatedName": "ComponentsSchemasFeatureSummary",
              "schema": "feature-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "product": {
              "generatedName": "ComponentsSchemasProductSummary",
              "schema": "product-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "part-type": {
        "generatedName": "PartType",
        "values": [
          {
            "generatedName": "capability",
            "value": "capability",
            "casing": {}
          },
          {
            "generatedName": "enhancement",
            "value": "enhancement",
            "casing": {}
          },
          {
            "generatedName": "feature",
            "value": "feature",
            "casing": {}
          },
          {
            "generatedName": "product",
            "value": "product",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "parts-create-request": {
        "value": {
          "commonProperties": [
            {
              "key": "description",
              "schema": {
                "generatedName": "PartsCreateRequestDescription",
                "description": "Description of the part.",
                "value": {
                  "description": "Description of the part.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PartsCreateRequestDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsCreateRequestName",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the part.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PartsCreateRequestOwnedByItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PartsCreateRequestOwnedBy",
                "groupName": [],
                "type": "array"
              }
            }
          ],
          "discriminantProperty": "type",
          "generatedName": "PartsCreateRequest",
          "title": "parts-create-request",
          "schemas": {
            "capability": {
              "generatedName": "ComponentsSchemasPartsCreateRequestCapability",
              "schema": "parts-create-request-capability",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "enhancement": {
              "generatedName": "ComponentsSchemasPartsCreateRequestEnhancement",
              "schema": "parts-create-request-enhancement",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "feature": {
              "generatedName": "ComponentsSchemasPartsCreateRequestFeature",
              "schema": "parts-create-request-feature",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "product": {
              "generatedName": "ComponentsSchemasPartsCreateRequestProduct",
              "schema": "parts-create-request-product",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "parts-create-request-capability": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsCreateRequestCapabilityParentPart",
            "key": "parent_part",
            "schema": {
              "description": "ID of the parent product for the capability.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsCreateRequestCapabilityParentPartItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "PartsCreateRequestCapabilityParentPart",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsCreateRequestCapability",
        "title": "parts-create-request-capability",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-create-request-enhancement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsCreateRequestEnhancementParentPart",
            "key": "parent_part",
            "schema": {
              "description": "ID of the parent part on which the enhancement is to be created.\n",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsCreateRequestEnhancementParentPartItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "PartsCreateRequestEnhancementParentPart",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
            "key": "target_close_date",
            "schema": {
              "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
              "title": "parts-create-request-enhancement",
              "value": {
                "description": "Target close date by which enhancement is expected to be closed.\n",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PartsCreateRequestEnhancementTargetCloseDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsCreateRequestEnhancement",
        "title": "parts-create-request-enhancement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-create-request-feature": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsCreateRequestFeatureParentPart",
            "key": "parent_part",
            "schema": {
              "description": "ID of the parent capability/feature for the feature.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsCreateRequestFeatureParentPartItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "PartsCreateRequestFeatureParentPart",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsCreateRequestFeature",
        "title": "parts-create-request-feature",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-create-request-product": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "PartsCreateRequestProductKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "PartsCreateRequestProductValue",
          "type": "unknown"
        },
        "generatedName": "PartsCreateRequestProduct",
        "title": "parts-create-request-product",
        "groupName": [],
        "type": "map"
      },
      "parts-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsCreateResponsePart",
            "key": "part",
            "schema": {
              "generatedName": "PartsCreateResponsePart",
              "schema": "part",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsCreateResponse",
        "title": "parts-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsDeleteRequestId",
            "key": "id",
            "schema": {
              "description": "The ID of the part to delete.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                "type": "string"
              },
              "generatedName": "PartsDeleteRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsDeleteRequest",
        "title": "parts-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-delete-response": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "PartsDeleteResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "PartsDeleteResponseValue",
          "type": "unknown"
        },
        "generatedName": "PartsDeleteResponse",
        "title": "parts-delete-response",
        "groupName": [],
        "type": "map"
      },
      "parts-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsGetResponsePart",
            "key": "part",
            "schema": {
              "generatedName": "PartsGetResponsePart",
              "schema": "part",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsGetResponse",
        "title": "parts-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsListResponseNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "partsListResponseNextCursor",
              "title": "parts-list-response",
              "value": {
                "description": "The cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsListResponseNextCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partsListResponseParts",
            "key": "parts",
            "schema": {
              "description": "The list of parts.",
              "value": {
                "generatedName": "PartsListResponsePartsItem",
                "schema": "part",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PartsListResponseParts",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "partsListResponsePrevCursor",
            "key": "prev_cursor",
            "schema": {
              "generatedName": "partsListResponsePrevCursor",
              "title": "parts-list-response",
              "value": {
                "description": "The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "PartsListResponsePrevCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsListResponse",
        "title": "parts-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-update-request": {
        "value": {
          "commonProperties": [
            {
              "key": "description",
              "schema": {
                "generatedName": "PartsUpdateRequestDescription",
                "description": "The updated description of the part.",
                "value": {
                  "description": "The updated description of the part.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PartsUpdateRequestDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part to update.",
                "schema": {
                  "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                  "type": "string"
                },
                "generatedName": "PartsUpdateRequestId",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "name",
              "schema": {
                "generatedName": "PartsUpdateRequestName",
                "description": "The updated name of the part.",
                "value": {
                  "description": "The updated name of the part.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PartsUpdateRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "owned_by",
              "schema": {
                "generatedName": "PartsUpdateRequestOwnedBy",
                "value": {
                  "generatedName": "PartsUpdateRequestOwnedBy",
                  "schema": "parts-update-request-owned-by",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            }
          ],
          "discriminantProperty": "type",
          "generatedName": "PartsUpdateRequest",
          "title": "parts-update-request",
          "schemas": {
            "capability": {
              "generatedName": "ComponentsSchemasPartsUpdateRequestCapability",
              "schema": "parts-update-request-capability",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "enhancement": {
              "generatedName": "ComponentsSchemasPartsUpdateRequestEnhancement",
              "schema": "parts-update-request-enhancement",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "feature": {
              "generatedName": "ComponentsSchemasPartsUpdateRequestFeature",
              "schema": "parts-update-request-feature",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "none": {
              "generatedName": "ComponentsSchemasEmpty",
              "schema": "empty",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "product": {
              "generatedName": "ComponentsSchemasPartsUpdateRequestProduct",
              "schema": "parts-update-request-product",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "parts-update-request-capability": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "PartsUpdateRequestCapabilityKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "PartsUpdateRequestCapabilityValue",
          "type": "unknown"
        },
        "generatedName": "PartsUpdateRequestCapability",
        "title": "parts-update-request-capability",
        "groupName": [],
        "type": "map"
      },
      "parts-update-request-enhancement": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
            "key": "target_close_date",
            "schema": {
              "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
              "title": "parts-update-request-enhancement",
              "value": {
                "description": "Updates the target close date of the enhancement.",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "PartsUpdateRequestEnhancementTargetCloseDate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsUpdateRequestEnhancement",
        "title": "parts-update-request-enhancement",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-update-request-feature": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "PartsUpdateRequestFeatureKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "PartsUpdateRequestFeatureValue",
          "type": "unknown"
        },
        "generatedName": "PartsUpdateRequestFeature",
        "title": "parts-update-request-feature",
        "groupName": [],
        "type": "map"
      },
      "parts-update-request-owned-by": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsUpdateRequestOwnedBySet",
            "key": "set",
            "schema": {
              "generatedName": "partsUpdateRequestOwnedBySet",
              "title": "parts-update-request-owned-by",
              "value": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be\nempty.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PartsUpdateRequestOwnedBySetItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "PartsUpdateRequestOwnedBySet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsUpdateRequestOwnedBy",
        "title": "parts-update-request-owned-by",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "parts-update-request-product": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "PartsUpdateRequestProductKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "PartsUpdateRequestProductValue",
          "type": "unknown"
        },
        "generatedName": "PartsUpdateRequestProduct",
        "title": "parts-update-request-product",
        "groupName": [],
        "type": "map"
      },
      "parts-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "partsUpdateResponsePart",
            "key": "part",
            "schema": {
              "generatedName": "PartsUpdateResponsePart",
              "schema": "part",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PartsUpdateResponse",
        "title": "parts-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "product": {
        "generatedName": "Product",
        "schema": "part-base",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "product-summary": {
        "generatedName": "ProductSummary",
        "schema": "part-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "rev-org": {
        "allOf": [
          {
            "generatedName": "OrgBase",
            "schema": "org-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgDescription",
            "key": "description",
            "schema": {
              "generatedName": "revOrgDescription",
              "value": {
                "description": "Description of the Rev organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgDomain",
            "key": "domain",
            "schema": {
              "generatedName": "revOrgDomain",
              "value": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgExternalRef",
            "key": "external_ref",
            "schema": {
              "generatedName": "revOrgExternalRef",
              "value": {
                "description": "External ref is a unique identifier for the Rev (customer)\norganization from your primary customer system of records. If none\nis specified, a system-generated identifier will be assigned to the\norganization.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgExternalRef",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevOrg",
        "title": "rev-org",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-org-summary": {
        "generatedName": "RevOrgSummary",
        "schema": "org-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "rev-orgs-create-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsCreateRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "revOrgsCreateRequestDescription",
              "title": "rev-orgs-create-request",
              "value": {
                "description": "Description of the Rev organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsCreateRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsCreateRequestDisplayName",
            "key": "display_name",
            "schema": {
              "description": "Name of the Rev organization.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RevOrgsCreateRequestDisplayName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsCreateRequestDomain",
            "key": "domain",
            "schema": {
              "generatedName": "revOrgsCreateRequestDomain",
              "title": "rev-orgs-create-request",
              "value": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsCreateRequestDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsCreateRequestEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "revOrgsCreateRequestEnvironment",
              "title": "rev-orgs-create-request",
              "value": {
                "generatedName": "RevOrgsCreateRequestEnvironment",
                "schema": "org-environment",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "revOrgsCreateRequestExternalRef",
            "key": "external_ref",
            "schema": {
              "generatedName": "revOrgsCreateRequestExternalRef",
              "title": "rev-orgs-create-request",
              "value": {
                "description": "External ref is a custom unique identifier which is a reference to\nan unique id for this organization's data in some system of\nrecords.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsCreateRequestExternalRef",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsCreateRequestTier",
            "key": "tier",
            "schema": {
              "generatedName": "revOrgsCreateRequestTier",
              "title": "rev-orgs-create-request",
              "value": {
                "description": "The tier of the RevOrg.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsCreateRequestTier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request object to create a new Rev organization in the Dev\norganization.\n",
        "generatedName": "RevOrgsCreateRequest",
        "title": "rev-orgs-create-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-orgs-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsCreateResponseRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "RevOrgsCreateResponseRevOrg",
              "schema": "rev-org",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response object for request to create a new Rev organization.\n",
        "generatedName": "RevOrgsCreateResponse",
        "title": "rev-orgs-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-orgs-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsDeleteRequestId",
            "key": "id",
            "schema": {
              "description": "The ID of Rev organization to delete.",
              "schema": {
                "example": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                "type": "string"
              },
              "generatedName": "RevOrgsDeleteRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request object to delete a Rev organization.",
        "generatedName": "RevOrgsDeleteRequest",
        "title": "rev-orgs-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-orgs-delete-response": {
        "description": "The response to deleting a Rev organization.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "RevOrgsDeleteResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "RevOrgsDeleteResponseValue",
          "type": "unknown"
        },
        "generatedName": "RevOrgsDeleteResponse",
        "title": "rev-orgs-delete-response",
        "groupName": [],
        "type": "map"
      },
      "rev-orgs-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsGetResponseRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "RevOrgsGetResponseRevOrg",
              "schema": "rev-org",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to getting a Rev organization's information.",
        "generatedName": "RevOrgsGetResponse",
        "title": "rev-orgs-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-orgs-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsListResponseNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "revOrgsListResponseNextCursor",
              "title": "rev-orgs-list-response",
              "value": {
                "description": "The cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsListResponseNextCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsListResponsePrevCursor",
            "key": "prev_cursor",
            "schema": {
              "generatedName": "revOrgsListResponsePrevCursor",
              "title": "rev-orgs-list-response",
              "value": {
                "description": "The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsListResponsePrevCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsListResponseRevOrgs",
            "key": "rev_orgs",
            "schema": {
              "description": "List with all of the Rev organizations' information.",
              "value": {
                "generatedName": "RevOrgsListResponseRevOrgsItem",
                "schema": "rev-org",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RevOrgsListResponseRevOrgs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to getting a list of Rev organizations' information.\n",
        "generatedName": "RevOrgsListResponse",
        "title": "rev-orgs-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-orgs-update-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "revOrgsUpdateRequestDescription",
              "title": "rev-orgs-update-request",
              "value": {
                "description": "Description of the Rev organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsUpdateRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "revOrgsUpdateRequestDisplayName",
              "title": "rev-orgs-update-request",
              "value": {
                "description": "Customer chosen name for the Rev organization.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsUpdateRequestDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestDomain",
            "key": "domain",
            "schema": {
              "generatedName": "revOrgsUpdateRequestDomain",
              "title": "rev-orgs-update-request",
              "value": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsUpdateRequestDomain",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "revOrgsUpdateRequestEnvironment",
              "title": "rev-orgs-update-request",
              "value": {
                "generatedName": "RevOrgsUpdateRequestEnvironment",
                "schema": "org-environment",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestExternalRef",
            "key": "external_ref",
            "schema": {
              "generatedName": "revOrgsUpdateRequestExternalRef",
              "title": "rev-orgs-update-request",
              "value": {
                "description": "External ref is a custom unique identifier which is a reference to\nan unique id for this organization's data in some system of\nrecords.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsUpdateRequestExternalRef",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestId",
            "key": "id",
            "schema": {
              "description": "The ID of Rev organization to update.",
              "schema": {
                "example": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                "type": "string"
              },
              "generatedName": "RevOrgsUpdateRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateRequestTier",
            "key": "tier",
            "schema": {
              "generatedName": "revOrgsUpdateRequestTier",
              "title": "rev-orgs-update-request",
              "value": {
                "description": "The tier of the RevOrg.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevOrgsUpdateRequestTier",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Request object to update information of the Rev organization.\n",
        "generatedName": "RevOrgsUpdateRequest",
        "title": "rev-orgs-update-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-orgs-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revOrgsUpdateResponseRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "RevOrgsUpdateResponseRevOrg",
              "schema": "rev-org",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Response object to updating Rev organization's information.",
        "generatedName": "RevOrgsUpdateResponse",
        "title": "rev-orgs-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "rev-user-summary": {
        "allOf": [
          {
            "generatedName": "UserBaseSummary",
            "schema": "user-base-summary",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "revUserSummaryExternalRef",
            "key": "external_ref",
            "schema": {
              "generatedName": "revUserSummaryExternalRef",
              "value": {
                "description": "External ref is a mutable unique identifier for a user within the\nRev organization from your primary customer record. If none is\navailable, a good alternative is the email address/phone number\nwhich could uniquely identify the user. If none is specified, a\nsystem-generated identifier will be assigned to the user.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "RevUserSummaryExternalRef",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "revUserSummaryRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "revUserSummaryRevOrg",
              "value": {
                "generatedName": "RevUserSummaryRevOrg",
                "schema": "org-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RevUserSummary",
        "title": "rev-user-summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "user-base-summary": {
        "allOf": [
          {
            "generatedName": "AtomBaseSummary",
            "schema": "atom-base-summary",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userBaseSummaryDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "userBaseSummaryDisplayName",
              "value": {
                "description": "The user's display name. The name is non-unique and mutable.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBaseSummaryDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseSummaryDisplayPicture",
            "key": "display_picture",
            "schema": {
              "generatedName": "userBaseSummaryDisplayPicture",
              "value": {
                "generatedName": "UserBaseSummaryDisplayPicture",
                "schema": "artifact-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userBaseSummaryEmail",
            "key": "email",
            "schema": {
              "generatedName": "userBaseSummaryEmail",
              "value": {
                "description": "Email address of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBaseSummaryEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseSummaryFullName",
            "key": "full_name",
            "schema": {
              "generatedName": "userBaseSummaryFullName",
              "value": {
                "description": "Full name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBaseSummaryFullName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseSummaryState",
            "key": "state",
            "schema": {
              "generatedName": "userBaseSummaryState",
              "value": {
                "generatedName": "UserBaseSummaryState",
                "schema": "user-state",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserBaseSummary",
        "title": "user-base-summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "set-tag-with-value": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "setTagWithValueId",
            "key": "id",
            "schema": {
              "description": "The ID of the tag.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                "type": "string"
              },
              "generatedName": "SetTagWithValueId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "setTagWithValueValue",
            "key": "value",
            "schema": {
              "generatedName": "setTagWithValueValue",
              "title": "set-tag-with-value",
              "value": {
                "description": "The value for the object's association with the tag. If specified,\nthe value must be one that's specified in the tag's allowed values.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "SetTagWithValueValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SetTagWithValue",
        "title": "set-tag-with-value",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "stage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "stageName",
            "key": "name",
            "schema": {
              "description": "Current stage name of the work item.",
              "schema": {
                "type": "string"
              },
              "generatedName": "StageName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Describes the current stage of a work item.",
        "generatedName": "Stage",
        "nameOverride": "stage",
        "title": "stage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "stage-init": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "stageInitName",
            "key": "name",
            "schema": {
              "generatedName": "stageInitName",
              "title": "stage-init",
              "value": {
                "description": "The name of the stage.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "StageInitName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Sets an object's initial stage.",
        "generatedName": "StageInit",
        "title": "stage-init",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "stage-update": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "stageUpdateName",
            "key": "name",
            "schema": {
              "generatedName": "stageUpdateName",
              "title": "stage-update",
              "value": {
                "description": "The updated name of the stage, otherwise unchanged if not set.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "StageUpdateName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Updates an object's stage.",
        "generatedName": "StageUpdate",
        "title": "stage-update",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "sys-user-summary": {
        "generatedName": "SysUserSummary",
        "schema": "user-base-summary",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "tag": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagAllowedValues",
            "key": "allowed_values",
            "schema": {
              "generatedName": "tagAllowedValues",
              "value": {
                "description": "The allowed values for the tag, where a value is provided when a\ntag is associated with an object. If empty, then no value should be\nprovided when the association is made.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TagAllowedValuesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TagAllowedValues",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagDescription",
            "key": "description",
            "schema": {
              "generatedName": "tagDescription",
              "value": {
                "description": "An informative description for the tag that should provide context\non the tag's purpose and usage.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagName",
            "key": "name",
            "schema": {
              "description": "The name of the tag, which denotes the logical concept by which all\ntagged objects will be associated. The name is guaranteed to be\nunique.\n",
              "schema": {
                "type": "string"
              },
              "generatedName": "TagName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Tag",
        "nameOverride": "tag",
        "title": "tag",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tag-summary": {
        "allOf": [
          {
            "generatedName": "AtomBaseSummary",
            "schema": "atom-base-summary",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagSummaryName",
            "key": "name",
            "schema": {
              "description": "The name of the tag, which denotes the logical concept by which all\ntagged objects will be associated. The name is guaranteed to be\nunique.\n",
              "schema": {
                "type": "string"
              },
              "generatedName": "TagSummaryName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TagSummary",
        "title": "tag-summary",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tag-with-value": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagWithValueTag",
            "key": "tag",
            "schema": {
              "generatedName": "TagWithValueTag",
              "schema": "tag-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "tagWithValueValue",
            "key": "value",
            "schema": {
              "generatedName": "tagWithValueValue",
              "title": "tag-with-value",
              "value": {
                "description": "The value for the object's association with the tag.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagWithValueValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TagWithValue",
        "title": "tag-with-value",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-create-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsCreateRequestAllowedValues",
            "key": "allowed_values",
            "schema": {
              "generatedName": "tagsCreateRequestAllowedValues",
              "title": "tags-create-request",
              "value": {
                "description": "The allowed values for the tag, or empty if no values are\npermitted.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TagsCreateRequestAllowedValuesItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TagsCreateRequestAllowedValues",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsCreateRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "tagsCreateRequestDescription",
              "title": "tags-create-request",
              "value": {
                "description": "The description for the tag.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagsCreateRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsCreateRequestName",
            "key": "name",
            "schema": {
              "description": "The name for the tag, which must be unique across all tags.\n",
              "schema": {
                "type": "string"
              },
              "generatedName": "TagsCreateRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to create a new tag.",
        "generatedName": "TagsCreateRequest",
        "title": "tags-create-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsCreateResponseTag",
            "key": "tag",
            "schema": {
              "generatedName": "TagsCreateResponseTag",
              "schema": "tag",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to creating a new tag.",
        "generatedName": "TagsCreateResponse",
        "title": "tags-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsDeleteRequestId",
            "key": "id",
            "schema": {
              "description": "The ID of the tag to delete.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                "type": "string"
              },
              "generatedName": "TagsDeleteRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to delete a tag.",
        "generatedName": "TagsDeleteRequest",
        "title": "tags-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-delete-response": {
        "description": "The response for deleting a tag.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "TagsDeleteResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "TagsDeleteResponseValue",
          "type": "unknown"
        },
        "generatedName": "TagsDeleteResponse",
        "title": "tags-delete-response",
        "groupName": [],
        "type": "map"
      },
      "tags-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsGetResponseTag",
            "key": "tag",
            "schema": {
              "generatedName": "TagsGetResponseTag",
              "schema": "tag",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to getting a tag's information.",
        "generatedName": "TagsGetResponse",
        "title": "tags-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsListResponseNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "tagsListResponseNextCursor",
              "title": "tags-list-response",
              "value": {
                "description": "The cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagsListResponseNextCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsListResponsePrevCursor",
            "key": "prev_cursor",
            "schema": {
              "generatedName": "tagsListResponsePrevCursor",
              "title": "tags-list-response",
              "value": {
                "description": "The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagsListResponsePrevCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsListResponseTags",
            "key": "tags",
            "schema": {
              "description": "The list of tags.",
              "value": {
                "generatedName": "TagsListResponseTagsItem",
                "schema": "tag",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TagsListResponseTags",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to listing the tags.",
        "generatedName": "TagsListResponse",
        "title": "tags-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-update-allowed-values": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsUpdateAllowedValuesSet",
            "key": "set",
            "schema": {
              "generatedName": "tagsUpdateAllowedValuesSet",
              "title": "tags-update-allowed-values",
              "value": {
                "description": "Sets the allowed values for the tag.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TagsUpdateAllowedValuesSetItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TagsUpdateAllowedValuesSet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Specifies an update to a tag's allowed values.",
        "generatedName": "TagsUpdateAllowedValues",
        "title": "tags-update-allowed-values",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-update-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsUpdateRequestAllowedValues",
            "key": "allowed_values",
            "schema": {
              "generatedName": "tagsUpdateRequestAllowedValues",
              "title": "tags-update-request",
              "value": {
                "generatedName": "TagsUpdateRequestAllowedValues",
                "schema": "tags-update-allowed-values",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "tagsUpdateRequestDescription",
            "key": "description",
            "schema": {
              "generatedName": "tagsUpdateRequestDescription",
              "title": "tags-update-request",
              "value": {
                "description": "The updated description of the tag.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagsUpdateRequestDescription",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsUpdateRequestId",
            "key": "id",
            "schema": {
              "description": "The ID of the tag to update.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                "type": "string"
              },
              "generatedName": "TagsUpdateRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "tagsUpdateRequestName",
            "key": "name",
            "schema": {
              "generatedName": "tagsUpdateRequestName",
              "title": "tags-update-request",
              "value": {
                "description": "The updated name of the tag. The name must be unique across all\ntags.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TagsUpdateRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to update a tag.",
        "generatedName": "TagsUpdateRequest",
        "title": "tags-update-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "tags-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "tagsUpdateResponseTag",
            "key": "tag",
            "schema": {
              "generatedName": "TagsUpdateResponseTag",
              "schema": "tag",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response for updating a tag.",
        "generatedName": "TagsUpdateResponse",
        "title": "tags-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket": {
        "allOf": [
          {
            "generatedName": "WorkBase",
            "schema": "work-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "ticketGroup",
            "key": "group",
            "schema": {
              "generatedName": "ticketGroup",
              "value": {
                "generatedName": "TicketGroup",
                "schema": "group-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ticketRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "ticketRevOrg",
              "value": {
                "generatedName": "TicketRevOrg",
                "schema": "org-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "ticketSeverity",
            "key": "severity",
            "schema": {
              "generatedName": "ticketSeverity",
              "value": {
                "generatedName": "TicketSeverity",
                "schema": "ticket-severity",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Ticket",
        "nameOverride": "ticket",
        "title": "ticket",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ticket-severity": {
        "description": "Severity of the ticket.",
        "generatedName": "TicketSeverity",
        "values": [
          {
            "generatedName": "blocker",
            "value": "blocker",
            "casing": {}
          },
          {
            "generatedName": "high",
            "value": "high",
            "casing": {}
          },
          {
            "generatedName": "low",
            "value": "low",
            "casing": {}
          },
          {
            "generatedName": "medium",
            "value": "medium",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "timeline-comment": {
        "allOf": [
          {
            "generatedName": "TimelineEntryBase",
            "schema": "timeline-entry-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineCommentArtifacts",
            "key": "artifacts",
            "schema": {
              "generatedName": "timelineCommentArtifacts",
              "value": {
                "description": "The artifacts for the comment.",
                "value": {
                  "generatedName": "TimelineCommentArtifactsItem",
                  "schema": "artifact-summary",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "TimelineCommentArtifacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineCommentBody",
            "key": "body",
            "schema": {
              "generatedName": "timelineCommentBody",
              "value": {
                "description": "The comment's body. If the comment has been deleted, then no body\nwill appear in the response.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TimelineCommentBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineCommentBodyType",
            "key": "body_type",
            "schema": {
              "generatedName": "timelineCommentBodyType",
              "value": {
                "generatedName": "TimelineCommentBodyType",
                "schema": "timeline-comment-body-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "timelineCommentSnapKitBody",
            "key": "snap_kit_body",
            "schema": {
              "generatedName": "timelineCommentSnapKitBody",
              "value": {
                "description": "The SnapKit Body of the comment.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineCommentSnapKitBodyKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "TimelineCommentSnapKitBodyValue",
                  "type": "unknown"
                },
                "generatedName": "TimelineCommentSnapKitBody",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TimelineComment",
        "title": "timeline-comment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-comment-body-type": {
        "description": "The type of the body to use for the comment.",
        "generatedName": "TimelineCommentBodyType",
        "values": [
          {
            "generatedName": "snap_kit",
            "value": "snap_kit",
            "casing": {}
          },
          {
            "generatedName": "text",
            "value": "text",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "timeline-entries-create-request": {
        "value": {
          "commonProperties": [
            {
              "key": "object",
              "schema": {
                "description": "The ID of the object to create the timeline entry for.",
                "schema": {
                  "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                  "type": "string"
                },
                "generatedName": "TimelineEntriesCreateRequestObject",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "visibility",
              "schema": {
                "generatedName": "TimelineEntriesCreateRequestVisibility",
                "value": {
                  "generatedName": "TimelineEntriesCreateRequestVisibility",
                  "schema": "timeline-entry-visibility",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            }
          ],
          "description": "The request to create a timeline entry for an object.",
          "discriminantProperty": "type",
          "generatedName": "TimelineEntriesCreateRequest",
          "title": "timeline-entries-create-request",
          "schemas": {
            "timeline_comment": {
              "generatedName": "ComponentsSchemasTimelineEntriesCreateRequestTimelineComment",
              "schema": "timeline-entries-create-request-timeline-comment",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "timeline-entries-create-request-timeline-comment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
            "key": "artifacts",
            "schema": {
              "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
              "title": "timeline-entries-create-request-timeline-comment",
              "value": {
                "description": "The IDs of the artifacts attached to the comment.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineEntriesCreateRequestTimelineCommentArtifactsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentArtifacts",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
            "key": "body",
            "schema": {
              "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
              "title": "timeline-entries-create-request-timeline-comment",
              "value": {
                "description": "The comment's body.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
            "key": "body_type",
            "schema": {
              "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
              "title": "timeline-entries-create-request-timeline-comment",
              "value": {
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentBodyType",
                "schema": "timeline-comment-body-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
            "key": "snap_kit_body",
            "schema": {
              "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
              "title": "timeline-entries-create-request-timeline-comment",
              "value": {
                "description": "The SnapKit body of the comment.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBodyKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBodyValue",
                  "type": "unknown"
                },
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBody",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TimelineEntriesCreateRequestTimelineComment",
        "title": "timeline-entries-create-request-timeline-comment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entries-create-request-type": {
        "value": {
          "value": "timeline_comment",
          "type": "string"
        },
        "generatedName": "TimelineEntriesCreateRequestType",
        "groupName": [],
        "type": "literal"
      },
      "timeline-entries-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesCreateResponseTimelineEntry",
            "key": "timeline_entry",
            "schema": {
              "generatedName": "TimelineEntriesCreateResponseTimelineEntry",
              "schema": "timeline-entry",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to creating a timeline entry for an object.",
        "generatedName": "TimelineEntriesCreateResponse",
        "title": "timeline-entries-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entries-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesGetResponseTimelineEntry",
            "key": "timeline_entry",
            "schema": {
              "generatedName": "TimelineEntriesGetResponseTimelineEntry",
              "schema": "timeline-entry",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to getting a timeline entry.",
        "generatedName": "TimelineEntriesGetResponse",
        "title": "timeline-entries-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entries-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesListResponseNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "timelineEntriesListResponseNextCursor",
              "title": "timeline-entries-list-response",
              "value": {
                "description": "The cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TimelineEntriesListResponseNextCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesListResponsePrevCursor",
            "key": "prev_cursor",
            "schema": {
              "generatedName": "timelineEntriesListResponsePrevCursor",
              "title": "timeline-entries-list-response",
              "value": {
                "description": "The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TimelineEntriesListResponsePrevCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesListResponseTimelineEntries",
            "key": "timeline_entries",
            "schema": {
              "description": "The timeline entries for the object.",
              "value": {
                "generatedName": "TimelineEntriesListResponseTimelineEntriesItem",
                "schema": "timeline-entry",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TimelineEntriesListResponseTimelineEntries",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to listing timeline entries for an object.",
        "generatedName": "TimelineEntriesListResponse",
        "title": "timeline-entries-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entries-update-request": {
        "value": {
          "commonProperties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the timeline entry to update.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TimelineEntriesUpdateRequestId",
                "groupName": [],
                "type": "primitive"
              }
            }
          ],
          "description": "The request to update a timeline entry.",
          "discriminantProperty": "type",
          "generatedName": "TimelineEntriesUpdateRequest",
          "title": "timeline-entries-update-request",
          "schemas": {
            "timeline_comment": {
              "generatedName": "ComponentsSchemasTimelineEntriesUpdateRequestTimelineComment",
              "schema": "timeline-entries-update-request-timeline-comment",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "timeline-entries-update-request-timeline-comment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
            "key": "artifacts",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
              "title": "timeline-entries-update-request-timeline-comment",
              "value": {
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
                "schema": "timeline-entries-update-request-timeline-comment-artifacts",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
            "key": "body",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
              "title": "timeline-entries-update-request-timeline-comment",
              "value": {
                "description": "The updated comment's body.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBody",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
            "key": "body_type",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
              "title": "timeline-entries-update-request-timeline-comment",
              "value": {
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBodyType",
                "schema": "timeline-comment-body-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
            "key": "snap_kit_body",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
              "title": "timeline-entries-update-request-timeline-comment",
              "value": {
                "description": "The SnapKit body of the comment.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBodyKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBodyValue",
                  "type": "unknown"
                },
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBody",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
        "title": "timeline-entries-update-request-timeline-comment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entries-update-request-timeline-comment-artifacts": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
            "key": "add",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
              "title": "timeline-entries-update-request-timeline-comment-artifacts",
              "value": {
                "description": "Adds the provided artifacts to the comment. An artifact cannot be\nadded more than once, i.e. nothing is done if the artifact is\nalready attached. Mutually exclusive with `set`.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsAddItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
            "key": "remove",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
              "title": "timeline-entries-update-request-timeline-comment-artifacts",
              "value": {
                "description": "Removes the provided artifacts from the comment. If an artifact is\nnot present, then it's ignored. Mututally exclusive with `set`.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsRemoveItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
            "key": "set",
            "schema": {
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
              "title": "timeline-entries-update-request-timeline-comment-artifacts",
              "value": {
                "description": "Sets the field to the provided artifacts.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsSetItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsSet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
        "title": "timeline-entries-update-request-timeline-comment-artifacts",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entries-update-request-type": {
        "value": {
          "value": "timeline_comment",
          "type": "string"
        },
        "generatedName": "TimelineEntriesUpdateRequestType",
        "groupName": [],
        "type": "literal"
      },
      "timeline-entries-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "timelineEntriesUpdateResponseTimelineEntry",
            "key": "timeline_entry",
            "schema": {
              "generatedName": "TimelineEntriesUpdateResponseTimelineEntry",
              "schema": "timeline-entry",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to updating a timeline entry.",
        "generatedName": "TimelineEntriesUpdateResponse",
        "title": "timeline-entries-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "timeline-entry": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "TimelineEntry",
          "title": "timeline-entry",
          "schemas": {
            "timeline_comment": {
              "generatedName": "ComponentsSchemasTimelineComment",
              "schema": "timeline-comment",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "timeline-entry-base": {
        "generatedName": "TimelineEntryBase",
        "schema": "atom-base",
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "reference"
      },
      "timeline-entry-type": {
        "value": {
          "value": "timeline_comment",
          "type": "string"
        },
        "generatedName": "TimelineEntryType",
        "groupName": [],
        "type": "literal"
      },
      "timeline-entry-visibility": {
        "description": "The visibility of the entry. If 'private', then the entry is only\nvisible to the creator, otherwise if not set, then the entry has\ndefault visibility.\n",
        "value": {
          "value": "private",
          "type": "string"
        },
        "generatedName": "TimelineEntryVisibility",
        "groupName": [],
        "type": "literal"
      },
      "user-base": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userBaseDisplayName",
            "key": "display_name",
            "schema": {
              "generatedName": "userBaseDisplayName",
              "value": {
                "description": "The user's display name. The name is non-unique and mutable.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBaseDisplayName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseDisplayPicture",
            "key": "display_picture",
            "schema": {
              "generatedName": "userBaseDisplayPicture",
              "value": {
                "generatedName": "UserBaseDisplayPicture",
                "schema": "artifact-summary",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "userBaseEmail",
            "key": "email",
            "schema": {
              "generatedName": "userBaseEmail",
              "value": {
                "description": "Email address of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBaseEmail",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseFullName",
            "key": "full_name",
            "schema": {
              "generatedName": "userBaseFullName",
              "value": {
                "description": "Full name of the user.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBaseFullName",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBasePhoneNumbers",
            "key": "phone_numbers",
            "schema": {
              "generatedName": "userBasePhoneNumbers",
              "value": {
                "description": "Phone numbers of the user.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "UserBasePhoneNumbersItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "UserBasePhoneNumbers",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBaseState",
            "key": "state",
            "schema": {
              "generatedName": "userBaseState",
              "value": {
                "generatedName": "UserBaseState",
                "schema": "user-state",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UserBase",
        "title": "user-base",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "user-state": {
        "description": "State of the user.",
        "generatedName": "UserState",
        "values": [
          {
            "generatedName": "active",
            "value": "active",
            "casing": {}
          },
          {
            "generatedName": "deactivated",
            "value": "deactivated",
            "casing": {}
          },
          {
            "generatedName": "locked",
            "value": "locked",
            "casing": {}
          },
          {
            "generatedName": "shadow",
            "value": "shadow",
            "casing": {}
          },
          {
            "generatedName": "unassigned",
            "value": "unassigned",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "user-summary": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "UserSummary",
          "title": "user-summary",
          "schemas": {
            "dev_user": {
              "generatedName": "ComponentsSchemasDevUserSummary",
              "schema": "dev-user-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "rev_user": {
              "generatedName": "ComponentsSchemasRevUserSummary",
              "schema": "rev-user-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "sys_user": {
              "generatedName": "ComponentsSchemasSysUserSummary",
              "schema": "sys-user-summary",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "user-type": {
        "generatedName": "UserType",
        "values": [
          {
            "generatedName": "dev_user",
            "value": "dev_user",
            "casing": {}
          },
          {
            "generatedName": "rev_user",
            "value": "rev_user",
            "casing": {}
          },
          {
            "generatedName": "sys_user",
            "value": "sys_user",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "webhook": {
        "allOf": [
          {
            "generatedName": "AtomBase",
            "schema": "atom-base",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          }
        ],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookEventTypes",
            "key": "event_types",
            "schema": {
              "generatedName": "webhookEventTypes",
              "value": {
                "description": "The event types that the webhook will receive.",
                "value": {
                  "generatedName": "WebhookEventTypesItem",
                  "schema": "webhook-event-type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WebhookEventTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookSecret",
            "key": "secret",
            "schema": {
              "description": "The secret to use for verifying webhook events.",
              "schema": {
                "format": "byte",
                "type": "string"
              },
              "generatedName": "WebhookSecret",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookStatus",
            "key": "status",
            "schema": {
              "generatedName": "WebhookStatus",
              "schema": "webhook-status",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookUrl",
            "key": "url",
            "schema": {
              "description": "The URL of the webhook endpoint.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Webhook",
        "nameOverride": "webhook",
        "title": "webhook",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhook-event-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookEventRequestId",
            "key": "id",
            "schema": {
              "description": "The event's ID.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhookEventRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestPartCreated",
            "key": "part_created",
            "schema": {
              "generatedName": "webhookEventRequestPartCreated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestPartCreated",
                "schema": "event-part-created",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestPartDeleted",
            "key": "part_deleted",
            "schema": {
              "generatedName": "webhookEventRequestPartDeleted",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestPartDeleted",
                "schema": "event-part-deleted",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestPartUpdated",
            "key": "part_updated",
            "schema": {
              "generatedName": "webhookEventRequestPartUpdated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestPartUpdated",
                "schema": "event-part-updated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestRevOrgCreated",
            "key": "rev_org_created",
            "schema": {
              "generatedName": "webhookEventRequestRevOrgCreated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestRevOrgCreated",
                "schema": "event-rev-org-created",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestRevOrgDeleted",
            "key": "rev_org_deleted",
            "schema": {
              "generatedName": "webhookEventRequestRevOrgDeleted",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestRevOrgDeleted",
                "schema": "event-rev-org-deleted",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestRevOrgUpdated",
            "key": "rev_org_updated",
            "schema": {
              "generatedName": "webhookEventRequestRevOrgUpdated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestRevOrgUpdated",
                "schema": "event-rev-org-updated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTagCreated",
            "key": "tag_created",
            "schema": {
              "generatedName": "webhookEventRequestTagCreated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestTagCreated",
                "schema": "event-tag-created",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTagDeleted",
            "key": "tag_deleted",
            "schema": {
              "generatedName": "webhookEventRequestTagDeleted",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestTagDeleted",
                "schema": "event-tag-deleted",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTagUpdated",
            "key": "tag_updated",
            "schema": {
              "generatedName": "webhookEventRequestTagUpdated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestTagUpdated",
                "schema": "event-tag-updated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTimelineEntryCreated",
            "key": "timeline_entry_created",
            "schema": {
              "generatedName": "webhookEventRequestTimelineEntryCreated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestTimelineEntryCreated",
                "schema": "event-timeline-entry-created",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTimelineEntryDeleted",
            "key": "timeline_entry_deleted",
            "schema": {
              "generatedName": "webhookEventRequestTimelineEntryDeleted",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestTimelineEntryDeleted",
                "schema": "event-timeline-entry-deleted",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTimelineEntryUpdated",
            "key": "timeline_entry_updated",
            "schema": {
              "generatedName": "webhookEventRequestTimelineEntryUpdated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestTimelineEntryUpdated",
                "schema": "event-timeline-entry-updated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "webhookEventRequestTimestamp",
              "title": "webhook-event-request",
              "value": {
                "description": "Timestamp of the webhook's invocation for the event. Note this\nshould be used to protect against replay attacks, where the event\nshould only be processed if the timestamp isn't stale by several\nseconds.\n",
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "WebhookEventRequestTimestamp",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestType",
            "key": "type",
            "schema": {
              "generatedName": "webhookEventRequestType",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestType",
                "schema": "webhook-event-type",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestVerify",
            "key": "verify",
            "schema": {
              "generatedName": "webhookEventRequestVerify",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestVerify",
                "schema": "webhook-event-verify",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWebhookCreated",
            "key": "webhook_created",
            "schema": {
              "generatedName": "webhookEventRequestWebhookCreated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestWebhookCreated",
                "schema": "event-webhook-created",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWebhookDeleted",
            "key": "webhook_deleted",
            "schema": {
              "generatedName": "webhookEventRequestWebhookDeleted",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestWebhookDeleted",
                "schema": "event-webhook-deleted",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWebhookId",
            "key": "webhook_id",
            "schema": {
              "description": "ID of the webhook for the event.",
              "schema": {
                "example": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                "type": "string"
              },
              "generatedName": "WebhookEventRequestWebhookId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWebhookUpdated",
            "key": "webhook_updated",
            "schema": {
              "generatedName": "webhookEventRequestWebhookUpdated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestWebhookUpdated",
                "schema": "event-webhook-updated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWorkCreated",
            "key": "work_created",
            "schema": {
              "generatedName": "webhookEventRequestWorkCreated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestWorkCreated",
                "schema": "event-work-created",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWorkDeleted",
            "key": "work_deleted",
            "schema": {
              "generatedName": "webhookEventRequestWorkDeleted",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestWorkDeleted",
                "schema": "event-work-deleted",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhookEventRequestWorkUpdated",
            "key": "work_updated",
            "schema": {
              "generatedName": "webhookEventRequestWorkUpdated",
              "title": "webhook-event-request",
              "value": {
                "generatedName": "WebhookEventRequestWorkUpdated",
                "schema": "event-work-updated",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookEventRequest",
        "title": "webhook-event-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhook-event-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookEventResponseChallenge",
            "key": "challenge",
            "schema": {
              "generatedName": "webhookEventResponseChallenge",
              "title": "webhook-event-response",
              "value": {
                "description": "The challenge from the \"verify\" request, otherwise this should not\nbe set for other request types.\n",
                "schema": {
                  "format": "byte",
                  "type": "string"
                },
                "generatedName": "WebhookEventResponseChallenge",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookEventResponse",
        "title": "webhook-event-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhook-event-type": {
        "description": "The event types that the webhook will receive.",
        "generatedName": "WebhookEventType",
        "values": [
          {
            "generatedName": "part_created",
            "value": "part_created",
            "casing": {}
          },
          {
            "generatedName": "part_deleted",
            "value": "part_deleted",
            "casing": {}
          },
          {
            "generatedName": "part_updated",
            "value": "part_updated",
            "casing": {}
          },
          {
            "generatedName": "rev_org_created",
            "value": "rev_org_created",
            "casing": {}
          },
          {
            "generatedName": "rev_org_deleted",
            "value": "rev_org_deleted",
            "casing": {}
          },
          {
            "generatedName": "rev_org_updated",
            "value": "rev_org_updated",
            "casing": {}
          },
          {
            "generatedName": "tag_created",
            "value": "tag_created",
            "casing": {}
          },
          {
            "generatedName": "tag_deleted",
            "value": "tag_deleted",
            "casing": {}
          },
          {
            "generatedName": "tag_updated",
            "value": "tag_updated",
            "casing": {}
          },
          {
            "generatedName": "timeline_entry_created",
            "value": "timeline_entry_created",
            "casing": {}
          },
          {
            "generatedName": "timeline_entry_deleted",
            "value": "timeline_entry_deleted",
            "casing": {}
          },
          {
            "generatedName": "timeline_entry_updated",
            "value": "timeline_entry_updated",
            "casing": {}
          },
          {
            "generatedName": "verify",
            "value": "verify",
            "casing": {}
          },
          {
            "generatedName": "webhook_created",
            "value": "webhook_created",
            "casing": {}
          },
          {
            "generatedName": "webhook_deleted",
            "value": "webhook_deleted",
            "casing": {}
          },
          {
            "generatedName": "webhook_updated",
            "value": "webhook_updated",
            "casing": {}
          },
          {
            "generatedName": "work_created",
            "value": "work_created",
            "casing": {}
          },
          {
            "generatedName": "work_deleted",
            "value": "work_deleted",
            "casing": {}
          },
          {
            "generatedName": "work_updated",
            "value": "work_updated",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "webhook-event-verify": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhookEventVerifyChallenge",
            "key": "challenge",
            "schema": {
              "description": "The challenge that must be echoed in the response.",
              "schema": {
                "format": "byte",
                "type": "string"
              },
              "generatedName": "WebhookEventVerifyChallenge",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhookEventVerify",
        "title": "webhook-event-verify",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhook-status": {
        "description": "The status of the webhook.",
        "generatedName": "WebhookStatus",
        "values": [
          {
            "generatedName": "active",
            "value": "active",
            "casing": {}
          },
          {
            "generatedName": "inactive",
            "value": "inactive",
            "casing": {}
          },
          {
            "generatedName": "unverified",
            "value": "unverified",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "webhooks-create-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksCreateRequestEventTypes",
            "key": "event_types",
            "schema": {
              "generatedName": "webhooksCreateRequestEventTypes",
              "title": "webhooks-create-request",
              "value": {
                "description": "The event types that the webhook endpoint will receive.",
                "value": {
                  "generatedName": "WebhooksCreateRequestEventTypesItem",
                  "schema": "webhook-event-type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WebhooksCreateRequestEventTypes",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhooksCreateRequestSecret",
            "key": "secret",
            "schema": {
              "generatedName": "webhooksCreateRequestSecret",
              "title": "webhooks-create-request",
              "value": {
                "description": "The secret to use when verifying webhook events. If provided, the\nsecret must be between 8 and 32 bytes (inclusive). If not set, a\nsecret will be automatically generated and provided in the\nresponse.\n",
                "schema": {
                  "format": "byte",
                  "type": "string"
                },
                "generatedName": "WebhooksCreateRequestSecret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhooksCreateRequestUrl",
            "key": "url",
            "schema": {
              "description": "The URL of the webhook endpoint.",
              "schema": {
                "type": "string"
              },
              "generatedName": "WebhooksCreateRequestUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to create a new webhook.",
        "generatedName": "WebhooksCreateRequest",
        "title": "webhooks-create-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksCreateResponseWebhook",
            "key": "webhook",
            "schema": {
              "generatedName": "WebhooksCreateResponseWebhook",
              "schema": "webhook",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to creating a new webhook.",
        "generatedName": "WebhooksCreateResponse",
        "title": "webhooks-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksDeleteRequestId",
            "key": "id",
            "schema": {
              "description": "ID for the webhook.",
              "schema": {
                "example": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                "type": "string"
              },
              "generatedName": "WebhooksDeleteRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to delete a webhook.",
        "generatedName": "WebhooksDeleteRequest",
        "title": "webhooks-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-delete-response": {
        "description": "The response to deleting the webhook.",
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "WebhooksDeleteResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "WebhooksDeleteResponseValue",
          "type": "unknown"
        },
        "generatedName": "WebhooksDeleteResponse",
        "title": "webhooks-delete-response",
        "groupName": [],
        "type": "map"
      },
      "webhooks-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksGetResponseWebhook",
            "key": "webhook",
            "schema": {
              "generatedName": "WebhooksGetResponseWebhook",
              "schema": "webhook",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to getting the information for the webhook.",
        "generatedName": "WebhooksGetResponse",
        "title": "webhooks-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksListResponseWebhooks",
            "key": "webhooks",
            "schema": {
              "description": "The list of webhooks.",
              "value": {
                "generatedName": "WebhooksListResponseWebhooksItem",
                "schema": "webhook",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WebhooksListResponseWebhooks",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to listing the webhooks.",
        "generatedName": "WebhooksListResponse",
        "title": "webhooks-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-update-action": {
        "description": "The action to update the webhook's status.",
        "generatedName": "WebhooksUpdateAction",
        "values": [
          {
            "generatedName": "activate",
            "value": "activate",
            "casing": {}
          },
          {
            "generatedName": "deactivate",
            "value": "deactivate",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "webhooks-update-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestAction",
            "key": "action",
            "schema": {
              "generatedName": "webhooksUpdateRequestAction",
              "title": "webhooks-update-request",
              "value": {
                "generatedName": "WebhooksUpdateRequestAction",
                "schema": "webhooks-update-action",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestEventTypes",
            "key": "event_types",
            "schema": {
              "generatedName": "webhooksUpdateRequestEventTypes",
              "title": "webhooks-update-request",
              "value": {
                "generatedName": "WebhooksUpdateRequestEventTypes",
                "schema": "webhooks-update-request-event-types",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestId",
            "key": "id",
            "schema": {
              "description": "ID for the webhook.",
              "schema": {
                "example": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                "type": "string"
              },
              "generatedName": "WebhooksUpdateRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestSecret",
            "key": "secret",
            "schema": {
              "generatedName": "webhooksUpdateRequestSecret",
              "title": "webhooks-update-request",
              "value": {
                "description": "If provided, updates the secret that's used when verifying webhook\nevents, which must be between 8 and 32 bytes (inclusive). Otherwise\nif empty, then a new secret is generated. If the webhook is active,\nthen its status will transition to the 'unverified' state and it\nwon't receive any object events until successfully verified.\n",
                "schema": {
                  "format": "byte",
                  "type": "string"
                },
                "generatedName": "WebhooksUpdateRequestSecret",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestUrl",
            "key": "url",
            "schema": {
              "generatedName": "webhooksUpdateRequestUrl",
              "title": "webhooks-update-request",
              "value": {
                "description": "The webhook's updated URL. If the webhook is active, then the\nwebhook's status will transition to the 'unverified' state and it\nwon't receive any object events until successfully verified.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WebhooksUpdateRequestUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The request to update a webhook.",
        "generatedName": "WebhooksUpdateRequest",
        "title": "webhooks-update-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-update-request-event-types": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestEventTypesAdd",
            "key": "add",
            "schema": {
              "generatedName": "webhooksUpdateRequestEventTypesAdd",
              "title": "webhooks-update-request-event-types",
              "value": {
                "description": "The event types to add. If a provided event type is already set for\nthe webhook, then nothing is done. Note this is mutually exclusive\nwith 'set'.\n",
                "value": {
                  "generatedName": "WebhooksUpdateRequestEventTypesAddItem",
                  "schema": "webhook-event-type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WebhooksUpdateRequestEventTypesAdd",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestEventTypesRemove",
            "key": "remove",
            "schema": {
              "generatedName": "webhooksUpdateRequestEventTypesRemove",
              "title": "webhooks-update-request-event-types",
              "value": {
                "description": "The event types to remove. If a provided event type isn't set for\nthe webhook, then nothing is done. Note this is mutually exclusive\nwith 'set'.\n",
                "value": {
                  "generatedName": "WebhooksUpdateRequestEventTypesRemoveItem",
                  "schema": "webhook-event-type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WebhooksUpdateRequestEventTypesRemove",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "webhooksUpdateRequestEventTypesSet",
            "key": "set",
            "schema": {
              "generatedName": "webhooksUpdateRequestEventTypesSet",
              "title": "webhooks-update-request-event-types",
              "value": {
                "description": "The updated event types, which will replace the webhook's current\nevent types. Note this is mutually exclusive with 'add' and\n'remove'.\n",
                "value": {
                  "generatedName": "WebhooksUpdateRequestEventTypesSetItem",
                  "schema": "webhook-event-type",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WebhooksUpdateRequestEventTypesSet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WebhooksUpdateRequestEventTypes",
        "title": "webhooks-update-request-event-types",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "webhooks-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "webhooksUpdateResponseWebhook",
            "key": "webhook",
            "schema": {
              "generatedName": "WebhooksUpdateResponseWebhook",
              "schema": "webhook",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "The response to updating the webhook.",
        "generatedName": "WebhooksUpdateResponse",
        "title": "webhooks-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "work": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "Work",
          "title": "work",
          "nameOverride": "work",
          "schemas": {
            "issue": {
              "generatedName": "ComponentsSchemasIssue",
              "schema": "issue",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "ticket": {
              "generatedName": "ComponentsSchemasTicket",
              "schema": "ticket",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "work-type": {
        "generatedName": "WorkType",
        "values": [
          {
            "generatedName": "issue",
            "value": "issue",
            "casing": {}
          },
          {
            "generatedName": "ticket",
            "value": "ticket",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "works-create-request": {
        "value": {
          "commonProperties": [
            {
              "key": "applies_to_part",
              "schema": {
                "description": "The [part](https://devrev.ai/docs/product/parts) that the work\napplies to. Specifying a part is required when creating tickets and\nissues.\n",
                "schema": {
                  "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                  "type": "string"
                },
                "generatedName": "WorksCreateRequestAppliesToPart",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "artifacts",
              "schema": {
                "generatedName": "WorksCreateRequestArtifacts",
                "description": "The IDs of the artifacts to associate with the work item.\n",
                "value": {
                  "description": "The IDs of the artifacts to associate with the work item.\n",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "WorksCreateRequestArtifactsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "WorksCreateRequestArtifacts",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "body",
              "schema": {
                "generatedName": "WorksCreateRequestBody",
                "description": "Body of the work object.",
                "value": {
                  "description": "Body of the work object.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksCreateRequestBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the work.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksCreateRequestOwnedByItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "WorksCreateRequestOwnedBy",
                "groupName": [],
                "type": "array"
              }
            },
            {
              "key": "reported_by",
              "schema": {
                "generatedName": "WorksCreateRequestReportedBy",
                "description": "The users that reported the work.",
                "value": {
                  "description": "The users that reported the work.",
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "WorksCreateRequestReportedByItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "WorksCreateRequestReportedBy",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "stage",
              "schema": {
                "generatedName": "WorksCreateRequestStage",
                "value": {
                  "generatedName": "WorksCreateRequestStage",
                  "schema": "stage-init",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            },
            {
              "key": "tags",
              "schema": {
                "generatedName": "WorksCreateRequestTags",
                "description": "Tags associated with the work item.",
                "value": {
                  "description": "Tags associated with the work item.",
                  "value": {
                    "generatedName": "WorksCreateRequestTagsItem",
                    "schema": "set-tag-with-value",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "WorksCreateRequestTags",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "target_close_date",
              "schema": {
                "generatedName": "WorksCreateRequestTargetCloseDate",
                "description": "Timestamp for when the work is expected to be complete.",
                "value": {
                  "description": "Timestamp for when the work is expected to be complete.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "WorksCreateRequestTargetCloseDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "title",
              "schema": {
                "description": "Title of the work object.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksCreateRequestTitle",
                "groupName": [],
                "type": "primitive"
              }
            }
          ],
          "discriminantProperty": "type",
          "generatedName": "WorksCreateRequest",
          "title": "works-create-request",
          "schemas": {
            "issue": {
              "generatedName": "ComponentsSchemasWorksCreateRequestIssue",
              "schema": "works-create-request-issue",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "ticket": {
              "generatedName": "ComponentsSchemasWorksCreateRequestTicket",
              "schema": "works-create-request-ticket",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "works-create-request-issue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksCreateRequestIssuePriority",
            "key": "priority",
            "schema": {
              "generatedName": "worksCreateRequestIssuePriority",
              "title": "works-create-request-issue",
              "value": {
                "generatedName": "WorksCreateRequestIssuePriority",
                "schema": "issue-priority",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "worksCreateRequestIssueSprint",
            "key": "sprint",
            "schema": {
              "generatedName": "worksCreateRequestIssueSprint",
              "title": "works-create-request-issue",
              "value": {
                "description": "The sprint that the issue belongs to.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksCreateRequestIssueSprint",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksCreateRequestIssue",
        "title": "works-create-request-issue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-create-request-ticket": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksCreateRequestTicketGroup",
            "key": "group",
            "schema": {
              "generatedName": "worksCreateRequestTicketGroup",
              "title": "works-create-request-ticket",
              "value": {
                "description": "The group that the ticket is associated with.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksCreateRequestTicketGroup",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "worksCreateRequestTicketRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "worksCreateRequestTicketRevOrg",
              "title": "works-create-request-ticket",
              "value": {
                "description": "The Rev organization that the ticket is associated with.",
                "schema": {
                  "example": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                  "type": "string"
                },
                "generatedName": "WorksCreateRequestTicketRevOrg",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "worksCreateRequestTicketSeverity",
            "key": "severity",
            "schema": {
              "generatedName": "worksCreateRequestTicketSeverity",
              "title": "works-create-request-ticket",
              "value": {
                "generatedName": "WorksCreateRequestTicketSeverity",
                "schema": "ticket-severity",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksCreateRequestTicket",
        "title": "works-create-request-ticket",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-create-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksCreateResponseWork",
            "key": "work",
            "schema": {
              "generatedName": "WorksCreateResponseWork",
              "schema": "work",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksCreateResponse",
        "title": "works-create-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-delete-request": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksDeleteRequestId",
            "key": "id",
            "schema": {
              "description": "The work's ID.",
              "schema": {
                "example": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                "type": "string"
              },
              "generatedName": "WorksDeleteRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksDeleteRequest",
        "title": "works-delete-request",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-delete-response": {
        "key": {
          "schema": {
            "type": "string"
          },
          "generatedName": "WorksDeleteResponseKey",
          "groupName": [],
          "type": "primitive"
        },
        "value": {
          "generatedName": "WorksDeleteResponseValue",
          "type": "unknown"
        },
        "generatedName": "WorksDeleteResponse",
        "title": "works-delete-response",
        "groupName": [],
        "type": "map"
      },
      "works-export-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksExportResponseWorks",
            "key": "works",
            "schema": {
              "description": "The resulting collection of work items.",
              "value": {
                "generatedName": "WorksExportResponseWorksItem",
                "schema": "work",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksExportResponseWorks",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksExportResponse",
        "title": "works-export-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-get-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksGetResponseWork",
            "key": "work",
            "schema": {
              "generatedName": "WorksGetResponseWork",
              "schema": "work",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksGetResponse",
        "title": "works-get-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-list-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksListResponseNextCursor",
            "key": "next_cursor",
            "schema": {
              "generatedName": "worksListResponseNextCursor",
              "title": "works-list-response",
              "value": {
                "description": "The cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListResponseNextCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "worksListResponsePrevCursor",
            "key": "prev_cursor",
            "schema": {
              "generatedName": "worksListResponsePrevCursor",
              "title": "works-list-response",
              "value": {
                "description": "The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.\n",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksListResponsePrevCursor",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "worksListResponseWorks",
            "key": "works",
            "schema": {
              "description": "The list of works.",
              "value": {
                "generatedName": "WorksListResponseWorksItem",
                "schema": "work",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorksListResponseWorks",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksListResponse",
        "title": "works-list-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-request": {
        "value": {
          "commonProperties": [
            {
              "key": "applies_to_part",
              "schema": {
                "generatedName": "WorksUpdateRequestAppliesToPart",
                "description": "Updates the part that the work applies to.",
                "value": {
                  "description": "Updates the part that the work applies to.",
                  "schema": {
                    "example": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestAppliesToPart",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "artifacts",
              "schema": {
                "generatedName": "WorksUpdateRequestArtifacts",
                "value": {
                  "generatedName": "WorksUpdateRequestArtifacts",
                  "schema": "works-update-request-artifact-ids",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            },
            {
              "key": "body",
              "schema": {
                "generatedName": "WorksUpdateRequestBody",
                "description": "Updated body of the work object, or unchanged if not provided.\n",
                "value": {
                  "description": "Updated body of the work object, or unchanged if not provided.\n",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestBody",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "id",
              "schema": {
                "description": "The work's ID.",
                "schema": {
                  "example": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                  "type": "string"
                },
                "generatedName": "WorksUpdateRequestId",
                "groupName": [],
                "type": "primitive"
              }
            },
            {
              "key": "owned_by",
              "schema": {
                "generatedName": "WorksUpdateRequestOwnedBy",
                "value": {
                  "generatedName": "WorksUpdateRequestOwnedBy",
                  "schema": "works-update-request-owned-by",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            },
            {
              "key": "reported_by",
              "schema": {
                "generatedName": "WorksUpdateRequestReportedBy",
                "value": {
                  "generatedName": "WorksUpdateRequestReportedBy",
                  "schema": "works-update-request-reported-by",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            },
            {
              "key": "stage",
              "schema": {
                "generatedName": "WorksUpdateRequestStage",
                "value": {
                  "generatedName": "WorksUpdateRequestStage",
                  "schema": "stage-update",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            },
            {
              "key": "tags",
              "schema": {
                "generatedName": "WorksUpdateRequestTags",
                "value": {
                  "generatedName": "WorksUpdateRequestTags",
                  "schema": "works-update-request-tags",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "type": "nullable"
              }
            },
            {
              "key": "target_close_date",
              "schema": {
                "generatedName": "WorksUpdateRequestTargetCloseDate",
                "description": "Updates the timestamp for when the work is expected to be complete.\n",
                "value": {
                  "description": "Updates the timestamp for when the work is expected to be complete.\n",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "WorksUpdateRequestTargetCloseDate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            },
            {
              "key": "title",
              "schema": {
                "generatedName": "WorksUpdateRequestTitle",
                "description": "Updated title of the work object, or unchanged if not provided.\n",
                "value": {
                  "description": "Updated title of the work object, or unchanged if not provided.\n",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestTitle",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              }
            }
          ],
          "discriminantProperty": "type",
          "generatedName": "WorksUpdateRequest",
          "title": "works-update-request",
          "schemas": {
            "issue": {
              "generatedName": "ComponentsSchemasWorksUpdateRequestIssue",
              "schema": "works-update-request-issue",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "none": {
              "generatedName": "ComponentsSchemasEmpty",
              "schema": "empty",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "ticket": {
              "generatedName": "ComponentsSchemasWorksUpdateRequestTicket",
              "schema": "works-update-request-ticket",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "works-update-request-artifact-ids": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestArtifactIdsSet",
            "key": "set",
            "schema": {
              "generatedName": "worksUpdateRequestArtifactIdsSet",
              "title": "works-update-request-artifact-ids",
              "value": {
                "description": "Sets the IDs to the provided artifact IDs.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestArtifactIdsSetItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "WorksUpdateRequestArtifactIdsSet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateRequestArtifactIds",
        "title": "works-update-request-artifact-ids",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-request-issue": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestIssuePriority",
            "key": "priority",
            "schema": {
              "generatedName": "worksUpdateRequestIssuePriority",
              "title": "works-update-request-issue",
              "value": {
                "generatedName": "WorksUpdateRequestIssuePriority",
                "schema": "issue-priority",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestIssueSprint",
            "key": "sprint",
            "schema": {
              "generatedName": "worksUpdateRequestIssueSprint",
              "title": "works-update-request-issue",
              "value": {
                "generatedName": "WorksUpdateRequestIssueSprint",
                "description": "Updates the sprint that the issue belongs to.",
                "value": {
                  "description": "Updates the sprint that the issue belongs to.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestIssueSprint",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateRequestIssue",
        "title": "works-update-request-issue",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-request-owned-by": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestOwnedBySet",
            "key": "set",
            "schema": {
              "generatedName": "worksUpdateRequestOwnedBySet",
              "title": "works-update-request-owned-by",
              "value": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be\nempty.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestOwnedBySetItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "WorksUpdateRequestOwnedBySet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateRequestOwnedBy",
        "title": "works-update-request-owned-by",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-request-reported-by": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestReportedBySet",
            "key": "set",
            "schema": {
              "generatedName": "worksUpdateRequestReportedBySet",
              "title": "works-update-request-reported-by",
              "value": {
                "description": "Sets the users that reported the work to the provided user IDs.\n",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestReportedBySetItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "WorksUpdateRequestReportedBySet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateRequestReportedBy",
        "title": "works-update-request-reported-by",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-request-tags": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestTagsSet",
            "key": "set",
            "schema": {
              "generatedName": "worksUpdateRequestTagsSet",
              "title": "works-update-request-tags",
              "value": {
                "description": "Sets the provided tags on the work item.",
                "value": {
                  "generatedName": "WorksUpdateRequestTagsSetItem",
                  "schema": "set-tag-with-value",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "WorksUpdateRequestTagsSet",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateRequestTags",
        "title": "works-update-request-tags",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-request-ticket": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestTicketGroup",
            "key": "group",
            "schema": {
              "generatedName": "worksUpdateRequestTicketGroup",
              "title": "works-update-request-ticket",
              "value": {
                "description": "The group that the ticket is associated with.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorksUpdateRequestTicketGroup",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestTicketRevOrg",
            "key": "rev_org",
            "schema": {
              "generatedName": "worksUpdateRequestTicketRevOrg",
              "title": "works-update-request-ticket",
              "value": {
                "generatedName": "WorksUpdateRequestTicketRevOrg",
                "description": "Updates the Rev organization that the ticket is associated with.\n",
                "value": {
                  "description": "Updates the Rev organization that the ticket is associated with.\n",
                  "schema": {
                    "example": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                    "type": "string"
                  },
                  "generatedName": "WorksUpdateRequestTicketRevOrg",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "worksUpdateRequestTicketSeverity",
            "key": "severity",
            "schema": {
              "generatedName": "worksUpdateRequestTicketSeverity",
              "title": "works-update-request-ticket",
              "value": {
                "generatedName": "WorksUpdateRequestTicketSeverity",
                "schema": "ticket-severity",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateRequestTicket",
        "title": "works-update-request-ticket",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "works-update-response": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "worksUpdateResponseWork",
            "key": "work",
            "schema": {
              "generatedName": "WorksUpdateResponseWork",
              "schema": "work",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorksUpdateResponse",
        "title": "works-update-response",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "auth-token": {
      "headerName": "Authorization",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}