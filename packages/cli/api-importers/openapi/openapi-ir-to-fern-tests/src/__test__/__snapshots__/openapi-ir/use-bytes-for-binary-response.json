{
  "title": "Streaming API w/ use-bytes-for-binary-response",
  "description": "",
  "servers": [],
  "websocketServers": [],
  "tags": {
    "tagsById": {}
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "audiences": [],
      "operationId": "audio",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AudioRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "audioRequestId",
              "key": "id",
              "schema": {
                "generatedName": "audioRequestId",
                "value": {
                  "description": "",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AudioRequestId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "AudioRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "bytes"
      },
      "errors": {},
      "servers": [],
      "authed": false,
      "method": "POST",
      "path": "/v1/audio",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "audioStream",
      "tags": [],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AudioStreamRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "audioStreamRequestId",
              "key": "id",
              "schema": {
                "generatedName": "audioStreamRequestId",
                "value": {
                  "description": "",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AudioStreamRequestId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "AudioStreamRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {},
      "servers": [],
      "authed": false,
      "method": "POST",
      "path": "/v1/audio/stream",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channels": {},
  "groupedSchemas": {
    "rootSchemas": {},
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {},
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}