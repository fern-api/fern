{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "AuthorizedByTokenRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "AuthorizedByTokenRequestForbiddenErrorBody",
          },
          "AuthorizedByTokenRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateAssetsRequestTooManyRequestsErrorBody",
          },
          "CreateAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateCollectionsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateCollectionsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateCollectionsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateCollectionsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateCollectionsRequestTooManyRequestsErrorBody",
          },
          "CreateCollectionsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateFieldsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateFieldsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateFieldsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateFieldsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateFieldsRequestTooManyRequestsErrorBody",
          },
          "CreateFieldsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateFolderAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateFolderAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateFolderAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateFolderAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateFolderAssetsRequestTooManyRequestsErrorBody",
          },
          "CreateFolderAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateItemForMultipleLocalesItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateItemForMultipleLocalesItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateItemForMultipleLocalesItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateItemForMultipleLocalesItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateItemForMultipleLocalesItemsRequestTooManyRequestsErrorBody",
          },
          "CreateItemForMultipleLocalesItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateItemItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateItemItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateItemItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateItemItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateItemItemsRequestTooManyRequestsErrorBody",
          },
          "CreateItemItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateItemLiveItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateItemLiveItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateItemLiveItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateItemLiveItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateItemLiveItemsRequestTooManyRequestsErrorBody",
          },
          "CreateItemLiveItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateProductsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateProductsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "CreateProductsRequestConflictErrorBody",
          },
          "CreateProductsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "CreateProductsRequestForbiddenErrorBody",
          },
          "CreateProductsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateProductsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateProductsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateProductsRequestTooManyRequestsErrorBody",
          },
          "CreateProductsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateSkuProductsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateSkuProductsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "CreateSkuProductsRequestConflictErrorBody",
          },
          "CreateSkuProductsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "CreateSkuProductsRequestForbiddenErrorBody",
          },
          "CreateSkuProductsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateSkuProductsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateSkuProductsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateSkuProductsRequestTooManyRequestsErrorBody",
          },
          "CreateSkuProductsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CreateWebhooksRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CreateWebhooksRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CreateWebhooksRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CreateWebhooksRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CreateWebhooksRequestTooManyRequestsErrorBody",
          },
          "CreateWebhooksRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteAssetsRequestTooManyRequestsErrorBody",
          },
          "DeleteAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteCollectionRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteCollectionRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteCollectionRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteCollectionRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteCollectionRequestTooManyRequestsErrorBody",
          },
          "DeleteCollectionRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteCollectionsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteCollectionsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteCollectionsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteCollectionsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteCollectionsRequestTooManyRequestsErrorBody",
          },
          "DeleteCollectionsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteCustomCodeScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteCustomCodeScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteCustomCodeScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteCustomCodeScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteCustomCodeScriptsRequestTooManyRequestsErrorBody",
          },
          "DeleteCustomCodeScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteItemItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteItemItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteItemItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteItemItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteItemItemsRequestTooManyRequestsErrorBody",
          },
          "DeleteItemItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteItemLiveItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteItemLiveItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteItemLiveItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteItemLiveItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteItemLiveItemsRequestTooManyRequestsErrorBody",
          },
          "DeleteItemLiveItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteUsersRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteUsersRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "DeleteUsersRequestForbiddenErrorBody",
          },
          "DeleteUsersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteUsersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteUsersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteUsersRequestTooManyRequestsErrorBody",
          },
          "DeleteUsersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteWebhooksRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteWebhooksRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteWebhooksRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteWebhooksRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteWebhooksRequestTooManyRequestsErrorBody",
          },
          "DeleteWebhooksRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetAssetsRequestTooManyRequestsErrorBody",
          },
          "GetAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetCollectionsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetCollectionsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetCollectionsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetCollectionsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetCollectionsRequestTooManyRequestsErrorBody",
          },
          "GetCollectionsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetContentPagesRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetContentPagesRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "GetContentPagesRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetContentPagesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetContentPagesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetContentPagesRequestTooManyRequestsErrorBody",
          },
          "GetContentPagesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetCustomCodeScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetCustomCodeScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetCustomCodeScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetCustomCodeScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetCustomCodeScriptsRequestTooManyRequestsErrorBody",
          },
          "GetCustomCodeScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetCustomDomainSitesRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "GetCustomDomainSitesRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetCustomDomainSitesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetCustomDomainSitesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetCustomDomainSitesRequestTooManyRequestsErrorBody",
          },
          "GetCustomDomainSitesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetFolderAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetFolderAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetFolderAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetFolderAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetFolderAssetsRequestTooManyRequestsErrorBody",
          },
          "GetFolderAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetFormsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetFormsRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "GetFormsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetFormsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetFormsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetFormsRequestTooManyRequestsErrorBody",
          },
          "GetFormsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetItemItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetItemItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetItemItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetItemItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetItemItemsRequestTooManyRequestsErrorBody",
          },
          "GetItemItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetItemLiveItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetItemLiveItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetItemLiveItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetItemLiveItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetItemLiveItemsRequestTooManyRequestsErrorBody",
          },
          "GetItemLiveItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetMetadataPagesRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetMetadataPagesRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetMetadataPagesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetMetadataPagesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetMetadataPagesRequestTooManyRequestsErrorBody",
          },
          "GetMetadataPagesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetOrdersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetOrdersRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "GetOrdersRequestConflictErrorBody",
          },
          "GetOrdersRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "GetOrdersRequestForbiddenErrorBody",
          },
          "GetOrdersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetOrdersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetOrdersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetOrdersRequestTooManyRequestsErrorBody",
          },
          "GetOrdersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetProductsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetProductsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "GetProductsRequestConflictErrorBody",
          },
          "GetProductsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "GetProductsRequestForbiddenErrorBody",
          },
          "GetProductsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetProductsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetProductsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetProductsRequestTooManyRequestsErrorBody",
          },
          "GetProductsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetSettingsEcommerceRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetSettingsEcommerceRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "GetSettingsEcommerceRequestConflictErrorBody",
          },
          "GetSettingsEcommerceRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "GetSettingsEcommerceRequestForbiddenErrorBody",
          },
          "GetSettingsEcommerceRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetSettingsEcommerceRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetSettingsEcommerceRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetSettingsEcommerceRequestTooManyRequestsErrorBody",
          },
          "GetSettingsEcommerceRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetSitesRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetSitesRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetSitesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetSitesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetSitesRequestTooManyRequestsErrorBody",
          },
          "GetSitesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetSubmissionFormsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetSubmissionFormsRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "GetSubmissionFormsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetSubmissionFormsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetSubmissionFormsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetSubmissionFormsRequestTooManyRequestsErrorBody",
          },
          "GetSubmissionFormsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetUsersRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "GetUsersRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "GetUsersRequestForbiddenErrorBody",
          },
          "GetUsersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetUsersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetUsersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetUsersRequestTooManyRequestsErrorBody",
          },
          "GetUsersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "GetWebhooksRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "GetWebhooksRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "GetWebhooksRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "GetWebhooksRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "GetWebhooksRequestTooManyRequestsErrorBody",
          },
          "GetWebhooksRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "IntrospectTokenRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "InviteUsersRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "InviteUsersRequestConflictError": {
            "docs": "Conflict",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "InviteUsersRequestConflictErrorBody",
          },
          "InviteUsersRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "InviteUsersRequestForbiddenErrorBody",
          },
          "InviteUsersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "InviteUsersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "InviteUsersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "InviteUsersRequestTooManyRequestsErrorBody",
          },
          "InviteUsersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListAccessGroupsRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "ListAccessGroupsRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "ListAccessGroupsRequestForbiddenErrorBody",
          },
          "ListAccessGroupsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListAccessGroupsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListAccessGroupsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListAccessGroupsRequestTooManyRequestsErrorBody",
          },
          "ListAccessGroupsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListActivityLogsRequestForbiddenError": {
            "docs": "Forbidden request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "ListActivityLogsRequestForbiddenErrorBody",
          },
          "ListActivityLogsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListActivityLogsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListActivityLogsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListActivityLogsRequestTooManyRequestsErrorBody",
          },
          "ListAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListAssetsRequestTooManyRequestsErrorBody",
          },
          "ListAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListCollectionsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListCollectionsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListCollectionsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListCollectionsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListCollectionsRequestTooManyRequestsErrorBody",
          },
          "ListCollectionsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListCustomCodeBlocksScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListCustomCodeBlocksScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListCustomCodeBlocksScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListCustomCodeBlocksScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListCustomCodeBlocksScriptsRequestTooManyRequestsErrorBody",
          },
          "ListCustomCodeBlocksScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListFoldersAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListFoldersAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListFoldersAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListFoldersAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListFoldersAssetsRequestTooManyRequestsErrorBody",
          },
          "ListFoldersAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListFormsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListFormsRequestConflictError": {
            "docs": "To access this feature, the site needs to be republished.",
            "status-code": 409,
            "type": "unknown",
          },
          "ListFormsRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "ListFormsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListFormsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListFormsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListFormsRequestTooManyRequestsErrorBody",
          },
          "ListFormsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListInventoryRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListInventoryRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ListInventoryRequestConflictErrorBody",
          },
          "ListInventoryRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ListInventoryRequestForbiddenErrorBody",
          },
          "ListInventoryRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListInventoryRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListInventoryRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListInventoryRequestTooManyRequestsErrorBody",
          },
          "ListInventoryRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListItemsItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListItemsItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListItemsItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListItemsItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListItemsItemsRequestTooManyRequestsErrorBody",
          },
          "ListItemsItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListItemsLiveItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListItemsLiveItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListItemsLiveItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListItemsLiveItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListItemsLiveItemsRequestTooManyRequestsErrorBody",
          },
          "ListItemsLiveItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListOrdersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListOrdersRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ListOrdersRequestConflictErrorBody",
          },
          "ListOrdersRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ListOrdersRequestForbiddenErrorBody",
          },
          "ListOrdersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListOrdersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListOrdersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListOrdersRequestTooManyRequestsErrorBody",
          },
          "ListOrdersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListPagesRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListPagesRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListPagesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListPagesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListPagesRequestTooManyRequestsErrorBody",
          },
          "ListPagesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListProductsRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "ListProductsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ListProductsRequestConflictErrorBody",
          },
          "ListProductsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ListProductsRequestForbiddenErrorBody",
          },
          "ListProductsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListProductsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListProductsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListProductsRequestTooManyRequestsErrorBody",
          },
          "ListProductsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListScriptsRequestTooManyRequestsErrorBody",
          },
          "ListScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListSitesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListSitesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListSitesRequestTooManyRequestsErrorBody",
          },
          "ListSitesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListSubmissionsFormsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListSubmissionsFormsRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "ListSubmissionsFormsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListSubmissionsFormsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListSubmissionsFormsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListSubmissionsFormsRequestTooManyRequestsErrorBody",
          },
          "ListSubmissionsFormsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListUsersRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "ListUsersRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "ListUsersRequestForbiddenErrorBody",
          },
          "ListUsersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListUsersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListUsersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListUsersRequestTooManyRequestsErrorBody",
          },
          "ListUsersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ListWebhooksRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ListWebhooksRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ListWebhooksRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ListWebhooksRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ListWebhooksRequestTooManyRequestsErrorBody",
          },
          "ListWebhooksRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "PublishItemItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "PublishItemItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "PublishItemItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "PublishItemItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "PublishItemItemsRequestTooManyRequestsErrorBody",
          },
          "PublishItemItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "PublishSitesRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "key": "value",
                },
              },
            ],
            "status-code": 400,
            "type": "unknown",
          },
          "PublishSitesRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "PublishSitesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "PublishSitesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "PublishSitesRequestTooManyRequestsErrorBody",
          },
          "PublishSitesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "RefundOrdersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "RefundOrdersRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "RefundOrdersRequestConflictErrorBody",
          },
          "RefundOrdersRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "RefundOrdersRequestForbiddenErrorBody",
          },
          "RefundOrdersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "RefundOrdersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "RefundOrdersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "RefundOrdersRequestTooManyRequestsErrorBody",
          },
          "RefundOrdersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "RegisterHostedScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "RegisterHostedScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "RegisterHostedScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "RegisterHostedScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "RegisterHostedScriptsRequestTooManyRequestsErrorBody",
          },
          "RegisterHostedScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "RegisterInlineScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "RegisterInlineScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "RegisterInlineScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "RegisterInlineScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "RegisterInlineScriptsRequestTooManyRequestsErrorBody",
          },
          "RegisterInlineScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateAssetsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateAssetsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateAssetsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateAssetsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateAssetsRequestTooManyRequestsErrorBody",
          },
          "UpdateAssetsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateFieldsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateFieldsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateFieldsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateFieldsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateFieldsRequestTooManyRequestsErrorBody",
          },
          "UpdateFieldsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateFulfillOrdersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateFulfillOrdersRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UpdateFulfillOrdersRequestConflictErrorBody",
          },
          "UpdateFulfillOrdersRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateFulfillOrdersRequestForbiddenErrorBody",
          },
          "UpdateFulfillOrdersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateFulfillOrdersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateFulfillOrdersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateFulfillOrdersRequestTooManyRequestsErrorBody",
          },
          "UpdateFulfillOrdersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateInventoryRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateInventoryRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UpdateInventoryRequestConflictErrorBody",
          },
          "UpdateInventoryRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateInventoryRequestForbiddenErrorBody",
          },
          "UpdateInventoryRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateInventoryRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateInventoryRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateInventoryRequestTooManyRequestsErrorBody",
          },
          "UpdateInventoryRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateItemItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateItemItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateItemItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateItemItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateItemItemsRequestTooManyRequestsErrorBody",
          },
          "UpdateItemItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateItemLiveItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateItemLiveItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateItemLiveItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateItemLiveItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateItemLiveItemsRequestTooManyRequestsErrorBody",
          },
          "UpdateItemLiveItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateOrdersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateOrdersRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UpdateOrdersRequestConflictErrorBody",
          },
          "UpdateOrdersRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateOrdersRequestForbiddenErrorBody",
          },
          "UpdateOrdersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateOrdersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateOrdersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateOrdersRequestTooManyRequestsErrorBody",
          },
          "UpdateOrdersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdatePageSettingsRequestTooManyRequestsErrorBody",
          },
          "UpdatePageSettingsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateProductsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateProductsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UpdateProductsRequestConflictErrorBody",
          },
          "UpdateProductsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateProductsRequestForbiddenErrorBody",
          },
          "UpdateProductsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateProductsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateProductsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateProductsRequestTooManyRequestsErrorBody",
          },
          "UpdateProductsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateSkuProductsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateSkuProductsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UpdateSkuProductsRequestConflictErrorBody",
          },
          "UpdateSkuProductsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateSkuProductsRequestForbiddenErrorBody",
          },
          "UpdateSkuProductsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateSkuProductsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateSkuProductsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateSkuProductsRequestTooManyRequestsErrorBody",
          },
          "UpdateSkuProductsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateStaticContentRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateStaticContentRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "UpdateStaticContentRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateStaticContentRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateStaticContentRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateStaticContentRequestTooManyRequestsErrorBody",
          },
          "UpdateStaticContentRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateSubmissionFormsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateSubmissionFormsRequestConflictError": {
            "docs": "To access this feature, the site needs to be republished.",
            "status-code": 409,
            "type": "unknown",
          },
          "UpdateSubmissionFormsRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "UpdateSubmissionFormsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateSubmissionFormsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateSubmissionFormsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateSubmissionFormsRequestTooManyRequestsErrorBody",
          },
          "UpdateSubmissionFormsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateUnfulfillOrdersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateUnfulfillOrdersRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UpdateUnfulfillOrdersRequestConflictErrorBody",
          },
          "UpdateUnfulfillOrdersRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateUnfulfillOrdersRequestForbiddenErrorBody",
          },
          "UpdateUnfulfillOrdersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateUnfulfillOrdersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateUnfulfillOrdersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateUnfulfillOrdersRequestTooManyRequestsErrorBody",
          },
          "UpdateUnfulfillOrdersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateUsersRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateUsersRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "UpdateUsersRequestForbiddenErrorBody",
          },
          "UpdateUsersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateUsersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateUsersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateUsersRequestTooManyRequestsErrorBody",
          },
          "UpdateUsersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpsertCustomCodeScriptsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpsertCustomCodeScriptsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpsertCustomCodeScriptsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpsertCustomCodeScriptsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpsertCustomCodeScriptsRequestTooManyRequestsErrorBody",
          },
          "UpsertCustomCodeScriptsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
        },
        "types": {
          "AuthorizedByTokenRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConflictErrorBodyDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "ConflictErrorBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"user_limit_reached">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyOneDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConflictErrorBodyOneDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "ConflictErrorBodyZero": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"duplicate_user_email">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyZeroDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConflictErrorBodyZeroDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "CreateAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateCollectionsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateFieldsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateFolderAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemForMultipleLocalesItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemLiveItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWebhooksRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteCollectionRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteCollectionsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteCustomCodeScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteItemItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteItemLiveItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteUsersRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "DeleteUsersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeleteWebhooksRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ForbiddenErrorBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"users_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ForbiddenErrorBodyOneDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ForbiddenErrorBodyOneDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "ForbiddenErrorBodyZero": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"missing_scopes">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ForbiddenErrorBodyZeroDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ForbiddenErrorBodyZeroDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "GetAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCollectionsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetContentPagesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomCodeScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomDomainSitesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFolderAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFormsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetItemItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetItemLiveItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMetadataPagesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSettingsEcommerceRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSettingsEcommerceRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSettingsEcommerceRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSitesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSubmissionFormsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetUsersRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "GetUsersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetWebhooksRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersRequestConflictErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ConflictErrorBodyZero",
              "ConflictErrorBodyOne",
            ],
          },
          "InviteUsersRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "InviteUsersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAccessGroupsRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "ListAccessGroupsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListActivityLogsRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "ListActivityLogsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCollectionsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFoldersAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListInventoryRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListInventoryRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListInventoryRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListPagesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSubmissionsFormsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "ListUsersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListWebhooksRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OauthScope": {
            "enum": [
              {
                "docs": "read details about the authorized user",
                "name": "AuthorizedUserRead",
                "value": "authorized_user:read",
              },
              {
                "docs": "read assets on the site",
                "name": "AssetsRead",
                "value": "assets:read",
              },
              {
                "docs": "write assets on a site",
                "name": "AssetsWrite",
                "value": "assets:write",
              },
              {
                "docs": "read collections and items for a site",
                "name": "CmsRead",
                "value": "cms:read",
              },
              {
                "docs": "write to collections and items for a site",
                "name": "CmsWrite",
                "value": "cms:write",
              },
              {
                "docs": "read custom code on the site",
                "name": "CustomCodeRead",
                "value": "custom_code:read",
              },
              {
                "docs": "modify custom code on the site",
                "name": "CustomCodeWrite",
                "value": "custom_code:write",
              },
              {
                "docs": "read ecommerce data",
                "name": "EcommerceRead",
                "value": "ecommerce:read",
              },
              {
                "docs": "edit ecommerce data",
                "name": "EcommerceWrite",
                "value": "ecommerce:write",
              },
              {
                "docs": "read form data",
                "name": "FormsRead",
                "value": "forms:read",
              },
              {
                "docs": "write form data",
                "name": "FormsWrite",
                "value": "forms:write",
              },
              {
                "docs": "read pages on the site",
                "name": "PagesRead",
                "value": "pages:read",
              },
              {
                "docs": "write to pages on the site",
                "name": "PagesWrite",
                "value": "pages:write",
              },
              {
                "docs": "read component data",
                "name": "ComponentsRead",
                "value": "components:read",
              },
              {
                "docs": "read sites on the site",
                "name": "SitesRead",
                "value": "sites:read",
              },
              {
                "docs": "modify pages on the site",
                "name": "SitesWrite",
                "value": "sites:write",
              },
              {
                "docs": "read users on the site",
                "name": "UsersRead",
                "value": "users:read",
              },
              {
                "docs": "read site activity logs",
                "name": "SiteActivityRead",
                "value": "site_activity:read",
              },
              {
                "docs": "modify users on the site",
                "name": "UsersWrite",
                "value": "users:write",
              },
              {
                "docs": "read workspace resource data",
                "name": "WorkspaceRead",
                "value": "workspace:read",
              },
              {
                "docs": "write workspace resource data",
                "name": "WorkspaceWrite",
                "value": "workspace:write",
              },
              {
                "docs": "read site configuration data",
                "name": "SiteConfigRead",
                "value": "site_config:read",
              },
              {
                "docs": "write site configuration data",
                "name": "SiteConfigWrite",
                "value": "site_config:write",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublishItemItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublishSitesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterHostedScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterInlineScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateAssetsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFieldsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateInventoryRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateInventoryRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateInventoryRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemLiveItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateStaticContentRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSubmissionFormsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<nullable<string>>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "UpdateUsersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  OauthScope:
    enum:
      - value: authorized_user:read
        name: AuthorizedUserRead
        docs: read details about the authorized user
      - value: assets:read
        name: AssetsRead
        docs: read assets on the site
      - value: assets:write
        name: AssetsWrite
        docs: write assets on a site
      - value: cms:read
        name: CmsRead
        docs: read collections and items for a site
      - value: cms:write
        name: CmsWrite
        docs: write to collections and items for a site
      - value: custom_code:read
        name: CustomCodeRead
        docs: read custom code on the site
      - value: custom_code:write
        name: CustomCodeWrite
        docs: modify custom code on the site
      - value: ecommerce:read
        name: EcommerceRead
        docs: read ecommerce data
      - value: ecommerce:write
        name: EcommerceWrite
        docs: edit ecommerce data
      - value: forms:read
        name: FormsRead
        docs: read form data
      - value: forms:write
        name: FormsWrite
        docs: write form data
      - value: pages:read
        name: PagesRead
        docs: read pages on the site
      - value: pages:write
        name: PagesWrite
        docs: write to pages on the site
      - value: components:read
        name: ComponentsRead
        docs: read component data
      - value: sites:read
        name: SitesRead
        docs: read sites on the site
      - value: sites:write
        name: SitesWrite
        docs: modify pages on the site
      - value: users:read
        name: UsersRead
        docs: read users on the site
      - value: site_activity:read
        name: SiteActivityRead
        docs: read site activity logs
      - value: users:write
        name: UsersWrite
        docs: modify users on the site
      - value: workspace:read
        name: WorkspaceRead
        docs: read workspace resource data
      - value: workspace:write
        name: WorkspaceWrite
        docs: write workspace resource data
      - value: site_config:read
        name: SiteConfigRead
        docs: read site configuration data
      - value: site_config:write
        name: SiteConfigWrite
        docs: write site configuration data
    source:
      openapi: ../openapi.yml
  AuthorizedByTokenRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ListSitesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetSitesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetCustomDomainSitesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  PublishSitesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ForbiddenErrorBodyZeroDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ForbiddenErrorBodyZero:
    properties:
      code:
        type: optional<literal<"missing_scopes">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ForbiddenErrorBodyZeroDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  ForbiddenErrorBodyOneDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ForbiddenErrorBodyOne:
    properties:
      code:
        type: optional<literal<"users_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ForbiddenErrorBodyOneDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  ListActivityLogsRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  ListActivityLogsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListCollectionsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateCollectionsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetCollectionsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteCollectionRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateFieldsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteCollectionsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateFieldsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListItemsItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateItemItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListItemsLiveItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateItemLiveItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateItemForMultipleLocalesItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetItemItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteItemItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateItemItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetItemLiveItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteItemLiveItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateItemLiveItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  PublishItemItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListPagesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetMetadataPagesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdatePageSettingsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetContentPagesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateStaticContentRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetCustomCodeScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteCustomCodeScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  RegisterHostedScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  RegisterInlineScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListCustomCodeBlocksScriptsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListFoldersAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateFolderAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetFolderAssetsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListWebhooksRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateWebhooksRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetWebhooksRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteWebhooksRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListFormsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetFormsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListSubmissionsFormsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetSubmissionFormsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateSubmissionFormsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListUsersRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  ListUsersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetUsersRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  GetUsersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteUsersRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  DeleteUsersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateUsersRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  UpdateUsersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  InviteUsersRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  ConflictErrorBodyZeroDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ConflictErrorBodyZero:
    properties:
      code:
        type: optional<literal<"duplicate_user_email">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyZeroDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  ConflictErrorBodyOneDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ConflictErrorBodyOne:
    properties:
      code:
        type: optional<literal<"user_limit_reached">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyOneDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  InviteUsersRequestConflictErrorBody:
    discriminated: false
    union:
      - ConflictErrorBodyZero
      - ConflictErrorBodyOne
    source:
      openapi: ../openapi.yml
  InviteUsersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListAccessGroupsRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  ListAccessGroupsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListProductsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ConflictErrorBodyDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ListProductsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateProductsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  CreateProductsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  CreateProductsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetProductsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  GetProductsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  GetProductsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListOrdersRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ListOrdersRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ListOrdersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetOrdersRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  GetOrdersRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  GetOrdersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateOrdersRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  UpdateOrdersRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  UpdateOrdersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  RefundOrdersRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  RefundOrdersRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  RefundOrdersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ListInventoryRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ListInventoryRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ListInventoryRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateInventoryRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  UpdateInventoryRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  UpdateInventoryRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  GetSettingsEcommerceRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<nullable<string>>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  GetSettingsEcommerceRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  GetSettingsEcommerceRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
errors:
  AuthorizedByTokenRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AuthorizedByTokenRequestForbiddenError:
    status-code: 403
    type: AuthorizedByTokenRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  IntrospectTokenRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListSitesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListSitesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListSitesRequestTooManyRequestsError:
    status-code: 429
    type: ListSitesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetSitesRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetSitesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetSitesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetSitesRequestTooManyRequestsError:
    status-code: 429
    type: GetSitesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetSitesRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetCustomDomainSitesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetCustomDomainSitesRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  GetCustomDomainSitesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetCustomDomainSitesRequestTooManyRequestsError:
    status-code: 429
    type: GetCustomDomainSitesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetCustomDomainSitesRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  PublishSitesRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Bad Request
    examples:
      - value:
          key: value
  PublishSitesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  PublishSitesRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  PublishSitesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  PublishSitesRequestTooManyRequestsError:
    status-code: 429
    type: PublishSitesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListActivityLogsRequestForbiddenError:
    status-code: 403
    type: ListActivityLogsRequestForbiddenErrorBody
    docs: Forbidden request
    examples:
      - value:
          message: Request not authorized
  ListActivityLogsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListActivityLogsRequestTooManyRequestsError:
    status-code: 429
    type: ListActivityLogsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListActivityLogsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListCollectionsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListCollectionsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListCollectionsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListCollectionsRequestTooManyRequestsError:
    status-code: 429
    type: ListCollectionsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListCollectionsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateCollectionsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateCollectionsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateCollectionsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateCollectionsRequestTooManyRequestsError:
    status-code: 429
    type: CreateCollectionsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateCollectionsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetCollectionsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetCollectionsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetCollectionsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetCollectionsRequestTooManyRequestsError:
    status-code: 429
    type: GetCollectionsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetCollectionsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteCollectionRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteCollectionRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteCollectionRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteCollectionRequestTooManyRequestsError:
    status-code: 429
    type: DeleteCollectionRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteCollectionRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateFieldsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateFieldsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateFieldsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateFieldsRequestTooManyRequestsError:
    status-code: 429
    type: CreateFieldsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateFieldsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteCollectionsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteCollectionsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteCollectionsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteCollectionsRequestTooManyRequestsError:
    status-code: 429
    type: DeleteCollectionsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteCollectionsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateFieldsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateFieldsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateFieldsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateFieldsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateFieldsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateFieldsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListItemsItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListItemsItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListItemsItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListItemsItemsRequestTooManyRequestsError:
    status-code: 429
    type: ListItemsItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListItemsItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateItemItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateItemItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateItemItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateItemItemsRequestTooManyRequestsError:
    status-code: 429
    type: CreateItemItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateItemItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListItemsLiveItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListItemsLiveItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListItemsLiveItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListItemsLiveItemsRequestTooManyRequestsError:
    status-code: 429
    type: ListItemsLiveItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListItemsLiveItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateItemLiveItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateItemLiveItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateItemLiveItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateItemLiveItemsRequestTooManyRequestsError:
    status-code: 429
    type: CreateItemLiveItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateItemLiveItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateItemForMultipleLocalesItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateItemForMultipleLocalesItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateItemForMultipleLocalesItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateItemForMultipleLocalesItemsRequestTooManyRequestsError:
    status-code: 429
    type: CreateItemForMultipleLocalesItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateItemForMultipleLocalesItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetItemItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetItemItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetItemItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetItemItemsRequestTooManyRequestsError:
    status-code: 429
    type: GetItemItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetItemItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteItemItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteItemItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteItemItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteItemItemsRequestTooManyRequestsError:
    status-code: 429
    type: DeleteItemItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteItemItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateItemItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateItemItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateItemItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateItemItemsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateItemItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateItemItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetItemLiveItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetItemLiveItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetItemLiveItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetItemLiveItemsRequestTooManyRequestsError:
    status-code: 429
    type: GetItemLiveItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetItemLiveItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteItemLiveItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteItemLiveItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteItemLiveItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteItemLiveItemsRequestTooManyRequestsError:
    status-code: 429
    type: DeleteItemLiveItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteItemLiveItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateItemLiveItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateItemLiveItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateItemLiveItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateItemLiveItemsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateItemLiveItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateItemLiveItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  PublishItemItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  PublishItemItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  PublishItemItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  PublishItemItemsRequestTooManyRequestsError:
    status-code: 429
    type: PublishItemItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  PublishItemItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListPagesRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListPagesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListPagesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListPagesRequestTooManyRequestsError:
    status-code: 429
    type: ListPagesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListPagesRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetMetadataPagesRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetMetadataPagesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetMetadataPagesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetMetadataPagesRequestTooManyRequestsError:
    status-code: 429
    type: GetMetadataPagesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetMetadataPagesRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdatePageSettingsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdatePageSettingsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdatePageSettingsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdatePageSettingsRequestTooManyRequestsError:
    status-code: 429
    type: UpdatePageSettingsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdatePageSettingsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetContentPagesRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetContentPagesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetContentPagesRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  GetContentPagesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetContentPagesRequestTooManyRequestsError:
    status-code: 429
    type: GetContentPagesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetContentPagesRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateStaticContentRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateStaticContentRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateStaticContentRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  UpdateStaticContentRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateStaticContentRequestTooManyRequestsError:
    status-code: 429
    type: UpdateStaticContentRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateStaticContentRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetCustomCodeScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetCustomCodeScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetCustomCodeScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetCustomCodeScriptsRequestTooManyRequestsError:
    status-code: 429
    type: GetCustomCodeScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetCustomCodeScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpsertCustomCodeScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpsertCustomCodeScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpsertCustomCodeScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpsertCustomCodeScriptsRequestTooManyRequestsError:
    status-code: 429
    type: UpsertCustomCodeScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpsertCustomCodeScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteCustomCodeScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteCustomCodeScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteCustomCodeScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteCustomCodeScriptsRequestTooManyRequestsError:
    status-code: 429
    type: DeleteCustomCodeScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteCustomCodeScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListScriptsRequestTooManyRequestsError:
    status-code: 429
    type: ListScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  RegisterHostedScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  RegisterHostedScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  RegisterHostedScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  RegisterHostedScriptsRequestTooManyRequestsError:
    status-code: 429
    type: RegisterHostedScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  RegisterHostedScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  RegisterInlineScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  RegisterInlineScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  RegisterInlineScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  RegisterInlineScriptsRequestTooManyRequestsError:
    status-code: 429
    type: RegisterInlineScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  RegisterInlineScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListCustomCodeBlocksScriptsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListCustomCodeBlocksScriptsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListCustomCodeBlocksScriptsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListCustomCodeBlocksScriptsRequestTooManyRequestsError:
    status-code: 429
    type: ListCustomCodeBlocksScriptsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListCustomCodeBlocksScriptsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListAssetsRequestTooManyRequestsError:
    status-code: 429
    type: ListAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateAssetsRequestTooManyRequestsError:
    status-code: 429
    type: CreateAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetAssetsRequestTooManyRequestsError:
    status-code: 429
    type: GetAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteAssetsRequestTooManyRequestsError:
    status-code: 429
    type: DeleteAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateAssetsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListFoldersAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListFoldersAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListFoldersAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListFoldersAssetsRequestTooManyRequestsError:
    status-code: 429
    type: ListFoldersAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListFoldersAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateFolderAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateFolderAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateFolderAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateFolderAssetsRequestTooManyRequestsError:
    status-code: 429
    type: CreateFolderAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateFolderAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetFolderAssetsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetFolderAssetsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetFolderAssetsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetFolderAssetsRequestTooManyRequestsError:
    status-code: 429
    type: GetFolderAssetsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetFolderAssetsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListWebhooksRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListWebhooksRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListWebhooksRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListWebhooksRequestTooManyRequestsError:
    status-code: 429
    type: ListWebhooksRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListWebhooksRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateWebhooksRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateWebhooksRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateWebhooksRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateWebhooksRequestTooManyRequestsError:
    status-code: 429
    type: CreateWebhooksRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateWebhooksRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetWebhooksRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetWebhooksRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetWebhooksRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetWebhooksRequestTooManyRequestsError:
    status-code: 429
    type: GetWebhooksRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetWebhooksRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteWebhooksRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteWebhooksRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteWebhooksRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteWebhooksRequestTooManyRequestsError:
    status-code: 429
    type: DeleteWebhooksRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteWebhooksRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListFormsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListFormsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListFormsRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  ListFormsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListFormsRequestConflictError:
    status-code: 409
    type: unknown
    docs: To access this feature, the site needs to be republished.
  ListFormsRequestTooManyRequestsError:
    status-code: 429
    type: ListFormsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListFormsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetFormsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetFormsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetFormsRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  GetFormsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetFormsRequestTooManyRequestsError:
    status-code: 429
    type: GetFormsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetFormsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListSubmissionsFormsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListSubmissionsFormsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListSubmissionsFormsRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  ListSubmissionsFormsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListSubmissionsFormsRequestTooManyRequestsError:
    status-code: 429
    type: ListSubmissionsFormsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListSubmissionsFormsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetSubmissionFormsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetSubmissionFormsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetSubmissionFormsRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  GetSubmissionFormsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetSubmissionFormsRequestTooManyRequestsError:
    status-code: 429
    type: GetSubmissionFormsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetSubmissionFormsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateSubmissionFormsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateSubmissionFormsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateSubmissionFormsRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  UpdateSubmissionFormsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateSubmissionFormsRequestConflictError:
    status-code: 409
    type: unknown
    docs: To access this feature, the site needs to be republished.
  UpdateSubmissionFormsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateSubmissionFormsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateSubmissionFormsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListUsersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  ListUsersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListUsersRequestForbiddenError:
    status-code: 403
    type: ListUsersRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  ListUsersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListUsersRequestTooManyRequestsError:
    status-code: 429
    type: ListUsersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListUsersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetUsersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  GetUsersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetUsersRequestForbiddenError:
    status-code: 403
    type: GetUsersRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  GetUsersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetUsersRequestTooManyRequestsError:
    status-code: 429
    type: GetUsersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetUsersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteUsersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  DeleteUsersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteUsersRequestForbiddenError:
    status-code: 403
    type: DeleteUsersRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  DeleteUsersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteUsersRequestTooManyRequestsError:
    status-code: 429
    type: DeleteUsersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteUsersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateUsersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  UpdateUsersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateUsersRequestForbiddenError:
    status-code: 403
    type: UpdateUsersRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  UpdateUsersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateUsersRequestTooManyRequestsError:
    status-code: 429
    type: UpdateUsersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateUsersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  InviteUsersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  InviteUsersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  InviteUsersRequestForbiddenError:
    status-code: 403
    type: InviteUsersRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  InviteUsersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  InviteUsersRequestConflictError:
    status-code: 409
    type: InviteUsersRequestConflictErrorBody
    docs: Conflict
    examples:
      - value:
          message: Request not authorized
  InviteUsersRequestTooManyRequestsError:
    status-code: 429
    type: InviteUsersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  InviteUsersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListAccessGroupsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  ListAccessGroupsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListAccessGroupsRequestForbiddenError:
    status-code: 403
    type: ListAccessGroupsRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  ListAccessGroupsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListAccessGroupsRequestTooManyRequestsError:
    status-code: 429
    type: ListAccessGroupsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListAccessGroupsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListProductsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  ListProductsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListProductsRequestForbiddenError:
    status-code: 403
    type: ListProductsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ListProductsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListProductsRequestConflictError:
    status-code: 409
    type: ListProductsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ListProductsRequestTooManyRequestsError:
    status-code: 429
    type: ListProductsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListProductsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateProductsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateProductsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateProductsRequestForbiddenError:
    status-code: 403
    type: CreateProductsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  CreateProductsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateProductsRequestConflictError:
    status-code: 409
    type: CreateProductsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  CreateProductsRequestTooManyRequestsError:
    status-code: 429
    type: CreateProductsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateProductsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetProductsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetProductsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetProductsRequestForbiddenError:
    status-code: 403
    type: GetProductsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  GetProductsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetProductsRequestConflictError:
    status-code: 409
    type: GetProductsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  GetProductsRequestTooManyRequestsError:
    status-code: 429
    type: GetProductsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetProductsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateProductsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateProductsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateProductsRequestForbiddenError:
    status-code: 403
    type: UpdateProductsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  UpdateProductsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateProductsRequestConflictError:
    status-code: 409
    type: UpdateProductsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  UpdateProductsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateProductsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateProductsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CreateSkuProductsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CreateSkuProductsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CreateSkuProductsRequestForbiddenError:
    status-code: 403
    type: CreateSkuProductsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  CreateSkuProductsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CreateSkuProductsRequestConflictError:
    status-code: 409
    type: CreateSkuProductsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  CreateSkuProductsRequestTooManyRequestsError:
    status-code: 429
    type: CreateSkuProductsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CreateSkuProductsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateSkuProductsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateSkuProductsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateSkuProductsRequestForbiddenError:
    status-code: 403
    type: UpdateSkuProductsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  UpdateSkuProductsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateSkuProductsRequestConflictError:
    status-code: 409
    type: UpdateSkuProductsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  UpdateSkuProductsRequestTooManyRequestsError:
    status-code: 429
    type: UpdateSkuProductsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateSkuProductsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListOrdersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListOrdersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListOrdersRequestForbiddenError:
    status-code: 403
    type: ListOrdersRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ListOrdersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListOrdersRequestConflictError:
    status-code: 409
    type: ListOrdersRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ListOrdersRequestTooManyRequestsError:
    status-code: 429
    type: ListOrdersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListOrdersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetOrdersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetOrdersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetOrdersRequestForbiddenError:
    status-code: 403
    type: GetOrdersRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  GetOrdersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetOrdersRequestConflictError:
    status-code: 409
    type: GetOrdersRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  GetOrdersRequestTooManyRequestsError:
    status-code: 429
    type: GetOrdersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetOrdersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateOrdersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateOrdersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateOrdersRequestForbiddenError:
    status-code: 403
    type: UpdateOrdersRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  UpdateOrdersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateOrdersRequestConflictError:
    status-code: 409
    type: UpdateOrdersRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  UpdateOrdersRequestTooManyRequestsError:
    status-code: 429
    type: UpdateOrdersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateOrdersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateFulfillOrdersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateFulfillOrdersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateFulfillOrdersRequestForbiddenError:
    status-code: 403
    type: UpdateFulfillOrdersRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  UpdateFulfillOrdersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateFulfillOrdersRequestConflictError:
    status-code: 409
    type: UpdateFulfillOrdersRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  UpdateFulfillOrdersRequestTooManyRequestsError:
    status-code: 429
    type: UpdateFulfillOrdersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateFulfillOrdersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateUnfulfillOrdersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateUnfulfillOrdersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateUnfulfillOrdersRequestForbiddenError:
    status-code: 403
    type: UpdateUnfulfillOrdersRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  UpdateUnfulfillOrdersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateUnfulfillOrdersRequestConflictError:
    status-code: 409
    type: UpdateUnfulfillOrdersRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  UpdateUnfulfillOrdersRequestTooManyRequestsError:
    status-code: 429
    type: UpdateUnfulfillOrdersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateUnfulfillOrdersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  RefundOrdersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  RefundOrdersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  RefundOrdersRequestForbiddenError:
    status-code: 403
    type: RefundOrdersRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  RefundOrdersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  RefundOrdersRequestConflictError:
    status-code: 409
    type: RefundOrdersRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  RefundOrdersRequestTooManyRequestsError:
    status-code: 429
    type: RefundOrdersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  RefundOrdersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ListInventoryRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ListInventoryRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ListInventoryRequestForbiddenError:
    status-code: 403
    type: ListInventoryRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ListInventoryRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ListInventoryRequestConflictError:
    status-code: 409
    type: ListInventoryRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ListInventoryRequestTooManyRequestsError:
    status-code: 429
    type: ListInventoryRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ListInventoryRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateInventoryRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateInventoryRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateInventoryRequestForbiddenError:
    status-code: 403
    type: UpdateInventoryRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  UpdateInventoryRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateInventoryRequestConflictError:
    status-code: 409
    type: UpdateInventoryRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  UpdateInventoryRequestTooManyRequestsError:
    status-code: 429
    type: UpdateInventoryRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateInventoryRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  GetSettingsEcommerceRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  GetSettingsEcommerceRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  GetSettingsEcommerceRequestForbiddenError:
    status-code: 403
    type: GetSettingsEcommerceRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  GetSettingsEcommerceRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  GetSettingsEcommerceRequestConflictError:
    status-code: 409
    type: GetSettingsEcommerceRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  GetSettingsEcommerceRequestTooManyRequestsError:
    status-code: 429
    type: GetSettingsEcommerceRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  GetSettingsEcommerceRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
",
    },
    "accessGroups.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "users:read",
                  ],
                },
              ],
              "display-name": "List Access Groups",
              "docs": "Get a list of access groups for a site <br><br> Required scope | `users:read`",
              "errors": [
                "root.ListAccessGroupsRequestBadRequestError",
                "root.ListAccessGroupsRequestUnauthorizedError",
                "root.ListAccessGroupsRequestForbiddenError",
                "root.ListAccessGroupsRequestNotFoundError",
                "root.ListAccessGroupsRequestTooManyRequestsError",
                "root.ListAccessGroupsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                    "sort": "CreatedOn",
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "createdOn": "2022-08-01T19:41:48Z",
                          "id": "62be58d404be8a6cc900c081",
                          "name": "Research Team",
                          "shortId": "rt",
                          "slug": "hitchhikers-guide-research-team",
                        },
                        {
                          "createdOn": "2022-08-01T19:41:48Z",
                          "id": "65a96161991e77bbb4a6c573",
                          "name": "Admin",
                          "shortId": "ad",
                          "slug": "admin",
                        },
                      ],
                      "count": 1,
                      "limit": 10,
                      "offset": 0,
                      "total": 1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/accessgroups",
              "request": {
                "name": "ListAccessGroupsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                  "sort": {
                    "docs": "Sort string to use when ordering access groups
Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
",
                    "type": "optional<nullable<ListAccessGroupsRequestSort>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListAccessGroupsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ListAccessGroupsRequestSort": {
            "enum": [
              {
                "docs": "Sorts users in ascending order based on their created date",
                "name": "CreatedOnAscending",
                "value": "CreatedOn",
              },
              {
                "docs": "Sorts users in descending order based on their created date",
                "name": "CreatedOnDescending",
                "value": "-CreatedOn",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAccessGroupsResponse": {
            "docs": "The list access groups results",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "List of Site Access Groups",
                "type": "optional<list<ListAccessGroupsResponseAccessGroupsItem>>",
              },
              "count": {
                "docs": "Number of access groups returned",
                "type": "optional<double>",
              },
              "limit": {
                "default": 10,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of access groups in the collection",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAccessGroupsResponseAccessGroupsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "The date the Access Group was created",
                "type": "optional<datetime>",
              },
              "id": {
                "docs": "Unique identifier for the Access Group",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Name of the the Access Group",
                "type": "optional<string>",
              },
              "shortId": {
                "docs": "Shortened unique identifier based on name, optimized for its use in the user’s JWT",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Shortened unique identifier based on name, optimized for human readability and public API use",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListAccessGroupsRequestSort:
    enum:
      - value: CreatedOn
        name: CreatedOnAscending
        docs: Sorts users in ascending order based on their created date
      - value: '-CreatedOn'
        name: CreatedOnDescending
        docs: Sorts users in descending order based on their created date
    source:
      openapi: ../openapi.yml
  ListAccessGroupsResponseAccessGroupsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Access Group
      name:
        type: optional<string>
        docs: Name of the the Access Group
      shortId:
        type: optional<string>
        docs: >-
          Shortened unique identifier based on name, optimized for its use in
          the user’s JWT
      slug:
        type: optional<string>
        docs: >-
          Shortened unique identifier based on name, optimized for human
          readability and public API use
      createdOn:
        type: optional<datetime>
        docs: The date the Access Group was created
    source:
      openapi: ../openapi.yml
    inline: true
  ListAccessGroupsResponse:
    docs: The list access groups results
    properties:
      count:
        type: optional<double>
        docs: Number of access groups returned
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 10
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of access groups in the collection
      accessGroups:
        type: optional<list<ListAccessGroupsResponseAccessGroupsItem>>
        docs: List of Site Access Groups
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/accessgroups
      method: GET
      auth:
        - OAuth2:
            - users:read
      docs: >-
        Get a list of access groups for a site <br><br> Required scope |
        `users:read`
      source:
        openapi: ../openapi.yml
      display-name: List Access Groups
      request:
        name: ListAccessGroupsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          sort:
            type: optional<nullable<ListAccessGroupsRequestSort>>
            docs: |
              Sort string to use when ordering access groups
              Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
      response:
        docs: Request was successful
        type: ListAccessGroupsResponse
        status-code: 200
      errors:
        - root.ListAccessGroupsRequestBadRequestError
        - root.ListAccessGroupsRequestUnauthorizedError
        - root.ListAccessGroupsRequestForbiddenError
        - root.ListAccessGroupsRequestNotFoundError
        - root.ListAccessGroupsRequestTooManyRequestsError
        - root.ListAccessGroupsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            offset: 1.1
            limit: 1.1
            sort: CreatedOn
          response:
            body:
              count: 1
              limit: 10
              offset: 0
              total: 1
              accessGroups:
                - id: 62be58d404be8a6cc900c081
                  name: Research Team
                  shortId: rt
                  slug: hitchhikers-guide-research-team
                  createdOn: '2022-08-01T19:41:48Z'
                - id: 65a96161991e77bbb4a6c573
                  name: Admin
                  shortId: ad
                  slug: admin
                  createdOn: '2022-08-01T19:41:48Z'
  source:
    openapi: ../openapi.yml
",
    },
    "assets.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Assets",
          "endpoints": {
            "create": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:write",
                  ],
                },
              ],
              "display-name": "Create Asset Metadata",
              "docs": "Create a new asset entry.  </br></br> This endpoint generates a response with the following information: `uploadUrl` and `uploadDetails`.  You can use these two properties to [upload the file to Amazon s3 by making a POST](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOST.html) request to the `uploadUrl` with the `uploadDetails` object as your header information in the request. </br></br>  Required scope | `assets:write`
",
              "errors": [
                "root.CreateAssetsRequestBadRequestError",
                "root.CreateAssetsRequestUnauthorizedError",
                "root.CreateAssetsRequestNotFoundError",
                "root.CreateAssetsRequestTooManyRequestsError",
                "root.CreateAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "fileHash": "3c7d87c9575702bc3b1e991f4d3c638e",
                    "fileName": "file.png",
                  },
                  "response": {
                    "body": {
                      "assetUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d907ab9e91e3e9f56385e_paranoidAndroid-2024.png",
                      "contentType": "image/png",
                      "createdOn": "2023-04-11T16:32:21Z",
                      "hostedUrl": "https://d1otoma47x30pg.cloudfront.net/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                      "id": "64358b9544249dc43d37d2b7",
                      "lastUpdated": "2023-04-12T20:31:03Z",
                      "originalFileName": "file.png",
                      "parentFolder": "6436b1ce5281cace05b65aea",
                      "uploadDetails": {
                        "Cache-Control": "max-age=31536000, must-revalidate",
                        "Policy": "<a-very-long-alphanumeric-token-with-equal-sign-at-the-end>",
                        "X-Amz-Algorithm": "AWS4-HMAC-SHA256",
                        "X-Amz-Credential": "<credential-key>/<date>/<region-zone>/s3/aws4_request",
                        "X-Amz-Date": "<date-in-iso-like-string>",
                        "X-Amz-Signature": "<one-line-ling-alphanumeric-signature>",
                        "acl": "public-read",
                        "bucket": "webflow-bucket-name",
                        "content-type": "image/png",
                        "key": "<siteId>/<fileId>_<filename-with-extension>",
                        "success_action_status": "201",
                      },
                      "uploadUrl": "https://s3.amazonaws.com/webflow-dev-assets/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/assets",
              "request": {
                "body": {
                  "properties": {
                    "fileHash": {
                      "docs": "MD5 hash of the file",
                      "type": "string",
                    },
                    "fileName": {
                      "docs": "file name including file extension",
                      "type": "string",
                    },
                    "parentFolder": {
                      "docs": "id of the Asset folder (optional)",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateAssetsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CreateAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-folder": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:write",
                  ],
                },
              ],
              "display-name": "Create Asset Folder",
              "docs": "Create an Asset Folder within a given site <br><br> Required scope | `assets:write`",
              "errors": [
                "root.CreateFolderAssetsRequestBadRequestError",
                "root.CreateFolderAssetsRequestUnauthorizedError",
                "root.CreateFolderAssetsRequestNotFoundError",
                "root.CreateFolderAssetsRequestTooManyRequestsError",
                "root.CreateFolderAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "displayName": "my asset folder",
                  },
                  "response": {
                    "body": {
                      "assets": [
                        "63e5889e7fe4eafa7384cea4",
                        "659595234426a9fcbad57043",
                      ],
                      "createdOn": "2018-10-14T21:55:49Z",
                      "displayName": "emoji icons",
                      "id": "6390c49774a71f0e3c1a08ee",
                      "lastUpdated": "2022-12-07T16:51:37Z",
                      "parentFolder": "6390c49774a71f99f21a08eb",
                      "siteId": "6390c49674a71f84b51a08d8",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/asset_folders",
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "A human readable name for the Asset Folder",
                      "type": "string",
                    },
                    "parentFolder": {
                      "docs": "An (optional) pointer to a parent Asset Folder (or null for root)",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateFolderAssetsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CreateFolderAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:write",
                  ],
                },
              ],
              "display-name": "Delete Asset",
              "docs": "Delete an Asset",
              "errors": [
                "root.DeleteAssetsRequestBadRequestError",
                "root.DeleteAssetsRequestUnauthorizedError",
                "root.DeleteAssetsRequestNotFoundError",
                "root.DeleteAssetsRequestTooManyRequestsError",
                "root.DeleteAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_id": "580e63fc8c9a982ac9b8b745",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/assets/{asset_id}",
              "request": {
                "name": "DeleteAssetsRequest",
                "path-parameters": {
                  "asset_id": {
                    "docs": "Unique identifier for an Asset on a site",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:read",
                  ],
                },
              ],
              "display-name": "Get Asset",
              "docs": "Get an Asset </br></br> Required scope | `assets:read`",
              "errors": [
                "root.GetAssetsRequestBadRequestError",
                "root.GetAssetsRequestUnauthorizedError",
                "root.GetAssetsRequestNotFoundError",
                "root.GetAssetsRequestTooManyRequestsError",
                "root.GetAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "response": {
                    "body": {
                      "altText": "A red chair",
                      "contentType": "image/png",
                      "createdOn": "2016-09-02T23:26:22Z",
                      "displayName": "example-image-123.png",
                      "hostedUrl": "example.com/hostedimage.png",
                      "id": "55131cd036c09f7d07883dfc",
                      "lastUpdated": "2016-09-06T21:12:22Z",
                      "originalFileName": "image.png",
                      "siteId": "62749158efef318abc8d5a0f",
                      "size": 1500,
                      "variants": [
                        {
                          "displayName": "A brown dog",
                          "error": "error",
                          "format": "format",
                          "height": 900,
                          "hostedUrl": "example.com/hostedimage.png",
                          "originalFileName": "image.png",
                          "quality": 1,
                          "width": 1500,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/assets/{asset_id}",
              "request": {
                "name": "GetAssetsRequest",
                "path-parameters": {
                  "asset_id": {
                    "docs": "Unique identifier for an Asset on a site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-folder": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:read",
                  ],
                },
              ],
              "display-name": "Get Asset Folder",
              "docs": "Get details about a specific Asset Folder <br><br> Required scope | `assets:read`",
              "errors": [
                "root.GetFolderAssetsRequestBadRequestError",
                "root.GetFolderAssetsRequestUnauthorizedError",
                "root.GetFolderAssetsRequestNotFoundError",
                "root.GetFolderAssetsRequestTooManyRequestsError",
                "root.GetFolderAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_folder_id": "6390c49774a71f0e3c1a08ee",
                  },
                  "response": {
                    "body": {
                      "assets": [
                        "63e5889e7fe4eafa7384cea4",
                        "659595234426a9fcbad57043",
                      ],
                      "createdOn": "2018-10-14T21:55:49Z",
                      "displayName": "emoji icons",
                      "id": "6390c49774a71f0e3c1a08ee",
                      "lastUpdated": "2022-12-07T16:51:37Z",
                      "parentFolder": "6390c49774a71f99f21a08eb",
                      "siteId": "6390c49674a71f84b51a08d8",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/asset_folders/{asset_folder_id}",
              "request": {
                "name": "GetFolderAssetsRequest",
                "path-parameters": {
                  "asset_folder_id": {
                    "docs": "Unique identifier for an Asset Folder",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetFolderAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:read",
                  ],
                },
              ],
              "display-name": "List Assets",
              "docs": "List assets for a given site </br></br> Required scope | `assets:read`",
              "errors": [
                "root.ListAssetsRequestBadRequestError",
                "root.ListAssetsRequestUnauthorizedError",
                "root.ListAssetsRequestNotFoundError",
                "root.ListAssetsRequestTooManyRequestsError",
                "root.ListAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "assets": [
                        {
                          "altText": "A red chair",
                          "contentType": "image/png",
                          "createdOn": "2023-02-09T23:58:22Z",
                          "displayName": "63e5889e7fe4eafa7384cea4_Candy-Wrapper.png",
                          "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/63938b302ea6b0aa6f3d8745/63e5889e7fe4eafa7384cea4_Vectors-Wrapper.svg",
                          "id": "63e5889e7fe4eafa7384cea4",
                          "lastUpdated": "2023-03-01T23:42:57Z",
                          "originalFileName": "Candy-Wrapper.svg",
                          "siteId": "63938b302ea6b0aa6f3d8745",
                          "size": 2212772,
                          "variants": [
                            {
                              "displayName": "660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                              "format": "png",
                              "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                              "originalFileName": "Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                              "quality": 100,
                              "width": 500,
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/assets",
              "request": {
                "name": "ListAssetsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-folders": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:read",
                  ],
                },
              ],
              "display-name": "List Asset Folders",
              "docs": "List Asset Folders within a given site <br><br> Required scope | `assets:read`",
              "errors": [
                "root.ListFoldersAssetsRequestBadRequestError",
                "root.ListFoldersAssetsRequestUnauthorizedError",
                "root.ListFoldersAssetsRequestNotFoundError",
                "root.ListFoldersAssetsRequestTooManyRequestsError",
                "root.ListFoldersAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "assetFolders": [
                        {
                          "assets": [
                            "63e5889e7fe4eafa7384cea4",
                            "659595234426a9fcbad57043",
                          ],
                          "createdOn": "2018-10-14T21:55:49Z",
                          "displayName": "emoji icons",
                          "id": "6390c49774a71f0e3c1a08ee",
                          "lastUpdated": "2022-12-07T16:51:37Z",
                          "siteId": "6390c49674a71f84b51a08d8",
                        },
                      ],
                      "pagination": {
                        "limit": 1,
                        "offset": 0,
                        "total": 1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/asset_folders",
              "request": {
                "name": "ListFoldersAssetsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListFoldersAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": [
                {
                  "OAuth2": [
                    "assets:write",
                  ],
                },
              ],
              "display-name": "Update Asset",
              "docs": "Update an Asset </br></br> Required scope | `assets:write`",
              "errors": [
                "root.UpdateAssetsRequestBadRequestError",
                "root.UpdateAssetsRequestUnauthorizedError",
                "root.UpdateAssetsRequestNotFoundError",
                "root.UpdateAssetsRequestTooManyRequestsError",
                "root.UpdateAssetsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "displayName": "bulldoze.png",
                  },
                  "response": {
                    "body": {
                      "altText": "A red chair",
                      "contentType": "image/png",
                      "createdOn": "2016-09-02T23:26:22Z",
                      "displayName": "example-image-123.png",
                      "hostedUrl": "example.com/hostedimage.png",
                      "id": "55131cd036c09f7d07883dfc",
                      "lastUpdated": "2016-09-06T21:12:22Z",
                      "originalFileName": "image.png",
                      "siteId": "62749158efef318abc8d5a0f",
                      "size": 1500,
                      "variants": [
                        {
                          "displayName": "A brown dog",
                          "error": "error",
                          "format": "format",
                          "height": 900,
                          "hostedUrl": "example.com/hostedimage.png",
                          "originalFileName": "image.png",
                          "quality": 1,
                          "width": 1500,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/assets/{asset_id}",
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "file name including file extension",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateAssetsRequest",
                "path-parameters": {
                  "asset_id": {
                    "docs": "Unique identifier for an Asset on a site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateAssetsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateAssetsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "assetUrl": {
                "docs": "S3 link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "contentType": "optional<string>",
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "hostedUrl": {
                "docs": "Represents the link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": "optional<string>",
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name when uploaded. If not specified at time of upload, it may be extracted from the raw file name",
                "type": "optional<string>",
              },
              "parentFolder": {
                "docs": "Parent folder for the asset",
                "type": "optional<string>",
              },
              "uploadDetails": {
                "docs": "Metadata for uploading the asset binary",
                "type": "optional<CreateAssetsResponseUploadDetails>",
              },
              "uploadUrl": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateAssetsResponseUploadDetails": {
            "docs": "Metadata for uploading the asset binary",
            "inline": true,
            "properties": {
              "Cache-Control": "optional<string>",
              "Policy": "optional<string>",
              "X-Amz-Algorithm": "optional<string>",
              "X-Amz-Credential": "optional<string>",
              "X-Amz-Date": "optional<string>",
              "X-Amz-Signature": "optional<string>",
              "acl": "optional<string>",
              "bucket": "optional<string>",
              "content-type": "optional<string>",
              "key": "optional<string>",
              "success_action_status": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateFolderAssetsResponse": {
            "docs": "Asset Folder details",
            "inline": undefined,
            "properties": {
              "assets": {
                "docs": "Array of Asset instances in the folder",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "Date that the Asset Folder was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "User visible name for the Asset Folder",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Asset Folder",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Asset Folder was last updated on",
                "type": "optional<datetime>",
              },
              "parentFolder": {
                "docs": "Pointer to parent Asset Folder (or null if root)",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the site the Asset Folder belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetAssetsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "altText": {
                "docs": "The visual description of the asset",
                "type": "optional<string>",
              },
              "contentType": {
                "docs": "File format type",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Display name of the asset",
                "type": "optional<string>",
              },
              "hostedUrl": {
                "docs": "Link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Unique identifier for this asset",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name at the time of upload",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "Unique identifier for the site that hosts this asset",
                "type": "optional<string>",
              },
              "size": {
                "docs": "size in bytes",
                "type": "optional<integer>",
              },
              "variants": "optional<list<GetAssetsResponseVariantsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetAssetsResponseVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "Display name of the variant",
                "type": "optional<string>",
              },
              "error": {
                "docs": "Any associated validation errors",
                "type": "optional<string>",
              },
              "format": {
                "docs": "format of the variant",
                "type": "optional<string>",
              },
              "height": {
                "docs": "Height in pixels",
                "type": "optional<integer>",
              },
              "hostedUrl": {
                "docs": "URL of where the asset variant is hosted",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "originalFileName": {
                "docs": "Original file name of the variant",
                "type": "optional<string>",
              },
              "quality": {
                "docs": "Value between 0 and 100 representing the image quality",
                "type": "optional<integer>",
              },
              "width": {
                "docs": "Width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFolderAssetsResponse": {
            "docs": "Asset Folder details",
            "inline": undefined,
            "properties": {
              "assets": {
                "docs": "Array of Asset instances in the folder",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "Date that the Asset Folder was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "User visible name for the Asset Folder",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Asset Folder",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Asset Folder was last updated on",
                "type": "optional<datetime>",
              },
              "parentFolder": {
                "docs": "Pointer to parent Asset Folder (or null if root)",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the site the Asset Folder belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAssetsResponse": {
            "docs": "A list of assets",
            "inline": undefined,
            "properties": {
              "assets": "optional<list<ListAssetsResponseAssetsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAssetsResponseAssetsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "altText": {
                "docs": "The visual description of the asset",
                "type": "optional<string>",
              },
              "contentType": {
                "docs": "File format type",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Display name of the asset",
                "type": "optional<string>",
              },
              "hostedUrl": {
                "docs": "Link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Unique identifier for this asset",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name at the time of upload",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "Unique identifier for the site that hosts this asset",
                "type": "optional<string>",
              },
              "size": {
                "docs": "size in bytes",
                "type": "optional<integer>",
              },
              "variants": "optional<list<ListAssetsResponseAssetsItemVariantsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListAssetsResponseAssetsItemVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "Display name of the variant",
                "type": "optional<string>",
              },
              "error": {
                "docs": "Any associated validation errors",
                "type": "optional<string>",
              },
              "format": {
                "docs": "format of the variant",
                "type": "optional<string>",
              },
              "height": {
                "docs": "Height in pixels",
                "type": "optional<integer>",
              },
              "hostedUrl": {
                "docs": "URL of where the asset variant is hosted",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "originalFileName": {
                "docs": "Original file name of the variant",
                "type": "optional<string>",
              },
              "quality": {
                "docs": "Value between 0 and 100 representing the image quality",
                "type": "optional<integer>",
              },
              "width": {
                "docs": "Width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFoldersAssetsResponse": {
            "docs": "The Asset Folders object",
            "inline": undefined,
            "properties": {
              "assetFolders": {
                "docs": "A list of Asset folders",
                "type": "optional<list<ListFoldersAssetsResponseAssetFoldersItem>>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListFoldersAssetsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFoldersAssetsResponseAssetFoldersItem": {
            "docs": "Asset Folder details",
            "inline": true,
            "properties": {
              "assets": {
                "docs": "Array of Asset instances in the folder",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "Date that the Asset Folder was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "User visible name for the Asset Folder",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Asset Folder",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Asset Folder was last updated on",
                "type": "optional<datetime>",
              },
              "parentFolder": {
                "docs": "Pointer to parent Asset Folder (or null if root)",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the site the Asset Folder belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFoldersAssetsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateAssetsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "altText": {
                "docs": "The visual description of the asset",
                "type": "optional<string>",
              },
              "contentType": {
                "docs": "File format type",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Display name of the asset",
                "type": "optional<string>",
              },
              "hostedUrl": {
                "docs": "Link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Unique identifier for this asset",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name at the time of upload",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "Unique identifier for the site that hosts this asset",
                "type": "optional<string>",
              },
              "size": {
                "docs": "size in bytes",
                "type": "optional<integer>",
              },
              "variants": "optional<list<UpdateAssetsResponseVariantsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateAssetsResponseVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "Display name of the variant",
                "type": "optional<string>",
              },
              "error": {
                "docs": "Any associated validation errors",
                "type": "optional<string>",
              },
              "format": {
                "docs": "format of the variant",
                "type": "optional<string>",
              },
              "height": {
                "docs": "Height in pixels",
                "type": "optional<integer>",
              },
              "hostedUrl": {
                "docs": "URL of where the asset variant is hosted",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "originalFileName": {
                "docs": "Original file name of the variant",
                "type": "optional<string>",
              },
              "quality": {
                "docs": "Value between 0 and 100 representing the image quality",
                "type": "optional<integer>",
              },
              "width": {
                "docs": "Width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListAssetsResponseAssetsItemVariantsItem:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../openapi.yml
    inline: true
  ListAssetsResponseAssetsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<ListAssetsResponseAssetsItemVariantsItem>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../openapi.yml
    inline: true
  ListAssetsResponse:
    docs: A list of assets
    properties:
      assets: optional<list<ListAssetsResponseAssetsItem>>
    source:
      openapi: ../openapi.yml
  CreateAssetsResponseUploadDetails:
    docs: Metadata for uploading the asset binary
    properties:
      acl: optional<string>
      bucket: optional<string>
      X-Amz-Algorithm: optional<string>
      X-Amz-Credential: optional<string>
      X-Amz-Date: optional<string>
      key: optional<string>
      Policy: optional<string>
      X-Amz-Signature: optional<string>
      success_action_status: optional<string>
      content-type: optional<string>
      Cache-Control: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateAssetsResponse:
    properties:
      uploadDetails:
        type: optional<CreateAssetsResponseUploadDetails>
        docs: Metadata for uploading the asset binary
      contentType: optional<string>
      id: optional<string>
      parentFolder:
        type: optional<string>
        docs: Parent folder for the asset
      uploadUrl:
        type: optional<string>
        validation:
          format: uri
      assetUrl:
        type: optional<string>
        docs: S3 link to the asset
        validation:
          format: uri
      hostedUrl:
        type: optional<string>
        docs: Represents the link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: >-
          Original file name when uploaded. If not specified at time of upload,
          it may be extracted from the raw file name
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
    source:
      openapi: ../openapi.yml
  GetAssetsResponseVariantsItem:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../openapi.yml
    inline: true
  GetAssetsResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<GetAssetsResponseVariantsItem>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../openapi.yml
  UpdateAssetsResponseVariantsItem:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateAssetsResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<UpdateAssetsResponseVariantsItem>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../openapi.yml
  ListFoldersAssetsResponseAssetFoldersItem:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique id of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../openapi.yml
    inline: true
  ListFoldersAssetsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListFoldersAssetsResponse:
    docs: The Asset Folders object
    properties:
      assetFolders:
        type: optional<list<ListFoldersAssetsResponseAssetFoldersItem>>
        docs: A list of Asset folders
      pagination:
        type: optional<ListFoldersAssetsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  CreateFolderAssetsResponse:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique id of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../openapi.yml
  GetFolderAssetsResponse:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique id of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/assets
      method: GET
      auth:
        - OAuth2:
            - assets:read
      docs: List assets for a given site </br></br> Required scope | `assets:read`
      source:
        openapi: ../openapi.yml
      display-name: List Assets
      request:
        name: ListAssetsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: ListAssetsResponse
        status-code: 200
      errors:
        - root.ListAssetsRequestBadRequestError
        - root.ListAssetsRequestUnauthorizedError
        - root.ListAssetsRequestNotFoundError
        - root.ListAssetsRequestTooManyRequestsError
        - root.ListAssetsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              assets:
                - id: 63e5889e7fe4eafa7384cea4
                  contentType: image/png
                  size: 2212772
                  siteId: 63938b302ea6b0aa6f3d8745
                  hostedUrl: >-
                    https://s3.amazonaws.com/webflow-prod-assets/63938b302ea6b0aa6f3d8745/63e5889e7fe4eafa7384cea4_Vectors-Wrapper.svg
                  originalFileName: Candy-Wrapper.svg
                  displayName: 63e5889e7fe4eafa7384cea4_Candy-Wrapper.png
                  lastUpdated: '2023-03-01T23:42:57Z'
                  createdOn: '2023-02-09T23:58:22Z'
                  variants:
                    - hostedUrl: >-
                        https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png
                      originalFileName: >-
                        Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png
                      displayName: >-
                        660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png
                      format: png
                      width: 500
                      quality: 100
                  altText: A red chair
    create:
      path: /sites/{site_id}/assets
      method: POST
      auth:
        - OAuth2:
            - assets:write
      docs: >
        Create a new asset entry.  </br></br> This endpoint generates a response
        with the following information: `uploadUrl` and `uploadDetails`.  You
        can use these two properties to [upload the file to Amazon s3 by making
        a
        POST](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOST.html)
        request to the `uploadUrl` with the `uploadDetails` object as your
        header information in the request. </br></br>  Required scope |
        `assets:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Asset Metadata
      request:
        name: CreateAssetsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            fileName:
              type: string
              docs: file name including file extension
            fileHash:
              type: string
              docs: MD5 hash of the file
            parentFolder:
              type: optional<string>
              docs: id of the Asset folder (optional)
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateAssetsResponse
        status-code: 200
      errors:
        - root.CreateAssetsRequestBadRequestError
        - root.CreateAssetsRequestUnauthorizedError
        - root.CreateAssetsRequestNotFoundError
        - root.CreateAssetsRequestTooManyRequestsError
        - root.CreateAssetsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            fileName: file.png
            fileHash: 3c7d87c9575702bc3b1e991f4d3c638e
          response:
            body:
              uploadDetails:
                acl: public-read
                bucket: webflow-bucket-name
                X-Amz-Algorithm: AWS4-HMAC-SHA256
                X-Amz-Credential: <credential-key>/<date>/<region-zone>/s3/aws4_request
                X-Amz-Date: <date-in-iso-like-string>
                key: <siteId>/<fileId>_<filename-with-extension>
                Policy: <a-very-long-alphanumeric-token-with-equal-sign-at-the-end>
                X-Amz-Signature: <one-line-ling-alphanumeric-signature>
                success_action_status: '201'
                content-type: image/png
                Cache-Control: max-age=31536000, must-revalidate
              contentType: image/png
              id: 64358b9544249dc43d37d2b7
              parentFolder: 6436b1ce5281cace05b65aea
              uploadUrl: >-
                https://s3.amazonaws.com/webflow-dev-assets/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png
              assetUrl: >-
                https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d907ab9e91e3e9f56385e_paranoidAndroid-2024.png
              hostedUrl: >-
                https://d1otoma47x30pg.cloudfront.net/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png
              originalFileName: file.png
              createdOn: '2023-04-11T16:32:21Z'
              lastUpdated: '2023-04-12T20:31:03Z'
    get:
      path: /assets/{asset_id}
      method: GET
      auth:
        - OAuth2:
            - assets:read
      docs: Get an Asset </br></br> Required scope | `assets:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Asset
      request:
        name: GetAssetsRequest
        path-parameters:
          asset_id:
            type: string
            docs: Unique identifier for an Asset on a site
      response:
        docs: Request was successful
        type: GetAssetsResponse
        status-code: 200
      errors:
        - root.GetAssetsRequestBadRequestError
        - root.GetAssetsRequestUnauthorizedError
        - root.GetAssetsRequestNotFoundError
        - root.GetAssetsRequestTooManyRequestsError
        - root.GetAssetsRequestInternalServerError
      examples:
        - path-parameters:
            asset_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              id: 55131cd036c09f7d07883dfc
              contentType: image/png
              size: 1500
              siteId: 62749158efef318abc8d5a0f
              hostedUrl: example.com/hostedimage.png
              originalFileName: image.png
              displayName: example-image-123.png
              lastUpdated: '2016-09-06T21:12:22Z'
              createdOn: '2016-09-02T23:26:22Z'
              variants:
                - hostedUrl: example.com/hostedimage.png
                  originalFileName: image.png
                  displayName: A brown dog
                  format: format
                  width: 1500
                  height: 900
                  quality: 1
                  error: error
              altText: A red chair
    delete:
      path: /assets/{asset_id}
      method: DELETE
      auth:
        - OAuth2:
            - assets:write
      docs: Delete an Asset
      source:
        openapi: ../openapi.yml
      display-name: Delete Asset
      request:
        name: DeleteAssetsRequest
        path-parameters:
          asset_id:
            type: string
            docs: Unique identifier for an Asset on a site
      errors:
        - root.DeleteAssetsRequestBadRequestError
        - root.DeleteAssetsRequestUnauthorizedError
        - root.DeleteAssetsRequestNotFoundError
        - root.DeleteAssetsRequestTooManyRequestsError
        - root.DeleteAssetsRequestInternalServerError
      examples:
        - path-parameters:
            asset_id: 580e63fc8c9a982ac9b8b745
    update:
      path: /assets/{asset_id}
      method: PATCH
      auth:
        - OAuth2:
            - assets:write
      docs: Update an Asset </br></br> Required scope | `assets:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Asset
      request:
        name: UpdateAssetsRequest
        path-parameters:
          asset_id:
            type: string
            docs: Unique identifier for an Asset on a site
        body:
          properties:
            displayName:
              type: string
              docs: file name including file extension
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateAssetsResponse
        status-code: 200
      errors:
        - root.UpdateAssetsRequestBadRequestError
        - root.UpdateAssetsRequestUnauthorizedError
        - root.UpdateAssetsRequestNotFoundError
        - root.UpdateAssetsRequestTooManyRequestsError
        - root.UpdateAssetsRequestInternalServerError
      examples:
        - path-parameters:
            asset_id: 580e63fc8c9a982ac9b8b745
          request:
            displayName: bulldoze.png
          response:
            body:
              id: 55131cd036c09f7d07883dfc
              contentType: image/png
              size: 1500
              siteId: 62749158efef318abc8d5a0f
              hostedUrl: example.com/hostedimage.png
              originalFileName: image.png
              displayName: example-image-123.png
              lastUpdated: '2016-09-06T21:12:22Z'
              createdOn: '2016-09-02T23:26:22Z'
              variants:
                - hostedUrl: example.com/hostedimage.png
                  originalFileName: image.png
                  displayName: A brown dog
                  format: format
                  width: 1500
                  height: 900
                  quality: 1
                  error: error
              altText: A red chair
    list-folders:
      path: /sites/{site_id}/asset_folders
      method: GET
      auth:
        - OAuth2:
            - assets:read
      docs: >-
        List Asset Folders within a given site <br><br> Required scope |
        `assets:read`
      source:
        openapi: ../openapi.yml
      display-name: List Asset Folders
      request:
        name: ListFoldersAssetsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: ListFoldersAssetsResponse
        status-code: 200
      errors:
        - root.ListFoldersAssetsRequestBadRequestError
        - root.ListFoldersAssetsRequestUnauthorizedError
        - root.ListFoldersAssetsRequestNotFoundError
        - root.ListFoldersAssetsRequestTooManyRequestsError
        - root.ListFoldersAssetsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              assetFolders:
                - id: 6390c49774a71f0e3c1a08ee
                  displayName: emoji icons
                  assets:
                    - 63e5889e7fe4eafa7384cea4
                    - 659595234426a9fcbad57043
                  siteId: 6390c49674a71f84b51a08d8
                  createdOn: '2018-10-14T21:55:49Z'
                  lastUpdated: '2022-12-07T16:51:37Z'
              pagination:
                limit: 1
                offset: 0
                total: 1
    create-folder:
      path: /sites/{site_id}/asset_folders
      method: POST
      auth:
        - OAuth2:
            - assets:write
      docs: >-
        Create an Asset Folder within a given site <br><br> Required scope |
        `assets:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Asset Folder
      request:
        name: CreateFolderAssetsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            displayName:
              type: string
              docs: A human readable name for the Asset Folder
            parentFolder:
              type: optional<string>
              docs: >-
                An (optional) pointer to a parent Asset Folder (or null for
                root)
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateFolderAssetsResponse
        status-code: 200
      errors:
        - root.CreateFolderAssetsRequestBadRequestError
        - root.CreateFolderAssetsRequestUnauthorizedError
        - root.CreateFolderAssetsRequestNotFoundError
        - root.CreateFolderAssetsRequestTooManyRequestsError
        - root.CreateFolderAssetsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            displayName: my asset folder
          response:
            body:
              id: 6390c49774a71f0e3c1a08ee
              displayName: emoji icons
              parentFolder: 6390c49774a71f99f21a08eb
              assets:
                - 63e5889e7fe4eafa7384cea4
                - 659595234426a9fcbad57043
              siteId: 6390c49674a71f84b51a08d8
              createdOn: '2018-10-14T21:55:49Z'
              lastUpdated: '2022-12-07T16:51:37Z'
    get-folder:
      path: /asset_folders/{asset_folder_id}
      method: GET
      auth:
        - OAuth2:
            - assets:read
      docs: >-
        Get details about a specific Asset Folder <br><br> Required scope |
        `assets:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Asset Folder
      request:
        name: GetFolderAssetsRequest
        path-parameters:
          asset_folder_id:
            type: string
            docs: Unique identifier for an Asset Folder
      response:
        docs: Request was successful
        type: GetFolderAssetsResponse
        status-code: 200
      errors:
        - root.GetFolderAssetsRequestBadRequestError
        - root.GetFolderAssetsRequestUnauthorizedError
        - root.GetFolderAssetsRequestNotFoundError
        - root.GetFolderAssetsRequestTooManyRequestsError
        - root.GetFolderAssetsRequestInternalServerError
      examples:
        - path-parameters:
            asset_folder_id: 6390c49774a71f0e3c1a08ee
          response:
            body:
              id: 6390c49774a71f0e3c1a08ee
              displayName: emoji icons
              parentFolder: 6390c49774a71f99f21a08eb
              assets:
                - 63e5889e7fe4eafa7384cea4
                - 659595234426a9fcbad57043
              siteId: 6390c49674a71f84b51a08d8
              createdOn: '2018-10-14T21:55:49Z'
              lastUpdated: '2022-12-07T16:51:37Z'
  source:
    openapi: ../openapi.yml
  display-name: Assets
",
    },
    "collections.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Collections",
          "endpoints": {
            "create": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Create Collection",
              "docs": "Create a Collection for a site. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.CreateCollectionsRequestBadRequestError",
                "root.CreateCollectionsRequestUnauthorizedError",
                "root.CreateCollectionsRequestNotFoundError",
                "root.CreateCollectionsRequestTooManyRequestsError",
                "root.CreateCollectionsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "displayName": "Blog Posts",
                    "singularName": "Blog Post",
                    "slug": "posts",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2016-10-24T19:41:48Z",
                      "displayName": "Blog Posts",
                      "fields": [
                        {
                          "displayName": "Name",
                          "id": "23cc2d952d4e4631ffd4345d2743db4e",
                          "isEditable": true,
                          "isRequired": true,
                          "slug": "name",
                          "type": "PlainText",
                        },
                      ],
                      "id": "580e63fc8c9a982ac9b8b745",
                      "lastUpdated": "2016-10-24T19:42:38Z",
                      "singularName": "Blog Post",
                      "slug": "post",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/collections",
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "Name of the collection. Each collection name must be distinct.",
                      "type": "string",
                    },
                    "singularName": {
                      "docs": "Singular name of each item.",
                      "type": "string",
                    },
                    "slug": {
                      "docs": "Part of a URL that identifier",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateCollectionsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CreateCollectionsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Delete Collection Field",
              "docs": "Delete a custom field in a collection. This endpoint does not currently support bulk deletion. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.DeleteCollectionsRequestBadRequestError",
                "root.DeleteCollectionsRequestUnauthorizedError",
                "root.DeleteCollectionsRequestNotFoundError",
                "root.DeleteCollectionsRequestTooManyRequestsError",
                "root.DeleteCollectionsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "field_id": "580e63fc8c9a982ac9b8b745",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}/fields/{field_id}",
              "request": {
                "name": "DeleteCollectionsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "field_id": {
                    "docs": "Unique identifier for a Field in a collection",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete-collection": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Delete Collection",
              "docs": "Delete a collection using its ID. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.DeleteCollectionRequestBadRequestError",
                "root.DeleteCollectionRequestUnauthorizedError",
                "root.DeleteCollectionRequestNotFoundError",
                "root.DeleteCollectionRequestTooManyRequestsError",
                "root.DeleteCollectionRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}",
              "request": {
                "name": "DeleteCollectionRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:read",
                  ],
                },
              ],
              "display-name": "Get Collection Details",
              "docs": "Get the full details of a collection from its ID. </br></br> Required scope | `cms:read`",
              "errors": [
                "root.GetCollectionsRequestBadRequestError",
                "root.GetCollectionsRequestUnauthorizedError",
                "root.GetCollectionsRequestNotFoundError",
                "root.GetCollectionsRequestTooManyRequestsError",
                "root.GetCollectionsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2016-10-24T19:41:48Z",
                      "displayName": "Blog Posts",
                      "fields": [
                        {
                          "displayName": "Name",
                          "id": "23cc2d952d4e4631ffd4345d2743db4e",
                          "isEditable": true,
                          "isRequired": true,
                          "slug": "name",
                          "type": "PlainText",
                        },
                      ],
                      "id": "580e63fc8c9a982ac9b8b745",
                      "lastUpdated": "2016-10-24T19:42:38Z",
                      "singularName": "Blog Post",
                      "slug": "post",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}",
              "request": {
                "name": "GetCollectionsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetCollectionsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:read",
                  ],
                },
              ],
              "display-name": "List Collections",
              "docs": "List of all Collections within a Site. </br></br> Required scope | `cms:read`",
              "errors": [
                "root.ListCollectionsRequestBadRequestError",
                "root.ListCollectionsRequestUnauthorizedError",
                "root.ListCollectionsRequestNotFoundError",
                "root.ListCollectionsRequestTooManyRequestsError",
                "root.ListCollectionsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "collections": [
                        {
                          "createdOn": "2019-06-12T13:35:14Z",
                          "displayName": "Products",
                          "id": "63692ab61fb2852f582ba8f5",
                          "lastUpdated": "2022-11-17T15:08:50Z",
                          "singularName": "Product",
                          "slug": "product",
                        },
                        {
                          "createdOn": "2019-06-12T13:35:14Z",
                          "displayName": "Categories",
                          "id": "63692ab61fb2856e6a2ba8f6",
                          "lastUpdated": "2022-11-17T15:08:50Z",
                          "singularName": "Category",
                          "slug": "category",
                        },
                        {
                          "createdOn": "2019-06-12T13:35:14Z",
                          "displayName": "SKUs",
                          "id": "63692ab61fb285a8562ba8f4",
                          "lastUpdated": "2022-11-17T15:08:50Z",
                          "singularName": "SKU",
                          "slug": "sku",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/collections",
              "request": {
                "name": "ListCollectionsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListCollectionsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateCollectionsResponse": {
            "docs": "A collection object",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "The date the collection was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Name given to the Collection",
                "type": "optional<string>",
              },
              "fields": {
                "access": "read-only",
                "docs": "The list of fields in the Collection",
                "type": "optional<list<CreateCollectionsResponseFieldsItem>>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Collection",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the collection was last updated",
                "type": "optional<datetime>",
              },
              "singularName": {
                "docs": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Slug of Collection in Site URL structure",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateCollectionsResponseFieldsItem": {
            "docs": "The details of a field in a collection",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Field",
                "type": "optional<string>",
              },
              "isEditable": {
                "access": "read-only",
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "CreateCollectionsResponseFieldsItemType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateCollectionsResponseFieldsItemType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCollectionsResponse": {
            "docs": "A collection object",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "The date the collection was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Name given to the Collection",
                "type": "optional<string>",
              },
              "fields": {
                "access": "read-only",
                "docs": "The list of fields in the Collection",
                "type": "optional<list<GetCollectionsResponseFieldsItem>>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Collection",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the collection was last updated",
                "type": "optional<datetime>",
              },
              "singularName": {
                "docs": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Slug of Collection in Site URL structure",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCollectionsResponseFieldsItem": {
            "docs": "The details of a field in a collection",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Field",
                "type": "optional<string>",
              },
              "isEditable": {
                "access": "read-only",
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "GetCollectionsResponseFieldsItemType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCollectionsResponseFieldsItemType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCollectionsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "collections": {
                "docs": "An array of Collections",
                "type": "optional<list<ListCollectionsResponseCollectionsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCollectionsResponseCollectionsItem": {
            "docs": "A collection object",
            "inline": true,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "The date the collection was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Name given to the Collection",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Collection",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the collection was last updated",
                "type": "optional<datetime>",
              },
              "singularName": {
                "docs": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Slug of Collection in Site URL structure",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListCollectionsResponseCollectionsItem:
    docs: A collection object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Collection
        access: read-only
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  ListCollectionsResponse:
    properties:
      collections:
        type: optional<list<ListCollectionsResponseCollectionsItem>>
        docs: An array of Collections
    source:
      openapi: ../openapi.yml
  CreateCollectionsResponseFieldsItemType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  CreateCollectionsResponseFieldsItem:
    docs: The details of a field in a collection
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Field
        access: read-only
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
        access: read-only
      type:
        type: CreateCollectionsResponseFieldsItemType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
    inline: true
  CreateCollectionsResponse:
    docs: A collection object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Collection
        access: read-only
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
        access: read-only
      fields:
        type: optional<list<CreateCollectionsResponseFieldsItem>>
        docs: The list of fields in the Collection
        access: read-only
    source:
      openapi: ../openapi.yml
  GetCollectionsResponseFieldsItemType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  GetCollectionsResponseFieldsItem:
    docs: The details of a field in a collection
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Field
        access: read-only
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
        access: read-only
      type:
        type: GetCollectionsResponseFieldsItemType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
    inline: true
  GetCollectionsResponse:
    docs: A collection object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Collection
        access: read-only
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
        access: read-only
      fields:
        type: optional<list<GetCollectionsResponseFieldsItem>>
        docs: The list of fields in the Collection
        access: read-only
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/collections
      method: GET
      auth:
        - OAuth2:
            - cms:read
      docs: >-
        List of all Collections within a Site. </br></br> Required scope |
        `cms:read`
      source:
        openapi: ../openapi.yml
      display-name: List Collections
      request:
        name: ListCollectionsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: ListCollectionsResponse
        status-code: 200
      errors:
        - root.ListCollectionsRequestBadRequestError
        - root.ListCollectionsRequestUnauthorizedError
        - root.ListCollectionsRequestNotFoundError
        - root.ListCollectionsRequestTooManyRequestsError
        - root.ListCollectionsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              collections:
                - id: 63692ab61fb2852f582ba8f5
                  displayName: Products
                  singularName: Product
                  slug: product
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
                - id: 63692ab61fb2856e6a2ba8f6
                  displayName: Categories
                  singularName: Category
                  slug: category
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
                - id: 63692ab61fb285a8562ba8f4
                  displayName: SKUs
                  singularName: SKU
                  slug: sku
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
    create:
      path: /sites/{site_id}/collections
      method: POST
      auth:
        - OAuth2:
            - cms:write
      docs: Create a Collection for a site. </br></br> Required scope | `cms:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Collection
      request:
        name: CreateCollectionsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            displayName:
              type: string
              docs: Name of the collection. Each collection name must be distinct.
            singularName:
              type: string
              docs: Singular name of each item.
            slug:
              type: optional<string>
              docs: Part of a URL that identifier
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateCollectionsResponse
        status-code: 200
      errors:
        - root.CreateCollectionsRequestBadRequestError
        - root.CreateCollectionsRequestUnauthorizedError
        - root.CreateCollectionsRequestNotFoundError
        - root.CreateCollectionsRequestTooManyRequestsError
        - root.CreateCollectionsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            displayName: Blog Posts
            singularName: Blog Post
            slug: posts
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              displayName: Blog Posts
              singularName: Blog Post
              slug: post
              createdOn: '2016-10-24T19:41:48Z'
              lastUpdated: '2016-10-24T19:42:38Z'
              fields:
                - id: 23cc2d952d4e4631ffd4345d2743db4e
                  isRequired: true
                  isEditable: true
                  type: PlainText
                  slug: name
                  displayName: Name
    get:
      path: /collections/{collection_id}
      method: GET
      auth:
        - OAuth2:
            - cms:read
      docs: >-
        Get the full details of a collection from its ID. </br></br> Required
        scope | `cms:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Collection Details
      request:
        name: GetCollectionsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
      response:
        docs: Request was successful
        type: GetCollectionsResponse
        status-code: 200
      errors:
        - root.GetCollectionsRequestBadRequestError
        - root.GetCollectionsRequestUnauthorizedError
        - root.GetCollectionsRequestNotFoundError
        - root.GetCollectionsRequestTooManyRequestsError
        - root.GetCollectionsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              displayName: Blog Posts
              singularName: Blog Post
              slug: post
              createdOn: '2016-10-24T19:41:48Z'
              lastUpdated: '2016-10-24T19:42:38Z'
              fields:
                - id: 23cc2d952d4e4631ffd4345d2743db4e
                  isRequired: true
                  isEditable: true
                  type: PlainText
                  slug: name
                  displayName: Name
    delete-collection:
      path: /collections/{collection_id}
      method: DELETE
      auth:
        - OAuth2:
            - cms:write
      docs: >-
        Delete a collection using its ID. </br></br> Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete Collection
      request:
        name: DeleteCollectionRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
      errors:
        - root.DeleteCollectionRequestBadRequestError
        - root.DeleteCollectionRequestUnauthorizedError
        - root.DeleteCollectionRequestNotFoundError
        - root.DeleteCollectionRequestTooManyRequestsError
        - root.DeleteCollectionRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
    delete:
      path: /collections/{collection_id}/fields/{field_id}
      method: DELETE
      auth:
        - OAuth2:
            - cms:write
      docs: >-
        Delete a custom field in a collection. This endpoint does not currently
        support bulk deletion. </br></br> Required scope | `cms:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete Collection Field
      request:
        name: DeleteCollectionsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          field_id:
            type: string
            docs: Unique identifier for a Field in a collection
      errors:
        - root.DeleteCollectionsRequestBadRequestError
        - root.DeleteCollectionsRequestUnauthorizedError
        - root.DeleteCollectionsRequestNotFoundError
        - root.DeleteCollectionsRequestTooManyRequestsError
        - root.DeleteCollectionsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            field_id: 580e63fc8c9a982ac9b8b745
  source:
    openapi: ../openapi.yml
  display-name: Collections
",
    },
    "collections/fields.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Create Collection Field",
              "docs": "Create a custom field in a collection.  </br></br> Slugs must be all lowercase letters without spaces. If you pass a string with uppercase letters and/or spaces to the "Slug" property, Webflow will convert the slug to lowercase and replace spaces with "-." </br></br> Only some field types can be created through the API.  This endpoint does not currently support bulk creation.  </br></br>  Required scope | `cms:write`
",
              "errors": [
                "root.CreateFieldsRequestBadRequestError",
                "root.CreateFieldsRequestUnauthorizedError",
                "root.CreateFieldsRequestNotFoundError",
                "root.CreateFieldsRequestTooManyRequestsError",
                "root.CreateFieldsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "displayName": "Post Body",
                    "helpText": "Add the body of your post here",
                    "isRequired": false,
                    "type": "RichText",
                  },
                  "response": {
                    "body": {
                      "displayName": "Post Body",
                      "helpText": "Add the body of your post here",
                      "id": "75821f618da60c18383330bcc0ca488b",
                      "isEditable": true,
                      "isRequired": false,
                      "slug": "post-body",
                      "type": "RichText",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/fields",
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "The name of a field",
                      "type": "string",
                    },
                    "helpText": {
                      "docs": "Additional text to help anyone filling out this field",
                      "type": "optional<string>",
                    },
                    "isRequired": {
                      "docs": "define whether a field is required in a collection",
                      "type": "optional<boolean>",
                    },
                    "type": {
                      "docs": "Choose these appropriate field type for your collection data",
                      "type": "CreateFieldsRequestType",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateFieldsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CreateFieldsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Update Collection Field",
              "docs": "Update a custom field in a collection.  </br></br> Required scope | `cms:write`",
              "errors": [
                "root.UpdateFieldsRequestBadRequestError",
                "root.UpdateFieldsRequestUnauthorizedError",
                "root.UpdateFieldsRequestNotFoundError",
                "root.UpdateFieldsRequestTooManyRequestsError",
                "root.UpdateFieldsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "field_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "displayName": "Post Body",
                    "helpText": "Add the body of your post here",
                    "isRequired": false,
                  },
                  "response": {
                    "body": {
                      "displayName": "Post Body",
                      "helpText": "Add the body of your post here",
                      "id": "75821f618da60c18383330bcc0ca488b",
                      "isEditable": true,
                      "isRequired": false,
                      "slug": "post-body",
                      "type": "RichText",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/fields/{field_id}",
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "The name of a field",
                      "type": "optional<string>",
                    },
                    "helpText": {
                      "docs": "Additional text to help anyone filling out this field",
                      "type": "optional<string>",
                    },
                    "isRequired": {
                      "docs": "Define whether a field is required in a collection",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateFieldsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "field_id": {
                    "docs": "Unique identifier for a Field in a collection",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateFieldsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateFieldsRequestType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "File",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateFieldsResponse": {
            "docs": "The details of a field in a collection",
            "inline": undefined,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Field",
                "type": "optional<string>",
              },
              "isEditable": {
                "access": "read-only",
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "CreateFieldsResponseType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateFieldsResponseType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFieldsResponse": {
            "docs": "The details of a field in a collection",
            "inline": undefined,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a Field",
                "type": "optional<string>",
              },
              "isEditable": {
                "access": "read-only",
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "UpdateFieldsResponseType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFieldsResponseType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  CreateFieldsRequestType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - File
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  CreateFieldsResponseType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  CreateFieldsResponse:
    docs: The details of a field in a collection
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Field
        access: read-only
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
        access: read-only
      type:
        type: CreateFieldsResponseType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
  UpdateFieldsResponseType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFieldsResponse:
    docs: The details of a field in a collection
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a Field
        access: read-only
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
        access: read-only
      type:
        type: UpdateFieldsResponseType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /collections/{collection_id}/fields
      method: POST
      auth:
        - OAuth2:
            - cms:write
      docs: >
        Create a custom field in a collection.  </br></br> Slugs must be all
        lowercase letters without spaces. If you pass a string with uppercase
        letters and/or spaces to the "Slug" property, Webflow will convert the
        slug to lowercase and replace spaces with "-." </br></br> Only some
        field types can be created through the API.  This endpoint does not
        currently support bulk creation.  </br></br>  Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Collection Field
      request:
        name: CreateFieldsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        body:
          properties:
            isRequired:
              type: optional<boolean>
              docs: define whether a field is required in a collection
            type:
              type: CreateFieldsRequestType
              docs: Choose these appropriate field type for your collection data
            displayName:
              type: string
              docs: The name of a field
            helpText:
              type: optional<string>
              docs: Additional text to help anyone filling out this field
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateFieldsResponse
        status-code: 200
      errors:
        - root.CreateFieldsRequestBadRequestError
        - root.CreateFieldsRequestUnauthorizedError
        - root.CreateFieldsRequestNotFoundError
        - root.CreateFieldsRequestTooManyRequestsError
        - root.CreateFieldsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            isRequired: false
            type: RichText
            displayName: Post Body
            helpText: Add the body of your post here
          response:
            body:
              id: 75821f618da60c18383330bcc0ca488b
              isRequired: false
              isEditable: true
              type: RichText
              slug: post-body
              displayName: Post Body
              helpText: Add the body of your post here
    update:
      path: /collections/{collection_id}/fields/{field_id}
      method: PATCH
      auth:
        - OAuth2:
            - cms:write
      docs: >-
        Update a custom field in a collection.  </br></br> Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Collection Field
      request:
        name: UpdateFieldsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          field_id:
            type: string
            docs: Unique identifier for a Field in a collection
        body:
          properties:
            isRequired:
              type: optional<boolean>
              docs: Define whether a field is required in a collection
            displayName:
              type: optional<string>
              docs: The name of a field
            helpText:
              type: optional<string>
              docs: Additional text to help anyone filling out this field
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateFieldsResponse
        status-code: 200
      errors:
        - root.UpdateFieldsRequestBadRequestError
        - root.UpdateFieldsRequestUnauthorizedError
        - root.UpdateFieldsRequestNotFoundError
        - root.UpdateFieldsRequestTooManyRequestsError
        - root.UpdateFieldsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            field_id: 580e63fc8c9a982ac9b8b745
          request:
            isRequired: false
            displayName: Post Body
            helpText: Add the body of your post here
          response:
            body:
              id: 75821f618da60c18383330bcc0ca488b
              isRequired: false
              isEditable: true
              type: RichText
              slug: post-body
              displayName: Post Body
              helpText: Add the body of your post here
  source:
    openapi: ../openapi.yml
",
    },
    "collections/items.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create-item": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:write",
                  ],
                },
              ],
              "display-name": "Create Collection Item",
              "docs": "<style>.rm-Markdown.markdown-body a{color: #146EF5 !important;}</style> Create Item in a Collection.</br></br> To create items across multiple locales, <a href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales"> please use the bulk item endpoint.</a> </br></br> Required scope | <code>CMS:write</code>",
              "errors": [
                "root.CreateItemItemsRequestBadRequestError",
                "root.CreateItemItemsRequestUnauthorizedError",
                "root.CreateItemItemsRequestNotFoundError",
                "root.CreateItemItemsRequestTooManyRequestsError",
                "root.CreateItemItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items",
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<CreateItemItemsRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateItemItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "CreateItemItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-item-for-multiple-locales": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Create Item for Multiple Locales",
              "docs": "Create single Item in a Collection with multiple corresponding locales. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.CreateItemForMultipleLocalesItemsRequestBadRequestError",
                "root.CreateItemForMultipleLocalesItemsRequestUnauthorizedError",
                "root.CreateItemForMultipleLocalesItemsRequestNotFoundError",
                "root.CreateItemForMultipleLocalesItemsRequestTooManyRequestsError",
                "root.CreateItemForMultipleLocalesItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "cmsLocaleIds": [
                        "653ad57de882f528b32e810e",
                        "6514390aea353fc691d69827",
                        "65143930ea353fc691d69cd8",
                      ],
                      "createdOn": "2023-03-17T18:47:35.560Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": false,
                        "name": "My new item",
                        "slug": "my-new-item",
                      },
                      "id": "580e64008c9a982ac9b8b754",
                      "isArchived": true,
                      "isDraft": true,
                      "lastPublished": "2023-03-17T18:47:35.560Z",
                      "lastUpdated": "2023-03-17T18:47:35.560Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/bulk",
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleIds": {
                      "docs": "Array of identifiers for the locales where the item will be created",
                      "type": "optional<list<string>>",
                    },
                    "fieldData": "optional<CreateItemForMultipleLocalesItemsRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateItemForMultipleLocalesItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "CreateItemForMultipleLocalesItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-item-live": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:write",
                  ],
                },
              ],
              "display-name": "Create Live Collection Item",
              "docs": "Create live Item in a Collection. This Item will be published to the live site. </br></br> To create items across multiple locales, <a href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales"> please use this endpoint.</a> </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.CreateItemLiveItemsRequestBadRequestError",
                "root.CreateItemLiveItemsRequestUnauthorizedError",
                "root.CreateItemLiveItemsRequestNotFoundError",
                "root.CreateItemLiveItemsRequestTooManyRequestsError",
                "root.CreateItemLiveItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/live",
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<CreateItemLiveItemsRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateItemLiveItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "CreateItemLiveItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete-item": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:write",
                  ],
                },
              ],
              "display-name": "Delete Collection Item",
              "docs": "Delete an Item from a Collection. This endpoint does not currently support bulk deletion. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.DeleteItemItemsRequestBadRequestError",
                "root.DeleteItemItemsRequestUnauthorizedError",
                "root.DeleteItemItemsRequestNotFoundError",
                "root.DeleteItemItemsRequestTooManyRequestsError",
                "root.DeleteItemItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "query-parameters": {
                    "cmsLocaleId": "cmsLocaleId",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}",
              "request": {
                "name": "DeleteItemItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<nullable<string>>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete-item-live": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:write",
                  ],
                },
              ],
              "display-name": "Delete Collection Item (Live)",
              "docs": "Remove a live item from the site. Removing a published item will unpublish the item from the live site and set it to draft. This endpoint does not currently support bulk deletion.</br></br> Required scope | `CMS:write`",
              "errors": [
                "root.DeleteItemLiveItemsRequestBadRequestError",
                "root.DeleteItemLiveItemsRequestUnauthorizedError",
                "root.DeleteItemLiveItemsRequestNotFoundError",
                "root.DeleteItemLiveItemsRequestTooManyRequestsError",
                "root.DeleteItemLiveItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "query-parameters": {
                    "cmsLocaleId": "cmsLocaleId",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/live",
              "request": {
                "name": "DeleteItemLiveItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<nullable<string>>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-item": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:read",
                  ],
                },
              ],
              "display-name": "Get Collection Item",
              "docs": "Get details of a selected Collection Item. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.GetItemItemsRequestBadRequestError",
                "root.GetItemItemsRequestUnauthorizedError",
                "root.GetItemItemsRequestNotFoundError",
                "root.GetItemItemsRequestTooManyRequestsError",
                "root.GetItemItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "query-parameters": {
                    "cmsLocaleId": "cmsLocaleId",
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}",
              "request": {
                "name": "GetItemItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<nullable<string>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetItemItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-item-live": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:read",
                  ],
                },
              ],
              "display-name": "Get Live Collection Item",
              "docs": "Get details of a selected Collection live Item. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.GetItemLiveItemsRequestBadRequestError",
                "root.GetItemLiveItemsRequestUnauthorizedError",
                "root.GetItemLiveItemsRequestNotFoundError",
                "root.GetItemLiveItemsRequestTooManyRequestsError",
                "root.GetItemLiveItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "query-parameters": {
                    "cmsLocaleId": "cmsLocaleId",
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/live",
              "request": {
                "name": "GetItemLiveItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<nullable<string>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetItemLiveItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-items": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:read",
                  ],
                },
              ],
              "display-name": "List Collection Items",
              "docs": "List of all Items within a Collection. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.ListItemsItemsRequestBadRequestError",
                "root.ListItemsItemsRequestUnauthorizedError",
                "root.ListItemsItemsRequestNotFoundError",
                "root.ListItemsItemsRequestTooManyRequestsError",
                "root.ListItemsItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "query-parameters": {
                    "cmsLocaleId": "cmsLocaleId",
                    "limit": 1.1,
                    "name": "name",
                    "offset": 1.1,
                    "slug": "slug",
                    "sortBy": "lastPublished",
                    "sortOrder": "asc",
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2022-06-25T14:51:27.809Z",
                          "fieldData": {
                            "department": "Data",
                            "name": "Senior Data Analyst",
                            "slug": "senior-data-analyst",
                            "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                          },
                          "id": "62b720ef280c7a7a3be8cabe",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2022-06-30T13:35:20.878Z",
                          "lastUpdated": "2022-06-25T14:51:27.809Z",
                        },
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2023-04-10T11:45:30.567Z",
                          "fieldData": {
                            "department": "Product",
                            "name": "Product Manager",
                            "slug": "product-manager",
                            "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                          },
                          "id": "62c880ef281c7b7b4cf9dabc",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2023-04-15T10:25:18.123Z",
                          "lastUpdated": "2023-04-10T11:45:30.567Z",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items",
              "request": {
                "name": "ListItemsItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<nullable<string>>",
                  },
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "name": {
                    "docs": "The name of the item(s)",
                    "type": "optional<nullable<string>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                  "slug": {
                    "docs": "The slug of the item",
                    "type": "optional<nullable<string>>",
                  },
                  "sortBy": {
                    "docs": "Sort results by the provided value",
                    "type": "optional<nullable<ListItemsItemsRequestSortBy>>",
                  },
                  "sortOrder": {
                    "docs": "Sorts the results by asc or desc",
                    "type": "optional<nullable<ListItemsItemsRequestSortOrder>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListItemsItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-items-live": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:read",
                  ],
                },
              ],
              "display-name": "List Live Collection Items",
              "docs": "List of all live Items within a Collection. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.ListItemsLiveItemsRequestBadRequestError",
                "root.ListItemsLiveItemsRequestUnauthorizedError",
                "root.ListItemsLiveItemsRequestNotFoundError",
                "root.ListItemsLiveItemsRequestTooManyRequestsError",
                "root.ListItemsLiveItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "query-parameters": {
                    "cmsLocaleId": "cmsLocaleId",
                    "limit": 1.1,
                    "name": "name",
                    "offset": 1.1,
                    "slug": "slug",
                    "sortBy": "lastPublished",
                    "sortOrder": "asc",
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2022-06-25T14:51:27.809Z",
                          "fieldData": {
                            "department": "Data",
                            "name": "Senior Data Analyst",
                            "slug": "senior-data-analyst",
                            "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                          },
                          "id": "62b720ef280c7a7a3be8cabe",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2022-06-30T13:35:20.878Z",
                          "lastUpdated": "2022-06-25T14:51:27.809Z",
                        },
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2023-04-10T11:45:30.567Z",
                          "fieldData": {
                            "department": "Product",
                            "name": "Product Manager",
                            "slug": "product-manager",
                            "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                          },
                          "id": "62c880ef281c7b7b4cf9dabc",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2023-04-15T10:25:18.123Z",
                          "lastUpdated": "2023-04-10T11:45:30.567Z",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/live",
              "request": {
                "name": "ListItemsLiveItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<nullable<string>>",
                  },
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "name": {
                    "docs": "The name of the item(s)",
                    "type": "optional<nullable<string>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                  "slug": {
                    "docs": "The slug of the item",
                    "type": "optional<nullable<string>>",
                  },
                  "sortBy": {
                    "docs": "Sort results by the provided value",
                    "type": "optional<nullable<ListItemsLiveItemsRequestSortBy>>",
                  },
                  "sortOrder": {
                    "docs": "Sorts the results by asc or desc",
                    "type": "optional<nullable<ListItemsLiveItemsRequestSortOrder>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListItemsLiveItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish-item": {
              "auth": [
                {
                  "OAuth2": [
                    "cms:write",
                  ],
                },
              ],
              "display-name": "Publish Collection Item",
              "docs": "Publish an item or multiple items. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.PublishItemItemsRequestBadRequestError",
                "root.PublishItemItemsRequestUnauthorizedError",
                "root.PublishItemItemsRequestNotFoundError",
                "root.PublishItemItemsRequestTooManyRequestsError",
                "root.PublishItemItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "itemIds": [
                      "itemIds",
                    ],
                  },
                  "response": {
                    "body": {
                      "errors": [
                        "Staging item ID 643fd856d66b6528195ee2cf not found.",
                      ],
                      "publishedItemIds": [
                        "643fd856d66b6528195ee2ca",
                        "643fd856d66b6528195ee2cb",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/publish",
              "request": {
                "body": {
                  "properties": {
                    "itemIds": "list<string>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "PublishItemItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "PublishItemItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-item": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:write",
                  ],
                },
              ],
              "display-name": "Update Collection Item",
              "docs": "Update a selected Item in a Collection. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.UpdateItemItemsRequestBadRequestError",
                "root.UpdateItemItemsRequestUnauthorizedError",
                "root.UpdateItemItemsRequestNotFoundError",
                "root.UpdateItemItemsRequestTooManyRequestsError",
                "root.UpdateItemItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}",
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<UpdateItemItemsRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateItemItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateItemItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-item-live": {
              "auth": [
                {
                  "OAuth2": [
                    "CMS:write",
                  ],
                },
              ],
              "display-name": "Update Live Collection Item",
              "docs": "Update a selected live Item in a Collection. The updates for this Item will be published to the live site. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.UpdateItemLiveItemsRequestBadRequestError",
                "root.UpdateItemLiveItemsRequestUnauthorizedError",
                "root.UpdateItemLiveItemsRequestNotFoundError",
                "root.UpdateItemLiveItemsRequestTooManyRequestsError",
                "root.UpdateItemLiveItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/live",
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<UpdateItemLiveItemsRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateItemLiveItemsRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateItemLiveItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateItemForMultipleLocalesItemsRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemForMultipleLocalesItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleIds": {
                "docs": "Array of identifiers for the locales where the item will be created",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CreateItemForMultipleLocalesItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<nullable<string>>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemForMultipleLocalesItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemItemsRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CreateItemItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemLiveItemsRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemLiveItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CreateItemLiveItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateItemLiveItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetItemItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<GetItemItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetItemItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetItemLiveItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<GetItemLiveItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetItemLiveItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsRequestSortBy": {
            "enum": [
              "lastPublished",
              "name",
              "slug",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsRequestSortOrder": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsResponse": {
            "docs": "Results from collection items list",
            "inline": undefined,
            "properties": {
              "items": {
                "docs": "List of Items within the collection",
                "type": "optional<list<ListItemsItemsResponseItemsItem>>",
              },
              "pagination": "optional<ListItemsItemsResponsePagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsResponseItemsItem": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ListItemsItemsResponseItemsItemFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsResponseItemsItemFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsItemsResponsePagination": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "limit": {
                "default": 100,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of items in the collection",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsRequestSortBy": {
            "enum": [
              "lastPublished",
              "name",
              "slug",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsRequestSortOrder": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsResponse": {
            "docs": "Results from collection items list",
            "inline": undefined,
            "properties": {
              "items": {
                "docs": "List of Items within the collection",
                "type": "optional<list<ListItemsLiveItemsResponseItemsItem>>",
              },
              "pagination": "optional<ListItemsLiveItemsResponsePagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsResponseItemsItem": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ListItemsLiveItemsResponseItemsItemFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsResponseItemsItemFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListItemsLiveItemsResponsePagination": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "limit": {
                "default": 100,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of items in the collection",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublishItemItemsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": "optional<list<string>>",
              "publishedItemIds": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemItemsRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<UpdateItemItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemLiveItemsRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemLiveItemsResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<UpdateItemLiveItemsResponseFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateItemLiveItemsResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListItemsItemsRequestSortBy:
    enum:
      - lastPublished
      - name
      - slug
    source:
      openapi: ../openapi.yml
  ListItemsItemsRequestSortOrder:
    enum:
      - asc
      - desc
    source:
      openapi: ../openapi.yml
  ListItemsItemsResponseItemsItemFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ListItemsItemsResponseItemsItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ListItemsItemsResponseItemsItemFieldData>
    source:
      openapi: ../openapi.yml
    inline: true
  ListItemsItemsResponsePagination:
    properties:
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 100
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of items in the collection
    source:
      openapi: ../openapi.yml
    inline: true
  ListItemsItemsResponse:
    docs: Results from collection items list
    properties:
      items:
        type: optional<list<ListItemsItemsResponseItemsItem>>
        docs: List of Items within the collection
      pagination: optional<ListItemsItemsResponsePagination>
    source:
      openapi: ../openapi.yml
  CreateItemItemsRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CreateItemItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CreateItemItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CreateItemItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  ListItemsLiveItemsRequestSortBy:
    enum:
      - lastPublished
      - name
      - slug
    source:
      openapi: ../openapi.yml
  ListItemsLiveItemsRequestSortOrder:
    enum:
      - asc
      - desc
    source:
      openapi: ../openapi.yml
  ListItemsLiveItemsResponseItemsItemFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ListItemsLiveItemsResponseItemsItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ListItemsLiveItemsResponseItemsItemFieldData>
    source:
      openapi: ../openapi.yml
    inline: true
  ListItemsLiveItemsResponsePagination:
    properties:
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 100
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of items in the collection
    source:
      openapi: ../openapi.yml
    inline: true
  ListItemsLiveItemsResponse:
    docs: Results from collection items list
    properties:
      items:
        type: optional<list<ListItemsLiveItemsResponseItemsItem>>
        docs: List of Items within the collection
      pagination: optional<ListItemsLiveItemsResponsePagination>
    source:
      openapi: ../openapi.yml
  CreateItemLiveItemsRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CreateItemLiveItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CreateItemLiveItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CreateItemLiveItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  CreateItemForMultipleLocalesItemsRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CreateItemForMultipleLocalesItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CreateItemForMultipleLocalesItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleIds:
        type: optional<list<string>>
        docs: Array of identifiers for the locales where the item will be created
      lastPublished:
        type: optional<nullable<string>>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CreateItemForMultipleLocalesItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  GetItemItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  GetItemItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<GetItemItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  UpdateItemItemsRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateItemItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateItemItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<UpdateItemItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  GetItemLiveItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  GetItemLiveItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<GetItemLiveItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  UpdateItemLiveItemsRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateItemLiveItemsResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateItemLiveItemsResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<UpdateItemLiveItemsResponseFieldData>
    source:
      openapi: ../openapi.yml
  PublishItemItemsResponse:
    properties:
      publishedItemIds: optional<list<string>>
      errors: optional<list<string>>
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list-items:
      path: /collections/{collection_id}/items
      method: GET
      auth:
        - OAuth2:
            - CMS:read
      docs: >-
        List of all Items within a Collection. </br></br> Required scope |
        `CMS:read`
      source:
        openapi: ../openapi.yml
      display-name: List Collection Items
      request:
        name: ListItemsItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        query-parameters:
          cmsLocaleId:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          name:
            type: optional<nullable<string>>
            docs: The name of the item(s)
          slug:
            type: optional<nullable<string>>
            docs: The slug of the item
          sortBy:
            type: optional<nullable<ListItemsItemsRequestSortBy>>
            docs: Sort results by the provided value
          sortOrder:
            type: optional<nullable<ListItemsItemsRequestSortOrder>>
            docs: Sorts the results by asc or desc
      response:
        docs: Request was successful
        type: ListItemsItemsResponse
        status-code: 200
      errors:
        - root.ListItemsItemsRequestBadRequestError
        - root.ListItemsItemsRequestUnauthorizedError
        - root.ListItemsItemsRequestNotFoundError
        - root.ListItemsItemsRequestTooManyRequestsError
        - root.ListItemsItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          query-parameters:
            cmsLocaleId: cmsLocaleId
            offset: 1.1
            limit: 1.1
            name: name
            slug: slug
            sortBy: lastPublished
            sortOrder: asc
          response:
            body:
              items:
                - id: 62b720ef280c7a7a3be8cabe
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2022-06-30T13:35:20.878Z'
                  lastUpdated: '2022-06-25T14:51:27.809Z'
                  createdOn: '2022-06-25T14:51:27.809Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Senior Data Analyst
                    slug: senior-data-analyst
                    url: https://boards.greenhouse.io/webflow/jobs/26567701
                    department: Data
                - id: 62c880ef281c7b7b4cf9dabc
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2023-04-15T10:25:18.123Z'
                  lastUpdated: '2023-04-10T11:45:30.567Z'
                  createdOn: '2023-04-10T11:45:30.567Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Product Manager
                    slug: product-manager
                    url: https://boards.greenhouse.io/webflow/jobs/31234567
                    department: Product
              pagination:
                limit: 25
                offset: 0
                total: 2
    create-item:
      path: /collections/{collection_id}/items
      method: POST
      auth:
        - OAuth2:
            - CMS:write
      docs: >-
        <style>.rm-Markdown.markdown-body a{color: #146EF5 !important;}</style>
        Create Item in a Collection.</br></br> To create items across multiple
        locales, <a
        href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales">
        please use the bulk item endpoint.</a> </br></br> Required scope |
        <code>CMS:write</code>
      source:
        openapi: ../openapi.yml
      display-name: Create Collection Item
      request:
        name: CreateItemItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<CreateItemItemsRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateItemItemsResponse
        status-code: 202
      errors:
        - root.CreateItemItemsRequestBadRequestError
        - root.CreateItemItemsRequestUnauthorizedError
        - root.CreateItemItemsRequestNotFoundError
        - root.CreateItemItemsRequestTooManyRequestsError
        - root.CreateItemItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    list-items-live:
      path: /collections/{collection_id}/items/live
      method: GET
      auth:
        - OAuth2:
            - CMS:read
      docs: >-
        List of all live Items within a Collection. </br></br> Required scope |
        `CMS:read`
      source:
        openapi: ../openapi.yml
      display-name: List Live Collection Items
      request:
        name: ListItemsLiveItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        query-parameters:
          cmsLocaleId:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          name:
            type: optional<nullable<string>>
            docs: The name of the item(s)
          slug:
            type: optional<nullable<string>>
            docs: The slug of the item
          sortBy:
            type: optional<nullable<ListItemsLiveItemsRequestSortBy>>
            docs: Sort results by the provided value
          sortOrder:
            type: optional<nullable<ListItemsLiveItemsRequestSortOrder>>
            docs: Sorts the results by asc or desc
      response:
        docs: Request was successful
        type: ListItemsLiveItemsResponse
        status-code: 200
      errors:
        - root.ListItemsLiveItemsRequestBadRequestError
        - root.ListItemsLiveItemsRequestUnauthorizedError
        - root.ListItemsLiveItemsRequestNotFoundError
        - root.ListItemsLiveItemsRequestTooManyRequestsError
        - root.ListItemsLiveItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          query-parameters:
            cmsLocaleId: cmsLocaleId
            offset: 1.1
            limit: 1.1
            name: name
            slug: slug
            sortBy: lastPublished
            sortOrder: asc
          response:
            body:
              items:
                - id: 62b720ef280c7a7a3be8cabe
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2022-06-30T13:35:20.878Z'
                  lastUpdated: '2022-06-25T14:51:27.809Z'
                  createdOn: '2022-06-25T14:51:27.809Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Senior Data Analyst
                    slug: senior-data-analyst
                    url: https://boards.greenhouse.io/webflow/jobs/26567701
                    department: Data
                - id: 62c880ef281c7b7b4cf9dabc
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2023-04-15T10:25:18.123Z'
                  lastUpdated: '2023-04-10T11:45:30.567Z'
                  createdOn: '2023-04-10T11:45:30.567Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Product Manager
                    slug: product-manager
                    url: https://boards.greenhouse.io/webflow/jobs/31234567
                    department: Product
              pagination:
                limit: 25
                offset: 0
                total: 2
    create-item-live:
      path: /collections/{collection_id}/items/live
      method: POST
      auth:
        - OAuth2:
            - CMS:write
      docs: >-
        Create live Item in a Collection. This Item will be published to the
        live site. </br></br> To create items across multiple locales, <a
        href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales">
        please use this endpoint.</a> </br></br> Required scope | `CMS:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Live Collection Item
      request:
        name: CreateItemLiveItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<CreateItemLiveItemsRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateItemLiveItemsResponse
        status-code: 202
      errors:
        - root.CreateItemLiveItemsRequestBadRequestError
        - root.CreateItemLiveItemsRequestUnauthorizedError
        - root.CreateItemLiveItemsRequestNotFoundError
        - root.CreateItemLiveItemsRequestTooManyRequestsError
        - root.CreateItemLiveItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    create-item-for-multiple-locales:
      path: /collections/{collection_id}/items/bulk
      method: POST
      auth:
        - OAuth2:
            - cms:write
      docs: >-
        Create single Item in a Collection with multiple corresponding locales.
        </br></br> Required scope | `CMS:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Item for Multiple Locales
      request:
        name: CreateItemForMultipleLocalesItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        body:
          properties:
            cmsLocaleIds:
              type: optional<list<string>>
              docs: >-
                Array of identifiers for the locales where the item will be
                created
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<CreateItemForMultipleLocalesItemsRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateItemForMultipleLocalesItemsResponse
        status-code: 202
      errors:
        - root.CreateItemForMultipleLocalesItemsRequestBadRequestError
        - root.CreateItemForMultipleLocalesItemsRequestUnauthorizedError
        - root.CreateItemForMultipleLocalesItemsRequestNotFoundError
        - root.CreateItemForMultipleLocalesItemsRequestTooManyRequestsError
        - root.CreateItemForMultipleLocalesItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request: {}
          response:
            body:
              id: 580e64008c9a982ac9b8b754
              cmsLocaleIds:
                - 653ad57de882f528b32e810e
                - 6514390aea353fc691d69827
                - 65143930ea353fc691d69cd8
              lastPublished: '2023-03-17T18:47:35.560Z'
              lastUpdated: '2023-03-17T18:47:35.560Z'
              createdOn: '2023-03-17T18:47:35.560Z'
              isArchived: true
              isDraft: true
              fieldData:
                name: My new item
                slug: my-new-item
                date: '2022-11-18T00:00:00.000Z'
                featured: false
                color: '#db4b68'
    get-item:
      path: /collections/{collection_id}/items/{item_id}
      method: GET
      auth:
        - OAuth2:
            - CMS:read
      docs: >-
        Get details of a selected Collection Item. </br></br> Required scope |
        `CMS:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Collection Item
      request:
        name: GetItemItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        query-parameters:
          cmsLocaleId:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      response:
        docs: Request was successful
        type: GetItemItemsResponse
        status-code: 200
      errors:
        - root.GetItemItemsRequestBadRequestError
        - root.GetItemItemsRequestUnauthorizedError
        - root.GetItemItemsRequestNotFoundError
        - root.GetItemItemsRequestTooManyRequestsError
        - root.GetItemItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          query-parameters:
            cmsLocaleId: cmsLocaleId
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    delete-item:
      path: /collections/{collection_id}/items/{item_id}
      method: DELETE
      auth:
        - OAuth2:
            - CMS:write
      docs: >-
        Delete an Item from a Collection. This endpoint does not currently
        support bulk deletion. </br></br> Required scope | `CMS:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete Collection Item
      request:
        name: DeleteItemItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        query-parameters:
          cmsLocaleId:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      errors:
        - root.DeleteItemItemsRequestBadRequestError
        - root.DeleteItemItemsRequestUnauthorizedError
        - root.DeleteItemItemsRequestNotFoundError
        - root.DeleteItemItemsRequestTooManyRequestsError
        - root.DeleteItemItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          query-parameters:
            cmsLocaleId: cmsLocaleId
    update-item:
      path: /collections/{collection_id}/items/{item_id}
      method: PATCH
      auth:
        - OAuth2:
            - CMS:write
      docs: >-
        Update a selected Item in a Collection. </br></br> Required scope |
        `CMS:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Collection Item
      request:
        name: UpdateItemItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<UpdateItemItemsRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateItemItemsResponse
        status-code: 200
      errors:
        - root.UpdateItemItemsRequestBadRequestError
        - root.UpdateItemItemsRequestUnauthorizedError
        - root.UpdateItemItemsRequestNotFoundError
        - root.UpdateItemItemsRequestTooManyRequestsError
        - root.UpdateItemItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    get-item-live:
      path: /collections/{collection_id}/items/{item_id}/live
      method: GET
      auth:
        - OAuth2:
            - CMS:read
      docs: >-
        Get details of a selected Collection live Item. </br></br> Required
        scope | `CMS:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Live Collection Item
      request:
        name: GetItemLiveItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        query-parameters:
          cmsLocaleId:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      response:
        docs: Request was successful
        type: GetItemLiveItemsResponse
        status-code: 200
      errors:
        - root.GetItemLiveItemsRequestBadRequestError
        - root.GetItemLiveItemsRequestUnauthorizedError
        - root.GetItemLiveItemsRequestNotFoundError
        - root.GetItemLiveItemsRequestTooManyRequestsError
        - root.GetItemLiveItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          query-parameters:
            cmsLocaleId: cmsLocaleId
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    delete-item-live:
      path: /collections/{collection_id}/items/{item_id}/live
      method: DELETE
      auth:
        - OAuth2:
            - CMS:write
      docs: >-
        Remove a live item from the site. Removing a published item will
        unpublish the item from the live site and set it to draft. This endpoint
        does not currently support bulk deletion.</br></br> Required scope |
        `CMS:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete Collection Item (Live)
      request:
        name: DeleteItemLiveItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        query-parameters:
          cmsLocaleId:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      errors:
        - root.DeleteItemLiveItemsRequestBadRequestError
        - root.DeleteItemLiveItemsRequestUnauthorizedError
        - root.DeleteItemLiveItemsRequestNotFoundError
        - root.DeleteItemLiveItemsRequestTooManyRequestsError
        - root.DeleteItemLiveItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          query-parameters:
            cmsLocaleId: cmsLocaleId
    update-item-live:
      path: /collections/{collection_id}/items/{item_id}/live
      method: PATCH
      auth:
        - OAuth2:
            - CMS:write
      docs: >-
        Update a selected live Item in a Collection. The updates for this Item
        will be published to the live site. </br></br> Required scope |
        `CMS:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Live Collection Item
      request:
        name: UpdateItemLiveItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<UpdateItemLiveItemsRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateItemLiveItemsResponse
        status-code: 200
      errors:
        - root.UpdateItemLiveItemsRequestBadRequestError
        - root.UpdateItemLiveItemsRequestUnauthorizedError
        - root.UpdateItemLiveItemsRequestNotFoundError
        - root.UpdateItemLiveItemsRequestTooManyRequestsError
        - root.UpdateItemLiveItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    publish-item:
      path: /collections/{collection_id}/items/publish
      method: POST
      auth:
        - OAuth2:
            - cms:write
      docs: >-
        Publish an item or multiple items. </br></br> Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      display-name: Publish Collection Item
      request:
        name: PublishItemItemsRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
        body:
          properties:
            itemIds: list<string>
        content-type: application/json
      response:
        docs: Request was successful
        type: PublishItemItemsResponse
        status-code: 202
      errors:
        - root.PublishItemItemsRequestBadRequestError
        - root.PublishItemItemsRequestUnauthorizedError
        - root.PublishItemItemsRequestNotFoundError
        - root.PublishItemItemsRequestTooManyRequestsError
        - root.PublishItemItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            itemIds:
              - itemIds
          response:
            body:
              publishedItemIds:
                - 643fd856d66b6528195ee2ca
                - 643fd856d66b6528195ee2cb
              errors:
                - Staging item ID 643fd856d66b6528195ee2cf not found.
  source:
    openapi: ../openapi.yml
",
    },
    "ecommerce.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-settings": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:read",
                  ],
                },
              ],
              "display-name": "Get Ecommerce Settings",
              "docs": "Retrieve ecommerce settings for a site.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.GetSettingsEcommerceRequestBadRequestError",
                "root.GetSettingsEcommerceRequestUnauthorizedError",
                "root.GetSettingsEcommerceRequestForbiddenError",
                "root.GetSettingsEcommerceRequestNotFoundError",
                "root.GetSettingsEcommerceRequestConflictError",
                "root.GetSettingsEcommerceRequestTooManyRequestsError",
                "root.GetSettingsEcommerceRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2018-10-04T15:21:02Z",
                      "defaultCurrency": "USD",
                      "siteId": "5eb0b5583bf24e2d3a488969",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/ecommerce/settings",
              "request": {
                "name": "GetSettingsEcommerceRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetSettingsEcommerceResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetSettingsEcommerceResponse": {
            "docs": "Ecommerce settings for a Webflow Site",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date that the Site was created on",
                "type": "optional<datetime>",
              },
              "defaultCurrency": {
                "docs": "The three-letter ISO currency code for the Site",
                "type": "optional<string>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "The identifier of the Site",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetSettingsEcommerceResponse:
    docs: Ecommerce settings for a Webflow Site
    properties:
      siteId:
        type: optional<string>
        docs: The identifier of the Site
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: Date that the Site was created on
        access: read-only
      defaultCurrency:
        type: optional<string>
        docs: The three-letter ISO currency code for the Site
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-settings:
      path: /sites/{site_id}/ecommerce/settings
      method: GET
      auth:
        - OAuth2:
            - ecommerce:read
      docs: |
        Retrieve ecommerce settings for a site.

        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Ecommerce Settings
      request:
        name: GetSettingsEcommerceRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: GetSettingsEcommerceResponse
        status-code: 200
      errors:
        - root.GetSettingsEcommerceRequestBadRequestError
        - root.GetSettingsEcommerceRequestUnauthorizedError
        - root.GetSettingsEcommerceRequestForbiddenError
        - root.GetSettingsEcommerceRequestNotFoundError
        - root.GetSettingsEcommerceRequestConflictError
        - root.GetSettingsEcommerceRequestTooManyRequestsError
        - root.GetSettingsEcommerceRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              siteId: 5eb0b5583bf24e2d3a488969
              createdOn: '2018-10-04T15:21:02Z'
              defaultCurrency: USD
  source:
    openapi: ../openapi.yml
",
    },
    "forms.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Forms",
          "endpoints": {
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "forms:read",
                  ],
                },
              ],
              "display-name": "Get Form Schema",
              "docs": "Get information about a given form</br></br> Required scope | `forms:read`",
              "errors": [
                "root.GetFormsRequestBadRequestError",
                "root.GetFormsRequestUnauthorizedError",
                "root.GetFormsRequestForbiddenError",
                "root.GetFormsRequestNotFoundError",
                "root.GetFormsRequestTooManyRequestsError",
                "root.GetFormsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2016-10-24T19:41:29Z",
                      "displayName": "Email Form",
                      "fields": {
                        "589a331aa51e760df7ccb89d": {
                          "displayName": "Email",
                          "placeholder": "Enter your email",
                          "type": "Email",
                          "userVisible": true,
                        },
                        "660d5bcc9c0772150459dfb1": {
                          "displayName": "Name",
                          "type": "Plain",
                          "userVisible": true,
                        },
                      },
                      "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                      "id": "589a331aa51e760df7ccb89e",
                      "lastUpdated": "2016-10-24T19:43:17Z",
                      "pageId": "6419db964a9c43f6a3af6348",
                      "pageName": "Home",
                      "responseSettings": {
                        "redirectMethod": "GET",
                        "redirectUrl": "https://example.com",
                        "sendEmailConfirmation": true,
                      },
                      "siteDomainId": "6419db964a9c436a4baf6248",
                      "siteId": "580e63e98c9a982ac9b8b741",
                      "workspaceId": "580e63fc8c9a982ac9b8b744",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/forms/{form_id}",
              "request": {
                "name": "GetFormsRequest",
                "path-parameters": {
                  "form_id": {
                    "docs": "Unique identifier for a Form",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetFormsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-submission": {
              "auth": [
                {
                  "OAuth2": [
                    "forms:read",
                  ],
                },
              ],
              "display-name": "Get Form Submission",
              "docs": "Get information about a given form submission</br></br> Required scope | `forms:read`",
              "errors": [
                "root.GetSubmissionFormsRequestBadRequestError",
                "root.GetSubmissionFormsRequestUnauthorizedError",
                "root.GetSubmissionFormsRequestForbiddenError",
                "root.GetSubmissionFormsRequestNotFoundError",
                "root.GetSubmissionFormsRequestTooManyRequestsError",
                "root.GetSubmissionFormsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_submission_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "dateSubmitted": "2022-09-14T12:35:16Z",
                      "displayName": "Sample Form",
                      "formResponse": {
                        "First Name": "Arthur",
                        "Last Name": "Dent",
                      },
                      "id": "6321ca84df3949bfc6752327",
                      "siteId": "62749158efef318abc8d5a0f",
                      "workspaceId": "62749158efef318abc8d5a0f",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/form_submissions/{form_submission_id}",
              "request": {
                "name": "GetSubmissionFormsRequest",
                "path-parameters": {
                  "form_submission_id": {
                    "docs": "Unique identifier for a Form Submission",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetSubmissionFormsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "forms:read",
                  ],
                },
              ],
              "display-name": "List Forms",
              "docs": "List forms for a given site </br></br> Required scope | `forms:read`",
              "errors": [
                "root.ListFormsRequestBadRequestError",
                "root.ListFormsRequestUnauthorizedError",
                "root.ListFormsRequestForbiddenError",
                "root.ListFormsRequestNotFoundError",
                "root.ListFormsRequestConflictError",
                "root.ListFormsRequestTooManyRequestsError",
                "root.ListFormsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "forms": [
                        {
                          "createdOn": "2016-10-24T19:41:29Z",
                          "displayName": "Email Form",
                          "fields": {
                            "0": {
                              "displayName": "Email",
                              "userVisible": true,
                            },
                            "1": {
                              "displayName": "Email",
                              "userVisible": true,
                            },
                          },
                          "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                          "id": "589a331aa51e760df7ccb89e",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "pageId": "6419db964a9c43f6a3af6348",
                          "pageName": "Home",
                          "responseSettings": {
                            "redirectMethod": "GET",
                            "redirectUrl": "https://example.com",
                            "sendEmailConfirmation": true,
                          },
                          "siteDomainId": "6419db964a9c436a4baf6248",
                          "siteId": "580e63e98c9a982ac9b8b741",
                          "workspaceId": "580e63fc8c9a982ac9b8b744",
                        },
                        {
                          "createdOn": "2016-10-24T19:41:29Z",
                          "displayName": "Name Form",
                          "fields": {
                            "0": {
                              "displayName": "Email",
                              "userVisible": true,
                            },
                          },
                          "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                          "id": "580ff8d7ba3e45ba9fe588e9",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "pageId": "6419db964a9c43f6a3af6348",
                          "pageName": "Home",
                          "responseSettings": {
                            "redirectMethod": "GET",
                            "redirectUrl": "https://example.com",
                            "sendEmailConfirmation": false,
                          },
                          "siteDomainId": "6419db964a9c436a4baf6248",
                          "siteId": "580e63e98c9a982ac9b8b741",
                          "workspaceId": "580e63fc8c9a982ac9b8b744",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/forms",
              "request": {
                "name": "ListFormsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListFormsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-submissions": {
              "auth": [
                {
                  "OAuth2": [
                    "forms:read",
                  ],
                },
              ],
              "display-name": "List Form Submissions",
              "docs": "List form submissions for a given form </br></br> Required scope | `forms:read`",
              "errors": [
                "root.ListSubmissionsFormsRequestBadRequestError",
                "root.ListSubmissionsFormsRequestUnauthorizedError",
                "root.ListSubmissionsFormsRequestForbiddenError",
                "root.ListSubmissionsFormsRequestNotFoundError",
                "root.ListSubmissionsFormsRequestTooManyRequestsError",
                "root.ListSubmissionsFormsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "formSubmissions": [
                        {
                          "dateSubmitted": "2022-09-14T12:35:16Z",
                          "displayName": "Sample Form",
                          "formResponse": {
                            "First Name": "Arthur",
                            "Last Name": "Dent",
                          },
                          "id": "6321ca84df3949bfc6752327",
                          "siteId": "62749158efef318abc8d5a0f",
                          "workspaceId": "62749158efef318abc8d5a0f",
                        },
                        {
                          "dateSubmitted": "2022-09-14T12:35:16Z",
                          "displayName": "Sample Form",
                          "formResponse": {
                            "First Name": "Ford",
                            "Last Name": "Prefect",
                          },
                          "id": "660d64fabf6e0a0d4edab981",
                          "siteId": "62749158efef318abc8d5a0f",
                          "workspaceId": "62749158efef318abc8d5a0f",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/forms/{form_id}/submissions",
              "request": {
                "name": "ListSubmissionsFormsRequest",
                "path-parameters": {
                  "form_id": {
                    "docs": "Unique identifier for a Form",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListSubmissionsFormsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-submission": {
              "auth": [
                {
                  "OAuth2": [
                    "forms:write",
                  ],
                },
              ],
              "display-name": "Modify Form Submission",
              "docs": "Update hidden fields on a form submission</br></br> Required scope | `forms:write`",
              "errors": [
                "root.UpdateSubmissionFormsRequestBadRequestError",
                "root.UpdateSubmissionFormsRequestUnauthorizedError",
                "root.UpdateSubmissionFormsRequestForbiddenError",
                "root.UpdateSubmissionFormsRequestNotFoundError",
                "root.UpdateSubmissionFormsRequestConflictError",
                "root.UpdateSubmissionFormsRequestTooManyRequestsError",
                "root.UpdateSubmissionFormsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_submission_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "dateSubmitted": "2022-09-14T12:35:16Z",
                      "displayName": "Sample Form",
                      "formResponse": {
                        "First Name": "Arthur",
                        "Last Name": "Dent",
                      },
                      "id": "6321ca84df3949bfc6752327",
                      "siteId": "62749158efef318abc8d5a0f",
                      "workspaceId": "62749158efef318abc8d5a0f",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/form_submissions/{form_submission_id}",
              "request": {
                "body": {
                  "properties": {
                    "formSubmissionData": {
                      "docs": "An existing **hidden field** defined on the form schema, and the corresponding value to set",
                      "type": "optional<map<string, unknown>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateSubmissionFormsRequest",
                "path-parameters": {
                  "form_submission_id": {
                    "docs": "Unique identifier for a Form Submission",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateSubmissionFormsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "FormSubmissionPayload": {
            "docs": "The Webhook payload for when a form is submitted",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<FormSubmissionPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormSubmissionPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "data": {
                "docs": "The data submitted in the form",
                "type": "optional<map<string, unknown>>",
              },
              "formElementId": {
                "docs": "The unique id of the Form element",
                "type": "optional<nullable<string>>",
              },
              "formId": {
                "docs": "The ID of the form submission",
                "type": "optional<string>",
              },
              "id": {
                "docs": "the ID of the event",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the form",
                "type": "optional<string>",
              },
              "schema": {
                "docs": "A list of fields from the submitted form",
                "type": "optional<list<unknown>>",
              },
              "siteId": {
                "docs": "The id of the site that the form was submitted from",
                "type": "optional<string>",
              },
              "submittedAt": {
                "docs": "The timestamp the form was submitted",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFormsResponse": {
            "docs": "A form and its corresponding metadata",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date that the Form was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "fields": {
                "docs": "A collection of form field objects",
                "type": "optional<map<string, GetFormsResponseFieldsValue>>",
              },
              "formElementId": {
                "docs": "The unique id of the Form element",
                "type": "optional<nullable<string>>",
              },
              "id": {
                "docs": "The unique id for the Form",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Form was last updated on",
                "type": "optional<datetime>",
              },
              "pageId": {
                "docs": "The unique id for the Page on which the Form is placed",
                "type": "optional<string>",
              },
              "pageName": {
                "docs": "The user-visible name of the Page where the Form is placed",
                "type": "optional<string>",
              },
              "responseSettings": {
                "docs": "Settings for form responses",
                "type": "optional<GetFormsResponseResponseSettings>",
              },
              "siteDomainId": {
                "docs": "The unique id corresponding to the site's Domain name",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFormsResponseFieldsValue": {
            "docs": "An object containing field info for a specific fieldID.",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The field name displayed on the site",
                "type": "optional<string>",
              },
              "placeholder": {
                "docs": "The placeholder text for the field",
                "type": "optional<nullable<string>>",
              },
              "type": {
                "docs": "The field type",
                "type": "optional<GetFormsResponseFieldsValueType>",
              },
              "userVisible": {
                "docs": "Whether the field is visible to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFormsResponseFieldsValueType": {
            "docs": "The field type",
            "enum": [
              "Plain",
              "Email",
              "Password",
              "Phone",
              "Number",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetFormsResponseResponseSettings": {
            "docs": "Settings for form responses",
            "inline": true,
            "properties": {
              "redirectAction": {
                "docs": "The action to take after form submission",
                "type": "optional<nullable<string>>",
              },
              "redirectMethod": {
                "docs": "The HTTP request method to use for the redirectUrl (eg. POST or GET)",
                "type": "optional<nullable<string>>",
              },
              "redirectUrl": {
                "docs": "The url or path to redirect the user to after form submission",
                "type": "optional<string>",
              },
              "sendEmailConfirmation": {
                "docs": "Whether to send an email confirmation to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSubmissionFormsResponse": {
            "docs": "A form submission",
            "inline": undefined,
            "properties": {
              "dateSubmitted": {
                "docs": "Date that the Form was submitted on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "formResponse": {
                "docs": "The data submitted in the Form",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "The unique id of the Form submission",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsResponse": {
            "docs": "A list of forms",
            "inline": undefined,
            "properties": {
              "forms": "optional<list<ListFormsResponseFormsItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListFormsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsResponseFormsItem": {
            "docs": "A Webflow form",
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "Date that the Form was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "fields": {
                "docs": "A collection of form field objects",
                "type": "optional<map<string, ListFormsResponseFormsItemFieldsValue>>",
              },
              "formElementId": {
                "docs": "The unique id of the Form element",
                "type": "optional<nullable<string>>",
              },
              "id": {
                "docs": "The unique id for the Form",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Form was last updated on",
                "type": "optional<datetime>",
              },
              "pageId": {
                "docs": "The unique id for the Page on which the Form is placed",
                "type": "optional<string>",
              },
              "pageName": {
                "docs": "The user-visible name of the Page where the Form is placed",
                "type": "optional<string>",
              },
              "responseSettings": {
                "docs": "Settings for form responses",
                "type": "optional<ListFormsResponseFormsItemResponseSettings>",
              },
              "siteDomainId": {
                "docs": "The unique id corresponding to the site's Domain name",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsResponseFormsItemFieldsValue": {
            "docs": "An object containing field info for a specific fieldID.",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The field name displayed on the site",
                "type": "optional<string>",
              },
              "placeholder": {
                "docs": "The placeholder text for the field",
                "type": "optional<nullable<string>>",
              },
              "type": {
                "docs": "The field type",
                "type": "optional<ListFormsResponseFormsItemFieldsValueType>",
              },
              "userVisible": {
                "docs": "Whether the field is visible to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsResponseFormsItemFieldsValueType": {
            "docs": "The field type",
            "enum": [
              "Plain",
              "Email",
              "Password",
              "Phone",
              "Number",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsResponseFormsItemResponseSettings": {
            "docs": "Settings for form responses",
            "inline": true,
            "properties": {
              "redirectAction": {
                "docs": "The action to take after form submission",
                "type": "optional<nullable<string>>",
              },
              "redirectMethod": {
                "docs": "The HTTP request method to use for the redirectUrl (eg. POST or GET)",
                "type": "optional<nullable<string>>",
              },
              "redirectUrl": {
                "docs": "The url or path to redirect the user to after form submission",
                "type": "optional<string>",
              },
              "sendEmailConfirmation": {
                "docs": "Whether to send an email confirmation to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListFormsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSubmissionsFormsResponse": {
            "docs": "A list of form submissions",
            "inline": undefined,
            "properties": {
              "formSubmissions": "optional<list<ListSubmissionsFormsResponseFormSubmissionsItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListSubmissionsFormsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSubmissionsFormsResponseFormSubmissionsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "dateSubmitted": {
                "docs": "Date that the Form was submitted on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "formResponse": {
                "docs": "The data submitted in the Form",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "The unique id of the Form submission",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSubmissionsFormsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSubmissionFormsResponse": {
            "docs": "A form submission",
            "inline": undefined,
            "properties": {
              "dateSubmitted": {
                "docs": "Date that the Form was submitted on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "formResponse": {
                "docs": "The data submitted in the Form",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "The unique id of the Form submission",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "form_submission": {
            "audiences": [],
            "display-name": "Form Submission",
            "docs": "Information about a form that was subitted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "data": {
                      "First Name": "Zaphod",
                      "Last Name": "Beeblebrox",
                      "Phone Number": 15550000000,
                      "email": "zaphod@heartofgold.ai",
                    },
                    "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    "formId": "65429eadebe8a9f3a30f62d0",
                    "id": "6321ca84df3949bfc6752327",
                    "name": "Contact Us",
                    "schema": [
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c4",
                        "fieldName": "First Name",
                        "fieldType": "FormTextInput",
                      },
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c5",
                        "fieldName": "Last Name",
                        "fieldType": "FormTextInput",
                      },
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c6",
                        "fieldName": "email",
                        "fieldType": "FormTextInput",
                      },
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c7",
                        "fieldName": "Phone Number",
                        "fieldType": "FormTextInput",
                      },
                    ],
                    "siteId": "65427cf400e02b306eaa049c",
                    "submittedAt": "2022-09-14T12:35:16.117Z",
                  },
                  "triggerType": "form_submission",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a form is submitted",
              "type": "FormSubmissionPayload",
            },
          },
        },
      },
      "rawContents": "types:
  ListFormsResponseFormsItemFieldsValueType:
    enum:
      - Plain
      - Email
      - Password
      - Phone
      - Number
    docs: The field type
    inline: true
    source:
      openapi: ../openapi.yml
  ListFormsResponseFormsItemFieldsValue:
    docs: An object containing field info for a specific fieldID.
    properties:
      displayName:
        type: optional<string>
        docs: The field name displayed on the site
      type:
        type: optional<ListFormsResponseFormsItemFieldsValueType>
        docs: The field type
      placeholder:
        type: optional<nullable<string>>
        docs: The placeholder text for the field
      userVisible:
        type: optional<boolean>
        docs: Whether the field is visible to the user
    source:
      openapi: ../openapi.yml
    inline: true
  ListFormsResponseFormsItemResponseSettings:
    docs: Settings for form responses
    properties:
      redirectUrl:
        type: optional<string>
        docs: The url or path to redirect the user to after form submission
      redirectMethod:
        type: optional<nullable<string>>
        docs: The HTTP request method to use for the redirectUrl (eg. POST or GET)
      redirectAction:
        type: optional<nullable<string>>
        docs: The action to take after form submission
      sendEmailConfirmation:
        type: optional<boolean>
        docs: Whether to send an email confirmation to the user
    source:
      openapi: ../openapi.yml
    inline: true
  ListFormsResponseFormsItem:
    docs: A Webflow form
    properties:
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      createdOn:
        type: optional<datetime>
        docs: Date that the Form was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Form was last updated on
      fields:
        type: optional<map<string, ListFormsResponseFormsItemFieldsValue>>
        docs: A collection of form field objects
      responseSettings:
        type: optional<ListFormsResponseFormsItemResponseSettings>
        docs: Settings for form responses
      id:
        type: optional<string>
        docs: The unique id for the Form
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      siteDomainId:
        type: optional<string>
        docs: The unique id corresponding to the site's Domain name
      pageId:
        type: optional<string>
        docs: The unique id for the Page on which the Form is placed
      pageName:
        type: optional<string>
        docs: The user-visible name of the Page where the Form is placed
      formElementId:
        type: optional<nullable<string>>
        docs: The unique id of the Form element
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
    source:
      openapi: ../openapi.yml
    inline: true
  ListFormsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListFormsResponse:
    docs: A list of forms
    properties:
      forms: optional<list<ListFormsResponseFormsItem>>
      pagination:
        type: optional<ListFormsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  GetFormsResponseFieldsValueType:
    enum:
      - Plain
      - Email
      - Password
      - Phone
      - Number
    docs: The field type
    inline: true
    source:
      openapi: ../openapi.yml
  GetFormsResponseFieldsValue:
    docs: An object containing field info for a specific fieldID.
    properties:
      displayName:
        type: optional<string>
        docs: The field name displayed on the site
      type:
        type: optional<GetFormsResponseFieldsValueType>
        docs: The field type
      placeholder:
        type: optional<nullable<string>>
        docs: The placeholder text for the field
      userVisible:
        type: optional<boolean>
        docs: Whether the field is visible to the user
    source:
      openapi: ../openapi.yml
    inline: true
  GetFormsResponseResponseSettings:
    docs: Settings for form responses
    properties:
      redirectUrl:
        type: optional<string>
        docs: The url or path to redirect the user to after form submission
      redirectMethod:
        type: optional<nullable<string>>
        docs: The HTTP request method to use for the redirectUrl (eg. POST or GET)
      redirectAction:
        type: optional<nullable<string>>
        docs: The action to take after form submission
      sendEmailConfirmation:
        type: optional<boolean>
        docs: Whether to send an email confirmation to the user
    source:
      openapi: ../openapi.yml
    inline: true
  GetFormsResponse:
    docs: A form and its corresponding metadata
    properties:
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      createdOn:
        type: optional<datetime>
        docs: Date that the Form was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Form was last updated on
      fields:
        type: optional<map<string, GetFormsResponseFieldsValue>>
        docs: A collection of form field objects
      responseSettings:
        type: optional<GetFormsResponseResponseSettings>
        docs: Settings for form responses
      id:
        type: optional<string>
        docs: The unique id for the Form
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      siteDomainId:
        type: optional<string>
        docs: The unique id corresponding to the site's Domain name
      pageId:
        type: optional<string>
        docs: The unique id for the Page on which the Form is placed
      pageName:
        type: optional<string>
        docs: The user-visible name of the Page where the Form is placed
      formElementId:
        type: optional<nullable<string>>
        docs: The unique id of the Form element
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
    source:
      openapi: ../openapi.yml
  ListSubmissionsFormsResponseFormSubmissionsItem:
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../openapi.yml
    inline: true
  ListSubmissionsFormsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListSubmissionsFormsResponse:
    docs: A list of form submissions
    properties:
      formSubmissions: optional<list<ListSubmissionsFormsResponseFormSubmissionsItem>>
      pagination:
        type: optional<ListSubmissionsFormsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  GetSubmissionFormsResponse:
    docs: A form submission
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../openapi.yml
  UpdateSubmissionFormsResponse:
    docs: A form submission
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../openapi.yml
  FormSubmissionPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      name:
        type: optional<string>
        docs: The name of the form
      siteId:
        type: optional<string>
        docs: The id of the site that the form was submitted from
      data:
        type: optional<map<string, unknown>>
        docs: The data submitted in the form
      schema:
        type: optional<list<unknown>>
        docs: A list of fields from the submitted form
      submittedAt:
        type: optional<string>
        docs: The timestamp the form was submitted
      id:
        type: optional<string>
        docs: the ID of the event
      formId:
        type: optional<string>
        docs: The ID of the form submission
      formElementId:
        type: optional<nullable<string>>
        docs: The unique id of the Form element
    source:
      openapi: ../openapi.yml
    inline: true
  FormSubmissionPayload:
    docs: The Webhook payload for when a form is submitted
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<FormSubmissionPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/forms
      method: GET
      auth:
        - OAuth2:
            - forms:read
      docs: List forms for a given site </br></br> Required scope | `forms:read`
      source:
        openapi: ../openapi.yml
      display-name: List Forms
      request:
        name: ListFormsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: Request was successful
        type: ListFormsResponse
        status-code: 200
      errors:
        - root.ListFormsRequestBadRequestError
        - root.ListFormsRequestUnauthorizedError
        - root.ListFormsRequestForbiddenError
        - root.ListFormsRequestNotFoundError
        - root.ListFormsRequestConflictError
        - root.ListFormsRequestTooManyRequestsError
        - root.ListFormsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            limit: 1.1
            offset: 1.1
          response:
            body:
              forms:
                - displayName: Email Form
                  createdOn: '2016-10-24T19:41:29Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  fields:
                    '0':
                      displayName: Email
                      userVisible: true
                    '1':
                      displayName: Email
                      userVisible: true
                  responseSettings:
                    redirectUrl: https://example.com
                    redirectMethod: GET
                    sendEmailConfirmation: true
                  id: 589a331aa51e760df7ccb89e
                  siteId: 580e63e98c9a982ac9b8b741
                  siteDomainId: 6419db964a9c436a4baf6248
                  pageId: 6419db964a9c43f6a3af6348
                  pageName: Home
                  formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
                  workspaceId: 580e63fc8c9a982ac9b8b744
                - displayName: Name Form
                  createdOn: '2016-10-24T19:41:29Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  fields:
                    '0':
                      displayName: Email
                      userVisible: true
                  responseSettings:
                    redirectUrl: https://example.com
                    redirectMethod: GET
                    sendEmailConfirmation: false
                  id: 580ff8d7ba3e45ba9fe588e9
                  siteId: 580e63e98c9a982ac9b8b741
                  siteDomainId: 6419db964a9c436a4baf6248
                  pageId: 6419db964a9c43f6a3af6348
                  pageName: Home
                  formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
                  workspaceId: 580e63fc8c9a982ac9b8b744
              pagination:
                limit: 25
                offset: 0
                total: 2
    get:
      path: /forms/{form_id}
      method: GET
      auth:
        - OAuth2:
            - forms:read
      docs: >-
        Get information about a given form</br></br> Required scope |
        `forms:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Form Schema
      request:
        name: GetFormsRequest
        path-parameters:
          form_id:
            type: string
            docs: Unique identifier for a Form
      response:
        docs: Request was successful
        type: GetFormsResponse
        status-code: 200
      errors:
        - root.GetFormsRequestBadRequestError
        - root.GetFormsRequestUnauthorizedError
        - root.GetFormsRequestForbiddenError
        - root.GetFormsRequestNotFoundError
        - root.GetFormsRequestTooManyRequestsError
        - root.GetFormsRequestInternalServerError
      examples:
        - path-parameters:
            form_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              displayName: Email Form
              createdOn: '2016-10-24T19:41:29Z'
              lastUpdated: '2016-10-24T19:43:17Z'
              fields:
                660d5bcc9c0772150459dfb1:
                  displayName: Name
                  type: Plain
                  userVisible: true
                589a331aa51e760df7ccb89d:
                  displayName: Email
                  type: Email
                  placeholder: Enter your email
                  userVisible: true
              responseSettings:
                redirectUrl: https://example.com
                redirectMethod: GET
                sendEmailConfirmation: true
              id: 589a331aa51e760df7ccb89e
              siteId: 580e63e98c9a982ac9b8b741
              siteDomainId: 6419db964a9c436a4baf6248
              pageId: 6419db964a9c43f6a3af6348
              pageName: Home
              formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
              workspaceId: 580e63fc8c9a982ac9b8b744
    list-submissions:
      path: /forms/{form_id}/submissions
      method: GET
      auth:
        - OAuth2:
            - forms:read
      docs: >-
        List form submissions for a given form </br></br> Required scope |
        `forms:read`
      source:
        openapi: ../openapi.yml
      display-name: List Form Submissions
      request:
        name: ListSubmissionsFormsRequest
        path-parameters:
          form_id:
            type: string
            docs: Unique identifier for a Form
        query-parameters:
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: ListSubmissionsFormsResponse
        status-code: 200
      errors:
        - root.ListSubmissionsFormsRequestBadRequestError
        - root.ListSubmissionsFormsRequestUnauthorizedError
        - root.ListSubmissionsFormsRequestForbiddenError
        - root.ListSubmissionsFormsRequestNotFoundError
        - root.ListSubmissionsFormsRequestTooManyRequestsError
        - root.ListSubmissionsFormsRequestInternalServerError
      examples:
        - path-parameters:
            form_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            offset: 1.1
            limit: 1.1
          response:
            body:
              formSubmissions:
                - id: 6321ca84df3949bfc6752327
                  displayName: Sample Form
                  siteId: 62749158efef318abc8d5a0f
                  workspaceId: 62749158efef318abc8d5a0f
                  dateSubmitted: '2022-09-14T12:35:16Z'
                  formResponse:
                    First Name: Arthur
                    Last Name: Dent
                - id: 660d64fabf6e0a0d4edab981
                  displayName: Sample Form
                  siteId: 62749158efef318abc8d5a0f
                  workspaceId: 62749158efef318abc8d5a0f
                  dateSubmitted: '2022-09-14T12:35:16Z'
                  formResponse:
                    First Name: Ford
                    Last Name: Prefect
              pagination:
                limit: 25
                offset: 0
                total: 2
    get-submission:
      path: /form_submissions/{form_submission_id}
      method: GET
      auth:
        - OAuth2:
            - forms:read
      docs: >-
        Get information about a given form submission</br></br> Required scope |
        `forms:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Form Submission
      request:
        name: GetSubmissionFormsRequest
        path-parameters:
          form_submission_id:
            type: string
            docs: Unique identifier for a Form Submission
      response:
        docs: Request was successful
        type: GetSubmissionFormsResponse
        status-code: 200
      errors:
        - root.GetSubmissionFormsRequestBadRequestError
        - root.GetSubmissionFormsRequestUnauthorizedError
        - root.GetSubmissionFormsRequestForbiddenError
        - root.GetSubmissionFormsRequestNotFoundError
        - root.GetSubmissionFormsRequestTooManyRequestsError
        - root.GetSubmissionFormsRequestInternalServerError
      examples:
        - path-parameters:
            form_submission_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              id: 6321ca84df3949bfc6752327
              displayName: Sample Form
              siteId: 62749158efef318abc8d5a0f
              workspaceId: 62749158efef318abc8d5a0f
              dateSubmitted: '2022-09-14T12:35:16Z'
              formResponse:
                First Name: Arthur
                Last Name: Dent
    update-submission:
      path: /form_submissions/{form_submission_id}
      method: PATCH
      auth:
        - OAuth2:
            - forms:write
      docs: >-
        Update hidden fields on a form submission</br></br> Required scope |
        `forms:write`
      source:
        openapi: ../openapi.yml
      display-name: Modify Form Submission
      request:
        name: UpdateSubmissionFormsRequest
        path-parameters:
          form_submission_id:
            type: string
            docs: Unique identifier for a Form Submission
        body:
          properties:
            formSubmissionData:
              type: optional<map<string, unknown>>
              docs: >-
                An existing **hidden field** defined on the form schema, and the
                corresponding value to set
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateSubmissionFormsResponse
        status-code: 200
      errors:
        - root.UpdateSubmissionFormsRequestBadRequestError
        - root.UpdateSubmissionFormsRequestUnauthorizedError
        - root.UpdateSubmissionFormsRequestForbiddenError
        - root.UpdateSubmissionFormsRequestNotFoundError
        - root.UpdateSubmissionFormsRequestConflictError
        - root.UpdateSubmissionFormsRequestTooManyRequestsError
        - root.UpdateSubmissionFormsRequestInternalServerError
      examples:
        - path-parameters:
            form_submission_id: 580e63e98c9a982ac9b8b741
          request: {}
          response:
            body:
              id: 6321ca84df3949bfc6752327
              displayName: Sample Form
              siteId: 62749158efef318abc8d5a0f
              workspaceId: 62749158efef318abc8d5a0f
              dateSubmitted: '2022-09-14T12:35:16Z'
              formResponse:
                First Name: Arthur
                Last Name: Dent
  source:
    openapi: ../openapi.yml
  display-name: Forms
webhooks:
  form_submission:
    audiences: []
    method: POST
    display-name: Form Submission
    headers: {}
    payload:
      type: FormSubmissionPayload
      docs: The Webhook payload for when a form is submitted
    examples:
      - payload:
          triggerType: form_submission
          payload:
            name: Contact Us
            siteId: 65427cf400e02b306eaa049c
            data:
              First Name: Zaphod
              Last Name: Beeblebrox
              email: zaphod@heartofgold.ai
              Phone Number: 15550000000
            schema:
              - fieldName: First Name
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c4
              - fieldName: Last Name
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c5
              - fieldName: email
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c6
              - fieldName: Phone Number
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c7
            submittedAt: '2022-09-14T12:35:16.117Z'
            id: 6321ca84df3949bfc6752327
            formId: 65429eadebe8a9f3a30f62d0
            formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
    docs: Information about a form that was subitted
",
    },
    "inventory.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Inventory",
          "endpoints": {
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:read",
                  ],
                },
              ],
              "display-name": "List Inventory",
              "docs": "List the current inventory levels for a particular SKU item.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.ListInventoryRequestBadRequestError",
                "root.ListInventoryRequestUnauthorizedError",
                "root.ListInventoryRequestForbiddenError",
                "root.ListInventoryRequestNotFoundError",
                "root.ListInventoryRequestConflictError",
                "root.ListInventoryRequestTooManyRequestsError",
                "root.ListInventoryRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "response": {
                    "body": {
                      "id": "5bfedb42bab0ad90fa7dad39",
                      "inventoryType": "infinite",
                      "quantity": 100,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/inventory",
              "request": {
                "name": "ListInventoryRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListInventoryResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Update Item Inventory",
              "docs": "Updates the current inventory levels for a particular SKU item. Updates may be given in one or two methods, absolutely or incrementally. Absolute updates are done by setting `quantity` directly. Incremental updates are by specifying the inventory delta in `updateQuantity` which is then added to the `quantity` stored on the server.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.UpdateInventoryRequestBadRequestError",
                "root.UpdateInventoryRequestUnauthorizedError",
                "root.UpdateInventoryRequestForbiddenError",
                "root.UpdateInventoryRequestNotFoundError",
                "root.UpdateInventoryRequestConflictError",
                "root.UpdateInventoryRequestTooManyRequestsError",
                "root.UpdateInventoryRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "request": {
                    "inventoryType": "infinite",
                  },
                  "response": {
                    "body": {
                      "id": "5bfedb42bab0ad90fa7dad39",
                      "inventoryType": "infinite",
                      "quantity": 100,
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/inventory",
              "request": {
                "body": {
                  "properties": {
                    "inventoryType": {
                      "docs": "infinite or finite",
                      "type": "UpdateInventoryRequestInventoryType",
                    },
                    "quantity": {
                      "docs": "Immediately sets quantity to this value.",
                      "type": "optional<double>",
                    },
                    "updateQuantity": {
                      "docs": "Adds this quantity to currently store quantity. Can be negative.",
                      "type": "optional<double>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateInventoryRequest",
                "path-parameters": {
                  "collection_id": {
                    "docs": "Unique identifier for a Collection",
                    "type": "string",
                  },
                  "item_id": {
                    "docs": "Unique identifier for an Item",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateInventoryResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EcommInventoryChangedPayload": {
            "docs": "The availabile inventory for an item",
            "inline": undefined,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a SKU item",
                "type": "optional<string>",
              },
              "inventoryType": {
                "docs": "infinite or finite",
                "type": "optional<EcommInventoryChangedPayloadInventoryType>",
              },
              "quantity": {
                "docs": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommInventoryChangedPayloadInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListInventoryResponse": {
            "docs": "The availabile inventory for an item",
            "inline": undefined,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a SKU item",
                "type": "optional<string>",
              },
              "inventoryType": {
                "docs": "infinite or finite",
                "type": "optional<ListInventoryResponseInventoryType>",
              },
              "quantity": {
                "docs": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListInventoryResponseInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateInventoryRequestInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateInventoryResponse": {
            "docs": "The availabile inventory for an item",
            "inline": undefined,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for a SKU item",
                "type": "optional<string>",
              },
              "inventoryType": {
                "docs": "infinite or finite",
                "type": "optional<UpdateInventoryResponseInventoryType>",
              },
              "quantity": {
                "docs": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateInventoryResponseInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "ecomm_inventory_changed": {
            "audiences": [],
            "display-name": "Updated eComm Inventory",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "id": "5bfedb42bab0ad90fa7dad39",
                  "quantity": 100,
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The availabile inventory for an item",
              "type": "EcommInventoryChangedPayload",
            },
          },
        },
      },
      "rawContents": "types:
  ListInventoryResponseInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  ListInventoryResponse:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
        access: read-only
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<ListInventoryResponseInventoryType>
        docs: infinite or finite
    source:
      openapi: ../openapi.yml
  UpdateInventoryRequestInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateInventoryResponseInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateInventoryResponse:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
        access: read-only
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<UpdateInventoryResponseInventoryType>
        docs: infinite or finite
    source:
      openapi: ../openapi.yml
  EcommInventoryChangedPayloadInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  EcommInventoryChangedPayload:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
        access: read-only
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<EcommInventoryChangedPayloadInventoryType>
        docs: infinite or finite
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /collections/{collection_id}/items/{item_id}/inventory
      method: GET
      auth:
        - OAuth2:
            - ecommerce:read
      docs: |
        List the current inventory levels for a particular SKU item.

        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      display-name: List Inventory
      request:
        name: ListInventoryRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
      response:
        docs: Request was successful
        type: ListInventoryResponse
        status-code: 200
      errors:
        - root.ListInventoryRequestBadRequestError
        - root.ListInventoryRequestUnauthorizedError
        - root.ListInventoryRequestForbiddenError
        - root.ListInventoryRequestNotFoundError
        - root.ListInventoryRequestConflictError
        - root.ListInventoryRequestTooManyRequestsError
        - root.ListInventoryRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 5bfedb42bab0ad90fa7dad39
              quantity: 100
              inventoryType: infinite
    update:
      path: /collections/{collection_id}/items/{item_id}/inventory
      method: PATCH
      auth:
        - OAuth2:
            - ecommerce:write
      docs: >
        Updates the current inventory levels for a particular SKU item. Updates
        may be given in one or two methods, absolutely or incrementally.
        Absolute updates are done by setting `quantity` directly. Incremental
        updates are by specifying the inventory delta in `updateQuantity` which
        is then added to the `quantity` stored on the server.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Item Inventory
      request:
        name: UpdateInventoryRequest
        path-parameters:
          collection_id:
            type: string
            docs: Unique identifier for a Collection
          item_id:
            type: string
            docs: Unique identifier for an Item
        body:
          properties:
            inventoryType:
              type: UpdateInventoryRequestInventoryType
              docs: infinite or finite
            updateQuantity:
              type: optional<double>
              docs: Adds this quantity to currently store quantity. Can be negative.
            quantity:
              type: optional<double>
              docs: Immediately sets quantity to this value.
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateInventoryResponse
        status-code: 200
      errors:
        - root.UpdateInventoryRequestBadRequestError
        - root.UpdateInventoryRequestUnauthorizedError
        - root.UpdateInventoryRequestForbiddenError
        - root.UpdateInventoryRequestNotFoundError
        - root.UpdateInventoryRequestConflictError
        - root.UpdateInventoryRequestTooManyRequestsError
        - root.UpdateInventoryRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            inventoryType: infinite
          response:
            body:
              id: 5bfedb42bab0ad90fa7dad39
              quantity: 100
              inventoryType: infinite
  source:
    openapi: ../openapi.yml
  display-name: Inventory
webhooks:
  ecomm_inventory_changed:
    audiences: []
    method: POST
    display-name: Updated eComm Inventory
    headers: {}
    payload:
      type: EcommInventoryChangedPayload
      docs: The availabile inventory for an item
    examples:
      - payload:
          id: 5bfedb42bab0ad90fa7dad39
          quantity: 100
",
    },
    "items.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "CollectionItemChangedPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CollectionItemChangedPayloadFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemChangedPayloadFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemCreatedPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CollectionItemCreatedPayloadFieldData>",
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Item",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemCreatedPayloadFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemDeletedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<CollectionItemDeletedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemDeletedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "collectionId": {
                "docs": "The ID of the collection",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of the collection item that was deleted",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The ID of the site",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The ID of the workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemUnpublishedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<CollectionItemUnpublishedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemUnpublishedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "collectionId": {
                "docs": "The ID of the collection",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of the collection item that was deleted",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The ID of the site",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The ID of the workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "collection_item_changed": {
            "audiences": [],
            "display-name": "Item Updated",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "fieldData": {
                    "color": "#db4b68",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "isArchived": false,
                  "isDraft": false,
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
              "type": "CollectionItemChangedPayload",
            },
          },
          "collection_item_created": {
            "audiences": [],
            "display-name": "Item Created",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "fieldData": {
                    "color": "#db4b68",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "isArchived": false,
                  "isDraft": false,
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
              "type": "CollectionItemCreatedPayload",
            },
          },
          "collection_item_deleted": {
            "audiences": [],
            "display-name": "Item Deleted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "collectionId": "664243617fcc8b464b23c4ee",
                    "id": "66424365e972c886137a1cf1",
                    "siteId": "65427cf400e02b306eaa049c",
                    "workspaceId": "625860a7a6c16d624927122f",
                  },
                  "triggerType": "collection_item_deleted,",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "CollectionItemDeletedPayload",
          },
          "collection_item_unpublished": {
            "audiences": [],
            "display-name": "Item Unpublished",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "collectionId": "664243617fcc8b464b23c4ee",
                    "id": "66424365e972c886137a1cf1",
                    "siteId": "65427cf400e02b306eaa049c",
                    "workspaceId": "625860a7a6c16d624927122f",
                  },
                  "triggerType": "collection_item_deleted,",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "CollectionItemUnpublishedPayload",
          },
        },
      },
      "rawContents": "types:
  CollectionItemCreatedPayloadFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemCreatedPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CollectionItemCreatedPayloadFieldData>
    source:
      openapi: ../openapi.yml
  CollectionItemChangedPayloadFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemChangedPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Item
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: The date the item was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CollectionItemChangedPayloadFieldData>
    source:
      openapi: ../openapi.yml
  CollectionItemDeletedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      id:
        type: optional<string>
        docs: The ID of the collection item that was deleted
      siteId:
        type: optional<string>
        docs: The ID of the site
      workspaceId:
        type: optional<string>
        docs: The ID of the workspace
      collectionId:
        type: optional<string>
        docs: The ID of the collection
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemDeletedPayload:
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<CollectionItemDeletedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
  CollectionItemUnpublishedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      id:
        type: optional<string>
        docs: The ID of the collection item that was deleted
      siteId:
        type: optional<string>
        docs: The ID of the site
      workspaceId:
        type: optional<string>
        docs: The ID of the workspace
      collectionId:
        type: optional<string>
        docs: The ID of the collection
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemUnpublishedPayload:
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<CollectionItemUnpublishedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
webhooks:
  collection_item_created:
    audiences: []
    method: POST
    display-name: Item Created
    headers: {}
    payload:
      type: CollectionItemCreatedPayload
      docs: >
        The fields that define the schema for a given Item are based on the
        Collection that Item belongs to. Beyond the user defined fields, there
        are a handful of additional fields that are automatically created for
        all items
    examples:
      - payload:
          id: 42b720ef280c7a7a3be8cabe
          cmsLocaleId: 653ad57de882f528b32e810e
          lastPublished: '2022-11-29T16:22:43.159Z'
          lastUpdated: '2022-11-17T17:19:43.282Z'
          createdOn: '2022-11-17T17:11:57.148Z'
          isArchived: false
          isDraft: false
          fieldData:
            name: Pan Galactic Gargle Blaster Recipe
            slug: pan-galactic-gargle-blaster
            date: '2022-11-18T00:00:00.000Z'
            featured: true
            color: '#db4b68'
  collection_item_changed:
    audiences: []
    method: POST
    display-name: Item Updated
    headers: {}
    payload:
      type: CollectionItemChangedPayload
      docs: >
        The fields that define the schema for a given Item are based on the
        Collection that Item belongs to. Beyond the user defined fields, there
        are a handful of additional fields that are automatically created for
        all items
    examples:
      - payload:
          id: 42b720ef280c7a7a3be8cabe
          cmsLocaleId: 653ad57de882f528b32e810e
          lastPublished: '2022-11-29T16:22:43.159Z'
          lastUpdated: '2022-11-17T17:19:43.282Z'
          createdOn: '2022-11-17T17:11:57.148Z'
          isArchived: false
          isDraft: false
          fieldData:
            name: Pan Galactic Gargle Blaster Recipe
            slug: pan-galactic-gargle-blaster
            date: '2022-11-18T00:00:00.000Z'
            featured: true
            color: '#db4b68'
  collection_item_deleted:
    audiences: []
    method: POST
    display-name: Item Deleted
    headers: {}
    payload: CollectionItemDeletedPayload
    examples:
      - payload:
          triggerType: collection_item_deleted,
          payload:
            id: 66424365e972c886137a1cf1
            siteId: 65427cf400e02b306eaa049c
            workspaceId: 625860a7a6c16d624927122f
            collectionId: 664243617fcc8b464b23c4ee
  collection_item_unpublished:
    audiences: []
    method: POST
    display-name: Item Unpublished
    headers: {}
    payload: CollectionItemUnpublishedPayload
    examples:
      - payload:
          triggerType: collection_item_deleted,
          payload:
            id: 66424365e972c886137a1cf1
            siteId: 65427cf400e02b306eaa049c
            workspaceId: 625860a7a6c16d624927122f
            collectionId: 664243617fcc8b464b23c4ee
",
    },
    "orders.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Orders",
          "endpoints": {
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:read",
                  ],
                },
              ],
              "display-name": "Get Order",
              "docs": "Retrieve a single product by its id. All of its SKUs will also be retrieved.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.GetOrdersRequestBadRequestError",
                "root.GetOrdersRequestUnauthorizedError",
                "root.GetOrdersRequestForbiddenError",
                "root.GetOrdersRequestNotFoundError",
                "root.GetOrdersRequestConflictError",
                "root.GetOrdersRequestTooManyRequestsError",
                "root.GetOrdersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": "\$ 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": "\$ 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": "\$ 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": "\$ 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": "\$ 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": "\$ 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": "\$ 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": "\$ 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}",
              "request": {
                "name": "GetOrdersRequest",
                "path-parameters": {
                  "order_id": {
                    "docs": "Unique identifier for an Order",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetOrdersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:read",
                  ],
                },
              ],
              "display-name": "List Orders",
              "docs": "List all orders created for a given site.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.ListOrdersRequestBadRequestError",
                "root.ListOrdersRequestUnauthorizedError",
                "root.ListOrdersRequestForbiddenError",
                "root.ListOrdersRequestNotFoundError",
                "root.ListOrdersRequestConflictError",
                "root.ListOrdersRequestTooManyRequestsError",
                "root.ListOrdersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                    "status": "pending",
                  },
                  "response": {
                    "body": {
                      "orders": [
                        {
                          "acceptedOn": "2024-04-10T13:16:21Z",
                          "allAddresses": [
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "billing",
                            },
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "shipping",
                            },
                          ],
                          "applicationFee": {
                            "string": "\$ 4.23 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "billingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "billing",
                          },
                          "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                          "customData": [
                            {
                              "key": "value",
                            },
                          ],
                          "customerInfo": {
                            "email": "arthur.dent@example.com",
                            "fullName": "Arthur Dent",
                          },
                          "customerPaid": {
                            "string": "\$ 211.55 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "downloadFiles": [
                            {
                              "id": "5e9a5eba75e0ac242e1b6f64",
                              "name": "The modern web design process - Webflow Ebook.pdf",
                              "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                            },
                          ],
                          "hasDownloads": false,
                          "isCustomerDeleted": false,
                          "isShippingRequired": false,
                          "metadata": {
                            "isBuyNow": false,
                          },
                          "netAmount": {
                            "string": "\$ 200.89 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                          "orderId": "7c1-9fd",
                          "paymentProcessor": "stripe",
                          "purchasedItems": [
                            {
                              "count": 2,
                              "height": 70,
                              "length": 9,
                              "productId": "66072fb61b89448912e26791",
                              "productName": "Luxurious Fresh Ball",
                              "productSlug": "luxurious-fresh-ball",
                              "rowTotal": {
                                "string": "\$ 111.22 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb71b89448912e2683f",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                              },
                              "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                              "variantPrice": {
                                "string": "\$ 55.61 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "weight": 11,
                              "width": 82,
                            },
                            {
                              "count": 1,
                              "height": 72,
                              "length": 18,
                              "productId": "66072fb61b89448912e2678b",
                              "productName": "Incredible Bronze Towels",
                              "productSlug": "incredible-bronze-towels",
                              "rowTotal": {
                                "string": "\$ 83.09 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb71b89448912e2681e",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e26729_image16.jpeg",
                              },
                              "variantName": "Incredible Bronze Towels Sleek: Frozen, Incredible: Metal",
                              "variantPrice": {
                                "string": "\$ 83.09 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                              "variantSlug": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                              "width": 19,
                            },
                          ],
                          "purchasedItemsCount": 3,
                          "shippingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "japanType": "kanji",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "shipping",
                          },
                          "shippingProvider": "Shipping Company, Co.",
                          "shippingTracking": "tr00000000002",
                          "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000002",
                          "status": "unfulfilled",
                          "stripeCard": {
                            "brand": "Visa",
                            "expires": {
                              "month": 4,
                              "year": 2025,
                            },
                            "last4": "4242",
                            "ownerName": "Arthur Dent",
                          },
                          "stripeDetails": {
                            "chargeId": "ch_3P410iJYFi4lcbXW0DxUkzCH",
                            "customerId": "cus_Ptod8KJBiiPgnH",
                            "paymentIntentId": "pi_3P410iJYFi4lcbXW0EKKgcVg",
                            "paymentMethod": "pm_1P410gJYFi4lcbXWbeKghqjK",
                          },
                          "totals": {
                            "extras": [
                              {
                                "description": "CA Taxes (6.25%)",
                                "name": "State Taxes",
                                "price": {
                                  "string": "\$3.44",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "tax",
                              },
                            ],
                          },
                        },
                        {
                          "acceptedOn": "2024-03-29T21:29:21Z",
                          "allAddresses": [
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "billing",
                            },
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "shipping",
                            },
                          ],
                          "applicationFee": {
                            "string": "\$ 2.37 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "billingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "billing",
                          },
                          "comment": "Example comment to myself",
                          "customData": [
                            {
                              "key": "value",
                            },
                          ],
                          "customerInfo": {
                            "email": "arthur.dent@example.com",
                            "fullName": "Arthur Dent",
                          },
                          "customerPaid": {
                            "string": "\$ 118.73 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "downloadFiles": [
                            {
                              "id": "5e9a5eba75e0ac242e1b6f64",
                              "name": "New product guide",
                              "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                            },
                          ],
                          "hasDownloads": false,
                          "isCustomerDeleted": false,
                          "isShippingRequired": true,
                          "metadata": {
                            "isBuyNow": false,
                          },
                          "netAmount": {
                            "string": "\$ 112.62 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "orderComment": "",
                          "orderId": "fc7-128",
                          "paymentProcessor": "stripe",
                          "purchasedItems": [
                            {
                              "count": 1,
                              "height": 70,
                              "length": 9,
                              "productId": "66072fb61b89448912e26791",
                              "productName": "Luxurious Fresh Ball",
                              "productSlug": "luxurious-fresh-ball",
                              "rowTotal": {
                                "string": "\$ 55.61 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb71b89448912e2683f",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                              },
                              "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                              "variantPrice": {
                                "string": "\$ 55.61 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "weight": 11,
                              "width": 82,
                            },
                            {
                              "count": 1,
                              "height": 85,
                              "length": 40,
                              "productId": "66072fb61b89448912e26799",
                              "productName": "Recycled Steel Gloves",
                              "productSlug": "recycled-steel-gloves",
                              "rowTotal": {
                                "string": "\$ 53.44 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb91b89448912e26ab9",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                              },
                              "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                              "variantPrice": {
                                "string": "\$ 53.44 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                              "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                              "weight": 38,
                              "width": 76,
                            },
                          ],
                          "purchasedItemsCount": 2,
                          "refundedOn": "2024-04-08T18:25:04Z",
                          "shippingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "shipping",
                          },
                          "shippingProvider": "Shipping Company, Co.",
                          "shippingTracking": "tr00000000001",
                          "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                          "status": "refunded",
                          "stripeCard": {
                            "brand": "Visa",
                            "expires": {
                              "month": 4,
                              "year": 2024,
                            },
                            "last4": "4242",
                            "ownerName": "Arthur Dent",
                          },
                          "stripeDetails": {
                            "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                            "customerId": "cus_PpRsNHwWdUoRKR",
                            "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                            "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                            "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                            "refundReason": "fraudulent",
                          },
                          "totals": {
                            "extras": [
                              {
                                "description": "NY Taxes (4.00%)",
                                "name": "State Taxes",
                                "price": {
                                  "string": "\$ 4.36 USD",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "tax",
                              },
                              {
                                "description": "NEW YORK Taxes (4.88%)",
                                "name": "City Taxes",
                                "price": {
                                  "string": "\$ 5.32 USD",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "tax",
                              },
                              {
                                "description": "",
                                "name": "Flat",
                                "price": {
                                  "string": "\$ 0.00 USD",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "shipping",
                              },
                            ],
                            "subtotal": {
                              "string": "\$ 109.05 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "total": {
                              "string": "\$ 118.73 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                          },
                        },
                      ],
                      "pagination": {
                        "limit": 100,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders",
              "request": {
                "name": "ListOrdersRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                  "status": {
                    "docs": "Filter the orders by status",
                    "type": "optional<nullable<ListOrdersRequestStatus>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListOrdersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "refund": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Refund Order",
              "docs": "This API will reverse a Stripe charge and refund an order back to a
customer. It will also set the order's status to `refunded`.


Required scope | `ecommerce:write`
",
              "errors": [
                "root.RefundOrdersRequestBadRequestError",
                "root.RefundOrdersRequestUnauthorizedError",
                "root.RefundOrdersRequestForbiddenError",
                "root.RefundOrdersRequestNotFoundError",
                "root.RefundOrdersRequestConflictError",
                "root.RefundOrdersRequestTooManyRequestsError",
                "root.RefundOrdersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": "\$ 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": "\$ 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": "\$ 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": "\$ 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": "\$ 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": "\$ 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": "\$ 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": "\$ 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}/refund",
              "request": {
                "body": {
                  "properties": {
                    "reason": {
                      "docs": "The reason for the refund",
                      "type": "optional<RefundOrdersRequestReason>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RefundOrdersRequest",
                "path-parameters": {
                  "order_id": {
                    "docs": "Unique identifier for an Order",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "RefundOrdersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Update Order",
              "docs": "This API lets you update the fields, `comment`, `shippingProvider`, and/or `shippingTracking` for a given order. All three fields can be updated simultaneously or independently.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.UpdateOrdersRequestBadRequestError",
                "root.UpdateOrdersRequestUnauthorizedError",
                "root.UpdateOrdersRequestForbiddenError",
                "root.UpdateOrdersRequestNotFoundError",
                "root.UpdateOrdersRequestConflictError",
                "root.UpdateOrdersRequestTooManyRequestsError",
                "root.UpdateOrdersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": "\$ 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": "\$ 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": "\$ 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": "\$ 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": "\$ 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": "\$ 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": "\$ 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": "\$ 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}",
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Arbitrary data for your records",
                      "type": "optional<string>",
                    },
                    "shippingProvider": {
                      "docs": "Company or method used to ship order",
                      "type": "optional<string>",
                    },
                    "shippingTracking": {
                      "docs": "Tracking number for order shipment",
                      "type": "optional<string>",
                    },
                    "shippingTrackingURL": {
                      "docs": "URL to track order shipment",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateOrdersRequest",
                "path-parameters": {
                  "order_id": {
                    "docs": "Unique identifier for an Order",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateOrdersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-fulfill": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Fulfill Order",
              "docs": "Updates an order's status to fulfilled

Required scope | `ecommerce:write`
",
              "errors": [
                "root.UpdateFulfillOrdersRequestBadRequestError",
                "root.UpdateFulfillOrdersRequestUnauthorizedError",
                "root.UpdateFulfillOrdersRequestForbiddenError",
                "root.UpdateFulfillOrdersRequestNotFoundError",
                "root.UpdateFulfillOrdersRequestConflictError",
                "root.UpdateFulfillOrdersRequestTooManyRequestsError",
                "root.UpdateFulfillOrdersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": "\$ 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": "\$ 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": "\$ 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": "\$ 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": "\$ 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": "\$ 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": "\$ 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": "\$ 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}/fulfill",
              "request": {
                "body": {
                  "properties": {
                    "sendOrderFulfilledEmail": {
                      "default": false,
                      "docs": "Whether or not the Order Fulfilled email should be sent",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateFulfillOrdersRequest",
                "path-parameters": {
                  "order_id": {
                    "docs": "Unique identifier for an Order",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateFulfillOrdersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-unfulfill": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Unfulfill Order",
              "docs": "Updates an order's status to unfulfilled

Required scope | `ecommerce:write`
",
              "errors": [
                "root.UpdateUnfulfillOrdersRequestBadRequestError",
                "root.UpdateUnfulfillOrdersRequestUnauthorizedError",
                "root.UpdateUnfulfillOrdersRequestForbiddenError",
                "root.UpdateUnfulfillOrdersRequestNotFoundError",
                "root.UpdateUnfulfillOrdersRequestConflictError",
                "root.UpdateUnfulfillOrdersRequestTooManyRequestsError",
                "root.UpdateUnfulfillOrdersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": "\$ 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": "\$ 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": "\$ 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": "\$ 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": "\$ 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": "\$ 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": "\$ 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": "\$ 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": "\$ 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": "\$ 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}/unfulfill",
              "request": {
                "name": "UpdateUnfulfillOrdersRequest",
                "path-parameters": {
                  "order_id": {
                    "docs": "Unique identifier for an Order",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateUnfulfillOrdersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EcommNewOrderPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<EcommNewOrderPayloadAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<EcommNewOrderPayloadApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<EcommNewOrderPayloadBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<EcommNewOrderPayloadCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<EcommNewOrderPayloadCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<EcommNewOrderPayloadDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<EcommNewOrderPayloadDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<EcommNewOrderPayloadMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<EcommNewOrderPayloadNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<EcommNewOrderPayloadPaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<EcommNewOrderPayloadPurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<EcommNewOrderPayloadShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<EcommNewOrderPayloadStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<EcommNewOrderPayloadStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<EcommNewOrderPayloadStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<EcommNewOrderPayloadTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<EcommNewOrderPayloadAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommNewOrderPayloadAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<EcommNewOrderPayloadBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommNewOrderPayloadBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<EcommNewOrderPayloadPurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<EcommNewOrderPayloadPurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<EcommNewOrderPayloadPurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<EcommNewOrderPayloadPurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<EcommNewOrderPayloadShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommNewOrderPayloadShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<EcommNewOrderPayloadStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<EcommNewOrderPayloadStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<EcommNewOrderPayloadTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<EcommNewOrderPayloadTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<EcommNewOrderPayloadTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<EcommNewOrderPayloadTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<EcommNewOrderPayloadTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<EcommOrderChangedPayloadAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<EcommOrderChangedPayloadApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<EcommOrderChangedPayloadBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<EcommOrderChangedPayloadCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<EcommOrderChangedPayloadCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<EcommOrderChangedPayloadDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<EcommOrderChangedPayloadDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<EcommOrderChangedPayloadMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<EcommOrderChangedPayloadNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<EcommOrderChangedPayloadPaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<EcommOrderChangedPayloadPurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<EcommOrderChangedPayloadShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<EcommOrderChangedPayloadStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<EcommOrderChangedPayloadStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<EcommOrderChangedPayloadStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<EcommOrderChangedPayloadTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<EcommOrderChangedPayloadAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommOrderChangedPayloadAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<EcommOrderChangedPayloadBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommOrderChangedPayloadBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<EcommOrderChangedPayloadPurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<EcommOrderChangedPayloadPurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<EcommOrderChangedPayloadShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommOrderChangedPayloadShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<EcommOrderChangedPayloadStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<EcommOrderChangedPayloadStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<EcommOrderChangedPayloadTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<EcommOrderChangedPayloadTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<EcommOrderChangedPayloadTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<EcommOrderChangedPayloadTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<EcommOrderChangedPayloadTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<GetOrdersResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<GetOrdersResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<GetOrdersResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<GetOrdersResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<GetOrdersResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<GetOrdersResponseDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<GetOrdersResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<GetOrdersResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<GetOrdersResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<GetOrdersResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<GetOrdersResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<GetOrdersResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<GetOrdersResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<GetOrdersResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<GetOrdersResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<GetOrdersResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<GetOrdersResponseAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<GetOrdersResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<GetOrdersResponseBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<GetOrdersResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<GetOrdersResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<GetOrdersResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<GetOrdersResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<GetOrdersResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<GetOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<GetOrdersResponseShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<GetOrdersResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<GetOrdersResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<GetOrdersResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<GetOrdersResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<GetOrdersResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<GetOrdersResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<GetOrdersResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<GetOrdersResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetOrdersResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersRequestStatus": {
            "enum": [
              "pending",
              "refunded",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "fulfilled",
              "disputed",
              "unfulfilled",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponse": {
            "docs": "Results from order list",
            "inline": undefined,
            "properties": {
              "orders": {
                "docs": "List of orders",
                "type": "optional<list<ListOrdersResponseOrdersItem>>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListOrdersResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<ListOrdersResponseOrdersItemAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<ListOrdersResponseOrdersItemApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<ListOrdersResponseOrdersItemBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<ListOrdersResponseOrdersItemCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<ListOrdersResponseOrdersItemCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<ListOrdersResponseOrdersItemDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<ListOrdersResponseOrdersItemDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<ListOrdersResponseOrdersItemMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<ListOrdersResponseOrdersItemNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<ListOrdersResponseOrdersItemPaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<ListOrdersResponseOrdersItemPurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<ListOrdersResponseOrdersItemShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<ListOrdersResponseOrdersItemStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<ListOrdersResponseOrdersItemStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<ListOrdersResponseOrdersItemStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<ListOrdersResponseOrdersItemTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<ListOrdersResponseOrdersItemAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<ListOrdersResponseOrdersItemAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<ListOrdersResponseOrdersItemBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<ListOrdersResponseOrdersItemBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<ListOrdersResponseOrdersItemPurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<ListOrdersResponseOrdersItemPurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<ListOrdersResponseOrdersItemPurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemPurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<ListOrdersResponseOrdersItemShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<ListOrdersResponseOrdersItemShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<ListOrdersResponseOrdersItemStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<ListOrdersResponseOrdersItemStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<ListOrdersResponseOrdersItemTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<ListOrdersResponseOrdersItemTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<ListOrdersResponseOrdersItemTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<ListOrdersResponseOrdersItemTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<ListOrdersResponseOrdersItemTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponseOrdersItemTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListOrdersResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersRequestReason": {
            "docs": "The reason for the refund",
            "enum": [
              "duplicate",
              "fraudulent",
              "requested",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<RefundOrdersResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<RefundOrdersResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<RefundOrdersResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<RefundOrdersResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<RefundOrdersResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<RefundOrdersResponseDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<RefundOrdersResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<RefundOrdersResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<RefundOrdersResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<RefundOrdersResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<RefundOrdersResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<RefundOrdersResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<RefundOrdersResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<RefundOrdersResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<RefundOrdersResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<RefundOrdersResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<RefundOrdersResponseAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<RefundOrdersResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<RefundOrdersResponseBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<RefundOrdersResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<RefundOrdersResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<RefundOrdersResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<RefundOrdersResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<RefundOrdersResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<RefundOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<RefundOrdersResponseShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<RefundOrdersResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<RefundOrdersResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<RefundOrdersResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<RefundOrdersResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<RefundOrdersResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<RefundOrdersResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<RefundOrdersResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<RefundOrdersResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RefundOrdersResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<UpdateFulfillOrdersResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<UpdateFulfillOrdersResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<UpdateFulfillOrdersResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<UpdateFulfillOrdersResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<UpdateFulfillOrdersResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<UpdateFulfillOrdersResponseDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<UpdateFulfillOrdersResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<UpdateFulfillOrdersResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<UpdateFulfillOrdersResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<UpdateFulfillOrdersResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<UpdateFulfillOrdersResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<UpdateFulfillOrdersResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<UpdateFulfillOrdersResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<UpdateFulfillOrdersResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<UpdateFulfillOrdersResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<UpdateFulfillOrdersResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateFulfillOrdersResponseAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateFulfillOrdersResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateFulfillOrdersResponseBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateFulfillOrdersResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<UpdateFulfillOrdersResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<UpdateFulfillOrdersResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<UpdateFulfillOrdersResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateFulfillOrdersResponseShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateFulfillOrdersResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<UpdateFulfillOrdersResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<UpdateFulfillOrdersResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<UpdateFulfillOrdersResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<UpdateFulfillOrdersResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<UpdateFulfillOrdersResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<UpdateFulfillOrdersResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<UpdateFulfillOrdersResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateFulfillOrdersResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<UpdateOrdersResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<UpdateOrdersResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<UpdateOrdersResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<UpdateOrdersResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<UpdateOrdersResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<UpdateOrdersResponseDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<UpdateOrdersResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<UpdateOrdersResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<UpdateOrdersResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<UpdateOrdersResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<UpdateOrdersResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<UpdateOrdersResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<UpdateOrdersResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<UpdateOrdersResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<UpdateOrdersResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<UpdateOrdersResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateOrdersResponseAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateOrdersResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateOrdersResponseBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateOrdersResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<UpdateOrdersResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<UpdateOrdersResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<UpdateOrdersResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<UpdateOrdersResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<UpdateOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateOrdersResponseShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateOrdersResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<UpdateOrdersResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<UpdateOrdersResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<UpdateOrdersResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<UpdateOrdersResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<UpdateOrdersResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<UpdateOrdersResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<UpdateOrdersResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateOrdersResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<nullable<datetime>>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<UpdateUnfulfillOrdersResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<UpdateUnfulfillOrdersResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<UpdateUnfulfillOrdersResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<UpdateUnfulfillOrdersResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<UpdateUnfulfillOrdersResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<nullable<UpdateUnfulfillOrdersResponseDisputeLastStatus>>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<nullable<datetime>>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<UpdateUnfulfillOrdersResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<nullable<datetime>>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<UpdateUnfulfillOrdersResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<UpdateUnfulfillOrdersResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "access": "read-only",
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<UpdateUnfulfillOrdersResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<UpdateUnfulfillOrdersResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<nullable<datetime>>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<UpdateUnfulfillOrdersResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<nullable<string>>",
              },
              "shippingTrackingURL": {
                "type": "optional<nullable<string>>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<UpdateUnfulfillOrdersResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<UpdateUnfulfillOrdersResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<UpdateUnfulfillOrdersResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<UpdateUnfulfillOrdersResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateUnfulfillOrdersResponseAllAddressesItemJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateUnfulfillOrdersResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateUnfulfillOrdersResponseBillingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateUnfulfillOrdersResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "productId": {
                "access": "read-only",
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<nullable<double>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<nullable<UpdateUnfulfillOrdersResponseShippingAddressJapanType>>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<UpdateUnfulfillOrdersResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<UpdateUnfulfillOrdersResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<UpdateUnfulfillOrdersResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<nullable<string>>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<nullable<string>>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<nullable<string>>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<nullable<string>>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<nullable<string>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<UpdateUnfulfillOrdersResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<UpdateUnfulfillOrdersResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<UpdateUnfulfillOrdersResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<UpdateUnfulfillOrdersResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<UpdateUnfulfillOrdersResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUnfulfillOrdersResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "ecomm_new_order": {
            "audiences": [],
            "display-name": "New eComm Order",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "acceptedOn": "2024-03-29T21:29:21Z",
                  "allAddresses": [
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "billing",
                    },
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "shipping",
                    },
                  ],
                  "applicationFee": {
                    "string": "\$ 2.37 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "billingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "billing",
                  },
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "customData": [
                    {
                      "key": "value",
                    },
                  ],
                  "customerInfo": {
                    "email": "arthur.dent@example.com",
                    "fullName": "Arthur Dent",
                  },
                  "customerPaid": {
                    "string": "\$ 118.73 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "disputeLastStatus": "charge_refunded",
                  "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                  "disputedOn": "2024-03-29T21:29:21Z",
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                    },
                  ],
                  "fulfilledOn": "2024-03-29T21:29:21Z",
                  "hasDownloads": false,
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "metadata": {
                    "isBuyNow": false,
                  },
                  "netAmount": {
                    "string": "\$ 112.62 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                  "orderId": "fc7-128",
                  "paymentProcessor": "stripe",
                  "purchasedItems": [
                    {
                      "count": 1,
                      "height": 70,
                      "length": 9,
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "rowTotal": {
                        "string": "\$ 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb71b89448912e2683f",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      },
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantPrice": {
                        "string": "\$ 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "weight": 11,
                      "width": 82,
                    },
                    {
                      "count": 1,
                      "height": 85,
                      "length": 40,
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "rowTotal": {
                        "string": "\$ 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      },
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantPrice": {
                        "string": "\$ 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "weight": 38,
                      "width": 76,
                    },
                  ],
                  "purchasedItemsCount": 2,
                  "refundedOn": "2024-04-08T18:25:04Z",
                  "shippingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "japanType": "kanji",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "shipping",
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "status": "refunded",
                  "stripeCard": {
                    "brand": "Visa",
                    "expires": {
                      "month": 4,
                      "year": 2024,
                    },
                    "last4": "4242",
                    "ownerName": "Arthur Dent",
                  },
                  "stripeDetails": {
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent",
                  },
                  "totals": {
                    "extras": [
                      {
                        "description": "NY Taxes (4.00%)",
                        "name": "State Taxes",
                        "price": {
                          "string": "\$ 4.36 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "NEW YORK Taxes (4.88%)",
                        "name": "City Taxes",
                        "price": {
                          "string": "\$ 5.32 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "",
                        "name": "Flat",
                        "price": {
                          "string": "\$ 0.00 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "shipping",
                      },
                    ],
                    "subtotal": {
                      "string": "\$ 109.05 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                    "total": {
                      "string": "\$ 118.73 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "EcommNewOrderPayload",
          },
          "ecomm_order_changed": {
            "audiences": [],
            "display-name": "Updated eComm Order",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "acceptedOn": "2024-03-29T21:29:21Z",
                  "allAddresses": [
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "billing",
                    },
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "shipping",
                    },
                  ],
                  "applicationFee": {
                    "string": "\$ 2.37 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "billingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "billing",
                  },
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "customData": [
                    {
                      "key": "value",
                    },
                  ],
                  "customerInfo": {
                    "email": "arthur.dent@example.com",
                    "fullName": "Arthur Dent",
                  },
                  "customerPaid": {
                    "string": "\$ 118.73 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "disputeLastStatus": "charge_refunded",
                  "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                  "disputedOn": "2024-03-29T21:29:21Z",
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                    },
                  ],
                  "fulfilledOn": "2024-03-29T21:29:21Z",
                  "hasDownloads": false,
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "metadata": {
                    "isBuyNow": false,
                  },
                  "netAmount": {
                    "string": "\$ 112.62 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                  "orderId": "fc7-128",
                  "paymentProcessor": "stripe",
                  "purchasedItems": [
                    {
                      "count": 1,
                      "height": 70,
                      "length": 9,
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "rowTotal": {
                        "string": "\$ 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb71b89448912e2683f",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      },
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantPrice": {
                        "string": "\$ 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "weight": 11,
                      "width": 82,
                    },
                    {
                      "count": 1,
                      "height": 85,
                      "length": 40,
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "rowTotal": {
                        "string": "\$ 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      },
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantPrice": {
                        "string": "\$ 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "weight": 38,
                      "width": 76,
                    },
                  ],
                  "purchasedItemsCount": 2,
                  "refundedOn": "2024-04-08T18:25:04Z",
                  "shippingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "japanType": "kanji",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "shipping",
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "status": "refunded",
                  "stripeCard": {
                    "brand": "Visa",
                    "expires": {
                      "month": 4,
                      "year": 2024,
                    },
                    "last4": "4242",
                    "ownerName": "Arthur Dent",
                  },
                  "stripeDetails": {
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent",
                  },
                  "totals": {
                    "extras": [
                      {
                        "description": "NY Taxes (4.00%)",
                        "name": "State Taxes",
                        "price": {
                          "string": "\$ 4.36 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "NEW YORK Taxes (4.88%)",
                        "name": "City Taxes",
                        "price": {
                          "string": "\$ 5.32 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "",
                        "name": "Flat",
                        "price": {
                          "string": "\$ 0.00 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "shipping",
                      },
                    ],
                    "subtotal": {
                      "string": "\$ 109.05 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                    "total": {
                      "string": "\$ 118.73 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "EcommOrderChangedPayload",
          },
        },
      },
      "rawContents": "types:
  ListOrdersRequestStatus:
    enum:
      - pending
      - refunded
      - value: dispute-lost
        name: DisputeLost
      - fulfilled
      - disputed
      - unfulfilled
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<ListOrdersResponseOrdersItemAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<ListOrdersResponseOrdersItemAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<ListOrdersResponseOrdersItemShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<ListOrdersResponseOrdersItemShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<ListOrdersResponseOrdersItemBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<ListOrdersResponseOrdersItemBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<ListOrdersResponseOrdersItemPurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<ListOrdersResponseOrdersItemPurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<ListOrdersResponseOrdersItemPurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<ListOrdersResponseOrdersItemPurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<ListOrdersResponseOrdersItemStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<ListOrdersResponseOrdersItemStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemPaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  ListOrdersResponseOrdersItemTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<ListOrdersResponseOrdersItemTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<ListOrdersResponseOrdersItemTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<ListOrdersResponseOrdersItemTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<ListOrdersResponseOrdersItemTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<ListOrdersResponseOrdersItemTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItemDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponseOrdersItem:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<ListOrdersResponseOrdersItemStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<ListOrdersResponseOrdersItemDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<ListOrdersResponseOrdersItemCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<ListOrdersResponseOrdersItemNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<ListOrdersResponseOrdersItemApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<ListOrdersResponseOrdersItemAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<ListOrdersResponseOrdersItemShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<ListOrdersResponseOrdersItemBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<ListOrdersResponseOrdersItemCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<ListOrdersResponseOrdersItemPurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<ListOrdersResponseOrdersItemStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<ListOrdersResponseOrdersItemStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<ListOrdersResponseOrdersItemPaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<ListOrdersResponseOrdersItemMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<ListOrdersResponseOrdersItemTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<ListOrdersResponseOrdersItemDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListOrdersResponse:
    docs: Results from order list
    properties:
      orders:
        type: optional<list<ListOrdersResponseOrdersItem>>
        docs: List of orders
      pagination:
        type: optional<ListOrdersResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  GetOrdersResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<GetOrdersResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<GetOrdersResponseAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<GetOrdersResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<GetOrdersResponseShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<GetOrdersResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<GetOrdersResponseBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<GetOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<GetOrdersResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<GetOrdersResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<GetOrdersResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<GetOrdersResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<GetOrdersResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<GetOrdersResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  GetOrdersResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<GetOrdersResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<GetOrdersResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<GetOrdersResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<GetOrdersResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<GetOrdersResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  GetOrdersResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<GetOrdersResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<GetOrdersResponseDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<GetOrdersResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<GetOrdersResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<GetOrdersResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<GetOrdersResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<GetOrdersResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<GetOrdersResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<GetOrdersResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<GetOrdersResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<GetOrdersResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<GetOrdersResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<GetOrdersResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<GetOrdersResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<GetOrdersResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<GetOrdersResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<UpdateOrdersResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<UpdateOrdersResponseAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<UpdateOrdersResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<UpdateOrdersResponseShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<UpdateOrdersResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<UpdateOrdersResponseBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<UpdateOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<UpdateOrdersResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<UpdateOrdersResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<UpdateOrdersResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<UpdateOrdersResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<UpdateOrdersResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<UpdateOrdersResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateOrdersResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<UpdateOrdersResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<UpdateOrdersResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<UpdateOrdersResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<UpdateOrdersResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<UpdateOrdersResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateOrdersResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<UpdateOrdersResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<UpdateOrdersResponseDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<UpdateOrdersResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<UpdateOrdersResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<UpdateOrdersResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<UpdateOrdersResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<UpdateOrdersResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<UpdateOrdersResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<UpdateOrdersResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<UpdateOrdersResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<UpdateOrdersResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<UpdateOrdersResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<UpdateOrdersResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<UpdateOrdersResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<UpdateOrdersResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<UpdateOrdersResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<UpdateFulfillOrdersResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<UpdateFulfillOrdersResponseAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<UpdateFulfillOrdersResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<UpdateFulfillOrdersResponseShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<UpdateFulfillOrdersResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<UpdateFulfillOrdersResponseBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<UpdateFulfillOrdersResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<UpdateFulfillOrdersResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<UpdateFulfillOrdersResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<UpdateFulfillOrdersResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<UpdateFulfillOrdersResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<UpdateFulfillOrdersResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateFulfillOrdersResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<UpdateFulfillOrdersResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<UpdateFulfillOrdersResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<UpdateFulfillOrdersResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<UpdateFulfillOrdersResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<UpdateFulfillOrdersResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateFulfillOrdersResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<UpdateFulfillOrdersResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<UpdateFulfillOrdersResponseDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<UpdateFulfillOrdersResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<UpdateFulfillOrdersResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<UpdateFulfillOrdersResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<UpdateFulfillOrdersResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<UpdateFulfillOrdersResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<UpdateFulfillOrdersResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<UpdateFulfillOrdersResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<UpdateFulfillOrdersResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<UpdateFulfillOrdersResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<UpdateFulfillOrdersResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<UpdateFulfillOrdersResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<UpdateFulfillOrdersResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<UpdateFulfillOrdersResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<UpdateFulfillOrdersResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<UpdateUnfulfillOrdersResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<UpdateUnfulfillOrdersResponseAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<UpdateUnfulfillOrdersResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<UpdateUnfulfillOrdersResponseShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<UpdateUnfulfillOrdersResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: >-
          optional<nullable<UpdateUnfulfillOrdersResponseBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: >-
        optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<UpdateUnfulfillOrdersResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<UpdateUnfulfillOrdersResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<UpdateUnfulfillOrdersResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUnfulfillOrdersResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<UpdateUnfulfillOrdersResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<UpdateUnfulfillOrdersResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<UpdateUnfulfillOrdersResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<UpdateUnfulfillOrdersResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<UpdateUnfulfillOrdersResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUnfulfillOrdersResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<UpdateUnfulfillOrdersResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<UpdateUnfulfillOrdersResponseDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<UpdateUnfulfillOrdersResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<UpdateUnfulfillOrdersResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<UpdateUnfulfillOrdersResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<UpdateUnfulfillOrdersResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<UpdateUnfulfillOrdersResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<UpdateUnfulfillOrdersResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<UpdateUnfulfillOrdersResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<UpdateUnfulfillOrdersResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<UpdateUnfulfillOrdersResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<UpdateUnfulfillOrdersResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<UpdateUnfulfillOrdersResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<UpdateUnfulfillOrdersResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<UpdateUnfulfillOrdersResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<UpdateUnfulfillOrdersResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  RefundOrdersRequestReason:
    enum:
      - duplicate
      - fraudulent
      - requested
    docs: The reason for the refund
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<RefundOrdersResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<RefundOrdersResponseAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<RefundOrdersResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<RefundOrdersResponseShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<RefundOrdersResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<RefundOrdersResponseBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<RefundOrdersResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<RefundOrdersResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<RefundOrdersResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<RefundOrdersResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<RefundOrdersResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<RefundOrdersResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<RefundOrdersResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  RefundOrdersResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<RefundOrdersResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<RefundOrdersResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<RefundOrdersResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<RefundOrdersResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<RefundOrdersResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  RefundOrdersResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<RefundOrdersResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<RefundOrdersResponseDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<RefundOrdersResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<RefundOrdersResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<RefundOrdersResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<RefundOrdersResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<RefundOrdersResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<RefundOrdersResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<RefundOrdersResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<RefundOrdersResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<RefundOrdersResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<RefundOrdersResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<RefundOrdersResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<RefundOrdersResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<RefundOrdersResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<RefundOrdersResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<EcommNewOrderPayloadAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<EcommNewOrderPayloadAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<EcommNewOrderPayloadShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<EcommNewOrderPayloadShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<EcommNewOrderPayloadBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<EcommNewOrderPayloadBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<EcommNewOrderPayloadPurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<EcommNewOrderPayloadPurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<EcommNewOrderPayloadPurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<EcommNewOrderPayloadPurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<EcommNewOrderPayloadStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<EcommNewOrderPayloadStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<EcommNewOrderPayloadTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<EcommNewOrderPayloadTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<EcommNewOrderPayloadTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<EcommNewOrderPayloadTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<EcommNewOrderPayloadTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayload:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<EcommNewOrderPayloadStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<EcommNewOrderPayloadDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<EcommNewOrderPayloadCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<EcommNewOrderPayloadNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<EcommNewOrderPayloadApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<EcommNewOrderPayloadAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<EcommNewOrderPayloadShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<EcommNewOrderPayloadBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<EcommNewOrderPayloadCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<EcommNewOrderPayloadPurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<EcommNewOrderPayloadStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<EcommNewOrderPayloadStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<EcommNewOrderPayloadPaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<EcommNewOrderPayloadMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<EcommNewOrderPayloadTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<EcommNewOrderPayloadDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<EcommOrderChangedPayloadAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<EcommOrderChangedPayloadAllAddressesItemJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<EcommOrderChangedPayloadShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<EcommOrderChangedPayloadShippingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<EcommOrderChangedPayloadBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<nullable<EcommOrderChangedPayloadBillingAddressJapanType>>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<EcommOrderChangedPayloadPurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
        access: read-only
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<EcommOrderChangedPayloadPurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<nullable<double>>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<nullable<double>>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<nullable<double>>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<nullable<double>>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<nullable<string>>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<nullable<string>>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<nullable<string>>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<nullable<string>>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<nullable<string>>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<nullable<string>>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<EcommOrderChangedPayloadStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<EcommOrderChangedPayloadStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<EcommOrderChangedPayloadTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<EcommOrderChangedPayloadTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<EcommOrderChangedPayloadTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<EcommOrderChangedPayloadTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<EcommOrderChangedPayloadTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayload:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
        access: read-only
      status:
        type: optional<EcommOrderChangedPayloadStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<nullable<datetime>>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<nullable<datetime>>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<nullable<datetime>>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<nullable<datetime>>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<nullable<EcommOrderChangedPayloadDisputeLastStatus>>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<EcommOrderChangedPayloadCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<EcommOrderChangedPayloadNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<EcommOrderChangedPayloadApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<EcommOrderChangedPayloadAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<EcommOrderChangedPayloadShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<EcommOrderChangedPayloadBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<nullable<string>>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<nullable<string>>
        validation:
          format: uri
      customerInfo:
        type: optional<EcommOrderChangedPayloadCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<EcommOrderChangedPayloadPurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<EcommOrderChangedPayloadStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<EcommOrderChangedPayloadStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<EcommOrderChangedPayloadPaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<EcommOrderChangedPayloadMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<EcommOrderChangedPayloadTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<EcommOrderChangedPayloadDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/orders
      method: GET
      auth:
        - OAuth2:
            - ecommerce:read
      docs: |
        List all orders created for a given site.

        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      display-name: List Orders
      request:
        name: ListOrdersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          status:
            type: optional<nullable<ListOrdersRequestStatus>>
            docs: Filter the orders by status
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: ListOrdersResponse
        status-code: 200
      errors:
        - root.ListOrdersRequestBadRequestError
        - root.ListOrdersRequestUnauthorizedError
        - root.ListOrdersRequestForbiddenError
        - root.ListOrdersRequestNotFoundError
        - root.ListOrdersRequestConflictError
        - root.ListOrdersRequestTooManyRequestsError
        - root.ListOrdersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            status: pending
            offset: 1.1
            limit: 1.1
          response:
            body:
              orders:
                - orderId: 7c1-9fd
                  status: unfulfilled
                  comment: >-
                    Customer requested gift wrapping and a personalized note
                    saying: Happy Birthday, Ford! 🎉 Please ensure the item is
                    packed with extra bubble wrap for safe transit.
                  orderComment: >-
                    Please gift wrap with a personal note saying "Happy
                    Birthday, Ford! 🎉
                  acceptedOn: '2024-04-10T13:16:21Z'
                  customerPaid:
                    unit: USD
                    value: '5892'
                    string: \$ 211.55 USD
                  netAmount:
                    unit: USD
                    value: '5892'
                    string: \$ 200.89 USD
                  applicationFee:
                    unit: USD
                    value: '5892'
                    string: \$ 4.23 USD
                  allAddresses:
                    - type: billing
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                    - type: shipping
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                  shippingAddress:
                    type: shipping
                    japanType: kanji
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  billingAddress:
                    type: billing
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  shippingProvider: Shipping Company, Co.
                  shippingTracking: tr00000000002
                  shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000002
                  customerInfo:
                    fullName: Arthur Dent
                    email: arthur.dent@example.com
                  purchasedItems:
                    - count: 2
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: \$ 111.22 USD
                      productId: 66072fb61b89448912e26791
                      productName: Luxurious Fresh Ball
                      productSlug: luxurious-fresh-ball
                      variantId: 66072fb71b89448912e2683f
                      variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                      variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: \$ 55.61 USD
                      weight: 11
                      width: 82
                      height: 70
                      length: 9
                    - count: 1
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: \$ 83.09 USD
                      productId: 66072fb61b89448912e2678b
                      productName: Incredible Bronze Towels
                      productSlug: incredible-bronze-towels
                      variantId: 66072fb71b89448912e2681e
                      variantName: >-
                        Incredible Bronze Towels Sleek: Frozen, Incredible:
                        Metal
                      variantSlug: incredible-bronze-towels-sleek-frozen-incredible-metal
                      variantSKU: incredible-bronze-towels-sleek-frozen-incredible-metal
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e26729_image16.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: \$ 83.09 USD
                      width: 19
                      height: 72
                      length: 18
                  purchasedItemsCount: 3
                  stripeDetails:
                    paymentMethod: pm_1P410gJYFi4lcbXWbeKghqjK
                    paymentIntentId: pi_3P410iJYFi4lcbXW0EKKgcVg
                    customerId: cus_Ptod8KJBiiPgnH
                    chargeId: ch_3P410iJYFi4lcbXW0DxUkzCH
                  stripeCard:
                    last4: '4242'
                    brand: Visa
                    ownerName: Arthur Dent
                    expires:
                      year: 2025
                      month: 4
                  customData:
                    - key: value
                  metadata:
                    isBuyNow: false
                  isCustomerDeleted: false
                  isShippingRequired: false
                  hasDownloads: false
                  paymentProcessor: stripe
                  totals:
                    extras:
                      - type: tax
                        name: State Taxes
                        description: CA Taxes (6.25%)
                        price:
                          unit: USD
                          value: '5892'
                          string: \$3.44
                  downloadFiles:
                    - id: 5e9a5eba75e0ac242e1b6f64
                      name: The modern web design process - Webflow Ebook.pdf
                      url: >-
                        https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
                - orderId: fc7-128
                  status: refunded
                  comment: Example comment to myself
                  orderComment: ''
                  acceptedOn: '2024-03-29T21:29:21Z'
                  refundedOn: '2024-04-08T18:25:04Z'
                  customerPaid:
                    unit: USD
                    value: '5892'
                    string: \$ 118.73 USD
                  netAmount:
                    unit: USD
                    value: '5892'
                    string: \$ 112.62 USD
                  applicationFee:
                    unit: USD
                    value: '5892'
                    string: \$ 2.37 USD
                  allAddresses:
                    - type: billing
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                    - type: shipping
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                  shippingAddress:
                    type: shipping
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  billingAddress:
                    type: billing
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  shippingProvider: Shipping Company, Co.
                  shippingTracking: tr00000000001
                  shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
                  customerInfo:
                    fullName: Arthur Dent
                    email: arthur.dent@example.com
                  purchasedItems:
                    - count: 1
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: \$ 55.61 USD
                      productId: 66072fb61b89448912e26791
                      productName: Luxurious Fresh Ball
                      productSlug: luxurious-fresh-ball
                      variantId: 66072fb71b89448912e2683f
                      variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                      variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: \$ 55.61 USD
                      weight: 11
                      width: 82
                      height: 70
                      length: 9
                    - count: 1
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: \$ 53.44 USD
                      productId: 66072fb61b89448912e26799
                      productName: Recycled Steel Gloves
                      productSlug: recycled-steel-gloves
                      variantId: 66072fb91b89448912e26ab9
                      variantName: >-
                        Recycled Steel Gloves Electronic: Granite, Handcrafted:
                        grey
                      variantSlug: >-
                        recycled-steel-gloves-electronic-granite-handcrafted-grey
                      variantSKU: >-
                        recycled-steel-gloves-electronic-granite-handcrafted-grey
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: \$ 53.44 USD
                      weight: 38
                      width: 76
                      height: 85
                      length: 40
                  purchasedItemsCount: 2
                  stripeDetails:
                    paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                    paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                    customerId: cus_PpRsNHwWdUoRKR
                    chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                    refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                    refundReason: fraudulent
                  stripeCard:
                    last4: '4242'
                    brand: Visa
                    ownerName: Arthur Dent
                    expires:
                      year: 2024
                      month: 4
                  customData:
                    - key: value
                  metadata:
                    isBuyNow: false
                  isCustomerDeleted: false
                  isShippingRequired: true
                  hasDownloads: false
                  paymentProcessor: stripe
                  totals:
                    subtotal:
                      unit: USD
                      value: '5892'
                      string: \$ 109.05 USD
                    extras:
                      - type: tax
                        name: State Taxes
                        description: NY Taxes (4.00%)
                        price:
                          unit: USD
                          value: '5892'
                          string: \$ 4.36 USD
                      - type: tax
                        name: City Taxes
                        description: NEW YORK Taxes (4.88%)
                        price:
                          unit: USD
                          value: '5892'
                          string: \$ 5.32 USD
                      - type: shipping
                        name: Flat
                        description: ''
                        price:
                          unit: USD
                          value: '5892'
                          string: \$ 0.00 USD
                    total:
                      unit: USD
                      value: '5892'
                      string: \$ 118.73 USD
                  downloadFiles:
                    - id: 5e9a5eba75e0ac242e1b6f64
                      name: New product guide
                      url: >-
                        https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
              pagination:
                limit: 100
                offset: 0
                total: 2
    get:
      path: /sites/{site_id}/orders/{order_id}
      method: GET
      auth:
        - OAuth2:
            - ecommerce:read
      docs: >
        Retrieve a single product by its id. All of its SKUs will also be
        retrieved.


        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Order
      request:
        name: GetOrdersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          order_id:
            type: string
            docs: Unique identifier for an Order
      response:
        docs: Request was successful
        type: GetOrdersResponse
        status-code: 200
      errors:
        - root.GetOrdersRequestBadRequestError
        - root.GetOrdersRequestUnauthorizedError
        - root.GetOrdersRequestForbiddenError
        - root.GetOrdersRequestNotFoundError
        - root.GetOrdersRequestConflictError
        - root.GetOrdersRequestTooManyRequestsError
        - root.GetOrdersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: \$ 118.73 USD
              netAmount:
                unit: USD
                value: '5892'
                string: \$ 112.62 USD
              applicationFee:
                unit: USD
                value: '5892'
                string: \$ 2.37 USD
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: \$ 109.05 USD
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 4.36 USD
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 5.32 USD
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 0.00 USD
                total:
                  unit: USD
                  value: '5892'
                  string: \$ 118.73 USD
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    update:
      path: /sites/{site_id}/orders/{order_id}
      method: PATCH
      auth:
        - OAuth2:
            - ecommerce:write
      docs: >
        This API lets you update the fields, `comment`, `shippingProvider`,
        and/or `shippingTracking` for a given order. All three fields can be
        updated simultaneously or independently.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Order
      request:
        name: UpdateOrdersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          order_id:
            type: string
            docs: Unique identifier for an Order
        body:
          properties:
            comment:
              type: optional<string>
              docs: Arbitrary data for your records
            shippingProvider:
              type: optional<string>
              docs: Company or method used to ship order
            shippingTracking:
              type: optional<string>
              docs: Tracking number for order shipment
            shippingTrackingURL:
              type: optional<string>
              docs: URL to track order shipment
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateOrdersResponse
        status-code: 200
      errors:
        - root.UpdateOrdersRequestBadRequestError
        - root.UpdateOrdersRequestUnauthorizedError
        - root.UpdateOrdersRequestForbiddenError
        - root.UpdateOrdersRequestNotFoundError
        - root.UpdateOrdersRequestConflictError
        - root.UpdateOrdersRequestTooManyRequestsError
        - root.UpdateOrdersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          request: {}
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: \$ 118.73 USD
              netAmount:
                unit: USD
                value: '5892'
                string: \$ 112.62 USD
              applicationFee:
                unit: USD
                value: '5892'
                string: \$ 2.37 USD
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: \$ 109.05 USD
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 4.36 USD
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 5.32 USD
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 0.00 USD
                total:
                  unit: USD
                  value: '5892'
                  string: \$ 118.73 USD
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    update-fulfill:
      path: /sites/{site_id}/orders/{order_id}/fulfill
      method: POST
      auth:
        - OAuth2:
            - ecommerce:write
      docs: |
        Updates an order's status to fulfilled

        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Fulfill Order
      request:
        name: UpdateFulfillOrdersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          order_id:
            type: string
            docs: Unique identifier for an Order
        body:
          properties:
            sendOrderFulfilledEmail:
              type: optional<boolean>
              docs: Whether or not the Order Fulfilled email should be sent
              default: false
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateFulfillOrdersResponse
        status-code: 200
      errors:
        - root.UpdateFulfillOrdersRequestBadRequestError
        - root.UpdateFulfillOrdersRequestUnauthorizedError
        - root.UpdateFulfillOrdersRequestForbiddenError
        - root.UpdateFulfillOrdersRequestNotFoundError
        - root.UpdateFulfillOrdersRequestConflictError
        - root.UpdateFulfillOrdersRequestTooManyRequestsError
        - root.UpdateFulfillOrdersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          request: {}
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: \$ 118.73 USD
              netAmount:
                unit: USD
                value: '5892'
                string: \$ 112.62 USD
              applicationFee:
                unit: USD
                value: '5892'
                string: \$ 2.37 USD
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: \$ 109.05 USD
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 4.36 USD
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 5.32 USD
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 0.00 USD
                total:
                  unit: USD
                  value: '5892'
                  string: \$ 118.73 USD
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    update-unfulfill:
      path: /sites/{site_id}/orders/{order_id}/unfulfill
      method: POST
      auth:
        - OAuth2:
            - ecommerce:write
      docs: |
        Updates an order's status to unfulfilled

        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Unfulfill Order
      request:
        name: UpdateUnfulfillOrdersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          order_id:
            type: string
            docs: Unique identifier for an Order
      response:
        docs: Request was successful
        type: UpdateUnfulfillOrdersResponse
        status-code: 200
      errors:
        - root.UpdateUnfulfillOrdersRequestBadRequestError
        - root.UpdateUnfulfillOrdersRequestUnauthorizedError
        - root.UpdateUnfulfillOrdersRequestForbiddenError
        - root.UpdateUnfulfillOrdersRequestNotFoundError
        - root.UpdateUnfulfillOrdersRequestConflictError
        - root.UpdateUnfulfillOrdersRequestTooManyRequestsError
        - root.UpdateUnfulfillOrdersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: \$ 118.73 USD
              netAmount:
                unit: USD
                value: '5892'
                string: \$ 112.62 USD
              applicationFee:
                unit: USD
                value: '5892'
                string: \$ 2.37 USD
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: \$ 109.05 USD
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 4.36 USD
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 5.32 USD
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 0.00 USD
                total:
                  unit: USD
                  value: '5892'
                  string: \$ 118.73 USD
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    refund:
      path: /sites/{site_id}/orders/{order_id}/refund
      method: POST
      auth:
        - OAuth2:
            - ecommerce:write
      docs: |
        This API will reverse a Stripe charge and refund an order back to a
        customer. It will also set the order's status to `refunded`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Refund Order
      request:
        name: RefundOrdersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          order_id:
            type: string
            docs: Unique identifier for an Order
        body:
          properties:
            reason:
              type: optional<RefundOrdersRequestReason>
              docs: The reason for the refund
        content-type: application/json
      response:
        docs: Request was successful
        type: RefundOrdersResponse
        status-code: 200
      errors:
        - root.RefundOrdersRequestBadRequestError
        - root.RefundOrdersRequestUnauthorizedError
        - root.RefundOrdersRequestForbiddenError
        - root.RefundOrdersRequestNotFoundError
        - root.RefundOrdersRequestConflictError
        - root.RefundOrdersRequestTooManyRequestsError
        - root.RefundOrdersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          request: {}
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: \$ 118.73 USD
              netAmount:
                unit: USD
                value: '5892'
                string: \$ 112.62 USD
              applicationFee:
                unit: USD
                value: '5892'
                string: \$ 2.37 USD
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 55.61 USD
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: \$ 53.44 USD
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: \$ 109.05 USD
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 4.36 USD
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 5.32 USD
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: \$ 0.00 USD
                total:
                  unit: USD
                  value: '5892'
                  string: \$ 118.73 USD
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
  source:
    openapi: ../openapi.yml
  display-name: Orders
webhooks:
  ecomm_new_order:
    audiences: []
    method: POST
    display-name: New eComm Order
    headers: {}
    payload: EcommNewOrderPayload
    examples:
      - payload:
          orderId: fc7-128
          status: refunded
          comment: >-
            Customer requested gift wrapping and a personalized note saying:
            Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra
            bubble wrap for safe transit.
          orderComment: >-
            Please gift wrap with a personal note saying "Happy Birthday, Ford!
            🎉
          acceptedOn: '2024-03-29T21:29:21Z'
          fulfilledOn: '2024-03-29T21:29:21Z'
          refundedOn: '2024-04-08T18:25:04Z'
          disputedOn: '2024-03-29T21:29:21Z'
          disputeUpdatedOn: '2024-03-29T21:29:21Z'
          disputeLastStatus: charge_refunded
          customerPaid:
            unit: USD
            value: '5892'
            string: \$ 118.73 USD
          netAmount:
            unit: USD
            value: '5892'
            string: \$ 112.62 USD
          applicationFee:
            unit: USD
            value: '5892'
            string: \$ 2.37 USD
          allAddresses:
            - type: billing
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
            - type: shipping
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
          shippingAddress:
            type: shipping
            japanType: kanji
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          billingAddress:
            type: billing
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          shippingProvider: Shipping Company, Co.
          shippingTracking: tr00000000001
          shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
          customerInfo:
            fullName: Arthur Dent
            email: arthur.dent@example.com
          purchasedItems:
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: \$ 55.61 USD
              productId: 66072fb61b89448912e26791
              productName: Luxurious Fresh Ball
              productSlug: luxurious-fresh-ball
              variantId: 66072fb71b89448912e2683f
              variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
              variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: \$ 55.61 USD
              weight: 11
              width: 82
              height: 70
              length: 9
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: \$ 53.44 USD
              productId: 66072fb61b89448912e26799
              productName: Recycled Steel Gloves
              productSlug: recycled-steel-gloves
              variantId: 66072fb91b89448912e26ab9
              variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
              variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: \$ 53.44 USD
              weight: 38
              width: 76
              height: 85
              length: 40
          purchasedItemsCount: 2
          stripeDetails:
            paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
            paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
            customerId: cus_PpRsNHwWdUoRKR
            chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
            refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
            refundReason: fraudulent
          stripeCard:
            last4: '4242'
            brand: Visa
            ownerName: Arthur Dent
            expires:
              year: 2024
              month: 4
          customData:
            - key: value
          metadata:
            isBuyNow: false
          isCustomerDeleted: false
          isShippingRequired: true
          hasDownloads: false
          paymentProcessor: stripe
          totals:
            subtotal:
              unit: USD
              value: '5892'
              string: \$ 109.05 USD
            extras:
              - type: tax
                name: State Taxes
                description: NY Taxes (4.00%)
                price:
                  unit: USD
                  value: '5892'
                  string: \$ 4.36 USD
              - type: tax
                name: City Taxes
                description: NEW YORK Taxes (4.88%)
                price:
                  unit: USD
                  value: '5892'
                  string: \$ 5.32 USD
              - type: shipping
                name: Flat
                description: ''
                price:
                  unit: USD
                  value: '5892'
                  string: \$ 0.00 USD
            total:
              unit: USD
              value: '5892'
              string: \$ 118.73 USD
          downloadFiles:
            - id: 5e9a5eba75e0ac242e1b6f64
              name: New product guide
              url: >-
                https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
  ecomm_order_changed:
    audiences: []
    method: POST
    display-name: Updated eComm Order
    headers: {}
    payload: EcommOrderChangedPayload
    examples:
      - payload:
          orderId: fc7-128
          status: refunded
          comment: >-
            Customer requested gift wrapping and a personalized note saying:
            Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra
            bubble wrap for safe transit.
          orderComment: >-
            Please gift wrap with a personal note saying "Happy Birthday, Ford!
            🎉
          acceptedOn: '2024-03-29T21:29:21Z'
          fulfilledOn: '2024-03-29T21:29:21Z'
          refundedOn: '2024-04-08T18:25:04Z'
          disputedOn: '2024-03-29T21:29:21Z'
          disputeUpdatedOn: '2024-03-29T21:29:21Z'
          disputeLastStatus: charge_refunded
          customerPaid:
            unit: USD
            value: '5892'
            string: \$ 118.73 USD
          netAmount:
            unit: USD
            value: '5892'
            string: \$ 112.62 USD
          applicationFee:
            unit: USD
            value: '5892'
            string: \$ 2.37 USD
          allAddresses:
            - type: billing
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
            - type: shipping
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
          shippingAddress:
            type: shipping
            japanType: kanji
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          billingAddress:
            type: billing
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          shippingProvider: Shipping Company, Co.
          shippingTracking: tr00000000001
          shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
          customerInfo:
            fullName: Arthur Dent
            email: arthur.dent@example.com
          purchasedItems:
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: \$ 55.61 USD
              productId: 66072fb61b89448912e26791
              productName: Luxurious Fresh Ball
              productSlug: luxurious-fresh-ball
              variantId: 66072fb71b89448912e2683f
              variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
              variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: \$ 55.61 USD
              weight: 11
              width: 82
              height: 70
              length: 9
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: \$ 53.44 USD
              productId: 66072fb61b89448912e26799
              productName: Recycled Steel Gloves
              productSlug: recycled-steel-gloves
              variantId: 66072fb91b89448912e26ab9
              variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
              variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: \$ 53.44 USD
              weight: 38
              width: 76
              height: 85
              length: 40
          purchasedItemsCount: 2
          stripeDetails:
            paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
            paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
            customerId: cus_PpRsNHwWdUoRKR
            chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
            refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
            refundReason: fraudulent
          stripeCard:
            last4: '4242'
            brand: Visa
            ownerName: Arthur Dent
            expires:
              year: 2024
              month: 4
          customData:
            - key: value
          metadata:
            isBuyNow: false
          isCustomerDeleted: false
          isShippingRequired: true
          hasDownloads: false
          paymentProcessor: stripe
          totals:
            subtotal:
              unit: USD
              value: '5892'
              string: \$ 109.05 USD
            extras:
              - type: tax
                name: State Taxes
                description: NY Taxes (4.00%)
                price:
                  unit: USD
                  value: '5892'
                  string: \$ 4.36 USD
              - type: tax
                name: City Taxes
                description: NEW YORK Taxes (4.88%)
                price:
                  unit: USD
                  value: '5892'
                  string: \$ 5.32 USD
              - type: shipping
                name: Flat
                description: ''
                price:
                  unit: USD
                  value: '5892'
                  string: \$ 0.00 USD
            total:
              unit: USD
              value: '5892'
              string: \$ 118.73 USD
          downloadFiles:
            - id: 5e9a5eba75e0ac242e1b6f64
              name: New product guide
              url: >-
                https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
",
    },
    "pages.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Pages",
          "endpoints": {
            "get-content": {
              "auth": [
                {
                  "OAuth2": [
                    "page:read",
                  ],
                },
              ],
              "display-name": "Get Page Content",
              "docs": "Get static content from a static page. </br> If you do not provide a Locale ID in your request, the response will return any content that can be localized from the Primary locale</br></br> Required scope | `pages:read`",
              "errors": [
                "root.GetContentPagesRequestBadRequestError",
                "root.GetContentPagesRequestUnauthorizedError",
                "root.GetContentPagesRequestForbiddenError",
                "root.GetContentPagesRequestNotFoundError",
                "root.GetContentPagesRequestTooManyRequestsError",
                "root.GetContentPagesRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "locale": "65427cf400e02b306eaa04a0",
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "nodes": [
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                          "text": {
                            "html": "<h1>The Hitchhiker's Guide to the Galaxy</h1>",
                            "text": "The Hitchhiker's Guide to the Galaxy",
                          },
                          "type": "text",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                          "text": {
                            "html": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>",
                          },
                          "type": "text",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                          "image": {
                            "alt": "Marvin, the Paranoid Android",
                            "assetId": "659595234426a9fcbad57043",
                          },
                          "type": "image",
                        },
                      ],
                      "pageId": "658205daa3e8206a523b5ad4",
                      "pagination": {
                        "limit": 3,
                        "offset": 0,
                        "total": 3,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pages/{page_id}/dom",
              "request": {
                "name": "GetContentPagesRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<nullable<string>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetContentPagesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-metadata": {
              "auth": [
                {
                  "OAuth2": [
                    "page:read",
                  ],
                },
              ],
              "display-name": "Get Page Metadata",
              "docs": "Get metadata information for a single page </br></br> Required scope | `pages:read`",
              "errors": [
                "root.GetMetadataPagesRequestBadRequestError",
                "root.GetMetadataPagesRequestUnauthorizedError",
                "root.GetMetadataPagesRequestNotFoundError",
                "root.GetMetadataPagesRequestTooManyRequestsError",
                "root.GetMetadataPagesRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "65427cf400e02b306eaa04a0",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "canBranch": true,
                      "createdOn": "2024-03-11T10:42:00Z",
                      "draft": false,
                      "id": "6596da6045e56dee495bcbba",
                      "isMembersOnly": false,
                      "lastUpdated": "2024-03-11T10:42:42Z",
                      "localeId": "653fd9af6a07fc9cfd7a5e57",
                      "openGraph": {
                        "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                        "descriptionCopied": false,
                        "title": "Explore the Cosmos with The Ultimate Guide",
                        "titleCopied": false,
                      },
                      "publishedPath": "/en-us/guide-to-the-galaxy",
                      "seo": {
                        "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                        "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                      },
                      "siteId": "6258612d1ee792848f805dcf",
                      "slug": "guide-to-the-galaxy",
                      "title": "Guide to the Galaxy",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pages/{page_id}",
              "request": {
                "name": "GetMetadataPagesRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<nullable<string>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetMetadataPagesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "page:read",
                  ],
                },
              ],
              "display-name": "List Pages",
              "docs": "List of all pages for a site </br></br> Required scope | `pages:read`",
              "errors": [
                "root.ListPagesRequestBadRequestError",
                "root.ListPagesRequestUnauthorizedError",
                "root.ListPagesRequestNotFoundError",
                "root.ListPagesRequestTooManyRequestsError",
                "root.ListPagesRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "locale": "65427cf400e02b306eaa04a0",
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "pages": [
                        {
                          "archived": false,
                          "canBranch": true,
                          "createdOn": "2024-03-11T10:42:00Z",
                          "draft": false,
                          "id": "6596da6045e56dee495bcbba",
                          "isMembersOnly": false,
                          "lastUpdated": "2024-03-11T10:42:42Z",
                          "localeId": "653fd9af6a07fc9cfd7a5e57",
                          "openGraph": {
                            "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                            "descriptionCopied": false,
                            "title": "Explore the Cosmos with The Ultimate Guide",
                            "titleCopied": false,
                          },
                          "publishedPath": "/en-us/guide-to-the-galaxy",
                          "seo": {
                            "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                            "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                          },
                          "siteId": "6258612d1ee792848f805dcf",
                          "slug": "guide-to-the-galaxy",
                          "title": "Guide to the Galaxy",
                        },
                        {
                          "archived": false,
                          "canBranch": true,
                          "createdOn": "2024-05-25T09:00:00Z",
                          "draft": false,
                          "id": "6596da6045e56dee495bcbad",
                          "isMembersOnly": false,
                          "lastUpdated": "2024-05-25T09:42:00Z",
                          "localeId": "653fd9af6a07fc9cfd7a5e57",
                          "openGraph": {
                            "description": "Join the galaxy in celebrating Towel Day, the day dedicated to carrying towels everywhere in memory of Douglas Adams.",
                            "descriptionCopied": false,
                            "title": "Towel Day - Don't Panic",
                            "titleCopied": false,
                          },
                          "publishedPath": "/en-us/towel-day",
                          "seo": {
                            "description": "A guide to celebrating Towel Day, in honor of the most massively useful thing an interstellar hitchhiker can have.",
                            "title": "Celebrate Towel Day - The Hitchhiker's Guide to the Galaxy",
                          },
                          "siteId": "6258612d1ee792848f805dcf",
                          "slug": "towel-day",
                          "title": "Towel Day Celebrations",
                        },
                      ],
                      "pagination": {
                        "limit": 20,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/pages",
              "request": {
                "name": "ListPagesRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<nullable<string>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListPagesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-page-settings": {
              "auth": [
                {
                  "OAuth2": [
                    "page:write",
                  ],
                },
              ],
              "display-name": "Update Page Metadata",
              "docs": "Update Page-level metadata, including SEO and Open Graph fields. </br></br> Required scope | `pages:write`",
              "errors": [
                "root.UpdatePageSettingsRequestBadRequestError",
                "root.UpdatePageSettingsRequestUnauthorizedError",
                "root.UpdatePageSettingsRequestNotFoundError",
                "root.UpdatePageSettingsRequestTooManyRequestsError",
                "root.UpdatePageSettingsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "65427cf400e02b306eaa04a0",
                  },
                  "request": {
                    "openGraph": {
                      "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                      "title": "Explore the Cosmos with The Ultimate Guide",
                    },
                    "seo": {
                      "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                      "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                    },
                    "slug": "guide-to-the-galaxy",
                    "title": "Guide to the Galaxy",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "canBranch": true,
                      "createdOn": "2024-03-11T10:42:00Z",
                      "draft": false,
                      "id": "6596da6045e56dee495bcbba",
                      "isMembersOnly": false,
                      "lastUpdated": "2024-03-11T10:42:42Z",
                      "localeId": "653fd9af6a07fc9cfd7a5e57",
                      "openGraph": {
                        "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                        "descriptionCopied": false,
                        "title": "Explore the Cosmos with The Ultimate Guide",
                        "titleCopied": false,
                      },
                      "publishedPath": "/en-us/guide-to-the-galaxy",
                      "seo": {
                        "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                        "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                      },
                      "siteId": "6258612d1ee792848f805dcf",
                      "slug": "guide-to-the-galaxy",
                      "title": "Guide to the Galaxy",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/pages/{page_id}",
              "request": {
                "body": {
                  "properties": {
                    "openGraph": {
                      "docs": "Open Graph fields for the Page",
                      "type": "optional<UpdatePageSettingsRequestOpenGraph>",
                    },
                    "seo": {
                      "docs": "SEO-related fields for the Page",
                      "type": "optional<UpdatePageSettingsRequestSeo>",
                    },
                    "slug": {
                      "docs": "slug of the Page (derived from title)",
                      "type": "optional<string>",
                    },
                    "title": {
                      "docs": "Title of the Page",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdatePageSettingsRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<nullable<string>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdatePageSettingsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-static-content": {
              "auth": [
                {
                  "OAuth2": [
                    "page:write",
                  ],
                },
              ],
              "display-name": "Update Page Content",
              "docs": "This endpoint allows for updating static content on a static page within a secondary locale. It is designed specifically for localized pages and can handle up to 1000 nodes per request.
<blockquote class="callout callout_info"><p><strong>Note:</strong>This endpoint is specifically for localized pages. Ensure that the locale specified is a valid secondary locale for the site.</p></blockquote>

Required scope | `pages:write`
",
              "errors": [
                "root.UpdateStaticContentRequestBadRequestError",
                "root.UpdateStaticContentRequestUnauthorizedError",
                "root.UpdateStaticContentRequestForbiddenError",
                "root.UpdateStaticContentRequestNotFoundError",
                "root.UpdateStaticContentRequestTooManyRequestsError",
                "root.UpdateStaticContentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "locale",
                  },
                  "request": {
                    "nodes": [
                      {
                        "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                        "text": "<h1>The Hitchhiker's Guide to the Galaxy</h1>",
                      },
                      {
                        "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                        "text": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>",
                      },
                      {
                        "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                        "text": "<img alt='Marvin, the Paranoid Android' src='path/to/image/with/assetId/659595234426a9fcbad57043'/>",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "errors": [
                        "errors",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/pages/{page_id}/dom",
              "request": {
                "body": {
                  "properties": {
                    "nodes": "list<UpdateStaticContentRequestNodesItem>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateStaticContentRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "locale": {
                    "docs": "The locale identifier.",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateStaticContentResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetContentPagesResponse": {
            "docs": "The DOM (Document Object Model) schema represents the content structure of a web page. It captures various content nodes, such as text and images, along with their associated attributes. Each node has a unique identifier and can be of different types like text or image. The schema also provides pagination details for scenarios where the content nodes are too many to be fetched in a single request.
",
            "inline": undefined,
            "properties": {
              "nodes": "optional<list<GetContentPagesResponseNodesItem>>",
              "pageId": {
                "docs": "Page ID",
                "type": "optional<string>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<GetContentPagesResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetContentPagesResponseNodesItem": {
            "docs": "A generic representation of a content element within the Document Object Model (DOM). Each node has a unique identifier and a specific type that determines its content structure and attributes.
",
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "The custom attributes of the node",
                "type": "optional<map<string, string>>",
              },
              "id": {
                "access": "read-only",
                "docs": "Node UUID",
                "type": "optional<string>",
              },
              "image": {
                "docs": "Represents an image within the DOM. It contains details about the image, such as its alternative text (alt) for accessibility and an asset identifier for fetching the actual image resource. Additional attributes can be associated with the image for styling or other purposes.
",
                "type": "optional<GetContentPagesResponseNodesItemImage>",
              },
              "text": {
                "docs": "Represents textual content within the DOM. It contains both the raw text and its HTML representation, allowing for flexibility in rendering and processing. Additional attributes can be associated with the text for styling or other purposes.
",
                "type": "optional<GetContentPagesResponseNodesItemText>",
              },
              "type": "optional<GetContentPagesResponseNodesItemType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetContentPagesResponseNodesItemImage": {
            "docs": "Represents an image within the DOM. It contains details about the image, such as its alternative text (alt) for accessibility and an asset identifier for fetching the actual image resource. Additional attributes can be associated with the image for styling or other purposes.
",
            "inline": true,
            "properties": {
              "alt": "optional<nullable<string>>",
              "assetId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetContentPagesResponseNodesItemText": {
            "docs": "Represents textual content within the DOM. It contains both the raw text and its HTML representation, allowing for flexibility in rendering and processing. Additional attributes can be associated with the text for styling or other purposes.
",
            "inline": true,
            "properties": {
              "html": "optional<string>",
              "text": "optional<nullable<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetContentPagesResponseNodesItemType": {
            "enum": [
              "text",
              "image",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetContentPagesResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMetadataPagesResponse": {
            "docs": "The Page object",
            "inline": undefined,
            "properties": {
              "archived": {
                "access": "read-only",
                "default": false,
                "docs": "Whether the Page has been archived",
                "type": "optional<boolean>",
              },
              "canBranch": {
                "access": "read-only",
                "default": false,
                "docs": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                "type": "optional<boolean>",
              },
              "collectionId": {
                "access": "read-only",
                "docs": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Page was created",
                "type": "optional<datetime>",
              },
              "draft": {
                "access": "read-only",
                "default": false,
                "docs": "Whether the Page is a draft",
                "type": "optional<boolean>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Page",
                "type": "optional<string>",
              },
              "isMembersOnly": {
                "access": "read-only",
                "default": false,
                "docs": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                "type": "optional<boolean>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Page was most recently updated",
                "type": "optional<datetime>",
              },
              "localeId": {
                "access": "read-only",
                "docs": "Unique ID of the page locale",
                "type": "optional<nullable<string>>",
              },
              "openGraph": {
                "docs": "Open Graph fields for the Page",
                "type": "optional<GetMetadataPagesResponseOpenGraph>",
              },
              "parentId": {
                "access": "read-only",
                "docs": "Identifier of the parent folder",
                "type": "optional<string>",
              },
              "publishedPath": {
                "access": "read-only",
                "docs": "Relative path of the published page URL",
                "type": "optional<string>",
              },
              "seo": {
                "docs": "SEO-related fields for the Page",
                "type": "optional<GetMetadataPagesResponseSeo>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "Unique identifier for the Site",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "slug of the Page (derived from title)",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Title of the Page",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMetadataPagesResponseOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetMetadataPagesResponseSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListPagesResponse": {
            "docs": "The Page object",
            "inline": undefined,
            "properties": {
              "pages": "optional<list<ListPagesResponsePagesItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListPagesResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListPagesResponsePagesItem": {
            "docs": "The Page object",
            "inline": true,
            "properties": {
              "archived": {
                "access": "read-only",
                "default": false,
                "docs": "Whether the Page has been archived",
                "type": "optional<boolean>",
              },
              "canBranch": {
                "access": "read-only",
                "default": false,
                "docs": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                "type": "optional<boolean>",
              },
              "collectionId": {
                "access": "read-only",
                "docs": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Page was created",
                "type": "optional<datetime>",
              },
              "draft": {
                "access": "read-only",
                "default": false,
                "docs": "Whether the Page is a draft",
                "type": "optional<boolean>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Page",
                "type": "optional<string>",
              },
              "isMembersOnly": {
                "access": "read-only",
                "default": false,
                "docs": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                "type": "optional<boolean>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Page was most recently updated",
                "type": "optional<datetime>",
              },
              "localeId": {
                "access": "read-only",
                "docs": "Unique ID of the page locale",
                "type": "optional<nullable<string>>",
              },
              "openGraph": {
                "docs": "Open Graph fields for the Page",
                "type": "optional<ListPagesResponsePagesItemOpenGraph>",
              },
              "parentId": {
                "access": "read-only",
                "docs": "Identifier of the parent folder",
                "type": "optional<string>",
              },
              "publishedPath": {
                "access": "read-only",
                "docs": "Relative path of the published page URL",
                "type": "optional<string>",
              },
              "seo": {
                "docs": "SEO-related fields for the Page",
                "type": "optional<ListPagesResponsePagesItemSeo>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "Unique identifier for the Site",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "slug of the Page (derived from title)",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Title of the Page",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListPagesResponsePagesItemOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListPagesResponsePagesItemSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListPagesResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageCreatedPayload": {
            "docs": "The Webhook payload for when a Page is created",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<PageCreatedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageCreatedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "createdOn": "optional<datetime>",
              "pageId": "optional<string>",
              "pageTitle": "optional<string>",
              "siteId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageDeletedPayload": {
            "docs": "The Webhook payload for when a Page is deleted",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<PageDeletedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageDeletedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "deletedOn": "optional<datetime>",
              "pageId": "optional<string>",
              "pageTitle": "optional<string>",
              "siteId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageMetadataUpdatedPayload": {
            "docs": "The Webhook payload for when a Page's metadata is updated",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<PageMetadataUpdatedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageMetadataUpdatedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "lastUpdated": "optional<datetime>",
              "pageId": "optional<string>",
              "pageTitle": "optional<string>",
              "siteId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsRequestOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsRequestSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsResponse": {
            "docs": "The Page object",
            "inline": undefined,
            "properties": {
              "archived": {
                "access": "read-only",
                "default": false,
                "docs": "Whether the Page has been archived",
                "type": "optional<boolean>",
              },
              "canBranch": {
                "access": "read-only",
                "default": false,
                "docs": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                "type": "optional<boolean>",
              },
              "collectionId": {
                "access": "read-only",
                "docs": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Page was created",
                "type": "optional<datetime>",
              },
              "draft": {
                "access": "read-only",
                "default": false,
                "docs": "Whether the Page is a draft",
                "type": "optional<boolean>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Page",
                "type": "optional<string>",
              },
              "isMembersOnly": {
                "access": "read-only",
                "default": false,
                "docs": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                "type": "optional<boolean>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Page was most recently updated",
                "type": "optional<datetime>",
              },
              "localeId": {
                "access": "read-only",
                "docs": "Unique ID of the page locale",
                "type": "optional<nullable<string>>",
              },
              "openGraph": {
                "docs": "Open Graph fields for the Page",
                "type": "optional<UpdatePageSettingsResponseOpenGraph>",
              },
              "parentId": {
                "access": "read-only",
                "docs": "Identifier of the parent folder",
                "type": "optional<string>",
              },
              "publishedPath": {
                "access": "read-only",
                "docs": "Relative path of the published page URL",
                "type": "optional<string>",
              },
              "seo": {
                "docs": "SEO-related fields for the Page",
                "type": "optional<UpdatePageSettingsResponseSeo>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "Unique identifier for the Site",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "slug of the Page (derived from title)",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Title of the Page",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsResponseOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "access": "read-only",
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsResponseSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateStaticContentRequestNodesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "nodeId": {
                "docs": "Node UUID",
                "type": "string",
              },
              "text": {
                "docs": "HTML content of the node, including the HTML tag. The HTML tags must be the same as what's returned from the Get Content endpoint.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateStaticContentResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": {
                "docs": "A list of error messages, if any.",
                "type": "list<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "page_created": {
            "audiences": [],
            "display-name": "Page Created",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "createdOn": "2024-07-26T16:32:50Z",
                    "pageId": "66a3cfb276641574f5d58311",
                    "pageTitle": "Heart of Gold Specs",
                    "siteId": "65427cf400e02b306eaa049c",
                  },
                  "triggerType": "page_created",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Page is created",
              "type": "PageCreatedPayload",
            },
          },
          "page_deleted": {
            "audiences": [],
            "display-name": "Page Deleted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "deletedOn": "2024-07-26T16:32:50Z",
                    "pageId": "66a3cfb276641574f5d58311",
                    "pageTitle": "Heart of Gold Specs",
                    "siteId": "65427cf400e02b306eaa049c",
                  },
                  "triggerType": "page_deleted",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Page is deleted",
              "type": "PageDeletedPayload",
            },
          },
          "page_metadata_updated": {
            "audiences": [],
            "display-name": "Page Metadata Updated",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "lastUpdated": "2024-07-26T16:32:50Z",
                    "pageId": "66a3cfb276641574f5d58311",
                    "pageTitle": "Heart of Gold Specs",
                    "siteId": "65427cf400e02b306eaa049c",
                  },
                  "triggerType": "page_metadata_updated",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Page's metadata is updated",
              "type": "PageMetadataUpdatedPayload",
            },
          },
        },
      },
      "rawContents": "types:
  ListPagesResponsePagesItemSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  ListPagesResponsePagesItemOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
        access: read-only
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  ListPagesResponsePagesItem:
    docs: The Page object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Page
        access: read-only
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
        access: read-only
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
        access: read-only
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
        access: read-only
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
        access: read-only
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
        access: read-only
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
        access: read-only
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
        access: read-only
      seo:
        type: optional<ListPagesResponsePagesItemSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<ListPagesResponsePagesItemOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<nullable<string>>
        docs: Unique ID of the page locale
        access: read-only
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  ListPagesResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListPagesResponse:
    docs: The Page object
    properties:
      pages: optional<list<ListPagesResponsePagesItem>>
      pagination:
        type: optional<ListPagesResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  GetMetadataPagesResponseSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  GetMetadataPagesResponseOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
        access: read-only
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  GetMetadataPagesResponse:
    docs: The Page object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Page
        access: read-only
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
        access: read-only
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
        access: read-only
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
        access: read-only
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
        access: read-only
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
        access: read-only
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
        access: read-only
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
        access: read-only
      seo:
        type: optional<GetMetadataPagesResponseSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<GetMetadataPagesResponseOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<nullable<string>>
        docs: Unique ID of the page locale
        access: read-only
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
        access: read-only
    source:
      openapi: ../openapi.yml
  UpdatePageSettingsRequestSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsRequestOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
        access: read-only
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsResponseSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsResponseOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
        access: read-only
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsResponse:
    docs: The Page object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Page
        access: read-only
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
        access: read-only
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
        access: read-only
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
        access: read-only
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
        access: read-only
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
        access: read-only
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
        access: read-only
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
        access: read-only
      seo:
        type: optional<UpdatePageSettingsResponseSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<UpdatePageSettingsResponseOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<nullable<string>>
        docs: Unique ID of the page locale
        access: read-only
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
        access: read-only
    source:
      openapi: ../openapi.yml
  GetContentPagesResponseNodesItemType:
    enum:
      - text
      - image
    inline: true
    source:
      openapi: ../openapi.yml
  GetContentPagesResponseNodesItemText:
    docs: >
      Represents textual content within the DOM. It contains both the raw text
      and its HTML representation, allowing for flexibility in rendering and
      processing. Additional attributes can be associated with the text for
      styling or other purposes.
    properties:
      html: optional<string>
      text: optional<nullable<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  GetContentPagesResponseNodesItemImage:
    docs: >
      Represents an image within the DOM. It contains details about the image,
      such as its alternative text (alt) for accessibility and an asset
      identifier for fetching the actual image resource. Additional attributes
      can be associated with the image for styling or other purposes.
    properties:
      alt: optional<nullable<string>>
      assetId: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  GetContentPagesResponseNodesItem:
    docs: >
      A generic representation of a content element within the Document Object
      Model (DOM). Each node has a unique identifier and a specific type that
      determines its content structure and attributes.
    properties:
      id:
        type: optional<string>
        docs: Node UUID
        access: read-only
      type: optional<GetContentPagesResponseNodesItemType>
      text:
        type: optional<GetContentPagesResponseNodesItemText>
        docs: >
          Represents textual content within the DOM. It contains both the raw
          text and its HTML representation, allowing for flexibility in
          rendering and processing. Additional attributes can be associated with
          the text for styling or other purposes.
      image:
        type: optional<GetContentPagesResponseNodesItemImage>
        docs: >
          Represents an image within the DOM. It contains details about the
          image, such as its alternative text (alt) for accessibility and an
          asset identifier for fetching the actual image resource. Additional
          attributes can be associated with the image for styling or other
          purposes.
      attributes:
        type: optional<map<string, string>>
        docs: The custom attributes of the node
    source:
      openapi: ../openapi.yml
    inline: true
  GetContentPagesResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  GetContentPagesResponse:
    docs: >
      The DOM (Document Object Model) schema represents the content structure of
      a web page. It captures various content nodes, such as text and images,
      along with their associated attributes. Each node has a unique identifier
      and can be of different types like text or image. The schema also provides
      pagination details for scenarios where the content nodes are too many to
      be fetched in a single request.
    properties:
      pageId:
        type: optional<string>
        docs: Page ID
      nodes: optional<list<GetContentPagesResponseNodesItem>>
      pagination:
        type: optional<GetContentPagesResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  UpdateStaticContentRequestNodesItem:
    properties:
      nodeId:
        type: string
        docs: Node UUID
      text:
        type: string
        docs: >-
          HTML content of the node, including the HTML tag. The HTML tags must
          be the same as what's returned from the Get Content endpoint.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateStaticContentResponse:
    properties:
      errors:
        docs: A list of error messages, if any.
        type: list<string>
    source:
      openapi: ../openapi.yml
  PageCreatedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId: optional<string>
      pageId: optional<string>
      pageTitle: optional<string>
      createdOn: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  PageCreatedPayload:
    docs: The Webhook payload for when a Page is created
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<PageCreatedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
  PageMetadataUpdatedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId: optional<string>
      pageId: optional<string>
      pageTitle: optional<string>
      lastUpdated: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  PageMetadataUpdatedPayload:
    docs: The Webhook payload for when a Page's metadata is updated
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<PageMetadataUpdatedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
  PageDeletedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId: optional<string>
      pageId: optional<string>
      pageTitle: optional<string>
      deletedOn: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  PageDeletedPayload:
    docs: The Webhook payload for when a Page is deleted
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<PageDeletedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/pages
      method: GET
      auth:
        - OAuth2:
            - page:read
      docs: List of all pages for a site </br></br> Required scope | `pages:read`
      source:
        openapi: ../openapi.yml
      display-name: List Pages
      request:
        name: ListPagesRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          locale:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: Request was successful
        type: ListPagesResponse
        status-code: 200
      errors:
        - root.ListPagesRequestBadRequestError
        - root.ListPagesRequestUnauthorizedError
        - root.ListPagesRequestNotFoundError
        - root.ListPagesRequestTooManyRequestsError
        - root.ListPagesRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
            limit: 1.1
            offset: 1.1
          response:
            body:
              pages:
                - id: 6596da6045e56dee495bcbba
                  siteId: 6258612d1ee792848f805dcf
                  title: Guide to the Galaxy
                  slug: guide-to-the-galaxy
                  createdOn: '2024-03-11T10:42:00Z'
                  lastUpdated: '2024-03-11T10:42:42Z'
                  archived: false
                  draft: false
                  canBranch: true
                  isMembersOnly: false
                  seo:
                    title: The Ultimate Hitchhiker's Guide to the Galaxy
                    description: >-
                      Everything you need to know about the galaxy, from
                      avoiding Vogon poetry to the importance of towels.
                  openGraph:
                    title: Explore the Cosmos with The Ultimate Guide
                    titleCopied: false
                    description: >-
                      Dive deep into the mysteries of the universe with your
                      guide to everything galactic.
                    descriptionCopied: false
                  localeId: 653fd9af6a07fc9cfd7a5e57
                  publishedPath: /en-us/guide-to-the-galaxy
                - id: 6596da6045e56dee495bcbad
                  siteId: 6258612d1ee792848f805dcf
                  title: Towel Day Celebrations
                  slug: towel-day
                  createdOn: '2024-05-25T09:00:00Z'
                  lastUpdated: '2024-05-25T09:42:00Z'
                  archived: false
                  draft: false
                  canBranch: true
                  isMembersOnly: false
                  seo:
                    title: Celebrate Towel Day - The Hitchhiker's Guide to the Galaxy
                    description: >-
                      A guide to celebrating Towel Day, in honor of the most
                      massively useful thing an interstellar hitchhiker can
                      have.
                  openGraph:
                    title: Towel Day - Don't Panic
                    titleCopied: false
                    description: >-
                      Join the galaxy in celebrating Towel Day, the day
                      dedicated to carrying towels everywhere in memory of
                      Douglas Adams.
                    descriptionCopied: false
                  localeId: 653fd9af6a07fc9cfd7a5e57
                  publishedPath: /en-us/towel-day
              pagination:
                limit: 20
                offset: 0
                total: 2
    get-metadata:
      path: /pages/{page_id}
      method: GET
      auth:
        - OAuth2:
            - page:read
      docs: >-
        Get metadata information for a single page </br></br> Required scope |
        `pages:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Page Metadata
      request:
        name: GetMetadataPagesRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
        query-parameters:
          locale:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
      response:
        docs: Request was successful
        type: GetMetadataPagesResponse
        status-code: 200
      errors:
        - root.GetMetadataPagesRequestBadRequestError
        - root.GetMetadataPagesRequestUnauthorizedError
        - root.GetMetadataPagesRequestNotFoundError
        - root.GetMetadataPagesRequestTooManyRequestsError
        - root.GetMetadataPagesRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
          response:
            body:
              id: 6596da6045e56dee495bcbba
              siteId: 6258612d1ee792848f805dcf
              title: Guide to the Galaxy
              slug: guide-to-the-galaxy
              createdOn: '2024-03-11T10:42:00Z'
              lastUpdated: '2024-03-11T10:42:42Z'
              archived: false
              draft: false
              canBranch: true
              isMembersOnly: false
              seo:
                title: The Ultimate Hitchhiker's Guide to the Galaxy
                description: >-
                  Everything you need to know about the galaxy, from avoiding
                  Vogon poetry to the importance of towels.
              openGraph:
                title: Explore the Cosmos with The Ultimate Guide
                titleCopied: false
                description: >-
                  Dive deep into the mysteries of the universe with your guide
                  to everything galactic.
                descriptionCopied: false
              localeId: 653fd9af6a07fc9cfd7a5e57
              publishedPath: /en-us/guide-to-the-galaxy
    update-page-settings:
      path: /pages/{page_id}
      method: PUT
      auth:
        - OAuth2:
            - page:write
      docs: >-
        Update Page-level metadata, including SEO and Open Graph fields.
        </br></br> Required scope | `pages:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Page Metadata
      request:
        name: UpdatePageSettingsRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
        query-parameters:
          locale:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
        body:
          properties:
            title:
              type: optional<string>
              docs: Title of the Page
            slug:
              type: optional<string>
              docs: slug of the Page (derived from title)
            seo:
              type: optional<UpdatePageSettingsRequestSeo>
              docs: SEO-related fields for the Page
            openGraph:
              type: optional<UpdatePageSettingsRequestOpenGraph>
              docs: Open Graph fields for the Page
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdatePageSettingsResponse
        status-code: 200
      errors:
        - root.UpdatePageSettingsRequestBadRequestError
        - root.UpdatePageSettingsRequestUnauthorizedError
        - root.UpdatePageSettingsRequestNotFoundError
        - root.UpdatePageSettingsRequestTooManyRequestsError
        - root.UpdatePageSettingsRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
          request:
            title: Guide to the Galaxy
            slug: guide-to-the-galaxy
            seo:
              title: The Ultimate Hitchhiker's Guide to the Galaxy
              description: >-
                Everything you need to know about the galaxy, from avoiding
                Vogon poetry to the importance of towels.
            openGraph:
              title: Explore the Cosmos with The Ultimate Guide
              description: >-
                Dive deep into the mysteries of the universe with your guide to
                everything galactic.
          response:
            body:
              id: 6596da6045e56dee495bcbba
              siteId: 6258612d1ee792848f805dcf
              title: Guide to the Galaxy
              slug: guide-to-the-galaxy
              createdOn: '2024-03-11T10:42:00Z'
              lastUpdated: '2024-03-11T10:42:42Z'
              archived: false
              draft: false
              canBranch: true
              isMembersOnly: false
              seo:
                title: The Ultimate Hitchhiker's Guide to the Galaxy
                description: >-
                  Everything you need to know about the galaxy, from avoiding
                  Vogon poetry to the importance of towels.
              openGraph:
                title: Explore the Cosmos with The Ultimate Guide
                titleCopied: false
                description: >-
                  Dive deep into the mysteries of the universe with your guide
                  to everything galactic.
                descriptionCopied: false
              localeId: 653fd9af6a07fc9cfd7a5e57
              publishedPath: /en-us/guide-to-the-galaxy
    get-content:
      path: /pages/{page_id}/dom
      method: GET
      auth:
        - OAuth2:
            - page:read
      docs: >-
        Get static content from a static page. </br> If you do not provide a
        Locale ID in your request, the response will return any content that can
        be localized from the Primary locale</br></br> Required scope |
        `pages:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Page Content
      request:
        name: GetContentPagesRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
        query-parameters:
          locale:
            type: optional<nullable<string>>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: Request was successful
        type: GetContentPagesResponse
        status-code: 200
      errors:
        - root.GetContentPagesRequestBadRequestError
        - root.GetContentPagesRequestUnauthorizedError
        - root.GetContentPagesRequestForbiddenError
        - root.GetContentPagesRequestNotFoundError
        - root.GetContentPagesRequestTooManyRequestsError
        - root.GetContentPagesRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
            limit: 1.1
            offset: 1.1
          response:
            body:
              pageId: 658205daa3e8206a523b5ad4
              nodes:
                - id: a245c12d-995b-55ee-5ec7-aa36a6cad623
                  type: text
                  text:
                    html: <h1>The Hitchhiker's Guide to the Galaxy</h1>
                    text: The Hitchhiker's Guide to the Galaxy
                  attributes:
                    key: value
                - id: a245c12d-995b-55ee-5ec7-aa36a6cad627
                  type: text
                  text:
                    html: >-
                      <div><h3>Don't Panic!</h3><p>Always know where your towel
                      is.</p></div>
                  attributes:
                    key: value
                - id: a245c12d-995b-55ee-5ec7-aa36a6cad629
                  type: image
                  image:
                    alt: Marvin, the Paranoid Android
                    assetId: 659595234426a9fcbad57043
                  attributes:
                    key: value
              pagination:
                limit: 3
                offset: 0
                total: 3
    update-static-content:
      path: /pages/{page_id}/dom
      method: POST
      auth:
        - OAuth2:
            - page:write
      docs: >
        This endpoint allows for updating static content on a static page within
        a secondary locale. It is designed specifically for localized pages and
        can handle up to 1000 nodes per request.

        <blockquote class="callout callout_info"><p><strong>Note:</strong>This
        endpoint is specifically for localized pages. Ensure that the locale
        specified is a valid secondary locale for the site.</p></blockquote>


        Required scope | `pages:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Page Content
      request:
        name: UpdateStaticContentRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
        query-parameters:
          locale:
            type: string
            docs: The locale identifier.
        body:
          properties:
            nodes: list<UpdateStaticContentRequestNodesItem>
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateStaticContentResponse
        status-code: 200
      errors:
        - root.UpdateStaticContentRequestBadRequestError
        - root.UpdateStaticContentRequestUnauthorizedError
        - root.UpdateStaticContentRequestForbiddenError
        - root.UpdateStaticContentRequestNotFoundError
        - root.UpdateStaticContentRequestTooManyRequestsError
        - root.UpdateStaticContentRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: locale
          request:
            nodes:
              - nodeId: a245c12d-995b-55ee-5ec7-aa36a6cad623
                text: <h1>The Hitchhiker's Guide to the Galaxy</h1>
              - nodeId: a245c12d-995b-55ee-5ec7-aa36a6cad627
                text: >-
                  <div><h3>Don't Panic!</h3><p>Always know where your towel
                  is.</p></div>
              - nodeId: a245c12d-995b-55ee-5ec7-aa36a6cad629
                text: >-
                  <img alt='Marvin, the Paranoid Android'
                  src='path/to/image/with/assetId/659595234426a9fcbad57043'/>
          response:
            body:
              errors:
                - errors
  source:
    openapi: ../openapi.yml
  display-name: Pages
webhooks:
  page_created:
    audiences: []
    method: POST
    display-name: Page Created
    headers: {}
    payload:
      type: PageCreatedPayload
      docs: The Webhook payload for when a Page is created
    examples:
      - payload:
          triggerType: page_created
          payload:
            siteId: 65427cf400e02b306eaa049c
            pageId: 66a3cfb276641574f5d58311
            pageTitle: Heart of Gold Specs
            createdOn: '2024-07-26T16:32:50Z'
  page_metadata_updated:
    audiences: []
    method: POST
    display-name: Page Metadata Updated
    headers: {}
    payload:
      type: PageMetadataUpdatedPayload
      docs: The Webhook payload for when a Page's metadata is updated
    examples:
      - payload:
          triggerType: page_metadata_updated
          payload:
            siteId: 65427cf400e02b306eaa049c
            pageId: 66a3cfb276641574f5d58311
            pageTitle: Heart of Gold Specs
            lastUpdated: '2024-07-26T16:32:50Z'
  page_deleted:
    audiences: []
    method: POST
    display-name: Page Deleted
    headers: {}
    payload:
      type: PageDeletedPayload
      docs: The Webhook payload for when a Page is deleted
    examples:
      - payload:
          triggerType: page_deleted
          payload:
            siteId: 65427cf400e02b306eaa049c
            pageId: 66a3cfb276641574f5d58311
            pageTitle: Heart of Gold Specs
            deletedOn: '2024-07-26T16:32:50Z'
",
    },
    "pages/scripts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete-custom-code": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:write",
                  ],
                },
              ],
              "display-name": "Delete Custom Code",
              "docs": "Delete the custom code block that an app has created for a page </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote> Required scope | `custom_code:write`
",
              "errors": [
                "root.DeleteCustomCodeScriptsRequestBadRequestError",
                "root.DeleteCustomCodeScriptsRequestUnauthorizedError",
                "root.DeleteCustomCodeScriptsRequestNotFoundError",
                "root.DeleteCustomCodeScriptsRequestTooManyRequestsError",
                "root.DeleteCustomCodeScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/pages/{page_id}/custom_code",
              "request": {
                "name": "DeleteCustomCodeScriptsRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-custom-code": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:read",
                  ],
                },
              ],
              "display-name": "Get Custom Code",
              "docs": "Get all registered scripts that have been applied to a specific Page.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote> Required scope | `custom_code:read`
",
              "errors": [
                "root.GetCustomCodeScriptsRequestBadRequestError",
                "root.GetCustomCodeScriptsRequestUnauthorizedError",
                "root.GetCustomCodeScriptsRequestNotFoundError",
                "root.GetCustomCodeScriptsRequestTooManyRequestsError",
                "root.GetCustomCodeScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "response": {
                    "body": {
                      "createdOn": "createdOn",
                      "lastUpdated": "lastUpdated",
                      "scripts": [
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "id",
                          "location": "header",
                          "version": "version",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pages/{page_id}/custom_code",
              "request": {
                "name": "GetCustomCodeScriptsRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetCustomCodeScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsert-custom-code": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:write",
                  ],
                },
              ],
              "display-name": "Add/Update Custom Code",
              "docs": "Add a registered script to a Page.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote> Required scope | `custom_code:write`
",
              "errors": [
                "root.UpsertCustomCodeScriptsRequestBadRequestError",
                "root.UpsertCustomCodeScriptsRequestUnauthorizedError",
                "root.UpsertCustomCodeScriptsRequestNotFoundError",
                "root.UpsertCustomCodeScriptsRequestTooManyRequestsError",
                "root.UpsertCustomCodeScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "request": {
                    "scripts": [
                      {
                        "attributes": {
                          "my-attribute": "some-value",
                        },
                        "id": "cms_slider",
                        "location": "header",
                        "version": "1.0.0",
                      },
                      {
                        "id": "alert",
                        "location": "header",
                        "version": "0.0.1",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "lastUpdated": "2022-10-26T00:28:54.191Z",
                      "scripts": [
                        {
                          "attributes": {
                            "my-attribute": "some-value",
                          },
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/pages/{page_id}/custom_code",
              "request": {
                "body": {
                  "properties": {
                    "scripts": {
                      "docs": "A list of scripts applied to a Site or a Page",
                      "type": "optional<list<UpsertCustomCodeScriptsRequestScriptsItem>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertCustomCodeScriptsRequest",
                "path-parameters": {
                  "page_id": {
                    "docs": "Unique identifier for a Page",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpsertCustomCodeScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetCustomCodeScriptsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<GetCustomCodeScriptsResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomCodeScriptsResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "GetCustomCodeScriptsResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomCodeScriptsResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsRequestScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "UpsertCustomCodeScriptsRequestScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsRequestScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<UpsertCustomCodeScriptsResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "UpsertCustomCodeScriptsResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetCustomCodeScriptsResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  GetCustomCodeScriptsResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: GetCustomCodeScriptsResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  GetCustomCodeScriptsResponse:
    properties:
      scripts:
        type: optional<list<GetCustomCodeScriptsResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
        access: read-only
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsRequestScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsRequestScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: UpsertCustomCodeScriptsRequestScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertCustomCodeScriptsResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: UpsertCustomCodeScriptsResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertCustomCodeScriptsResponse:
    properties:
      scripts:
        type: optional<list<UpsertCustomCodeScriptsResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
        access: read-only
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-custom-code:
      path: /pages/{page_id}/custom_code
      method: GET
      auth:
        - OAuth2:
            - custom_code:read
      docs: >
        Get all registered scripts that have been applied to a specific Page. 
        </br></br>  In order to use the Custom Code APIs for Sites and Pages,
        Custom Code Scripts must first be registered  to a Site via the
        `registered_scripts` endpoints, and then applied to a Site or Page using
        the appropriate `custom_code` endpoints.  <blockquote class="callout
        callout_info" theme="📘">Access to this endpoint requires a bearer token
        from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote> Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Custom Code
      request:
        name: GetCustomCodeScriptsRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
      response:
        docs: Request was successful
        type: GetCustomCodeScriptsResponse
        status-code: 200
      errors:
        - root.GetCustomCodeScriptsRequestBadRequestError
        - root.GetCustomCodeScriptsRequestUnauthorizedError
        - root.GetCustomCodeScriptsRequestNotFoundError
        - root.GetCustomCodeScriptsRequestTooManyRequestsError
        - root.GetCustomCodeScriptsRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          response:
            body:
              scripts:
                - id: id
                  location: header
                  version: version
                  attributes:
                    key: value
              lastUpdated: lastUpdated
              createdOn: createdOn
    upsert-custom-code:
      path: /pages/{page_id}/custom_code
      method: PUT
      auth:
        - OAuth2:
            - custom_code:write
      docs: >
        Add a registered script to a Page.  </br></br>  In order to use the
        Custom Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  <blockquote class="callout callout_info" theme="📘">Access
        to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote> Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      display-name: Add/Update Custom Code
      request:
        name: UpsertCustomCodeScriptsRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
        body:
          properties:
            scripts:
              type: optional<list<UpsertCustomCodeScriptsRequestScriptsItem>>
              docs: A list of scripts applied to a Site or a Page
        content-type: application/json
      response:
        docs: Request was successful
        type: UpsertCustomCodeScriptsResponse
        status-code: 200
      errors:
        - root.UpsertCustomCodeScriptsRequestBadRequestError
        - root.UpsertCustomCodeScriptsRequestUnauthorizedError
        - root.UpsertCustomCodeScriptsRequestNotFoundError
        - root.UpsertCustomCodeScriptsRequestTooManyRequestsError
        - root.UpsertCustomCodeScriptsRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          request:
            scripts:
              - id: cms_slider
                location: header
                version: 1.0.0
                attributes:
                  my-attribute: some-value
              - id: alert
                location: header
                version: 0.0.1
          response:
            body:
              scripts:
                - id: cms_slider
                  location: header
                  version: 1.0.0
                  attributes:
                    my-attribute: some-value
                - id: alert
                  location: header
                  version: 0.0.1
                  attributes:
                    key: value
              lastUpdated: '2022-10-26T00:28:54.191Z'
              createdOn: '2022-10-26T00:28:54.191Z'
    delete-custom-code:
      path: /pages/{page_id}/custom_code
      method: DELETE
      auth:
        - OAuth2:
            - custom_code:write
      docs: >
        Delete the custom code block that an app has created for a page
        </br></br>  In order to use the Custom Code APIs for Sites and Pages,
        Custom Code Scripts must first be registered  to a Site via the
        `registered_scripts` endpoints, and then applied to a Site or Page using
        the appropriate `custom_code` endpoints.  <blockquote class="callout
        callout_info" theme="📘">Access to this endpoint requires a bearer token
        from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote> Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete Custom Code
      request:
        name: DeleteCustomCodeScriptsRequest
        path-parameters:
          page_id:
            type: string
            docs: Unique identifier for a Page
      errors:
        - root.DeleteCustomCodeScriptsRequestBadRequestError
        - root.DeleteCustomCodeScriptsRequestUnauthorizedError
        - root.DeleteCustomCodeScriptsRequestNotFoundError
        - root.DeleteCustomCodeScriptsRequestTooManyRequestsError
        - root.DeleteCustomCodeScriptsRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
  source:
    openapi: ../openapi.yml
",
    },
    "products.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Create Product & SKU",
              "docs": "Creating a new Product involves creating both a Product and a SKU, since a Product Item has to have, at minimum, a single SKU.

In order to create a Product with multiple SKUs - for example a T-shirt in sizes small, medium and large - you'll need to create `sku-properties`. In our T-shirt example, a single `sku-property` would be Color. Within that property, we'll need to list out the various colors a T-shirt could be as an array of `enum` values: `royal-blue`, `crimson-red`, and `forrest-green`.

Once, you've created a Product and its `sku-properties` with `enum` values, you can create your default SKU, which will automatically be a combination of the first `sku-properties` you've created. In our example, the default SKU will be a Royal Blue T-Shirt, because our first `enum` of our Color `sku-property` is Royal Blue. After you've created your product, you can create additional SKUs using the <a href="https://developers.webflow.com/reference/create-skus">Create SKU endpoint</a>

Upon creation, the default product type will be `Advanced`. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown.

Required scope | `ecommerce:write`",
              "errors": [
                "root.CreateProductsRequestBadRequestError",
                "root.CreateProductsRequestUnauthorizedError",
                "root.CreateProductsRequestForbiddenError",
                "root.CreateProductsRequestNotFoundError",
                "root.CreateProductsRequestConflictError",
                "root.CreateProductsRequestTooManyRequestsError",
                "root.CreateProductsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "product": {
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "createdOn": "2024-04-04T14:22:28Z",
                        "fieldData": {
                          "categories": [
                            "categories",
                          ],
                          "default-sku": "66072fb71b89448912e2681c",
                          "description": "A plain t-shirt",
                          "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                          "name": "T-Shirt",
                          "shippable": true,
                          "sku-properties": [
                            {
                              "enum": [
                                {
                                  "id": "8d21a625d655ab260e9941c27180c75b",
                                  "name": "Small",
                                  "slug": "small",
                                },
                                {
                                  "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                  "name": "Medium",
                                  "slug": "medium",
                                },
                                {
                                  "id": "ec7877d6137ecf7ec86f726c135b1812",
                                  "name": "Large",
                                  "slug": "large",
                                },
                              ],
                              "id": "31b77fa66fa376c2c0abb458d5be39fb",
                              "name": "Size",
                            },
                            {
                              "enum": [
                                {
                                  "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                  "name": "Royal Blue",
                                  "slug": "royal-blue",
                                },
                                {
                                  "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                  "name": "Crimson Red",
                                  "slug": "crimson-red",
                                },
                                {
                                  "id": "996cd95c97fd5620d0a374c835b37205",
                                  "name": "Forrest Green",
                                  "slug": "forrest-green",
                                },
                              ],
                              "id": "74d3738e62c568d5634dd6989daec5ec",
                              "name": "Color",
                            },
                          ],
                          "slug": "t-shirt",
                          "tax-category": "standard-taxable",
                        },
                        "id": "660eb7a486d1d6e0412292d7",
                        "isArchived": false,
                        "isDraft": false,
                        "lastPublished": "2024-04-04T14:24:19Z",
                        "lastUpdated": "2024-04-04T14:30:19Z",
                      },
                      "skus": [
                        {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "createdOn": "2023-03-17T18:47:35Z",
                          "fieldData": {
                            "name": "Blue T-shirt",
                            "price": {
                              "unit": "USD",
                              "value": 100,
                            },
                            "quantity": 10,
                            "sku-values": {
                              "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                            },
                            "slug": "t-shirt-blue",
                          },
                          "id": "580e63fc8c9a982ac9b8b745",
                          "lastPublished": "2023-03-17T18:47:35Z",
                          "lastUpdated": "2023-03-17T18:47:35Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/products",
              "request": {
                "body": {
                  "properties": {
                    "product": {
                      "docs": "The Product object",
                      "type": "optional<CreateProductsRequestProduct>",
                    },
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<CreateProductsRequestPublishStatus>",
                    },
                    "sku": {
                      "docs": "The SKU object",
                      "type": "optional<CreateProductsRequestSku>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateProductsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CreateProductsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-sku": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Create SKU",
              "docs": "Create additional SKUs to cover every variant of your Product. The Default SKU already counts as one of the variants.

Creating additional SKUs will set the product type to `Advanced` for the product associated with the SKUs. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.CreateSkuProductsRequestBadRequestError",
                "root.CreateSkuProductsRequestUnauthorizedError",
                "root.CreateSkuProductsRequestForbiddenError",
                "root.CreateSkuProductsRequestNotFoundError",
                "root.CreateSkuProductsRequestConflictError",
                "root.CreateSkuProductsRequestTooManyRequestsError",
                "root.CreateSkuProductsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "skus": [
                      {},
                    ],
                  },
                  "response": {
                    "body": {
                      "skus": [
                        {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "createdOn": "2023-03-17T18:47:35Z",
                          "fieldData": {
                            "name": "Blue T-shirt",
                            "price": {
                              "unit": "USD",
                              "value": 100,
                            },
                            "quantity": 10,
                            "sku-values": {
                              "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                            },
                            "slug": "t-shirt-blue",
                          },
                          "id": "580e63fc8c9a982ac9b8b745",
                          "lastPublished": "2023-03-17T18:47:35Z",
                          "lastUpdated": "2023-03-17T18:47:35Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}/skus",
              "request": {
                "body": {
                  "properties": {
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<CreateSkuProductsRequestPublishStatus>",
                    },
                    "skus": {
                      "docs": "An array of the SKU data your are adding",
                      "type": "list<CreateSkuProductsRequestSkusItem>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateSkuProductsRequest",
                "path-parameters": {
                  "product_id": {
                    "docs": "Unique identifier for a Product",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CreateSkuProductsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:read",
                  ],
                },
              ],
              "display-name": "Get Product and SKUs",
              "docs": "Retrieve a single product by its id. All of its SKUs will also be retrieved.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.GetProductsRequestBadRequestError",
                "root.GetProductsRequestUnauthorizedError",
                "root.GetProductsRequestForbiddenError",
                "root.GetProductsRequestNotFoundError",
                "root.GetProductsRequestConflictError",
                "root.GetProductsRequestTooManyRequestsError",
                "root.GetProductsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "product": {
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "createdOn": "2024-04-04T14:22:28Z",
                        "fieldData": {
                          "categories": [
                            "categories",
                          ],
                          "default-sku": "66072fb71b89448912e2681c",
                          "description": "A plain t-shirt",
                          "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                          "name": "T-Shirt",
                          "shippable": true,
                          "sku-properties": [
                            {
                              "enum": [
                                {
                                  "id": "8d21a625d655ab260e9941c27180c75b",
                                  "name": "Small",
                                  "slug": "small",
                                },
                                {
                                  "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                  "name": "Medium",
                                  "slug": "medium",
                                },
                                {
                                  "id": "ec7877d6137ecf7ec86f726c135b1812",
                                  "name": "Large",
                                  "slug": "large",
                                },
                              ],
                              "id": "31b77fa66fa376c2c0abb458d5be39fb",
                              "name": "Size",
                            },
                            {
                              "enum": [
                                {
                                  "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                  "name": "Royal Blue",
                                  "slug": "royal-blue",
                                },
                                {
                                  "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                  "name": "Crimson Red",
                                  "slug": "crimson-red",
                                },
                                {
                                  "id": "996cd95c97fd5620d0a374c835b37205",
                                  "name": "Forrest Green",
                                  "slug": "forrest-green",
                                },
                              ],
                              "id": "74d3738e62c568d5634dd6989daec5ec",
                              "name": "Color",
                            },
                          ],
                          "slug": "t-shirt",
                          "tax-category": "standard-taxable",
                        },
                        "id": "660eb7a486d1d6e0412292d7",
                        "isArchived": false,
                        "isDraft": false,
                        "lastPublished": "2024-04-04T14:24:19Z",
                        "lastUpdated": "2024-04-04T14:30:19Z",
                      },
                      "skus": [
                        {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "createdOn": "2023-03-17T18:47:35Z",
                          "fieldData": {
                            "name": "Blue T-shirt",
                            "price": {
                              "unit": "USD",
                              "value": 100,
                            },
                            "quantity": 10,
                            "sku-values": {
                              "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                            },
                            "slug": "t-shirt-blue",
                          },
                          "id": "580e63fc8c9a982ac9b8b745",
                          "lastPublished": "2023-03-17T18:47:35Z",
                          "lastUpdated": "2023-03-17T18:47:35Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}",
              "request": {
                "name": "GetProductsRequest",
                "path-parameters": {
                  "product_id": {
                    "docs": "Unique identifier for a Product",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetProductsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:read",
                  ],
                },
              ],
              "display-name": "List Products & SKUs",
              "docs": "Retrieve all products for a site. Use `limit` and `offset` to page through all products with subsequent requests. All SKUs for each product will also be fetched and returned. The `limit`, `offset` and `total` values represent Products only and do not include any SKUs.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.ListProductsRequestBadRequestError",
                "root.ListProductsRequestUnauthorizedError",
                "root.ListProductsRequestForbiddenError",
                "root.ListProductsRequestNotFoundError",
                "root.ListProductsRequestConflictError",
                "root.ListProductsRequestTooManyRequestsError",
                "root.ListProductsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "product": {
                            "cmsLocaleId": "653ad57de882f528b32e810e",
                            "createdOn": "2024-04-04T14:22:28Z",
                            "fieldData": {
                              "default-sku": "66072fb71b89448912e2681c",
                              "description": "A plain t-shirt",
                              "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                              "name": "T-Shirt",
                              "shippable": true,
                              "sku-properties": [
                                {
                                  "enum": [
                                    {
                                      "id": "8d21a625d655ab260e9941c27180c75b",
                                      "name": "Small",
                                      "slug": "small",
                                    },
                                    {
                                      "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                      "name": "Medium",
                                      "slug": "medium",
                                    },
                                    {
                                      "id": "ec7877d6137ecf7ec86f726c135b1812",
                                      "name": "Large",
                                      "slug": "large",
                                    },
                                  ],
                                  "id": "31b77fa66fa376c2c0abb458d5be39fb",
                                  "name": "Size",
                                },
                                {
                                  "enum": [
                                    {
                                      "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                      "name": "Royal Blue",
                                      "slug": "royal-blue",
                                    },
                                    {
                                      "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                      "name": "Crimson Red",
                                      "slug": "crimson-red",
                                    },
                                    {
                                      "id": "996cd95c97fd5620d0a374c835b37205",
                                      "name": "Forrest Green",
                                      "slug": "forrest-green",
                                    },
                                  ],
                                  "id": "74d3738e62c568d5634dd6989daec5ec",
                                  "name": "Color",
                                },
                              ],
                              "slug": "t-shirt",
                              "tax-category": "standard-taxable",
                            },
                            "id": "660eb7a486d1d6e0412292d7",
                            "isArchived": false,
                            "isDraft": false,
                            "lastPublished": "2024-04-04T14:24:19Z",
                            "lastUpdated": "2024-04-04T14:30:19Z",
                          },
                          "skus": [
                            {
                              "cmsLocaleId": "653ad57de882f528b32e810e",
                              "createdOn": "2023-03-17T18:47:35Z",
                              "fieldData": {
                                "name": "Blue T-shirt",
                                "price": {
                                  "unit": "USD",
                                  "value": 100,
                                },
                                "quantity": 10,
                                "sku-values": {
                                  "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                                },
                                "slug": "t-shirt-blue",
                              },
                              "id": "580e63fc8c9a982ac9b8b745",
                              "lastPublished": "2023-03-17T18:47:35Z",
                              "lastUpdated": "2023-03-17T18:47:35Z",
                            },
                          ],
                        },
                      ],
                      "pagination": {
                        "limit": 100,
                        "offset": 0,
                        "total": 100,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/products",
              "request": {
                "name": "ListProductsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListProductsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Update Product",
              "docs": "Updating an existing Product will set the product type to `Advanced`. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.UpdateProductsRequestBadRequestError",
                "root.UpdateProductsRequestUnauthorizedError",
                "root.UpdateProductsRequestForbiddenError",
                "root.UpdateProductsRequestNotFoundError",
                "root.UpdateProductsRequestConflictError",
                "root.UpdateProductsRequestTooManyRequestsError",
                "root.UpdateProductsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2024-04-04T14:22:28Z",
                      "fieldData": {
                        "categories": [
                          "categories",
                        ],
                        "default-sku": "66072fb71b89448912e2681c",
                        "description": "A plain t-shirt",
                        "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                        "name": "T-Shirt",
                        "shippable": true,
                        "sku-properties": [
                          {
                            "enum": [
                              {
                                "id": "8d21a625d655ab260e9941c27180c75b",
                                "name": "Small",
                                "slug": "small",
                              },
                              {
                                "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                "name": "Medium",
                                "slug": "medium",
                              },
                              {
                                "id": "ec7877d6137ecf7ec86f726c135b1812",
                                "name": "Large",
                                "slug": "large",
                              },
                            ],
                            "id": "31b77fa66fa376c2c0abb458d5be39fb",
                            "name": "Size",
                          },
                          {
                            "enum": [
                              {
                                "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                "name": "Royal Blue",
                                "slug": "royal-blue",
                              },
                              {
                                "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                "name": "Crimson Red",
                                "slug": "crimson-red",
                              },
                              {
                                "id": "996cd95c97fd5620d0a374c835b37205",
                                "name": "Forrest Green",
                                "slug": "forrest-green",
                              },
                            ],
                            "id": "74d3738e62c568d5634dd6989daec5ec",
                            "name": "Color",
                          },
                        ],
                        "slug": "t-shirt",
                        "tax-category": "standard-taxable",
                      },
                      "id": "660eb7a486d1d6e0412292d7",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2024-04-04T14:24:19Z",
                      "lastUpdated": "2024-04-04T14:30:19Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}",
              "request": {
                "body": {
                  "properties": {
                    "product": {
                      "docs": "The Product object",
                      "type": "optional<UpdateProductsRequestProduct>",
                    },
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<UpdateProductsRequestPublishStatus>",
                    },
                    "sku": {
                      "docs": "The SKU object",
                      "type": "optional<UpdateProductsRequestSku>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateProductsRequest",
                "path-parameters": {
                  "product_id": {
                    "docs": "Unique identifier for a Product",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateProductsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-sku": {
              "auth": [
                {
                  "OAuth2": [
                    "ecommerce:write",
                  ],
                },
              ],
              "display-name": "Update SKU",
              "docs": "Updating an existing SKU will set the product type to `Advanced` for the product associated with the SKU. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.UpdateSkuProductsRequestBadRequestError",
                "root.UpdateSkuProductsRequestUnauthorizedError",
                "root.UpdateSkuProductsRequestForbiddenError",
                "root.UpdateSkuProductsRequestNotFoundError",
                "root.UpdateSkuProductsRequestConflictError",
                "root.UpdateSkuProductsRequestTooManyRequestsError",
                "root.UpdateSkuProductsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "sku_id": "5e8518516e147040726cc415",
                  },
                  "request": {
                    "sku": {},
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2023-03-17T18:47:35Z",
                      "fieldData": {
                        "compare-at-price": {
                          "unit": "USD",
                          "value": 100,
                        },
                        "ec-sku-billing-method": "one-time",
                        "ec-sku-subscription-plan": {
                          "frequency": 1,
                          "interval": "day",
                          "plans": [
                            {},
                          ],
                          "trial": 7,
                        },
                        "name": "Blue T-shirt",
                        "price": {
                          "unit": "USD",
                          "value": 100,
                        },
                        "quantity": 10,
                        "sku-values": {
                          "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                        },
                        "slug": "t-shirt-blue",
                        "track-inventory": true,
                      },
                      "id": "580e63fc8c9a982ac9b8b745",
                      "lastPublished": "2023-03-17T18:47:35Z",
                      "lastUpdated": "2023-03-17T18:47:35Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}/skus/{sku_id}",
              "request": {
                "body": {
                  "properties": {
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<UpdateSkuProductsRequestPublishStatus>",
                    },
                    "sku": {
                      "docs": "The SKU object",
                      "type": "UpdateSkuProductsRequestSku",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateSkuProductsRequest",
                "path-parameters": {
                  "product_id": {
                    "docs": "Unique identifier for a Product",
                    "type": "string",
                  },
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                  "sku_id": {
                    "docs": "Unique identifier for a SKU",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateSkuProductsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateProductsRequestProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<CreateProductsRequestProductFieldData>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<CreateProductsRequestProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<CreateProductsRequestProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<CreateProductsRequestProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<CreateProductsRequestProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSku": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<CreateProductsRequestSkuFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<CreateProductsRequestSkuFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<CreateProductsRequestSkuFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "CreateProductsRequestSkuFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsRequestSkuFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponse": {
            "docs": "A product and its SKUs.",
            "inline": undefined,
            "properties": {
              "product": {
                "docs": "The Product object",
                "type": "optional<CreateProductsResponseProduct>",
              },
              "skus": {
                "docs": "A list of SKU Objects",
                "type": "optional<list<CreateProductsResponseSkusItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<CreateProductsResponseProductFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<CreateProductsResponseProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<CreateProductsResponseProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<CreateProductsResponseProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<CreateProductsResponseProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<CreateProductsResponseSkusItemFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<CreateProductsResponseSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<CreateProductsResponseSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "CreateProductsResponseSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateProductsResponseSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<CreateSkuProductsRequestSkusItemFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<CreateSkuProductsRequestSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "CreateSkuProductsRequestSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsRequestSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "skus": "optional<list<CreateSkuProductsResponseSkusItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<CreateSkuProductsResponseSkusItemFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<CreateSkuProductsResponseSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "CreateSkuProductsResponseSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateSkuProductsResponseSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponse": {
            "docs": "A product and its SKUs.",
            "inline": undefined,
            "properties": {
              "product": {
                "docs": "The Product object",
                "type": "optional<GetProductsResponseProduct>",
              },
              "skus": {
                "docs": "A list of SKU Objects",
                "type": "optional<list<GetProductsResponseSkusItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<GetProductsResponseProductFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<GetProductsResponseProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<GetProductsResponseProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<GetProductsResponseProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<GetProductsResponseProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<GetProductsResponseSkusItemFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<GetProductsResponseSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<GetProductsResponseSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "GetProductsResponseSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetProductsResponseSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponse": {
            "docs": "Results from product list",
            "inline": undefined,
            "properties": {
              "items": {
                "docs": "List of Item objects within the Collection. Contains product and skus keys for each Item",
                "type": "optional<list<ListProductsResponseItemsItem>>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListProductsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItem": {
            "docs": "A product and its SKUs.",
            "inline": true,
            "properties": {
              "product": {
                "docs": "The Product object",
                "type": "optional<ListProductsResponseItemsItemProduct>",
              },
              "skus": {
                "docs": "A list of SKU Objects",
                "type": "optional<list<ListProductsResponseItemsItemSkusItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ListProductsResponseItemsItemProductFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ListProductsResponseItemsItemProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ListProductsResponseItemsItemProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ListProductsResponseItemsItemProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ListProductsResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ListProductsResponseItemsItemSkusItemFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ListProductsResponseItemsItemSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ListProductsResponseItemsItemSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponseItemsItemSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListProductsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<UpdateProductsRequestProductFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<UpdateProductsRequestProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<UpdateProductsRequestProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<UpdateProductsRequestProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<UpdateProductsRequestProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSku": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<UpdateProductsRequestSkuFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<UpdateProductsRequestSkuFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<UpdateProductsRequestSkuFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "UpdateProductsRequestSkuFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsRequestSkuFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsResponse": {
            "docs": "The Product object",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<UpdateProductsResponseFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsResponseFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<UpdateProductsResponseFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<UpdateProductsResponseFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<UpdateProductsResponseFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsResponseFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsResponseFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<UpdateProductsResponseFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsResponseFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateProductsResponseFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSku": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<UpdateSkuProductsRequestSkuFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<UpdateSkuProductsRequestSkuFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<UpdateSkuProductsRequestSkuFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "UpdateSkuProductsRequestSkuFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsRequestSkuFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponse": {
            "docs": "The SKU object",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "access": "read-only",
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<UpdateSkuProductsResponseFieldData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "access": "read-only",
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<UpdateSkuProductsResponseFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<UpdateSkuProductsResponseFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "UpdateSkuProductsResponseFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": {
                "access": "read-only",
                "type": "optional<list<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItem>>",
              },
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateSkuProductsResponseFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListProductsResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: >-
          list<ListProductsResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ListProductsResponseItemsItemProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ListProductsResponseItemsItemProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: >-
          optional<list<ListProductsResponseItemsItemProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ListProductsResponseItemsItemProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ListProductsResponseItemsItemProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<ListProductsResponseItemsItemProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ListProductsResponseItemsItemSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ListProductsResponseItemsItemSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: >-
        optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: >-
        optional<ListProductsResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItemSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<ListProductsResponseItemsItemSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponseItemsItem:
    docs: A product and its SKUs.
    properties:
      product:
        type: optional<ListProductsResponseItemsItemProduct>
        docs: The Product object
      skus:
        type: optional<list<ListProductsResponseItemsItemSkusItem>>
        docs: A list of SKU Objects
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListProductsResponse:
    docs: Results from product list
    properties:
      items:
        type: optional<list<ListProductsResponseItemsItem>>
        docs: >-
          List of Item objects within the Collection. Contains product and skus
          keys for each Item
      pagination:
        type: optional<ListProductsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  CreateProductsRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsRequestProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<CreateProductsRequestProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsRequestProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsRequestProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<CreateProductsRequestProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<CreateProductsRequestProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<CreateProductsRequestProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestProduct:
    docs: The Product object
    properties:
      fieldData:
        type: optional<CreateProductsRequestProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestSkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestSkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestSkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestSkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: CreateProductsRequestSkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<CreateProductsRequestSkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<CreateProductsRequestSkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<CreateProductsRequestSkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsRequestSku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<CreateProductsRequestSkuFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<CreateProductsResponseProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsResponseProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsResponseProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: >-
          optional<list<CreateProductsResponseProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<CreateProductsResponseProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<CreateProductsResponseProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<CreateProductsResponseProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: CreateProductsResponseSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<CreateProductsResponseSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<CreateProductsResponseSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<CreateProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponseSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<CreateProductsResponseSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  CreateProductsResponse:
    docs: A product and its SKUs.
    properties:
      product:
        type: optional<CreateProductsResponseProduct>
        docs: The Product object
      skus:
        type: optional<list<CreateProductsResponseSkusItem>>
        docs: A list of SKU Objects
    source:
      openapi: ../openapi.yml
  GetProductsResponseProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<GetProductsResponseProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  GetProductsResponseProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  GetProductsResponseProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<GetProductsResponseProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<GetProductsResponseProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<GetProductsResponseProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<GetProductsResponseProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: GetProductsResponseSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<GetProductsResponseSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<GetProductsResponseSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<GetProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponseSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<GetProductsResponseSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  GetProductsResponse:
    docs: A product and its SKUs.
    properties:
      product:
        type: optional<GetProductsResponseProduct>
        docs: The Product object
      skus:
        type: optional<list<GetProductsResponseSkusItem>>
        docs: A list of SKU Objects
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<UpdateProductsRequestProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<UpdateProductsRequestProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<UpdateProductsRequestProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<UpdateProductsRequestProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<UpdateProductsRequestProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestSkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestSkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestSkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestSkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: UpdateProductsRequestSkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<UpdateProductsRequestSkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<UpdateProductsRequestSkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<UpdateProductsRequestSkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsRequestSku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<UpdateProductsRequestSkuFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsResponseFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsResponseFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<UpdateProductsResponseFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsResponseFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsResponseFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateProductsResponseFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<UpdateProductsResponseFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<UpdateProductsResponseFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<UpdateProductsResponseFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateProductsResponse:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<UpdateProductsResponseFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsRequestSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsRequestSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsRequestSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: CreateSkuProductsRequestSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<CreateSkuProductsRequestSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<CreateSkuProductsRequestSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsRequestSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<CreateSkuProductsRequestSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponseSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponseSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponseSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponseSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: CreateSkuProductsResponseSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<CreateSkuProductsResponseSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: >-
        optional<CreateSkuProductsResponseSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponseSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<CreateSkuProductsResponseSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  CreateSkuProductsResponse:
    properties:
      skus: optional<list<CreateSkuProductsResponseSkusItem>>
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestSkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsRequestSkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsRequestSkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsRequestSkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: UpdateSkuProductsRequestSkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<UpdateSkuProductsRequestSkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<UpdateSkuProductsRequestSkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<UpdateSkuProductsRequestSkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsRequestSku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<UpdateSkuProductsRequestSkuFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsResponseFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsResponseFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsResponseFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans:
        type: >-
          optional<list<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlanPlansItem>>
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsResponseFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: UpdateSkuProductsResponseFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<UpdateSkuProductsResponseFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<UpdateSkuProductsResponseFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<UpdateSkuProductsResponseFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateSkuProductsResponse:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
        access: read-only
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
        access: read-only
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
        access: read-only
      fieldData:
        type: optional<UpdateSkuProductsResponseFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/products
      method: GET
      auth:
        - OAuth2:
            - ecommerce:read
      docs: >
        Retrieve all products for a site. Use `limit` and `offset` to page
        through all products with subsequent requests. All SKUs for each product
        will also be fetched and returned. The `limit`, `offset` and `total`
        values represent Products only and do not include any SKUs.


        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      display-name: List Products & SKUs
      request:
        name: ListProductsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: ListProductsResponse
        status-code: 200
      errors:
        - root.ListProductsRequestBadRequestError
        - root.ListProductsRequestUnauthorizedError
        - root.ListProductsRequestForbiddenError
        - root.ListProductsRequestNotFoundError
        - root.ListProductsRequestConflictError
        - root.ListProductsRequestTooManyRequestsError
        - root.ListProductsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            offset: 1.1
            limit: 1.1
          response:
            body:
              items:
                - product:
                    id: 660eb7a486d1d6e0412292d7
                    cmsLocaleId: 653ad57de882f528b32e810e
                    lastPublished: '2024-04-04T14:24:19Z'
                    lastUpdated: '2024-04-04T14:30:19Z'
                    createdOn: '2024-04-04T14:22:28Z'
                    isArchived: false
                    isDraft: false
                    fieldData:
                      name: T-Shirt
                      slug: t-shirt
                      description: A plain t-shirt
                      shippable: true
                      sku-properties:
                        - id: 31b77fa66fa376c2c0abb458d5be39fb
                          name: Size
                          enum:
                            - id: 8d21a625d655ab260e9941c27180c75b
                              name: Small
                              slug: small
                            - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                              name: Medium
                              slug: medium
                            - id: ec7877d6137ecf7ec86f726c135b1812
                              name: Large
                              slug: large
                        - id: 74d3738e62c568d5634dd6989daec5ec
                          name: Color
                          enum:
                            - id: e539b0d6c3a609cd06ddb2da804f68f0
                              name: Royal Blue
                              slug: royal-blue
                            - id: 68d98f2fbafc0fd45651cddc44798dd0
                              name: Crimson Red
                              slug: crimson-red
                            - id: 996cd95c97fd5620d0a374c835b37205
                              name: Forrest Green
                              slug: forrest-green
                      tax-category: standard-taxable
                      default-sku: 66072fb71b89448912e2681c
                      ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
                  skus:
                    - id: 580e63fc8c9a982ac9b8b745
                      cmsLocaleId: 653ad57de882f528b32e810e
                      lastPublished: '2023-03-17T18:47:35Z'
                      lastUpdated: '2023-03-17T18:47:35Z'
                      createdOn: '2023-03-17T18:47:35Z'
                      fieldData:
                        sku-values:
                          ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                        name: Blue T-shirt
                        slug: t-shirt-blue
                        price:
                          value: 100
                          unit: USD
                        quantity: 10
              pagination:
                limit: 100
                offset: 0
                total: 100
    create:
      path: /sites/{site_id}/products
      method: POST
      auth:
        - OAuth2:
            - ecommerce:write
      docs: >-
        Creating a new Product involves creating both a Product and a SKU, since
        a Product Item has to have, at minimum, a single SKU.


        In order to create a Product with multiple SKUs - for example a T-shirt
        in sizes small, medium and large - you'll need to create
        `sku-properties`. In our T-shirt example, a single `sku-property` would
        be Color. Within that property, we'll need to list out the various
        colors a T-shirt could be as an array of `enum` values: `royal-blue`,
        `crimson-red`, and `forrest-green`.


        Once, you've created a Product and its `sku-properties` with `enum`
        values, you can create your default SKU, which will automatically be a
        combination of the first `sku-properties` you've created. In our
        example, the default SKU will be a Royal Blue T-Shirt, because our first
        `enum` of our Color `sku-property` is Royal Blue. After you've created
        your product, you can create additional SKUs using the <a
        href="https://developers.webflow.com/reference/create-skus">Create SKU
        endpoint</a>


        Upon creation, the default product type will be `Advanced`. The product
        type is used to determine which Product and SKU fields are shown to
        users in the `Designer` and the `Editor`. Setting it to `Advanced`
        ensures that all Product and SKU fields will be shown.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Product & SKU
      request:
        name: CreateProductsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            publishStatus:
              type: optional<CreateProductsRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            product:
              type: optional<CreateProductsRequestProduct>
              docs: The Product object
            sku:
              type: optional<CreateProductsRequestSku>
              docs: The SKU object
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateProductsResponse
        status-code: 200
      errors:
        - root.CreateProductsRequestBadRequestError
        - root.CreateProductsRequestUnauthorizedError
        - root.CreateProductsRequestForbiddenError
        - root.CreateProductsRequestNotFoundError
        - root.CreateProductsRequestConflictError
        - root.CreateProductsRequestTooManyRequestsError
        - root.CreateProductsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request: {}
          response:
            body:
              product:
                id: 660eb7a486d1d6e0412292d7
                cmsLocaleId: 653ad57de882f528b32e810e
                lastPublished: '2024-04-04T14:24:19Z'
                lastUpdated: '2024-04-04T14:30:19Z'
                createdOn: '2024-04-04T14:22:28Z'
                isArchived: false
                isDraft: false
                fieldData:
                  name: T-Shirt
                  slug: t-shirt
                  description: A plain t-shirt
                  shippable: true
                  sku-properties:
                    - id: 31b77fa66fa376c2c0abb458d5be39fb
                      name: Size
                      enum:
                        - id: 8d21a625d655ab260e9941c27180c75b
                          name: Small
                          slug: small
                        - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                          name: Medium
                          slug: medium
                        - id: ec7877d6137ecf7ec86f726c135b1812
                          name: Large
                          slug: large
                    - id: 74d3738e62c568d5634dd6989daec5ec
                      name: Color
                      enum:
                        - id: e539b0d6c3a609cd06ddb2da804f68f0
                          name: Royal Blue
                          slug: royal-blue
                        - id: 68d98f2fbafc0fd45651cddc44798dd0
                          name: Crimson Red
                          slug: crimson-red
                        - id: 996cd95c97fd5620d0a374c835b37205
                          name: Forrest Green
                          slug: forrest-green
                  categories:
                    - categories
                  tax-category: standard-taxable
                  default-sku: 66072fb71b89448912e2681c
                  ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                    name: Blue T-shirt
                    slug: t-shirt-blue
                    price:
                      value: 100
                      unit: USD
                    quantity: 10
    get:
      path: /sites/{site_id}/products/{product_id}
      method: GET
      auth:
        - OAuth2:
            - ecommerce:read
      docs: >
        Retrieve a single product by its id. All of its SKUs will also be
        retrieved.


        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Product and SKUs
      request:
        name: GetProductsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          product_id:
            type: string
            docs: Unique identifier for a Product
      response:
        docs: Request was successful
        type: GetProductsResponse
        status-code: 200
      errors:
        - root.GetProductsRequestBadRequestError
        - root.GetProductsRequestUnauthorizedError
        - root.GetProductsRequestForbiddenError
        - root.GetProductsRequestNotFoundError
        - root.GetProductsRequestConflictError
        - root.GetProductsRequestTooManyRequestsError
        - root.GetProductsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              product:
                id: 660eb7a486d1d6e0412292d7
                cmsLocaleId: 653ad57de882f528b32e810e
                lastPublished: '2024-04-04T14:24:19Z'
                lastUpdated: '2024-04-04T14:30:19Z'
                createdOn: '2024-04-04T14:22:28Z'
                isArchived: false
                isDraft: false
                fieldData:
                  name: T-Shirt
                  slug: t-shirt
                  description: A plain t-shirt
                  shippable: true
                  sku-properties:
                    - id: 31b77fa66fa376c2c0abb458d5be39fb
                      name: Size
                      enum:
                        - id: 8d21a625d655ab260e9941c27180c75b
                          name: Small
                          slug: small
                        - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                          name: Medium
                          slug: medium
                        - id: ec7877d6137ecf7ec86f726c135b1812
                          name: Large
                          slug: large
                    - id: 74d3738e62c568d5634dd6989daec5ec
                      name: Color
                      enum:
                        - id: e539b0d6c3a609cd06ddb2da804f68f0
                          name: Royal Blue
                          slug: royal-blue
                        - id: 68d98f2fbafc0fd45651cddc44798dd0
                          name: Crimson Red
                          slug: crimson-red
                        - id: 996cd95c97fd5620d0a374c835b37205
                          name: Forrest Green
                          slug: forrest-green
                  categories:
                    - categories
                  tax-category: standard-taxable
                  default-sku: 66072fb71b89448912e2681c
                  ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                    name: Blue T-shirt
                    slug: t-shirt-blue
                    price:
                      value: 100
                      unit: USD
                    quantity: 10
    update:
      path: /sites/{site_id}/products/{product_id}
      method: PATCH
      auth:
        - OAuth2:
            - ecommerce:write
      docs: >
        Updating an existing Product will set the product type to `Advanced`.
        The product type is used to determine which Product and SKU fields are
        shown to users in the `Designer` and the `Editor`. Setting it to
        `Advanced` ensures that all Product and SKU fields will be shown. The
        product type can be edited in the `Designer` or the `Editor`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Update Product
      request:
        name: UpdateProductsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          product_id:
            type: string
            docs: Unique identifier for a Product
        body:
          properties:
            publishStatus:
              type: optional<UpdateProductsRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            product:
              type: optional<UpdateProductsRequestProduct>
              docs: The Product object
            sku:
              type: optional<UpdateProductsRequestSku>
              docs: The SKU object
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateProductsResponse
        status-code: 200
      errors:
        - root.UpdateProductsRequestBadRequestError
        - root.UpdateProductsRequestUnauthorizedError
        - root.UpdateProductsRequestForbiddenError
        - root.UpdateProductsRequestNotFoundError
        - root.UpdateProductsRequestConflictError
        - root.UpdateProductsRequestTooManyRequestsError
        - root.UpdateProductsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          request: {}
          response:
            body:
              id: 660eb7a486d1d6e0412292d7
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2024-04-04T14:24:19Z'
              lastUpdated: '2024-04-04T14:30:19Z'
              createdOn: '2024-04-04T14:22:28Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: T-Shirt
                slug: t-shirt
                description: A plain t-shirt
                shippable: true
                sku-properties:
                  - id: 31b77fa66fa376c2c0abb458d5be39fb
                    name: Size
                    enum:
                      - id: 8d21a625d655ab260e9941c27180c75b
                        name: Small
                        slug: small
                      - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                        name: Medium
                        slug: medium
                      - id: ec7877d6137ecf7ec86f726c135b1812
                        name: Large
                        slug: large
                  - id: 74d3738e62c568d5634dd6989daec5ec
                    name: Color
                    enum:
                      - id: e539b0d6c3a609cd06ddb2da804f68f0
                        name: Royal Blue
                        slug: royal-blue
                      - id: 68d98f2fbafc0fd45651cddc44798dd0
                        name: Crimson Red
                        slug: crimson-red
                      - id: 996cd95c97fd5620d0a374c835b37205
                        name: Forrest Green
                        slug: forrest-green
                categories:
                  - categories
                tax-category: standard-taxable
                default-sku: 66072fb71b89448912e2681c
                ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
    create-sku:
      path: /sites/{site_id}/products/{product_id}/skus
      method: POST
      auth:
        - OAuth2:
            - ecommerce:write
      docs: >
        Create additional SKUs to cover every variant of your Product. The
        Default SKU already counts as one of the variants.


        Creating additional SKUs will set the product type to `Advanced` for the
        product associated with the SKUs. The product type is used to determine
        which Product and SKU fields are shown to users in the `Designer` and
        the `Editor`. Setting it to `Advanced` ensures that all Product and SKU
        fields will be shown. The product type can be edited in the `Designer`
        or the `Editor`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Create SKU
      request:
        name: CreateSkuProductsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          product_id:
            type: string
            docs: Unique identifier for a Product
        body:
          properties:
            publishStatus:
              type: optional<CreateSkuProductsRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            skus:
              docs: An array of the SKU data your are adding
              type: list<CreateSkuProductsRequestSkusItem>
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateSkuProductsResponse
        status-code: 200
      errors:
        - root.CreateSkuProductsRequestBadRequestError
        - root.CreateSkuProductsRequestUnauthorizedError
        - root.CreateSkuProductsRequestForbiddenError
        - root.CreateSkuProductsRequestNotFoundError
        - root.CreateSkuProductsRequestConflictError
        - root.CreateSkuProductsRequestTooManyRequestsError
        - root.CreateSkuProductsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          request:
            skus:
              - {}
          response:
            body:
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                    name: Blue T-shirt
                    slug: t-shirt-blue
                    price:
                      value: 100
                      unit: USD
                    quantity: 10
    update-sku:
      path: /sites/{site_id}/products/{product_id}/skus/{sku_id}
      method: PATCH
      auth:
        - OAuth2:
            - ecommerce:write
      docs: >
        Updating an existing SKU will set the product type to `Advanced` for the
        product associated with the SKU. The product type is used to determine
        which Product and SKU fields are shown to users in the `Designer` and
        the `Editor`. Setting it to `Advanced` ensures that all Product and SKU
        fields will be shown. The product type can be edited in the `Designer`
        or the `Editor`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      display-name: Update SKU
      request:
        name: UpdateSkuProductsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          product_id:
            type: string
            docs: Unique identifier for a Product
          sku_id:
            type: string
            docs: Unique identifier for a SKU
        body:
          properties:
            publishStatus:
              type: optional<UpdateSkuProductsRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            sku:
              type: UpdateSkuProductsRequestSku
              docs: The SKU object
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateSkuProductsResponse
        status-code: 200
      errors:
        - root.UpdateSkuProductsRequestBadRequestError
        - root.UpdateSkuProductsRequestUnauthorizedError
        - root.UpdateSkuProductsRequestForbiddenError
        - root.UpdateSkuProductsRequestNotFoundError
        - root.UpdateSkuProductsRequestConflictError
        - root.UpdateSkuProductsRequestTooManyRequestsError
        - root.UpdateSkuProductsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
            sku_id: 5e8518516e147040726cc415
          request:
            sku: {}
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2023-03-17T18:47:35Z'
              lastUpdated: '2023-03-17T18:47:35Z'
              createdOn: '2023-03-17T18:47:35Z'
              fieldData:
                sku-values:
                  ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                name: Blue T-shirt
                slug: t-shirt-blue
                price:
                  value: 100
                  unit: USD
                compare-at-price:
                  value: 100
                  unit: USD
                ec-sku-billing-method: one-time
                ec-sku-subscription-plan:
                  interval: day
                  frequency: 1
                  trial: 7
                  plans:
                    - {}
                track-inventory: true
                quantity: 10
  source:
    openapi: ../openapi.yml
",
    },
    "scripts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:read",
                  ],
                },
              ],
              "display-name": "Get Registered Scripts",
              "docs": "List of scripts registered to a Site.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  Additionally, Scripts can be remotely hosted, or registered as inline snippets. <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`
",
              "errors": [
                "root.ListScriptsRequestBadRequestError",
                "root.ListScriptsRequestUnauthorizedError",
                "root.ListScriptsRequestNotFoundError",
                "root.ListScriptsRequestTooManyRequestsError",
                "root.ListScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "registeredScripts": [
                        {
                          "canCopy": false,
                          "createdOn": "2022-10-26T00:28:54.191Z",
                          "displayName": "Alert",
                          "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.1.js",
                          "id": "alert",
                          "lastUpdated": "lastUpdated",
                          "version": "0.0.1",
                        },
                        {
                          "canCopy": false,
                          "createdOn": "2022-10-26T00:28:54.191Z",
                          "displayName": "Alert",
                          "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.2.js",
                          "id": "alert",
                          "lastUpdated": "lastUpdated",
                          "version": "0.0.2",
                        },
                        {
                          "canCopy": true,
                          "createdOn": "2022-10-26T00:28:54.191Z",
                          "displayName": "CMS Slider",
                          "hostedLocation": "https://cdn.jsdelivr.net/.../cms_slider.js",
                          "id": "cms_slider",
                          "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                          "lastUpdated": "lastUpdated",
                          "version": "1.0.0",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/registered_scripts",
              "request": {
                "name": "ListScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "register-hosted": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:write",
                  ],
                },
              ],
              "display-name": "Register Script - Hosted",
              "docs": "Add a script to a Site's Custom Code registry. </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  Additionally, Scripts can be remotely hosted, or registered as inline snippets.   <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     </br></br>  Required scope | `custom_code:write`
",
              "errors": [
                "root.RegisterHostedScriptsRequestBadRequestError",
                "root.RegisterHostedScriptsRequestUnauthorizedError",
                "root.RegisterHostedScriptsRequestNotFoundError",
                "root.RegisterHostedScriptsRequestTooManyRequestsError",
                "root.RegisterHostedScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "canCopy": true,
                    "displayName": "CMS Slider",
                    "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                    "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                    "version": "1.0.0",
                  },
                  "response": {
                    "body": {
                      "canCopy": true,
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "displayName": "CMS Slider",
                      "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                      "id": "cms_slider",
                      "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                      "lastUpdated": "lastUpdated",
                      "version": "1.0.0",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/registered_scripts/hosted",
              "request": {
                "body": {
                  "properties": {
                    "canCopy": {
                      "default": false,
                      "docs": "Define whether the script can be copied on site duplication and transfer",
                      "type": "optional<boolean>",
                    },
                    "displayName": {
                      "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                      "type": "string",
                    },
                    "hostedLocation": {
                      "docs": "URI for an externally hosted script location",
                      "type": "string",
                    },
                    "integrityHash": {
                      "docs": "Sub-Resource Integrity Hash",
                      "type": "string",
                    },
                    "version": {
                      "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RegisterHostedScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 201,
                "type": "RegisterHostedScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "register-inline": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:write",
                  ],
                },
              ],
              "display-name": "Register Script - Inline",
              "docs": "Add a script to a Site's Custom Code registry. Inline scripts can be between 1 and 2000 characters. </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  </br></br>  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`
",
              "errors": [
                "root.RegisterInlineScriptsRequestBadRequestError",
                "root.RegisterInlineScriptsRequestUnauthorizedError",
                "root.RegisterInlineScriptsRequestNotFoundError",
                "root.RegisterInlineScriptsRequestTooManyRequestsError",
                "root.RegisterInlineScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "displayName": "Alert",
                    "sourceCode": "alert('hello world');",
                    "version": "0.0.1",
                  },
                  "response": {
                    "body": {
                      "canCopy": false,
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "displayName": "Alert",
                      "hostedLocation": "https://uploads-ssl.webflow.com/6258612d1ee792848f805dcf%2F64b6c769ff52ba6c3d904a91%2F660d6e15b3d1696f2d2b1447%2Falert-0.0.1.js",
                      "id": "alert",
                      "lastUpdated": "lastUpdated",
                      "version": "0.0.1",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/registered_scripts/inline",
              "request": {
                "body": {
                  "properties": {
                    "canCopy": {
                      "default": false,
                      "docs": "Define whether the script can be copied on site duplication and transfer",
                      "type": "optional<boolean>",
                    },
                    "displayName": {
                      "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                      "type": "string",
                    },
                    "integrityHash": {
                      "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                      "type": "optional<string>",
                    },
                    "sourceCode": {
                      "docs": "The code to be added to the site (to be hosted by Webflow).",
                      "type": "string",
                    },
                    "version": {
                      "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RegisterInlineScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Created",
                "status-code": 201,
                "type": "RegisterInlineScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ListScriptsResponse": {
            "docs": "A list of scripts registered to the site",
            "inline": undefined,
            "properties": {
              "registeredScripts": "optional<list<ListScriptsResponseRegisteredScriptsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListScriptsResponseRegisteredScriptsItem": {
            "docs": "Registered custom code for application",
            "inline": true,
            "properties": {
              "canCopy": {
                "default": false,
                "docs": "Define whether the script can be copied on site duplication and transfer",
                "type": "optional<boolean>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "Timestamp when the script version was created",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                "type": "optional<string>",
              },
              "hostedLocation": {
                "docs": "URI for an externally hosted script location",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Human readable id, derived from the user-specified display name",
                "type": "optional<string>",
              },
              "integrityHash": {
                "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Timestamp when the script version was last updated",
                "type": "optional<string>",
              },
              "version": {
                "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterHostedScriptsResponse": {
            "docs": "Registered custom code for application",
            "inline": undefined,
            "properties": {
              "canCopy": {
                "default": false,
                "docs": "Define whether the script can be copied on site duplication and transfer",
                "type": "optional<boolean>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "Timestamp when the script version was created",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                "type": "optional<string>",
              },
              "hostedLocation": {
                "docs": "URI for an externally hosted script location",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Human readable id, derived from the user-specified display name",
                "type": "optional<string>",
              },
              "integrityHash": {
                "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Timestamp when the script version was last updated",
                "type": "optional<string>",
              },
              "version": {
                "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RegisterInlineScriptsResponse": {
            "docs": "Registered custom code for application",
            "inline": undefined,
            "properties": {
              "canCopy": {
                "default": false,
                "docs": "Define whether the script can be copied on site duplication and transfer",
                "type": "optional<boolean>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "Timestamp when the script version was created",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                "type": "optional<string>",
              },
              "hostedLocation": {
                "docs": "URI for an externally hosted script location",
                "type": "optional<string>",
              },
              "id": {
                "access": "read-only",
                "docs": "Human readable id, derived from the user-specified display name",
                "type": "optional<string>",
              },
              "integrityHash": {
                "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Timestamp when the script version was last updated",
                "type": "optional<string>",
              },
              "version": {
                "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListScriptsResponseRegisteredScriptsItem:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
        access: read-only
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
        access: read-only
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../openapi.yml
    inline: true
  ListScriptsResponse:
    docs: A list of scripts registered to the site
    properties:
      registeredScripts: optional<list<ListScriptsResponseRegisteredScriptsItem>>
    source:
      openapi: ../openapi.yml
  RegisterHostedScriptsResponse:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
        access: read-only
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
        access: read-only
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../openapi.yml
  RegisterInlineScriptsResponse:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
        access: read-only
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
        access: read-only
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
        access: read-only
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/registered_scripts
      method: GET
      auth:
        - OAuth2:
            - custom_code:read
      docs: >
        List of scripts registered to a Site.  </br></br>  In order to use the
        Custom Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  Additionally, Scripts can be remotely hosted, or registered
        as inline snippets. <blockquote class="callout callout_info"
        theme="📘">Access to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Registered Scripts
      request:
        name: ListScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: ListScriptsResponse
        status-code: 200
      errors:
        - root.ListScriptsRequestBadRequestError
        - root.ListScriptsRequestUnauthorizedError
        - root.ListScriptsRequestNotFoundError
        - root.ListScriptsRequestTooManyRequestsError
        - root.ListScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              registeredScripts:
                - id: alert
                  canCopy: false
                  displayName: Alert
                  hostedLocation: https://cdn.webflow.io/.../alert-0.0.1.js
                  createdOn: '2022-10-26T00:28:54.191Z'
                  lastUpdated: lastUpdated
                  version: 0.0.1
                - id: alert
                  canCopy: false
                  displayName: Alert
                  hostedLocation: https://cdn.webflow.io/.../alert-0.0.2.js
                  createdOn: '2022-10-26T00:28:54.191Z'
                  lastUpdated: lastUpdated
                  version: 0.0.2
                - id: cms_slider
                  canCopy: true
                  displayName: CMS Slider
                  hostedLocation: https://cdn.jsdelivr.net/.../cms_slider.js
                  integrityHash: >-
                    sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+
                  createdOn: '2022-10-26T00:28:54.191Z'
                  lastUpdated: lastUpdated
                  version: 1.0.0
    register-hosted:
      path: /sites/{site_id}/registered_scripts/hosted
      method: POST
      auth:
        - OAuth2:
            - custom_code:write
      docs: >
        Add a script to a Site's Custom Code registry. </br></br>  In order to
        use the Custom Code APIs for Sites and Pages, Custom Code Scripts must
        first be registered  to a Site via the `registered_scripts` endpoints,
        and then applied to a Site or Page using the appropriate `custom_code`
        endpoints.  Additionally, Scripts can be remotely hosted, or registered
        as inline snippets.   <blockquote class="callout callout_info"
        theme="📘">Access to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     </br></br>  Required scope |
        `custom_code:write`
      source:
        openapi: ../openapi.yml
      display-name: Register Script - Hosted
      request:
        name: RegisterHostedScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            hostedLocation:
              type: string
              docs: URI for an externally hosted script location
            integrityHash:
              type: string
              docs: Sub-Resource Integrity Hash
            canCopy:
              type: optional<boolean>
              docs: >-
                Define whether the script can be copied on site duplication and
                transfer
              default: false
            version:
              type: string
              docs: >-
                A Semantic Version (SemVer) string, denoting the version of the
                script
            displayName:
              type: string
              docs: >-
                User-facing name for the script. Must be between 1 and 50
                alphanumeric characters
        content-type: application/json
      response:
        docs: Request was successful
        type: RegisterHostedScriptsResponse
        status-code: 201
      errors:
        - root.RegisterHostedScriptsRequestBadRequestError
        - root.RegisterHostedScriptsRequestUnauthorizedError
        - root.RegisterHostedScriptsRequestNotFoundError
        - root.RegisterHostedScriptsRequestTooManyRequestsError
        - root.RegisterHostedScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            hostedLocation: https://cdn.jsdelivr.net/.../cmsslider.js
            integrityHash: >-
              sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+
            canCopy: true
            version: 1.0.0
            displayName: CMS Slider
          response:
            body:
              id: cms_slider
              canCopy: true
              displayName: CMS Slider
              hostedLocation: https://cdn.jsdelivr.net/.../cmsslider.js
              integrityHash: >-
                sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+
              createdOn: '2022-10-26T00:28:54.191Z'
              lastUpdated: lastUpdated
              version: 1.0.0
    register-inline:
      path: /sites/{site_id}/registered_scripts/inline
      method: POST
      auth:
        - OAuth2:
            - custom_code:write
      docs: >
        Add a script to a Site's Custom Code registry. Inline scripts can be
        between 1 and 2000 characters. </br></br>  In order to use the Custom
        Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  </br></br>  <blockquote class="callout callout_info"
        theme="📘">Access to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      display-name: Register Script - Inline
      request:
        name: RegisterInlineScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            sourceCode:
              type: string
              docs: The code to be added to the site (to be hosted by Webflow).
            integrityHash:
              type: optional<string>
              docs: >-
                Sub-Resource Integrity Hash. Only required for externally hosted
                scripts (passed via hostedLocation)
            canCopy:
              type: optional<boolean>
              docs: >-
                Define whether the script can be copied on site duplication and
                transfer
              default: false
            version:
              type: string
              docs: >-
                A Semantic Version (SemVer) string, denoting the version of the
                script
            displayName:
              type: string
              docs: >-
                User-facing name for the script. Must be between 1 and 50
                alphanumeric characters
        content-type: application/json
      response:
        docs: Created
        type: RegisterInlineScriptsResponse
        status-code: 201
      errors:
        - root.RegisterInlineScriptsRequestBadRequestError
        - root.RegisterInlineScriptsRequestUnauthorizedError
        - root.RegisterInlineScriptsRequestNotFoundError
        - root.RegisterInlineScriptsRequestTooManyRequestsError
        - root.RegisterInlineScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            sourceCode: alert('hello world');
            version: 0.0.1
            displayName: Alert
          response:
            body:
              id: alert
              canCopy: false
              displayName: Alert
              hostedLocation: >-
                https://uploads-ssl.webflow.com/6258612d1ee792848f805dcf%2F64b6c769ff52ba6c3d904a91%2F660d6e15b3d1696f2d2b1447%2Falert-0.0.1.js
              createdOn: '2022-10-26T00:28:54.191Z'
              lastUpdated: lastUpdated
              version: 0.0.1
  source:
    openapi: ../openapi.yml
",
    },
    "sites.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Sites",
          "endpoints": {
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "sites:read",
                  ],
                },
              ],
              "display-name": "Get Site",
              "docs": "Get a site by site id </br></br>  Required scope | `sites:read`",
              "errors": [
                "root.GetSitesRequestBadRequestError",
                "root.GetSitesRequestUnauthorizedError",
                "root.GetSitesRequestNotFoundError",
                "root.GetSitesRequestTooManyRequestsError",
                "root.GetSitesRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "1979-10-12T12:00:00Z",
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89d",
                          "url": "hitchhikersguide.galaxy",
                        },
                        {
                          "id": "589a331aa51e760df7ccb89e",
                          "url": "heartofgold.spaceship",
                        },
                      ],
                      "displayName": "The Hitchhiker's Guide to the Galaxy",
                      "id": "42e98c9a982ac9b8b742",
                      "lastPublished": "2023-04-02T12:42:00Z",
                      "lastUpdated": "2023-04-02T12:42:00Z",
                      "locales": {
                        "primary": {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "displayImageId": "displayImageId",
                          "displayName": "English (United States)",
                          "enabled": false,
                          "id": "653fd9af6a07fc9cfd7a5e57",
                          "redirect": true,
                          "subdirectory": "",
                          "tag": "en-US",
                        },
                        "secondary": [
                          {
                            "cmsLocaleId": "653ad57de882f528b32e810e",
                            "displayName": "English (United States)",
                            "enabled": false,
                            "id": "653fd9af6a07fc9cfd7a5e57",
                            "redirect": true,
                            "subdirectory": "",
                            "tag": "en-US",
                          },
                        ],
                      },
                      "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                      "previewUrl": "https://screenshots.webflow.com/sites/6258612d1ee792848f805dcf/20231219211811_d5990556c743f33b7071300a03bf67e6.png",
                      "shortName": "hitchhikers-guide",
                      "timeZone": "Magrathea/FactoryFloor",
                      "workspaceId": "42e63e98c9a982ac9b8b742",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}",
              "request": {
                "name": "GetSitesRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetSitesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-custom-domain": {
              "auth": [
                {
                  "OAuth2": [
                    "sites:read",
                  ],
                },
              ],
              "display-name": "Get Custom Domains",
              "docs": "Get a list of all custom domains related to site. </br></br>  Required scope | `sites:read`",
              "errors": [
                "root.GetCustomDomainSitesRequestUnauthorizedError",
                "root.GetCustomDomainSitesRequestForbiddenError",
                "root.GetCustomDomainSitesRequestNotFoundError",
                "root.GetCustomDomainSitesRequestTooManyRequestsError",
                "root.GetCustomDomainSitesRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89d",
                          "url": "hitchhikersguide.galaxy",
                        },
                        {
                          "id": "589a331aa51e760df7ccb89e",
                          "url": "heartofgold.spaceship",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_domains",
              "request": {
                "name": "GetCustomDomainSitesRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetCustomDomainSitesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "sites:read",
                  ],
                },
              ],
              "display-name": "List Sites",
              "docs": "List of all sites the provided access token is able to access. </br></br> Required scope | `sites:read`",
              "errors": [
                "root.ListSitesRequestUnauthorizedError",
                "root.ListSitesRequestNotFoundError",
                "root.ListSitesRequestTooManyRequestsError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "sites": [
                        {
                          "createdOn": "1979-10-12T12:00:00Z",
                          "customDomains": [
                            {
                              "id": "589a331aa51e760df7ccb89e",
                              "url": "heartofgold.galaxy",
                            },
                          ],
                          "displayName": "Heart of Gold Spaceship",
                          "id": "42e63e98c9a982ac9b8b741",
                          "lastPublished": "2023-04-02T12:42:00Z",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "locales": {
                            "primary": {
                              "cmsLocaleId": "653ad57de882f528b32e810e",
                              "displayName": "English - Heart of Gold Standard",
                              "enabled": true,
                              "id": "653fd9af6a07fc9cfd7a5e57",
                              "redirect": false,
                              "subdirectory": "/en",
                              "tag": "The Ultimate Answer",
                            },
                            "secondary": [
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810g",
                                "displayName": "Betelgeusian - Vogon Liaison",
                                "enabled": true,
                                "id": "653fd9af6a07fc9cfd7a5e58",
                                "redirect": true,
                                "subdirectory": "/bet",
                                "tag": "Vogon",
                              },
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810h",
                                "displayName": "Magrathean - Custom Planet Designs",
                                "enabled": false,
                                "id": "653fd9af6a07fc9cfd7a5e59",
                                "redirect": true,
                                "subdirectory": "/mg",
                                "tag": "Magrathean",
                              },
                            ],
                          },
                          "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                          "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b741/197910121200.png",
                          "shortName": "heart-of-gold",
                          "timeZone": "DeepSpace/InfiniteImprobability",
                          "workspaceId": "42e63fc8c9a982ac9b8b744",
                        },
                        {
                          "createdOn": "1981-10-12T12:00:00Z",
                          "customDomains": [
                            {
                              "id": "589a331aa51e760df7ccb89f",
                              "url": "marvin.blog",
                            },
                          ],
                          "displayName": "Marvin's Personal Blog",
                          "id": "42e63e98c9a982ac9b8b742",
                          "lastPublished": "2023-04-02T12:45:00Z",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "locales": {
                            "primary": {
                              "cmsLocaleId": "653ad57de882f528b32e810e",
                              "displayName": "English - Marvin's Musings",
                              "enabled": true,
                              "id": "653fd9af6a07fc9cfd7a5e57",
                              "redirect": false,
                              "subdirectory": "/en",
                              "tag": "English",
                            },
                            "secondary": [
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810f",
                                "displayName": "Squornshellous - Mattress Speak",
                                "enabled": true,
                                "id": "653fd9af6a07fc9cfd7a5e56",
                                "redirect": true,
                                "subdirectory": "/sr",
                                "tag": "Squornshellous",
                              },
                            ],
                          },
                          "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b742/198110121200.png",
                          "shortName": "paranoid-android",
                          "timeZone": "DeepSpace/Depression",
                          "workspaceId": "42e63fc8c9a982ac9b8b745",
                        },
                        {
                          "createdOn": "1982-10-12T12:00:00Z",
                          "customDomains": [
                            {
                              "id": "589a331aa51e760df7ccb8a0",
                              "url": "vogonpoetry.galaxy",
                            },
                          ],
                          "displayName": "Vogon Poetry Archive",
                          "id": "42e63e98c9a982ac9b8b743",
                          "lastPublished": "2023-04-02T12:50:00Z",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "locales": {
                            "primary": {
                              "cmsLocaleId": "653ad57de882f528b32e810d",
                              "displayName": "English - Vogon Verse",
                              "enabled": true,
                              "id": "653fd9af6a07fc9cfd7a5e55",
                              "redirect": false,
                              "subdirectory": "/en",
                              "tag": "Third Worst Poetry",
                            },
                            "secondary": [
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810c",
                                "displayName": "Galactic - Universal Language",
                                "enabled": true,
                                "id": "653fd9af6a07fc9cfd7a5e54",
                                "redirect": true,
                                "subdirectory": "/gl",
                                "tag": "Pan-Galactic Gargle Blaster",
                              },
                            ],
                          },
                          "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b743/198210121200.png",
                          "shortName": "vogon-poetry",
                          "timeZone": "Vogsphere/PoetryHall",
                          "workspaceId": "42e63fc8c9a982ac9b8b746",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites",
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListSitesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish": {
              "auth": [
                {
                  "OAuth2": [
                    "sites:write",
                  ],
                },
              ],
              "display-name": "Publish site",
              "docs": "Publish a site to one more more domains. </br></br>  Required scope | `sites:write` <blockquote class="callout callout_info" theme="📘"><h2 class="callout-heading"><span class="callout-icon">📘</span><p>Endpoint-specific rate limit</p></h2><p>This endpoint has a limit of one successful publish queue per minute.</p></blockquote>",
              "errors": [
                "root.PublishSitesRequestBadRequestError",
                "root.PublishSitesRequestUnauthorizedError",
                "root.PublishSitesRequestForbiddenError",
                "root.PublishSitesRequestNotFoundError",
                "root.PublishSitesRequestTooManyRequestsError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89d",
                          "url": "test-api-domain.com",
                        },
                      ],
                      "publishToWebflowSubdomain": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/publish",
              "request": {
                "body": {
                  "properties": {
                    "customDomains": {
                      "docs": "Array of Custom Domain ids to publish",
                      "type": "optional<list<string>>",
                    },
                    "publishToWebflowSubdomain": {
                      "default": false,
                      "docs": "Choice of whether to publish to the default Webflow Subdomain",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "PublishSitesRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request accepted",
                "status-code": 202,
                "type": "PublishSitesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetCustomDomainSitesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "customDomains": "optional<list<GetCustomDomainSitesResponseCustomDomainsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomDomainSitesResponseCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Domain",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSitesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date the Site was created",
                "type": "optional<datetime>",
              },
              "customDomains": "optional<list<GetSitesResponseCustomDomainsItem>>",
              "displayName": {
                "docs": "Name given to Site",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Site",
                "type": "string",
              },
              "lastPublished": {
                "docs": "Date the Site was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "Date the Site was last updated",
                "type": "optional<datetime>",
              },
              "locales": "optional<GetSitesResponseLocales>",
              "parentFolderId": {
                "docs": "The ID of the parent folder the Site exists in",
                "type": "optional<nullable<string>>",
              },
              "previewUrl": {
                "docs": "URL of a generated image for the given Site",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "shortName": {
                "docs": "Slugified version of name",
                "type": "optional<string>",
              },
              "timeZone": {
                "docs": "Site timezone set under Site Settings",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSitesResponseCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Domain",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSitesResponseLocales": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "primary": {
                "docs": "The primary locale for the site or application.",
                "type": "optional<GetSitesResponseLocalesPrimary>",
              },
              "secondary": {
                "docs": "A list of secondary locales available for the site or application.",
                "type": "optional<list<GetSitesResponseLocalesSecondaryItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSitesResponseLocalesPrimary": {
            "docs": "The primary locale for the site or application.",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<nullable<string>>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetSitesResponseLocalesSecondaryItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<nullable<string>>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sites": "optional<list<ListSitesResponseSitesItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesResponseSitesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "Date the Site was created",
                "type": "optional<datetime>",
              },
              "customDomains": "optional<list<ListSitesResponseSitesItemCustomDomainsItem>>",
              "displayName": {
                "docs": "Name given to Site",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Site",
                "type": "string",
              },
              "lastPublished": {
                "docs": "Date the Site was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "Date the Site was last updated",
                "type": "optional<datetime>",
              },
              "locales": "optional<ListSitesResponseSitesItemLocales>",
              "parentFolderId": {
                "docs": "The ID of the parent folder the Site exists in",
                "type": "optional<nullable<string>>",
              },
              "previewUrl": {
                "docs": "URL of a generated image for the given Site",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "shortName": {
                "docs": "Slugified version of name",
                "type": "optional<string>",
              },
              "timeZone": {
                "docs": "Site timezone set under Site Settings",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesResponseSitesItemCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Domain",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesResponseSitesItemLocales": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "primary": {
                "docs": "The primary locale for the site or application.",
                "type": "optional<ListSitesResponseSitesItemLocalesPrimary>",
              },
              "secondary": {
                "docs": "A list of secondary locales available for the site or application.",
                "type": "optional<list<ListSitesResponseSitesItemLocalesSecondaryItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesResponseSitesItemLocalesPrimary": {
            "docs": "The primary locale for the site or application.",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<nullable<string>>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListSitesResponseSitesItemLocalesSecondaryItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<nullable<string>>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublishSitesResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "customDomains": {
                "docs": "Array of domains objects",
                "type": "optional<list<PublishSitesResponseCustomDomainsItem>>",
              },
              "publishToWebflowSubdomain": {
                "default": false,
                "docs": "Flag for publishing to webflow.io subdomain",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PublishSitesResponseCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Domain",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitePublishPayload": {
            "docs": "The Webhook payload for when a Site is published",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<SitePublishPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitePublishPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "domains": {
                "docs": "The domains that were published",
                "type": "optional<list<string>>",
              },
              "publishedBy": {
                "docs": "The name and id of the user who published the site",
                "type": "optional<map<string, unknown>>",
              },
              "publishedOn": {
                "docs": "The timestamp of the publish event",
                "type": "optional<datetime>",
              },
              "siteId": {
                "docs": "The ID of the site that was published",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "site_publish": {
            "audiences": [],
            "display-name": "Site Publish",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "domains": [
                      "my-website.webflow.io",
                    ],
                    "publishedBy": {
                      "displayName": "Zaphod BeebleBrox",
                    },
                    "publishedOn": "2024-07-26T16:43:20Z",
                    "siteId": "62749158efef318abc8d5a0f",
                  },
                  "triggerType": "site_publish",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Site is published",
              "type": "SitePublishPayload",
            },
          },
        },
      },
      "rawContents": "types:
  ListSitesResponseSitesItemCustomDomainsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Domain
        access: read-only
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  ListSitesResponseSitesItemLocalesPrimary:
    docs: The primary locale for the site or application.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<nullable<string>>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  ListSitesResponseSitesItemLocalesSecondaryItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<nullable<string>>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  ListSitesResponseSitesItemLocales:
    properties:
      primary:
        type: optional<ListSitesResponseSitesItemLocalesPrimary>
        docs: The primary locale for the site or application.
      secondary:
        type: optional<list<ListSitesResponseSitesItemLocalesSecondaryItem>>
        docs: A list of secondary locales available for the site or application.
    source:
      openapi: ../openapi.yml
    inline: true
  ListSitesResponseSitesItem:
    properties:
      id:
        type: string
        docs: Unique identifier for the Site
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace
      createdOn:
        type: optional<datetime>
        docs: Date the Site was created
      displayName:
        type: optional<string>
        docs: Name given to Site
      shortName:
        type: optional<string>
        docs: Slugified version of name
      lastPublished:
        type: optional<datetime>
        docs: Date the Site was last published
      lastUpdated:
        type: optional<datetime>
        docs: Date the Site was last updated
      previewUrl:
        type: optional<string>
        docs: URL of a generated image for the given Site
        validation:
          format: uri
      timeZone:
        type: optional<string>
        docs: Site timezone set under Site Settings
      parentFolderId:
        type: optional<nullable<string>>
        docs: The ID of the parent folder the Site exists in
      customDomains: optional<list<ListSitesResponseSitesItemCustomDomainsItem>>
      locales: optional<ListSitesResponseSitesItemLocales>
    source:
      openapi: ../openapi.yml
    inline: true
  ListSitesResponse:
    properties:
      sites: optional<list<ListSitesResponseSitesItem>>
    source:
      openapi: ../openapi.yml
  GetSitesResponseCustomDomainsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Domain
        access: read-only
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  GetSitesResponseLocalesPrimary:
    docs: The primary locale for the site or application.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<nullable<string>>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  GetSitesResponseLocalesSecondaryItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<nullable<string>>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  GetSitesResponseLocales:
    properties:
      primary:
        type: optional<GetSitesResponseLocalesPrimary>
        docs: The primary locale for the site or application.
      secondary:
        type: optional<list<GetSitesResponseLocalesSecondaryItem>>
        docs: A list of secondary locales available for the site or application.
    source:
      openapi: ../openapi.yml
    inline: true
  GetSitesResponse:
    properties:
      id:
        type: string
        docs: Unique identifier for the Site
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace
      createdOn:
        type: optional<datetime>
        docs: Date the Site was created
      displayName:
        type: optional<string>
        docs: Name given to Site
      shortName:
        type: optional<string>
        docs: Slugified version of name
      lastPublished:
        type: optional<datetime>
        docs: Date the Site was last published
      lastUpdated:
        type: optional<datetime>
        docs: Date the Site was last updated
      previewUrl:
        type: optional<string>
        docs: URL of a generated image for the given Site
        validation:
          format: uri
      timeZone:
        type: optional<string>
        docs: Site timezone set under Site Settings
      parentFolderId:
        type: optional<nullable<string>>
        docs: The ID of the parent folder the Site exists in
      customDomains: optional<list<GetSitesResponseCustomDomainsItem>>
      locales: optional<GetSitesResponseLocales>
    source:
      openapi: ../openapi.yml
  GetCustomDomainSitesResponseCustomDomainsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Domain
        access: read-only
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  GetCustomDomainSitesResponse:
    properties:
      customDomains: optional<list<GetCustomDomainSitesResponseCustomDomainsItem>>
    source:
      openapi: ../openapi.yml
  PublishSitesResponseCustomDomainsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Domain
        access: read-only
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  PublishSitesResponse:
    properties:
      customDomains:
        type: optional<list<PublishSitesResponseCustomDomainsItem>>
        docs: Array of domains objects
      publishToWebflowSubdomain:
        type: optional<boolean>
        docs: Flag for publishing to webflow.io subdomain
        default: false
    source:
      openapi: ../openapi.yml
  SitePublishPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId:
        type: optional<string>
        docs: The ID of the site that was published
      publishedOn:
        type: optional<datetime>
        docs: The timestamp of the publish event
      domains:
        type: optional<list<string>>
        docs: The domains that were published
      publishedBy:
        type: optional<map<string, unknown>>
        docs: The name and id of the user who published the site
    source:
      openapi: ../openapi.yml
    inline: true
  SitePublishPayload:
    docs: The Webhook payload for when a Site is published
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<SitePublishPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites
      method: GET
      auth:
        - OAuth2:
            - sites:read
      docs: >-
        List of all sites the provided access token is able to access.
        </br></br> Required scope | `sites:read`
      source:
        openapi: ../openapi.yml
      display-name: List Sites
      response:
        docs: Request was successful
        type: ListSitesResponse
        status-code: 200
      errors:
        - root.ListSitesRequestUnauthorizedError
        - root.ListSitesRequestNotFoundError
        - root.ListSitesRequestTooManyRequestsError
      examples:
        - response:
            body:
              sites:
                - id: 42e63e98c9a982ac9b8b741
                  workspaceId: 42e63fc8c9a982ac9b8b744
                  createdOn: '1979-10-12T12:00:00Z'
                  displayName: Heart of Gold Spaceship
                  shortName: heart-of-gold
                  lastPublished: '2023-04-02T12:42:00Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  previewUrl: >-
                    https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b741/197910121200.png
                  timeZone: DeepSpace/InfiniteImprobability
                  parentFolderId: 1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6
                  customDomains:
                    - id: 589a331aa51e760df7ccb89e
                      url: heartofgold.galaxy
                  locales:
                    primary:
                      id: 653fd9af6a07fc9cfd7a5e57
                      cmsLocaleId: 653ad57de882f528b32e810e
                      enabled: true
                      displayName: English - Heart of Gold Standard
                      redirect: false
                      subdirectory: /en
                      tag: The Ultimate Answer
                    secondary:
                      - id: 653fd9af6a07fc9cfd7a5e58
                        cmsLocaleId: 653ad57de882f528b32e810g
                        enabled: true
                        displayName: Betelgeusian - Vogon Liaison
                        redirect: true
                        subdirectory: /bet
                        tag: Vogon
                      - id: 653fd9af6a07fc9cfd7a5e59
                        cmsLocaleId: 653ad57de882f528b32e810h
                        enabled: false
                        displayName: Magrathean - Custom Planet Designs
                        redirect: true
                        subdirectory: /mg
                        tag: Magrathean
                - id: 42e63e98c9a982ac9b8b742
                  workspaceId: 42e63fc8c9a982ac9b8b745
                  createdOn: '1981-10-12T12:00:00Z'
                  displayName: Marvin's Personal Blog
                  shortName: paranoid-android
                  lastPublished: '2023-04-02T12:45:00Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  previewUrl: >-
                    https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b742/198110121200.png
                  timeZone: DeepSpace/Depression
                  customDomains:
                    - id: 589a331aa51e760df7ccb89f
                      url: marvin.blog
                  locales:
                    primary:
                      id: 653fd9af6a07fc9cfd7a5e57
                      cmsLocaleId: 653ad57de882f528b32e810e
                      enabled: true
                      displayName: English - Marvin's Musings
                      redirect: false
                      subdirectory: /en
                      tag: English
                    secondary:
                      - id: 653fd9af6a07fc9cfd7a5e56
                        cmsLocaleId: 653ad57de882f528b32e810f
                        enabled: true
                        displayName: Squornshellous - Mattress Speak
                        redirect: true
                        subdirectory: /sr
                        tag: Squornshellous
                - id: 42e63e98c9a982ac9b8b743
                  workspaceId: 42e63fc8c9a982ac9b8b746
                  createdOn: '1982-10-12T12:00:00Z'
                  displayName: Vogon Poetry Archive
                  shortName: vogon-poetry
                  lastPublished: '2023-04-02T12:50:00Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  previewUrl: >-
                    https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b743/198210121200.png
                  timeZone: Vogsphere/PoetryHall
                  customDomains:
                    - id: 589a331aa51e760df7ccb8a0
                      url: vogonpoetry.galaxy
                  locales:
                    primary:
                      id: 653fd9af6a07fc9cfd7a5e55
                      cmsLocaleId: 653ad57de882f528b32e810d
                      enabled: true
                      displayName: English - Vogon Verse
                      redirect: false
                      subdirectory: /en
                      tag: Third Worst Poetry
                    secondary:
                      - id: 653fd9af6a07fc9cfd7a5e54
                        cmsLocaleId: 653ad57de882f528b32e810c
                        enabled: true
                        displayName: Galactic - Universal Language
                        redirect: true
                        subdirectory: /gl
                        tag: Pan-Galactic Gargle Blaster
    get:
      path: /sites/{site_id}
      method: GET
      auth:
        - OAuth2:
            - sites:read
      docs: Get a site by site id </br></br>  Required scope | `sites:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Site
      request:
        name: GetSitesRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: GetSitesResponse
        status-code: 200
      errors:
        - root.GetSitesRequestBadRequestError
        - root.GetSitesRequestUnauthorizedError
        - root.GetSitesRequestNotFoundError
        - root.GetSitesRequestTooManyRequestsError
        - root.GetSitesRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              id: 42e98c9a982ac9b8b742
              workspaceId: 42e63e98c9a982ac9b8b742
              createdOn: '1979-10-12T12:00:00Z'
              displayName: The Hitchhiker's Guide to the Galaxy
              shortName: hitchhikers-guide
              lastPublished: '2023-04-02T12:42:00Z'
              lastUpdated: '2023-04-02T12:42:00Z'
              previewUrl: >-
                https://screenshots.webflow.com/sites/6258612d1ee792848f805dcf/20231219211811_d5990556c743f33b7071300a03bf67e6.png
              timeZone: Magrathea/FactoryFloor
              parentFolderId: 1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6
              customDomains:
                - id: 589a331aa51e760df7ccb89d
                  url: hitchhikersguide.galaxy
                - id: 589a331aa51e760df7ccb89e
                  url: heartofgold.spaceship
              locales:
                primary:
                  id: 653fd9af6a07fc9cfd7a5e57
                  cmsLocaleId: 653ad57de882f528b32e810e
                  enabled: false
                  displayName: English (United States)
                  displayImageId: displayImageId
                  redirect: true
                  subdirectory: ''
                  tag: en-US
                secondary:
                  - id: 653fd9af6a07fc9cfd7a5e57
                    cmsLocaleId: 653ad57de882f528b32e810e
                    enabled: false
                    displayName: English (United States)
                    redirect: true
                    subdirectory: ''
                    tag: en-US
    get-custom-domain:
      path: /sites/{site_id}/custom_domains
      method: GET
      auth:
        - OAuth2:
            - sites:read
      docs: >-
        Get a list of all custom domains related to site. </br></br>  Required
        scope | `sites:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Custom Domains
      request:
        name: GetCustomDomainSitesRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: GetCustomDomainSitesResponse
        status-code: 200
      errors:
        - root.GetCustomDomainSitesRequestUnauthorizedError
        - root.GetCustomDomainSitesRequestForbiddenError
        - root.GetCustomDomainSitesRequestNotFoundError
        - root.GetCustomDomainSitesRequestTooManyRequestsError
        - root.GetCustomDomainSitesRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              customDomains:
                - id: 589a331aa51e760df7ccb89d
                  url: hitchhikersguide.galaxy
                - id: 589a331aa51e760df7ccb89e
                  url: heartofgold.spaceship
    publish:
      path: /sites/{site_id}/publish
      method: POST
      auth:
        - OAuth2:
            - sites:write
      docs: >-
        Publish a site to one more more domains. </br></br>  Required scope |
        `sites:write` <blockquote class="callout callout_info" theme="📘"><h2
        class="callout-heading"><span
        class="callout-icon">📘</span><p>Endpoint-specific rate
        limit</p></h2><p>This endpoint has a limit of one successful publish
        queue per minute.</p></blockquote>
      source:
        openapi: ../openapi.yml
      display-name: Publish site
      request:
        name: PublishSitesRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            customDomains:
              type: optional<list<string>>
              docs: Array of Custom Domain ids to publish
            publishToWebflowSubdomain:
              type: optional<boolean>
              docs: Choice of whether to publish to the default Webflow Subdomain
              default: false
        content-type: application/json
      response:
        docs: Request accepted
        type: PublishSitesResponse
        status-code: 202
      errors:
        - root.PublishSitesRequestBadRequestError
        - root.PublishSitesRequestUnauthorizedError
        - root.PublishSitesRequestForbiddenError
        - root.PublishSitesRequestNotFoundError
        - root.PublishSitesRequestTooManyRequestsError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request: {}
          response:
            body:
              customDomains:
                - id: 589a331aa51e760df7ccb89d
                  url: test-api-domain.com
              publishToWebflowSubdomain: true
  source:
    openapi: ../openapi.yml
  display-name: Sites
webhooks:
  site_publish:
    audiences: []
    method: POST
    display-name: Site Publish
    headers: {}
    payload:
      type: SitePublishPayload
      docs: The Webhook payload for when a Site is published
    examples:
      - payload:
          triggerType: site_publish
          payload:
            siteId: 62749158efef318abc8d5a0f
            publishedOn: '2024-07-26T16:43:20Z'
            domains:
              - my-website.webflow.io
            publishedBy:
              displayName: Zaphod BeebleBrox
",
    },
    "sites/activityLogs.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "site_activity:read",
                  ],
                },
              ],
              "display-name": "Get Site Activity Logs",
              "docs": "Retrieve Activity Logs for a specific Site. Requires Site to be on an Enterprise plan. </br></br>  Required scope | `site_activity:read`",
              "errors": [
                "root.ListActivityLogsRequestForbiddenError",
                "root.ListActivityLogsRequestNotFoundError",
                "root.ListActivityLogsRequestTooManyRequestsError",
                "root.ListActivityLogsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "createdOn": "2023-11-08T23:16:23Z",
                          "event": "cms_collection",
                          "id": "654c16c7b229e56bcf26872d",
                          "lastUpdated": "2023-11-08T23:16:23Z",
                          "resourceId": "654c16c7b229e56bcf26870c",
                          "resourceName": "foo-bar",
                          "resourceOperation": "CREATED",
                          "user": {
                            "displayName": "John Doe",
                            "id": "6509cd56e90eec668b009712",
                          },
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/activity_logs",
              "request": {
                "name": "ListActivityLogsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "A list of site activity logs",
                "status-code": 200,
                "type": "ListActivityLogsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ListActivityLogsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "items": "optional<list<ListActivityLogsResponseItemsItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListActivityLogsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListActivityLogsResponseItemsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": "optional<datetime>",
              "event": "optional<string>",
              "id": "optional<string>",
              "lastUpdated": "optional<datetime>",
              "newValue": "optional<nullable<string>>",
              "payload": "optional<nullable<map<string, unknown>>>",
              "previousValue": "optional<nullable<string>>",
              "resourceId": "optional<nullable<string>>",
              "resourceName": "optional<nullable<string>>",
              "resourceOperation": "optional<ListActivityLogsResponseItemsItemResourceOperation>",
              "user": "optional<nullable<ListActivityLogsResponseItemsItemUser>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListActivityLogsResponseItemsItemResourceOperation": {
            "enum": [
              "CREATED",
              "MODIFIED",
              "PUBLISHED",
              "UNPUBLISHED",
              "DELETED",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListActivityLogsResponseItemsItemUser": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": "optional<string>",
              "id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListActivityLogsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListActivityLogsResponseItemsItemResourceOperation:
    enum:
      - CREATED
      - MODIFIED
      - PUBLISHED
      - UNPUBLISHED
      - DELETED
    inline: true
    source:
      openapi: ../openapi.yml
  ListActivityLogsResponseItemsItemUser:
    properties:
      id: optional<string>
      displayName: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  ListActivityLogsResponseItemsItem:
    properties:
      id: optional<string>
      createdOn: optional<datetime>
      lastUpdated: optional<datetime>
      event: optional<string>
      resourceOperation: optional<ListActivityLogsResponseItemsItemResourceOperation>
      user: optional<nullable<ListActivityLogsResponseItemsItemUser>>
      resourceId: optional<nullable<string>>
      resourceName: optional<nullable<string>>
      newValue: optional<nullable<string>>
      previousValue: optional<nullable<string>>
      payload: optional<nullable<map<string, unknown>>>
    source:
      openapi: ../openapi.yml
    inline: true
  ListActivityLogsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListActivityLogsResponse:
    properties:
      items: optional<list<ListActivityLogsResponseItemsItem>>
      pagination:
        type: optional<ListActivityLogsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/activity_logs
      method: GET
      auth:
        - OAuth2:
            - site_activity:read
      docs: >-
        Retrieve Activity Logs for a specific Site. Requires Site to be on an
        Enterprise plan. </br></br>  Required scope | `site_activity:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Site Activity Logs
      request:
        name: ListActivityLogsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: A list of site activity logs
        type: ListActivityLogsResponse
        status-code: 200
      errors:
        - root.ListActivityLogsRequestForbiddenError
        - root.ListActivityLogsRequestNotFoundError
        - root.ListActivityLogsRequestTooManyRequestsError
        - root.ListActivityLogsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            limit: 1.1
            offset: 1.1
          response:
            body:
              items:
                - id: 654c16c7b229e56bcf26872d
                  createdOn: '2023-11-08T23:16:23Z'
                  lastUpdated: '2023-11-08T23:16:23Z'
                  event: cms_collection
                  resourceOperation: CREATED
                  user:
                    id: 6509cd56e90eec668b009712
                    displayName: John Doe
                  resourceId: 654c16c7b229e56bcf26870c
                  resourceName: foo-bar
              pagination:
                limit: 25
                offset: 0
                total: 1
  source:
    openapi: ../openapi.yml
",
    },
    "sites/scripts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete-custom-code": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:write",
                  ],
                },
              ],
              "display-name": "Delete Custom Code",
              "docs": "Delete the custom code block that an app created for a Site </br></br> <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`
",
              "errors": [
                "root.DeleteCustomCodeScriptsRequestBadRequestError",
                "root.DeleteCustomCodeScriptsRequestUnauthorizedError",
                "root.DeleteCustomCodeScriptsRequestNotFoundError",
                "root.DeleteCustomCodeScriptsRequestTooManyRequestsError",
                "root.DeleteCustomCodeScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code",
              "request": {
                "name": "DeleteCustomCodeScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-custom-code": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:read",
                  ],
                },
              ],
              "display-name": "Get Custom Code",
              "docs": "Get all registered scripts that have been applied to a specific Site.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`
",
              "errors": [
                "root.GetCustomCodeScriptsRequestBadRequestError",
                "root.GetCustomCodeScriptsRequestUnauthorizedError",
                "root.GetCustomCodeScriptsRequestNotFoundError",
                "root.GetCustomCodeScriptsRequestTooManyRequestsError",
                "root.GetCustomCodeScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "lastUpdated": "2022-10-26T00:28:54.191Z",
                      "scripts": [
                        {
                          "attributes": {
                            "my-attribute": "some-value",
                          },
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code",
              "request": {
                "name": "GetCustomCodeScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetCustomCodeScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-custom-code-blocks": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:read",
                  ],
                },
              ],
              "display-name": "List Custom Code Blocks",
              "docs": "Get all instances of Custom Code applied to a Site or Pages.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`
",
              "errors": [
                "root.ListCustomCodeBlocksScriptsRequestBadRequestError",
                "root.ListCustomCodeBlocksScriptsRequestUnauthorizedError",
                "root.ListCustomCodeBlocksScriptsRequestNotFoundError",
                "root.ListCustomCodeBlocksScriptsRequestTooManyRequestsError",
                "root.ListCustomCodeBlocksScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                  },
                  "response": {
                    "body": {
                      "blocks": [
                        {
                          "createdOn": "2024-04-03T16:49:15Z",
                          "lastUpdated": "2024-04-03T16:49:15Z",
                          "scripts": [
                            {
                              "attributes": {
                                "key": "value",
                              },
                              "id": "chartjs",
                              "location": "header",
                              "version": "4.4.2",
                            },
                          ],
                          "siteId": "6258612d1ee792848f805dcf",
                          "type": "site",
                        },
                        {
                          "createdOn": "2022-10-26T00:28:54Z",
                          "lastUpdated": "2022-10-26T00:28:54Z",
                          "pageId": "6419db964a9c43f6a3af6348",
                          "scripts": [
                            {
                              "attributes": {
                                "my-attribute": "some-value",
                              },
                              "id": "cms_slider",
                              "location": "header",
                              "version": "1.0.0",
                            },
                            {
                              "attributes": {
                                "key": "value",
                              },
                              "id": "alert",
                              "location": "header",
                              "version": "0.0.1",
                            },
                          ],
                          "siteId": "6390c49674a71f84b51a08d8",
                          "type": "page",
                        },
                      ],
                      "pagination": {
                        "limit": 10,
                        "offset": 0,
                        "total": 1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code/blocks",
              "request": {
                "name": "ListCustomCodeBlocksScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListCustomCodeBlocksScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsert-custom-code": {
              "auth": [
                {
                  "OAuth2": [
                    "custom_code:write",
                  ],
                },
              ],
              "display-name": "Add/Update Custom Code",
              "docs": "Add a registered script to a Site.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`
",
              "errors": [
                "root.UpsertCustomCodeScriptsRequestBadRequestError",
                "root.UpsertCustomCodeScriptsRequestUnauthorizedError",
                "root.UpsertCustomCodeScriptsRequestNotFoundError",
                "root.UpsertCustomCodeScriptsRequestTooManyRequestsError",
                "root.UpsertCustomCodeScriptsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "scripts": [
                      {
                        "attributes": {
                          "my-attribute": "some-value",
                        },
                        "id": "cms_slider",
                        "location": "header",
                        "version": "1.0.0",
                      },
                      {
                        "id": "alert",
                        "location": "header",
                        "version": "0.0.1",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "createdOn": "createdOn",
                      "lastUpdated": "lastUpdated",
                      "scripts": [
                        {
                          "attributes": {
                            "my-attribute": "some-value",
                          },
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code",
              "request": {
                "body": {
                  "properties": {
                    "scripts": {
                      "docs": "A list of scripts applied to a Site or a Page",
                      "type": "optional<list<UpsertCustomCodeScriptsRequestScriptsItem>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpsertCustomCodeScriptsRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpsertCustomCodeScriptsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetCustomCodeScriptsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<GetCustomCodeScriptsResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomCodeScriptsResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "GetCustomCodeScriptsResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetCustomCodeScriptsResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsResponse": {
            "docs": "Custom Code Blocks corresponding to where scripts were applied",
            "inline": undefined,
            "properties": {
              "blocks": "optional<list<ListCustomCodeBlocksScriptsResponseBlocksItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListCustomCodeBlocksScriptsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsResponseBlocksItem": {
            "docs": "A specific instance of Custom Code applied to a Site or Page",
            "inline": true,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "The date the Block was created",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The date the Block was most recently updated",
                "type": "optional<datetime>",
              },
              "pageId": {
                "docs": "The Page id (if applied at Page-level)",
                "type": "optional<nullable<string>>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItem>>",
              },
              "siteId": {
                "docs": "The Site id where the custom code was applied",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Whether the Custom Code script is applied at the Site-level or Page-level",
                "type": "optional<nullable<ListCustomCodeBlocksScriptsResponseBlocksItemType>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsResponseBlocksItemType": {
            "docs": "Whether the Custom Code script is applied at the Site-level or Page-level",
            "enum": [
              "page",
              "site",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListCustomCodeBlocksScriptsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsRequestScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "UpsertCustomCodeScriptsRequestScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsRequestScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<UpsertCustomCodeScriptsResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "UpsertCustomCodeScriptsResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpsertCustomCodeScriptsResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  GetCustomCodeScriptsResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  GetCustomCodeScriptsResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: GetCustomCodeScriptsResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  GetCustomCodeScriptsResponse:
    properties:
      scripts:
        type: optional<list<GetCustomCodeScriptsResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
        access: read-only
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsRequestScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsRequestScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: UpsertCustomCodeScriptsRequestScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertCustomCodeScriptsResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  UpsertCustomCodeScriptsResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: UpsertCustomCodeScriptsResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  UpsertCustomCodeScriptsResponse:
    properties:
      scripts:
        type: optional<list<UpsertCustomCodeScriptsResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
        access: read-only
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
        access: read-only
    source:
      openapi: ../openapi.yml
  ListCustomCodeBlocksScriptsResponseBlocksItemType:
    enum:
      - page
      - site
    docs: Whether the Custom Code script is applied at the Site-level or Page-level
    inline: true
    source:
      openapi: ../openapi.yml
  ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ListCustomCodeBlocksScriptsResponseBlocksItem:
    docs: A specific instance of Custom Code applied to a Site or Page
    properties:
      siteId:
        type: optional<string>
        docs: The Site id where the custom code was applied
      pageId:
        type: optional<nullable<string>>
        docs: The Page id (if applied at Page-level)
      type:
        type: optional<nullable<ListCustomCodeBlocksScriptsResponseBlocksItemType>>
        docs: >-
          Whether the Custom Code script is applied at the Site-level or
          Page-level
      scripts:
        type: >-
          optional<list<ListCustomCodeBlocksScriptsResponseBlocksItemScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      createdOn:
        type: optional<datetime>
        docs: The date the Block was created
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The date the Block was most recently updated
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  ListCustomCodeBlocksScriptsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListCustomCodeBlocksScriptsResponse:
    docs: Custom Code Blocks corresponding to where scripts were applied
    properties:
      blocks: optional<list<ListCustomCodeBlocksScriptsResponseBlocksItem>>
      pagination:
        type: optional<ListCustomCodeBlocksScriptsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-custom-code:
      path: /sites/{site_id}/custom_code
      method: GET
      auth:
        - OAuth2:
            - custom_code:read
      docs: >
        Get all registered scripts that have been applied to a specific Site. 
        <blockquote class="callout callout_info" theme="📘">Access to this
        endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Custom Code
      request:
        name: GetCustomCodeScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: GetCustomCodeScriptsResponse
        status-code: 200
      errors:
        - root.GetCustomCodeScriptsRequestBadRequestError
        - root.GetCustomCodeScriptsRequestUnauthorizedError
        - root.GetCustomCodeScriptsRequestNotFoundError
        - root.GetCustomCodeScriptsRequestTooManyRequestsError
        - root.GetCustomCodeScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              scripts:
                - id: cms_slider
                  location: header
                  version: 1.0.0
                  attributes:
                    my-attribute: some-value
                - id: alert
                  location: header
                  version: 0.0.1
                  attributes:
                    key: value
              lastUpdated: '2022-10-26T00:28:54.191Z'
              createdOn: '2022-10-26T00:28:54.191Z'
    upsert-custom-code:
      path: /sites/{site_id}/custom_code
      method: PUT
      auth:
        - OAuth2:
            - custom_code:write
      docs: >
        Add a registered script to a Site.  </br></br>  In order to use the
        Custom Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  <blockquote class="callout callout_info" theme="📘">Access
        to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      display-name: Add/Update Custom Code
      request:
        name: UpsertCustomCodeScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            scripts:
              type: optional<list<UpsertCustomCodeScriptsRequestScriptsItem>>
              docs: A list of scripts applied to a Site or a Page
        content-type: application/json
      response:
        docs: Request was successful
        type: UpsertCustomCodeScriptsResponse
        status-code: 200
      errors:
        - root.UpsertCustomCodeScriptsRequestBadRequestError
        - root.UpsertCustomCodeScriptsRequestUnauthorizedError
        - root.UpsertCustomCodeScriptsRequestNotFoundError
        - root.UpsertCustomCodeScriptsRequestTooManyRequestsError
        - root.UpsertCustomCodeScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            scripts:
              - id: cms_slider
                location: header
                version: 1.0.0
                attributes:
                  my-attribute: some-value
              - id: alert
                location: header
                version: 0.0.1
          response:
            body:
              scripts:
                - id: cms_slider
                  location: header
                  version: 1.0.0
                  attributes:
                    my-attribute: some-value
                - id: alert
                  location: header
                  version: 0.0.1
                  attributes:
                    key: value
              lastUpdated: lastUpdated
              createdOn: createdOn
    delete-custom-code:
      path: /sites/{site_id}/custom_code
      method: DELETE
      auth:
        - OAuth2:
            - custom_code:write
      docs: >
        Delete the custom code block that an app created for a Site </br></br>
        <blockquote class="callout callout_info" theme="📘">Access to this
        endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete Custom Code
      request:
        name: DeleteCustomCodeScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      errors:
        - root.DeleteCustomCodeScriptsRequestBadRequestError
        - root.DeleteCustomCodeScriptsRequestUnauthorizedError
        - root.DeleteCustomCodeScriptsRequestNotFoundError
        - root.DeleteCustomCodeScriptsRequestTooManyRequestsError
        - root.DeleteCustomCodeScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
    list-custom-code-blocks:
      path: /sites/{site_id}/custom_code/blocks
      method: GET
      auth:
        - OAuth2:
            - custom_code:read
      docs: >
        Get all instances of Custom Code applied to a Site or Pages. 
        <blockquote class="callout callout_info" theme="📘">Access to this
        endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      display-name: List Custom Code Blocks
      request:
        name: ListCustomCodeBlocksScriptsRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: ListCustomCodeBlocksScriptsResponse
        status-code: 200
      errors:
        - root.ListCustomCodeBlocksScriptsRequestBadRequestError
        - root.ListCustomCodeBlocksScriptsRequestUnauthorizedError
        - root.ListCustomCodeBlocksScriptsRequestNotFoundError
        - root.ListCustomCodeBlocksScriptsRequestTooManyRequestsError
        - root.ListCustomCodeBlocksScriptsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            offset: 1.1
            limit: 1.1
          response:
            body:
              blocks:
                - siteId: 6258612d1ee792848f805dcf
                  type: site
                  scripts:
                    - id: chartjs
                      location: header
                      version: 4.4.2
                      attributes:
                        key: value
                  createdOn: '2024-04-03T16:49:15Z'
                  lastUpdated: '2024-04-03T16:49:15Z'
                - siteId: 6390c49674a71f84b51a08d8
                  pageId: 6419db964a9c43f6a3af6348
                  type: page
                  scripts:
                    - id: cms_slider
                      location: header
                      version: 1.0.0
                      attributes:
                        my-attribute: some-value
                    - id: alert
                      location: header
                      version: 0.0.1
                      attributes:
                        key: value
                  createdOn: '2022-10-26T00:28:54Z'
                  lastUpdated: '2022-10-26T00:28:54Z'
              pagination:
                limit: 10
                offset: 0
                total: 1
  source:
    openapi: ../openapi.yml
",
    },
    "token.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "authorized-by": {
              "auth": [
                {
                  "OAuth2": [
                    "authorized_user:read",
                  ],
                },
              ],
              "display-name": "Get Authorization User Info",
              "docs": "Information about the Authorized User <br><br> Required Scope | `authorized_user:read`",
              "errors": [
                "root.AuthorizedByTokenRequestUnauthorizedError",
                "root.AuthorizedByTokenRequestForbiddenError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "email": "some@email.com",
                      "firstName": "Some",
                      "id": "545bbecb7bdd6769632504a7",
                      "lastName": "One",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/token/authorized_by",
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AuthorizedByTokenResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "introspect": {
              "auth": undefined,
              "display-name": "Get Authorization Info",
              "docs": "Information about the authorization token <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>    
",
              "errors": [
                "root.IntrospectTokenRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "application": {
                        "description": "My Amazing App",
                        "displayName": "My Amazing App",
                        "homepage": "https://webflow.com",
                        "id": "55131cd036c09f7d07883dfc",
                      },
                      "authorization": {
                        "authorizedTo": {
                          "siteIds": [
                            "62f3b1f7eafac55d0c64ef91",
                          ],
                          "userIds": [
                            "545bbecb7bdd6769632504a7",
                          ],
                          "workspaceIds": [
                            "52f3b1f7eafac55d0c64ef91",
                          ],
                        },
                        "createdOn": "2016-10-03T23:12:00Z",
                        "grantType": "authorization_code",
                        "id": "55818d58616600637b9a5786",
                        "lastUsed": "2016-10-10T21:41:12Z",
                        "rateLimit": 60,
                        "scope": "assets:read,assets:write",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/token/introspect",
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "IntrospectTokenResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AuthorizedByTokenResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "email": {
                "docs": "The user's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "firstName": {
                "docs": "The user's first name",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique id of the user",
                "type": "optional<string>",
              },
              "lastName": {
                "docs": "The user's last name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntrospectTokenResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "application": "optional<unknown>",
              "authorization": {
                "docs": "The Authorization object",
                "type": "optional<IntrospectTokenResponseAuthorization>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntrospectTokenResponseAuthorization": {
            "docs": "The Authorization object",
            "inline": true,
            "properties": {
              "authorizedTo": "optional<IntrospectTokenResponseAuthorizationAuthorizedTo>",
              "createdOn": {
                "docs": "The date the Authorization was created",
                "type": "optional<datetime>",
              },
              "grantType": {
                "docs": "The grant type of the Authorization",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique id of the Authorization instance",
                "type": "optional<string>",
              },
              "lastUsed": {
                "docs": "The date the Authorization was last used",
                "type": "optional<datetime>",
              },
              "rateLimit": {
                "docs": "The default rate limit for the Authorization (requests/min)",
                "type": "optional<integer>",
              },
              "scope": {
                "docs": "Comma separted list of OAuth scopes corresponding to the Authorization",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntrospectTokenResponseAuthorizationAuthorizedTo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "siteIds": {
                "docs": "Array of Sites this app is authorized to",
                "type": "optional<list<unknown>>",
              },
              "userIds": {
                "docs": "Array of Users this app is authorized to",
                "type": "optional<list<unknown>>",
              },
              "workspaceIds": {
                "docs": "Array of Workspaces this app is authorized to",
                "type": "optional<list<unknown>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  AuthorizedByTokenResponse:
    properties:
      id:
        type: optional<string>
        docs: The unique id of the user
      email:
        type: optional<string>
        docs: The user's email address
        validation:
          format: email
      firstName:
        type: optional<string>
        docs: The user's first name
      lastName:
        type: optional<string>
        docs: The user's last name
    source:
      openapi: ../openapi.yml
  IntrospectTokenResponseAuthorizationAuthorizedTo:
    properties:
      siteIds:
        type: optional<list<unknown>>
        docs: Array of Sites this app is authorized to
      workspaceIds:
        type: optional<list<unknown>>
        docs: Array of Workspaces this app is authorized to
      userIds:
        type: optional<list<unknown>>
        docs: Array of Users this app is authorized to
    source:
      openapi: ../openapi.yml
    inline: true
  IntrospectTokenResponseAuthorization:
    docs: The Authorization object
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Authorization instance
      createdOn:
        type: optional<datetime>
        docs: The date the Authorization was created
      lastUsed:
        type: optional<datetime>
        docs: The date the Authorization was last used
      grantType:
        type: optional<string>
        docs: The grant type of the Authorization
      rateLimit:
        type: optional<integer>
        docs: The default rate limit for the Authorization (requests/min)
      scope:
        type: optional<string>
        docs: Comma separted list of OAuth scopes corresponding to the Authorization
      authorizedTo: optional<IntrospectTokenResponseAuthorizationAuthorizedTo>
    source:
      openapi: ../openapi.yml
    inline: true
  IntrospectTokenResponse:
    properties:
      authorization:
        type: optional<IntrospectTokenResponseAuthorization>
        docs: The Authorization object
      application: optional<unknown>
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    authorized-by:
      path: /token/authorized_by
      method: GET
      auth:
        - OAuth2:
            - authorized_user:read
      docs: >-
        Information about the Authorized User <br><br> Required Scope |
        `authorized_user:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Authorization User Info
      response:
        docs: Request was successful
        type: AuthorizedByTokenResponse
        status-code: 200
      errors:
        - root.AuthorizedByTokenRequestUnauthorizedError
        - root.AuthorizedByTokenRequestForbiddenError
      examples:
        - response:
            body:
              id: 545bbecb7bdd6769632504a7
              email: some@email.com
              firstName: Some
              lastName: One
    introspect:
      path: /token/introspect
      method: GET
      docs: >
        Information about the authorization token <blockquote class="callout
        callout_info" theme="📘">Access to this endpoint requires a bearer token
        from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>    
      source:
        openapi: ../openapi.yml
      display-name: Get Authorization Info
      response:
        docs: Request was successful
        type: IntrospectTokenResponse
        status-code: 200
      errors:
        - root.IntrospectTokenRequestUnauthorizedError
      examples:
        - response:
            body:
              authorization:
                id: 55818d58616600637b9a5786
                createdOn: '2016-10-03T23:12:00Z'
                lastUsed: '2016-10-10T21:41:12Z'
                grantType: authorization_code
                rateLimit: 60
                scope: assets:read,assets:write
                authorizedTo:
                  siteIds:
                    - 62f3b1f7eafac55d0c64ef91
                  workspaceIds:
                    - 52f3b1f7eafac55d0c64ef91
                  userIds:
                    - 545bbecb7bdd6769632504a7
              application:
                id: 55131cd036c09f7d07883dfc
                description: My Amazing App
                homepage: https://webflow.com
                displayName: My Amazing App
  source:
    openapi: ../openapi.yml
",
    },
    "users.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete": {
              "auth": [
                {
                  "OAuth2": [
                    "users:write",
                  ],
                },
              ],
              "display-name": "Delete User",
              "docs": "Delete a User by ID <br><br> Required scope | `users:write`",
              "errors": [
                "root.DeleteUsersRequestBadRequestError",
                "root.DeleteUsersRequestUnauthorizedError",
                "root.DeleteUsersRequestForbiddenError",
                "root.DeleteUsersRequestNotFoundError",
                "root.DeleteUsersRequestTooManyRequestsError",
                "root.DeleteUsersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "user_id": "580e63e98c9a982ac9b8b741",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/{user_id}",
              "request": {
                "name": "DeleteUsersRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                  "user_id": {
                    "docs": "Unique identifier for a User",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": [
                {
                  "OAuth2": [
                    "users:read",
                  ],
                },
              ],
              "display-name": "Get User",
              "docs": "Get a User by ID <br><br> Required scope | `users:read`",
              "errors": [
                "root.GetUsersRequestBadRequestError",
                "root.GetUsersRequestUnauthorizedError",
                "root.GetUsersRequestForbiddenError",
                "root.GetUsersRequestNotFoundError",
                "root.GetUsersRequestTooManyRequestsError",
                "root.GetUsersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "user_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "slug": "webflowers",
                          "type": "admin",
                        },
                      ],
                      "createdOn": "2022-05-20T13:46:12Z",
                      "data": {
                        "data": {
                          "accept-communications": true,
                          "accept-privacy": true,
                          "additionalProperties": "additionalProperties",
                          "email": "email",
                          "name": "name",
                        },
                      },
                      "id": "6287ec36a841b25637c663df",
                      "invitedOn": "2022-05-20T13:46:12Z",
                      "isEmailVerified": true,
                      "lastLogin": "2022-05-20T13:46:12Z",
                      "lastUpdated": "2022-05-20T13:46:12Z",
                      "status": "verified",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/{user_id}",
              "request": {
                "name": "GetUsersRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                  "user_id": {
                    "docs": "Unique identifier for a User",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetUsersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "invite": {
              "auth": [
                {
                  "OAuth2": [
                    "users:write",
                  ],
                },
              ],
              "display-name": "Create and Invite a User",
              "docs": "Create and invite a user with an email address. The user will be sent and invite via email, which they will need to accept in order to join paid Access Groups. <br><br> Required scope | `users:write`",
              "errors": [
                "root.InviteUsersRequestBadRequestError",
                "root.InviteUsersRequestUnauthorizedError",
                "root.InviteUsersRequestForbiddenError",
                "root.InviteUsersRequestNotFoundError",
                "root.InviteUsersRequestConflictError",
                "root.InviteUsersRequestTooManyRequestsError",
                "root.InviteUsersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "accessGroups": [
                      "webflowers",
                    ],
                    "email": "some.one@home.com",
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "slug": "webflowers",
                          "type": "admin",
                        },
                      ],
                      "createdOn": "2022-05-20T13:46:12Z",
                      "data": {
                        "data": {
                          "accept-communications": true,
                          "accept-privacy": true,
                          "additionalProperties": "additionalProperties",
                          "email": "email",
                          "name": "name",
                        },
                      },
                      "id": "6287ec36a841b25637c663df",
                      "invitedOn": "2022-05-20T13:46:12Z",
                      "isEmailVerified": true,
                      "lastLogin": "2022-05-20T13:46:12Z",
                      "lastUpdated": "2022-05-20T13:46:12Z",
                      "status": "verified",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/invite",
              "request": {
                "body": {
                  "properties": {
                    "accessGroups": {
                      "docs": "An array of access group slugs. Access groups are assigned to the user as type `admin` and the user remains in the group until removed.
",
                      "type": "optional<list<string>>",
                    },
                    "email": {
                      "docs": "Email address of user to send invite to",
                      "type": "string",
                      "validation": {
                        "format": "email",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InviteUsersRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "InviteUsersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": [
                {
                  "OAuth2": [
                    "users:read",
                  ],
                },
              ],
              "display-name": "List Users",
              "docs": "Get a list of users for a site <br><br> Required scope | `users:read`",
              "errors": [
                "root.ListUsersRequestBadRequestError",
                "root.ListUsersRequestUnauthorizedError",
                "root.ListUsersRequestForbiddenError",
                "root.ListUsersRequestNotFoundError",
                "root.ListUsersRequestTooManyRequestsError",
                "root.ListUsersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "limit": 1.1,
                    "offset": 1.1,
                    "sort": "CreatedOn",
                  },
                  "response": {
                    "body": {
                      "count": 5,
                      "limit": 5,
                      "offset": 0,
                      "total": 201,
                      "users": [
                        {
                          "accessGroups": [
                            {
                              "slug": "vogon-construction-crew",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-20T13:46:12Z",
                          "id": "6287ec36a841b25637c663df",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": false,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-20T13:46:12Z",
                          "status": "unverified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "improbability-drive-test-subjects",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-19T05:32:04Z",
                          "id": "6287ec36a841b25637c663f0",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": false,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-19T05:32:04Z",
                          "status": "unverified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "heart-of-gold-crew",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-17T03:34:06Z",
                          "id": "6287ec36a841b25637c663d9",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": true,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-17T03:34:06Z",
                          "status": "verified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "hitchhikers-guide-research-team",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-15T03:46:09Z",
                          "id": "6287ec37a841b25637c6641b",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": false,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-15T03:46:09Z",
                          "status": "unverified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "milliways-reservationists",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-15T02:55:38Z",
                          "id": "6287ec37a841b25637c66449",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": true,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-15T02:55:38Z",
                          "status": "verified",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/users",
              "request": {
                "name": "ListUsersRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<nullable<double>>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<nullable<double>>",
                  },
                  "sort": {
                    "docs": "Sort string to use when ordering users

Example(`CreatedOn`, `Email`, `Status`, `LastLogin`, `UpdatedOn`).

Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
",
                    "type": "optional<nullable<ListUsersRequestSort>>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListUsersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": [
                {
                  "OAuth2": [
                    "users:write",
                  ],
                },
              ],
              "display-name": "Update User",
              "docs": "Update a User by ID <br><br> Required scope | `users:write`
<aside class="notice">The <code>email</code> and <code>password</code> fields cannot be updated using this endpoint</aside>
",
              "errors": [
                "root.UpdateUsersRequestBadRequestError",
                "root.UpdateUsersRequestUnauthorizedError",
                "root.UpdateUsersRequestForbiddenError",
                "root.UpdateUsersRequestNotFoundError",
                "root.UpdateUsersRequestTooManyRequestsError",
                "root.UpdateUsersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "user_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "accessGroups": [
                      "webflowers",
                      "platinum",
                      "free-tier",
                    ],
                    "data": {
                      "accept-communications": false,
                      "accept-privacy": false,
                      "name": "Some One",
                    },
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "slug": "webflowers",
                          "type": "admin",
                        },
                      ],
                      "createdOn": "2022-05-20T13:46:12Z",
                      "data": {
                        "data": {
                          "accept-communications": true,
                          "accept-privacy": true,
                          "additionalProperties": "additionalProperties",
                          "email": "email",
                          "name": "name",
                        },
                      },
                      "id": "6287ec36a841b25637c663df",
                      "invitedOn": "2022-05-20T13:46:12Z",
                      "isEmailVerified": true,
                      "lastLogin": "2022-05-20T13:46:12Z",
                      "lastUpdated": "2022-05-20T13:46:12Z",
                      "status": "verified",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/{user_id}",
              "request": {
                "body": {
                  "properties": {
                    "accessGroups": {
                      "docs": "An array of access group slugs. Access groups are assigned to the user as type `admin` and the user remains in the group until removed.
",
                      "type": "optional<list<string>>",
                    },
                    "data": "optional<UpdateUsersRequestData>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateUsersRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                  "user_id": {
                    "docs": "Unique identifier for a User",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateUsersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "GetUsersResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<GetUsersResponseAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<GetUsersResponseData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<GetUsersResponseStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetUsersResponseAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<GetUsersResponseAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetUsersResponseAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetUsersResponseData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<GetUsersResponseDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetUsersResponseDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetUsersResponseStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<InviteUsersResponseAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<InviteUsersResponseData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<InviteUsersResponseStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersResponseAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<InviteUsersResponseAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersResponseAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersResponseData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<InviteUsersResponseDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersResponseDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InviteUsersResponseStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersRequestSort": {
            "enum": [
              {
                "docs": "Sorts users in ascending order based on their created date",
                "name": "CreatedOnAscending",
                "value": "CreatedOn",
              },
              {
                "docs": "Sorts users in descending order based on their created date",
                "name": "CreatedOnDescending",
                "value": "-CreatedOn",
              },
              {
                "docs": "Sorts users in ascending order based on their email",
                "name": "EmailAscending",
                "value": "Email",
              },
              {
                "docs": "Sorts users in descending order based on their email",
                "name": "EmailDescending",
                "value": "-Email",
              },
              {
                "docs": "Sorts users in ascending order based on their status",
                "name": "StatusAscending",
                "value": "Status",
              },
              {
                "docs": "Sorts users in descending order based on their status",
                "name": "StatusDescending",
                "value": "-Status",
              },
              {
                "docs": "Sorts users in ascending order based on their last login date",
                "name": "LastLoginAscending",
                "value": "LastLogin",
              },
              {
                "docs": "Sorts users in descending order based on their last login date",
                "name": "LastLoginDescending",
                "value": "-LastLogin",
              },
              {
                "docs": "Sorts users in ascending order based on their update date",
                "name": "UpdatedOnAscending",
                "value": "UpdatedOn",
              },
              {
                "docs": "Sorts users in descending order based on their update date",
                "name": "UpdatedOnDescending",
                "value": "-UpdatedOn",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponse": {
            "docs": "The list users results",
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "Number of users returned",
                "type": "optional<double>",
              },
              "limit": {
                "default": 10,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of users in the collection",
                "type": "optional<double>",
              },
              "users": {
                "docs": "List of Users for a Site",
                "type": "optional<list<ListUsersResponseUsersItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponseUsersItem": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<ListUsersResponseUsersItemAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<ListUsersResponseUsersItemData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<ListUsersResponseUsersItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponseUsersItemAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<ListUsersResponseUsersItemAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponseUsersItemAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponseUsersItemData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<ListUsersResponseUsersItemDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponseUsersItemDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListUsersResponseUsersItemStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersRequestData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UpdateUsersResponseAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UpdateUsersResponseData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<UpdateUsersResponseStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersResponseAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UpdateUsersResponseAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersResponseAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersResponseData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UpdateUsersResponseDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersResponseDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateUsersResponseStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
                "type": "optional<UserAccountAddedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<UserAccountAddedPayloadTriggerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UserAccountAddedPayloadPayloadAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UserAccountAddedPayloadPayloadData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<UserAccountAddedPayloadPayloadStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UserAccountAddedPayloadPayloadAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UserAccountAddedPayloadPayloadDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadTriggerType": {
            "docs": "The type of event that triggered the request",
            "enum": [
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
                "type": "optional<UserAccountDeletedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<UserAccountDeletedPayloadTriggerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UserAccountDeletedPayloadPayloadAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UserAccountDeletedPayloadPayloadData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<UserAccountDeletedPayloadPayloadStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UserAccountDeletedPayloadPayloadAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UserAccountDeletedPayloadPayloadDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadTriggerType": {
            "docs": "The type of event that triggered the request",
            "enum": [
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
                "type": "optional<UserAccountUpdatedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<UserAccountUpdatedPayloadTriggerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UserAccountUpdatedPayloadPayloadAccessGroupsItem>>",
              },
              "createdOn": {
                "access": "read-only",
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UserAccountUpdatedPayloadPayloadData>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "access": "read-only",
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "access": "read-only",
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "access": "read-only",
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "access": "read-only",
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "access": "read-only",
                "docs": "The status of the user",
                "type": "optional<UserAccountUpdatedPayloadPayloadStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UserAccountUpdatedPayloadPayloadAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UserAccountUpdatedPayloadPayloadDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadTriggerType": {
            "docs": "The type of event that triggered the request",
            "enum": [
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "user_account_added": {
            "audiences": [],
            "display-name": "New User Added",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "accessGroups": [
                      {
                        "slug": "webflowers",
                        "type": "admin",
                      },
                    ],
                    "createdOn": "2022-05-20T13:46:12Z",
                    "id": "6287ec36a841b25637c663df",
                    "invitedOn": "2022-05-20T13:46:12Z",
                    "isEmailVerified": true,
                    "lastLogin": "2022-05-20T13:46:12Z",
                    "lastUpdated": "2022-05-20T13:46:12Z",
                    "status": "verified",
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "UserAccountAddedPayload",
          },
          "user_account_deleted": {
            "audiences": [],
            "display-name": "Account Deleted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "accessGroups": [
                      {
                        "slug": "webflowers",
                        "type": "admin",
                      },
                    ],
                    "createdOn": "2022-05-20T13:46:12Z",
                    "id": "6287ec36a841b25637c663df",
                    "invitedOn": "2022-05-20T13:46:12Z",
                    "isEmailVerified": true,
                    "lastLogin": "2022-05-20T13:46:12Z",
                    "lastUpdated": "2022-05-20T13:46:12Z",
                    "status": "verified",
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "UserAccountDeletedPayload",
          },
          "user_account_updated": {
            "audiences": [],
            "display-name": "Account Updated",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "accessGroups": [
                      {
                        "slug": "webflowers",
                        "type": "admin",
                      },
                    ],
                    "createdOn": "2022-05-20T13:46:12Z",
                    "id": "6287ec36a841b25637c663df",
                    "invitedOn": "2022-05-20T13:46:12Z",
                    "isEmailVerified": true,
                    "lastLogin": "2022-05-20T13:46:12Z",
                    "lastUpdated": "2022-05-20T13:46:12Z",
                    "status": "verified",
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "UserAccountUpdatedPayload",
          },
        },
      },
      "rawContents": "types:
  ListUsersRequestSort:
    enum:
      - value: CreatedOn
        name: CreatedOnAscending
        docs: Sorts users in ascending order based on their created date
      - value: '-CreatedOn'
        name: CreatedOnDescending
        docs: Sorts users in descending order based on their created date
      - value: Email
        name: EmailAscending
        docs: Sorts users in ascending order based on their email
      - value: '-Email'
        name: EmailDescending
        docs: Sorts users in descending order based on their email
      - value: Status
        name: StatusAscending
        docs: Sorts users in ascending order based on their status
      - value: '-Status'
        name: StatusDescending
        docs: Sorts users in descending order based on their status
      - value: LastLogin
        name: LastLoginAscending
        docs: Sorts users in ascending order based on their last login date
      - value: '-LastLogin'
        name: LastLoginDescending
        docs: Sorts users in descending order based on their last login date
      - value: UpdatedOn
        name: UpdatedOnAscending
        docs: Sorts users in ascending order based on their update date
      - value: '-UpdatedOn'
        name: UpdatedOnDescending
        docs: Sorts users in descending order based on their update date
    source:
      openapi: ../openapi.yml
  ListUsersResponseUsersItemStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  ListUsersResponseUsersItemAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  ListUsersResponseUsersItemAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<ListUsersResponseUsersItemAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  ListUsersResponseUsersItemDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  ListUsersResponseUsersItemData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<ListUsersResponseUsersItemDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  ListUsersResponseUsersItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<ListUsersResponseUsersItemStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<ListUsersResponseUsersItemAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<ListUsersResponseUsersItemData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  ListUsersResponse:
    docs: The list users results
    properties:
      count:
        type: optional<double>
        docs: Number of users returned
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 10
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of users in the collection
      users:
        type: optional<list<ListUsersResponseUsersItem>>
        docs: List of Users for a Site
    source:
      openapi: ../openapi.yml
  GetUsersResponseStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  GetUsersResponseAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  GetUsersResponseAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<GetUsersResponseAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  GetUsersResponseDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  GetUsersResponseData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<GetUsersResponseDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  GetUsersResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<GetUsersResponseStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<GetUsersResponseAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<GetUsersResponseData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
  UpdateUsersRequestData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUsersResponseStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUsersResponseAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateUsersResponseAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UpdateUsersResponseAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUsersResponseDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUsersResponseData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UpdateUsersResponseDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateUsersResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<UpdateUsersResponseStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<UpdateUsersResponseAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UpdateUsersResponseData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
  InviteUsersResponseStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  InviteUsersResponseAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  InviteUsersResponseAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<InviteUsersResponseAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  InviteUsersResponseDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  InviteUsersResponseData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<InviteUsersResponseDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  InviteUsersResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<InviteUsersResponseStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<InviteUsersResponseAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<InviteUsersResponseData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadTriggerType:
    enum:
      - user_account_added
      - user_account_updated
      - user_account_deleted
    docs: The type of event that triggered the request
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadPayloadStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadPayloadAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadPayloadAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccountAddedPayloadPayloadAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayloadPayloadDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayloadPayloadData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserAccountAddedPayloadPayloadDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayloadPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<UserAccountAddedPayloadPayloadStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<UserAccountAddedPayloadPayloadAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UserAccountAddedPayloadPayloadData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayload:
    properties:
      triggerType:
        type: optional<UserAccountAddedPayloadTriggerType>
        docs: The type of event that triggered the request
      payload:
        type: optional<UserAccountAddedPayloadPayload>
        docs: >
          The fields that define the schema for a given Item are based on the
          Collection that Item belongs to. Beyond the user defined fields, there
          are a handful of additional fields that are automatically created for
          all items
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadTriggerType:
    enum:
      - user_account_added
      - user_account_updated
      - user_account_deleted
    docs: The type of event that triggered the request
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadPayloadStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadPayloadAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadPayloadAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccountUpdatedPayloadPayloadAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayloadPayloadDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayloadPayloadData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserAccountUpdatedPayloadPayloadDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayloadPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<UserAccountUpdatedPayloadPayloadStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<UserAccountUpdatedPayloadPayloadAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UserAccountUpdatedPayloadPayloadData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayload:
    properties:
      triggerType:
        type: optional<UserAccountUpdatedPayloadTriggerType>
        docs: The type of event that triggered the request
      payload:
        type: optional<UserAccountUpdatedPayloadPayload>
        docs: >
          The fields that define the schema for a given Item are based on the
          Collection that Item belongs to. Beyond the user defined fields, there
          are a handful of additional fields that are automatically created for
          all items
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadTriggerType:
    enum:
      - user_account_added
      - user_account_updated
      - user_account_deleted
    docs: The type of event that triggered the request
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadPayloadStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadPayloadAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadPayloadAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccountDeletedPayloadPayloadAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayloadPayloadDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayloadPayloadData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserAccountDeletedPayloadPayloadDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayloadPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
        access: read-only
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
        access: read-only
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
        access: read-only
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
        access: read-only
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
        access: read-only
      status:
        type: optional<UserAccountDeletedPayloadPayloadStatus>
        docs: The status of the user
        access: read-only
      accessGroups:
        type: optional<list<UserAccountDeletedPayloadPayloadAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UserAccountDeletedPayloadPayloadData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayload:
    properties:
      triggerType:
        type: optional<UserAccountDeletedPayloadTriggerType>
        docs: The type of event that triggered the request
      payload:
        type: optional<UserAccountDeletedPayloadPayload>
        docs: >
          The fields that define the schema for a given Item are based on the
          Collection that Item belongs to. Beyond the user defined fields, there
          are a handful of additional fields that are automatically created for
          all items
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/users
      method: GET
      auth:
        - OAuth2:
            - users:read
      docs: Get a list of users for a site <br><br> Required scope | `users:read`
      source:
        openapi: ../openapi.yml
      display-name: List Users
      request:
        name: ListUsersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        query-parameters:
          offset:
            type: optional<nullable<double>>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<nullable<double>>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          sort:
            type: optional<nullable<ListUsersRequestSort>>
            docs: |
              Sort string to use when ordering users

              Example(`CreatedOn`, `Email`, `Status`, `LastLogin`, `UpdatedOn`).

              Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
      response:
        docs: Request was successful
        type: ListUsersResponse
        status-code: 200
      errors:
        - root.ListUsersRequestBadRequestError
        - root.ListUsersRequestUnauthorizedError
        - root.ListUsersRequestForbiddenError
        - root.ListUsersRequestNotFoundError
        - root.ListUsersRequestTooManyRequestsError
        - root.ListUsersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            offset: 1.1
            limit: 1.1
            sort: CreatedOn
          response:
            body:
              count: 5
              limit: 5
              offset: 0
              total: 201
              users:
                - id: 6287ec36a841b25637c663df
                  isEmailVerified: false
                  lastUpdated: '2022-05-20T13:46:12Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-20T13:46:12Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: unverified
                  accessGroups:
                    - slug: vogon-construction-crew
                      type: admin
                - id: 6287ec36a841b25637c663f0
                  isEmailVerified: false
                  lastUpdated: '2022-05-19T05:32:04Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-19T05:32:04Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: unverified
                  accessGroups:
                    - slug: improbability-drive-test-subjects
                      type: admin
                - id: 6287ec36a841b25637c663d9
                  isEmailVerified: true
                  lastUpdated: '2022-05-17T03:34:06Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-17T03:34:06Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: verified
                  accessGroups:
                    - slug: heart-of-gold-crew
                      type: admin
                - id: 6287ec37a841b25637c6641b
                  isEmailVerified: false
                  lastUpdated: '2022-05-15T03:46:09Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-15T03:46:09Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: unverified
                  accessGroups:
                    - slug: hitchhikers-guide-research-team
                      type: admin
                - id: 6287ec37a841b25637c66449
                  isEmailVerified: true
                  lastUpdated: '2022-05-15T02:55:38Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-15T02:55:38Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: verified
                  accessGroups:
                    - slug: milliways-reservationists
                      type: admin
    get:
      path: /sites/{site_id}/users/{user_id}
      method: GET
      auth:
        - OAuth2:
            - users:read
      docs: Get a User by ID <br><br> Required scope | `users:read`
      source:
        openapi: ../openapi.yml
      display-name: Get User
      request:
        name: GetUsersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          user_id:
            type: string
            docs: Unique identifier for a User
      response:
        docs: Request was successful
        type: GetUsersResponse
        status-code: 200
      errors:
        - root.GetUsersRequestBadRequestError
        - root.GetUsersRequestUnauthorizedError
        - root.GetUsersRequestForbiddenError
        - root.GetUsersRequestNotFoundError
        - root.GetUsersRequestTooManyRequestsError
        - root.GetUsersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            user_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              id: 6287ec36a841b25637c663df
              isEmailVerified: true
              lastUpdated: '2022-05-20T13:46:12Z'
              invitedOn: '2022-05-20T13:46:12Z'
              createdOn: '2022-05-20T13:46:12Z'
              lastLogin: '2022-05-20T13:46:12Z'
              status: verified
              accessGroups:
                - slug: webflowers
                  type: admin
              data:
                data:
                  name: name
                  email: email
                  accept-privacy: true
                  accept-communications: true
                  additionalProperties: additionalProperties
    delete:
      path: /sites/{site_id}/users/{user_id}
      method: DELETE
      auth:
        - OAuth2:
            - users:write
      docs: Delete a User by ID <br><br> Required scope | `users:write`
      source:
        openapi: ../openapi.yml
      display-name: Delete User
      request:
        name: DeleteUsersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          user_id:
            type: string
            docs: Unique identifier for a User
      errors:
        - root.DeleteUsersRequestBadRequestError
        - root.DeleteUsersRequestUnauthorizedError
        - root.DeleteUsersRequestForbiddenError
        - root.DeleteUsersRequestNotFoundError
        - root.DeleteUsersRequestTooManyRequestsError
        - root.DeleteUsersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            user_id: 580e63e98c9a982ac9b8b741
    update:
      path: /sites/{site_id}/users/{user_id}
      method: PATCH
      auth:
        - OAuth2:
            - users:write
      docs: >
        Update a User by ID <br><br> Required scope | `users:write`

        <aside class="notice">The <code>email</code> and <code>password</code>
        fields cannot be updated using this endpoint</aside>
      source:
        openapi: ../openapi.yml
      display-name: Update User
      request:
        name: UpdateUsersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
          user_id:
            type: string
            docs: Unique identifier for a User
        body:
          properties:
            data: optional<UpdateUsersRequestData>
            accessGroups:
              type: optional<list<string>>
              docs: >
                An array of access group slugs. Access groups are assigned to
                the user as type `admin` and the user remains in the group until
                removed.
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateUsersResponse
        status-code: 200
      errors:
        - root.UpdateUsersRequestBadRequestError
        - root.UpdateUsersRequestUnauthorizedError
        - root.UpdateUsersRequestForbiddenError
        - root.UpdateUsersRequestNotFoundError
        - root.UpdateUsersRequestTooManyRequestsError
        - root.UpdateUsersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            user_id: 580e63e98c9a982ac9b8b741
          request:
            data:
              name: Some One
              accept-privacy: false
              accept-communications: false
            accessGroups:
              - webflowers
              - platinum
              - free-tier
          response:
            body:
              id: 6287ec36a841b25637c663df
              isEmailVerified: true
              lastUpdated: '2022-05-20T13:46:12Z'
              invitedOn: '2022-05-20T13:46:12Z'
              createdOn: '2022-05-20T13:46:12Z'
              lastLogin: '2022-05-20T13:46:12Z'
              status: verified
              accessGroups:
                - slug: webflowers
                  type: admin
              data:
                data:
                  name: name
                  email: email
                  accept-privacy: true
                  accept-communications: true
                  additionalProperties: additionalProperties
    invite:
      path: /sites/{site_id}/users/invite
      method: POST
      auth:
        - OAuth2:
            - users:write
      docs: >-
        Create and invite a user with an email address. The user will be sent
        and invite via email, which they will need to accept in order to join
        paid Access Groups. <br><br> Required scope | `users:write`
      source:
        openapi: ../openapi.yml
      display-name: Create and Invite a User
      request:
        name: InviteUsersRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            email:
              type: string
              docs: Email address of user to send invite to
              validation:
                format: email
            accessGroups:
              type: optional<list<string>>
              docs: >
                An array of access group slugs. Access groups are assigned to
                the user as type `admin` and the user remains in the group until
                removed.
        content-type: application/json
      response:
        docs: Request was successful
        type: InviteUsersResponse
        status-code: 200
      errors:
        - root.InviteUsersRequestBadRequestError
        - root.InviteUsersRequestUnauthorizedError
        - root.InviteUsersRequestForbiddenError
        - root.InviteUsersRequestNotFoundError
        - root.InviteUsersRequestConflictError
        - root.InviteUsersRequestTooManyRequestsError
        - root.InviteUsersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            email: some.one@home.com
            accessGroups:
              - webflowers
          response:
            body:
              id: 6287ec36a841b25637c663df
              isEmailVerified: true
              lastUpdated: '2022-05-20T13:46:12Z'
              invitedOn: '2022-05-20T13:46:12Z'
              createdOn: '2022-05-20T13:46:12Z'
              lastLogin: '2022-05-20T13:46:12Z'
              status: verified
              accessGroups:
                - slug: webflowers
                  type: admin
              data:
                data:
                  name: name
                  email: email
                  accept-privacy: true
                  accept-communications: true
                  additionalProperties: additionalProperties
  source:
    openapi: ../openapi.yml
webhooks:
  user_account_added:
    audiences: []
    method: POST
    display-name: New User Added
    headers: {}
    payload: UserAccountAddedPayload
    examples:
      - payload:
          payload:
            id: 6287ec36a841b25637c663df
            isEmailVerified: true
            lastUpdated: '2022-05-20T13:46:12Z'
            invitedOn: '2022-05-20T13:46:12Z'
            createdOn: '2022-05-20T13:46:12Z'
            lastLogin: '2022-05-20T13:46:12Z'
            status: verified
            accessGroups:
              - slug: webflowers
                type: admin
  user_account_updated:
    audiences: []
    method: POST
    display-name: Account Updated
    headers: {}
    payload: UserAccountUpdatedPayload
    examples:
      - payload:
          payload:
            id: 6287ec36a841b25637c663df
            isEmailVerified: true
            lastUpdated: '2022-05-20T13:46:12Z'
            invitedOn: '2022-05-20T13:46:12Z'
            createdOn: '2022-05-20T13:46:12Z'
            lastLogin: '2022-05-20T13:46:12Z'
            status: verified
            accessGroups:
              - slug: webflowers
                type: admin
  user_account_deleted:
    audiences: []
    method: POST
    display-name: Account Deleted
    headers: {}
    payload: UserAccountDeletedPayload
    examples:
      - payload:
          payload:
            id: 6287ec36a841b25637c663df
            isEmailVerified: true
            lastUpdated: '2022-05-20T13:46:12Z'
            invitedOn: '2022-05-20T13:46:12Z'
            createdOn: '2022-05-20T13:46:12Z'
            lastLogin: '2022-05-20T13:46:12Z'
            status: verified
            accessGroups:
              - slug: webflowers
                type: admin
",
    },
    "webhooks.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Webhooks",
          "endpoints": {
            "create": {
              "auth": undefined,
              "display-name": "Create Webhook",
              "docs": "Create a new Webhook, to be notified when Webflow resources change. Limit of 75 registrations per `triggerType`, per site. <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `sites:write`
",
              "errors": [
                "root.CreateWebhooksRequestBadRequestError",
                "root.CreateWebhooksRequestUnauthorizedError",
                "root.CreateWebhooksRequestNotFoundError",
                "root.CreateWebhooksRequestTooManyRequestsError",
                "root.CreateWebhooksRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "triggerType": "form_submission",
                    "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-11-08T23:59:28Z",
                      "id": "582266e0cd48de0f0e3c6d8b",
                      "lastTriggered": "2023-02-08T23:59:28Z",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/webhooks",
              "request": {
                "body": {
                  "properties": {
                    "filter": {
                      "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                      "type": "optional<CreateWebhooksRequestFilter>",
                    },
                    "triggerType": {
                      "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                      "type": "optional<CreateWebhooksRequestTriggerType>",
                    },
                    "url": {
                      "docs": "URL to send the Webhook payload to",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateWebhooksRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 201,
                "type": "CreateWebhooksResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": undefined,
              "display-name": "Remove Webhook",
              "docs": "Remove a Webhook",
              "errors": [
                "root.DeleteWebhooksRequestBadRequestError",
                "root.DeleteWebhooksRequestUnauthorizedError",
                "root.DeleteWebhooksRequestNotFoundError",
                "root.DeleteWebhooksRequestTooManyRequestsError",
                "root.DeleteWebhooksRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "webhook_id": "580e64008c9a982ac9b8b754",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/webhooks/{webhook_id}",
              "request": {
                "name": "DeleteWebhooksRequest",
                "path-parameters": {
                  "webhook_id": {
                    "docs": "Unique identifier for a Webhook",
                    "type": "string",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": undefined,
              "display-name": "Get Webhook",
              "docs": "Get a specific Webhook instance",
              "errors": [
                "root.GetWebhooksRequestBadRequestError",
                "root.GetWebhooksRequestUnauthorizedError",
                "root.GetWebhooksRequestNotFoundError",
                "root.GetWebhooksRequestTooManyRequestsError",
                "root.GetWebhooksRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "webhook_id": "580e64008c9a982ac9b8b754",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-11-08T23:59:28Z",
                      "id": "582266e0cd48de0f0e3c6d8b",
                      "lastTriggered": "2023-02-08T23:59:28Z",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhooks/{webhook_id}",
              "request": {
                "name": "GetWebhooksRequest",
                "path-parameters": {
                  "webhook_id": {
                    "docs": "Unique identifier for a Webhook",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "GetWebhooksResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": undefined,
              "display-name": "List Webhooks",
              "docs": "List all App-created Webhooks registered for a given site </br></br> Required scope | `sites:read`
",
              "errors": [
                "root.ListWebhooksRequestBadRequestError",
                "root.ListWebhooksRequestUnauthorizedError",
                "root.ListWebhooksRequestNotFoundError",
                "root.ListWebhooksRequestTooManyRequestsError",
                "root.ListWebhooksRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "pagination": {
                        "limit": 100,
                        "offset": 0,
                        "total": 100,
                      },
                      "webhooks": [
                        {
                          "createdOn": "2016-09-02T23:26:22Z",
                          "filter": {
                            "name": "Email Form",
                          },
                          "id": "57ca0a9e418c504a6e1acbb6",
                          "lastTriggered": "2023-02-08T23:59:28Z",
                          "siteId": "562ac0395358780a1f5e6fbd",
                          "triggerType": "form_submission",
                          "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                          "workspaceId": "4f4e46fd476ea8c507000001",
                        },
                        {
                          "createdOn": "2016-07-19T01:43:40Z",
                          "filter": {
                            "name": "Email Form",
                          },
                          "id": "578d85cce0c47cd2865f4cf2",
                          "lastTriggered": "2023-02-08T23:59:28Z",
                          "siteId": "562ac0395358780a1f5e6fbd",
                          "triggerType": "form_submission",
                          "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                          "workspaceId": "4f4e46fd476ea8c507000001",
                        },
                        {
                          "createdOn": "2016-07-19T01:43:40Z",
                          "filter": {
                            "name": "Email Form",
                          },
                          "id": "578d85cce0c47cd2865f4cf3",
                          "lastTriggered": "2023-02-08T23:59:28Z",
                          "siteId": "562ac0395358780a1f5e6fbd",
                          "triggerType": "form_submission",
                          "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                          "workspaceId": "4f4e46fd476ea8c507000001",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/webhooks",
              "request": {
                "name": "ListWebhooksRequest",
                "path-parameters": {
                  "site_id": {
                    "docs": "Unique identifier for a Site",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ListWebhooksResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateWebhooksRequestFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWebhooksRequestTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWebhooksResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date the Webhook registration was created",
                "type": "optional<datetime>",
              },
              "filter": {
                "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                "type": "optional<CreateWebhooksResponseFilter>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Webhook registration",
                "type": "optional<string>",
              },
              "lastTriggered": {
                "access": "read-only",
                "docs": "Date the Webhook instance was last triggered",
                "type": "optional<datetime>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "Unique identifier for the Site the Webhook is registered in",
                "type": "optional<string>",
              },
              "triggerType": {
                "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                "type": "optional<CreateWebhooksResponseTriggerType>",
              },
              "url": {
                "docs": "URL to send the Webhook payload to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "access": "read-only",
                "docs": "Unique identifier for the Workspace the Webhook is registered in",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWebhooksResponseFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateWebhooksResponseTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetWebhooksResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date the Webhook registration was created",
                "type": "optional<datetime>",
              },
              "filter": {
                "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                "type": "optional<GetWebhooksResponseFilter>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Webhook registration",
                "type": "optional<string>",
              },
              "lastTriggered": {
                "access": "read-only",
                "docs": "Date the Webhook instance was last triggered",
                "type": "optional<datetime>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "Unique identifier for the Site the Webhook is registered in",
                "type": "optional<string>",
              },
              "triggerType": {
                "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                "type": "optional<GetWebhooksResponseTriggerType>",
              },
              "url": {
                "docs": "URL to send the Webhook payload to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "access": "read-only",
                "docs": "Unique identifier for the Workspace the Webhook is registered in",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetWebhooksResponseFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GetWebhooksResponseTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListWebhooksResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ListWebhooksResponsePagination>",
              },
              "webhooks": "optional<list<ListWebhooksResponseWebhooksItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListWebhooksResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListWebhooksResponseWebhooksItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": {
                "access": "read-only",
                "docs": "Date the Webhook registration was created",
                "type": "optional<datetime>",
              },
              "filter": {
                "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                "type": "optional<ListWebhooksResponseWebhooksItemFilter>",
              },
              "id": {
                "access": "read-only",
                "docs": "Unique identifier for the Webhook registration",
                "type": "optional<string>",
              },
              "lastTriggered": {
                "access": "read-only",
                "docs": "Date the Webhook instance was last triggered",
                "type": "optional<datetime>",
              },
              "siteId": {
                "access": "read-only",
                "docs": "Unique identifier for the Site the Webhook is registered in",
                "type": "optional<string>",
              },
              "triggerType": {
                "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                "type": "optional<ListWebhooksResponseWebhooksItemTriggerType>",
              },
              "url": {
                "docs": "URL to send the Webhook payload to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "access": "read-only",
                "docs": "Unique identifier for the Workspace the Webhook is registered in",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListWebhooksResponseWebhooksItemFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ListWebhooksResponseWebhooksItemTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ListWebhooksResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ListWebhooksResponseWebhooksItemTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  ListWebhooksResponseWebhooksItemFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  ListWebhooksResponseWebhooksItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
        access: read-only
      triggerType:
        type: optional<ListWebhooksResponseWebhooksItemTriggerType>
        docs: >
          * `form_submission` - Sends the [form_submission](#form_submission)
          event

          * `site_publish` - Sends a [site_publish](#site_publish) event

          * `page_created` - Send the [page_created](#page_created) event

          * `page_metadata_updated` - Sends the
          [page_metadata_updated](#page_metadata_updated) event

          * `page_deleted` - Sends the [page_deleted](#page_deleted) event

          * `ecomm_new_order` - Sends the new
          [ecomm_new_order](#ecomm_new_order) event

          * `ecomm_order_changed` - Sends the
          [ecomm_order_changed](#ecomm_order_changed) event

          * `ecomm_inventory_changed` - Sends the
          [ecomm_inventory_changed](#ecomm_inventory_changed) event

          * `user_account_added` - Sends the
          [user_account_added](#user_account_added) event

          * `user_account_updated` - Sends the
          [user_account_updated](#user_account_updated) event

          * `user_account_deleted` - Sends the
          [user_account_deleted](#user_account_deleted) event

          * `collection_item_created` - Sends the
          [collection_item_created](#collection_item_created) event

          * `collection_item_changed` - Sends the
          [collection_item_changed](#collection_item_changed) event

          * `collection_item_deleted` - Sends the
          [collection_item_deleted](#collection_item_deleted) event

          * `collection_item_unpublished` - Sends the
          [collection_item_unpublished](#collection_item_unpublished) event
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
        access: read-only
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
        access: read-only
      filter:
        type: optional<ListWebhooksResponseWebhooksItemFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for. 
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
        access: read-only
    source:
      openapi: ../openapi.yml
    inline: true
  ListWebhooksResponse:
    properties:
      pagination:
        type: optional<ListWebhooksResponsePagination>
        docs: Pagination object
      webhooks: optional<list<ListWebhooksResponseWebhooksItem>>
    source:
      openapi: ../openapi.yml
  CreateWebhooksRequestTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  CreateWebhooksRequestFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateWebhooksResponseTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  CreateWebhooksResponseFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateWebhooksResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
        access: read-only
      triggerType:
        type: optional<CreateWebhooksResponseTriggerType>
        docs: >
          * `form_submission` - Sends the [form_submission](#form_submission)
          event

          * `site_publish` - Sends a [site_publish](#site_publish) event

          * `page_created` - Send the [page_created](#page_created) event

          * `page_metadata_updated` - Sends the
          [page_metadata_updated](#page_metadata_updated) event

          * `page_deleted` - Sends the [page_deleted](#page_deleted) event

          * `ecomm_new_order` - Sends the new
          [ecomm_new_order](#ecomm_new_order) event

          * `ecomm_order_changed` - Sends the
          [ecomm_order_changed](#ecomm_order_changed) event

          * `ecomm_inventory_changed` - Sends the
          [ecomm_inventory_changed](#ecomm_inventory_changed) event

          * `user_account_added` - Sends the
          [user_account_added](#user_account_added) event

          * `user_account_updated` - Sends the
          [user_account_updated](#user_account_updated) event

          * `user_account_deleted` - Sends the
          [user_account_deleted](#user_account_deleted) event

          * `collection_item_created` - Sends the
          [collection_item_created](#collection_item_created) event

          * `collection_item_changed` - Sends the
          [collection_item_changed](#collection_item_changed) event

          * `collection_item_deleted` - Sends the
          [collection_item_deleted](#collection_item_deleted) event

          * `collection_item_unpublished` - Sends the
          [collection_item_unpublished](#collection_item_unpublished) event
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
        access: read-only
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
        access: read-only
      filter:
        type: optional<CreateWebhooksResponseFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for. 
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
        access: read-only
    source:
      openapi: ../openapi.yml
  GetWebhooksResponseTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  GetWebhooksResponseFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  GetWebhooksResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
        access: read-only
      triggerType:
        type: optional<GetWebhooksResponseTriggerType>
        docs: >
          * `form_submission` - Sends the [form_submission](#form_submission)
          event

          * `site_publish` - Sends a [site_publish](#site_publish) event

          * `page_created` - Send the [page_created](#page_created) event

          * `page_metadata_updated` - Sends the
          [page_metadata_updated](#page_metadata_updated) event

          * `page_deleted` - Sends the [page_deleted](#page_deleted) event

          * `ecomm_new_order` - Sends the new
          [ecomm_new_order](#ecomm_new_order) event

          * `ecomm_order_changed` - Sends the
          [ecomm_order_changed](#ecomm_order_changed) event

          * `ecomm_inventory_changed` - Sends the
          [ecomm_inventory_changed](#ecomm_inventory_changed) event

          * `user_account_added` - Sends the
          [user_account_added](#user_account_added) event

          * `user_account_updated` - Sends the
          [user_account_updated](#user_account_updated) event

          * `user_account_deleted` - Sends the
          [user_account_deleted](#user_account_deleted) event

          * `collection_item_created` - Sends the
          [collection_item_created](#collection_item_created) event

          * `collection_item_changed` - Sends the
          [collection_item_changed](#collection_item_changed) event

          * `collection_item_deleted` - Sends the
          [collection_item_deleted](#collection_item_deleted) event

          * `collection_item_unpublished` - Sends the
          [collection_item_unpublished](#collection_item_unpublished) event
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
        access: read-only
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
        access: read-only
      filter:
        type: optional<GetWebhooksResponseFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for. 
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
        access: read-only
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
        access: read-only
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/webhooks
      method: GET
      docs: >
        List all App-created Webhooks registered for a given site </br></br>
        Required scope | `sites:read`
      source:
        openapi: ../openapi.yml
      display-name: List Webhooks
      request:
        name: ListWebhooksRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
      response:
        docs: Request was successful
        type: ListWebhooksResponse
        status-code: 200
      errors:
        - root.ListWebhooksRequestBadRequestError
        - root.ListWebhooksRequestUnauthorizedError
        - root.ListWebhooksRequestNotFoundError
        - root.ListWebhooksRequestTooManyRequestsError
        - root.ListWebhooksRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              pagination:
                limit: 100
                offset: 0
                total: 100
              webhooks:
                - id: 57ca0a9e418c504a6e1acbb6
                  triggerType: form_submission
                  url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
                  workspaceId: 4f4e46fd476ea8c507000001
                  siteId: 562ac0395358780a1f5e6fbd
                  filter:
                    name: Email Form
                  lastTriggered: '2023-02-08T23:59:28Z'
                  createdOn: '2016-09-02T23:26:22Z'
                - id: 578d85cce0c47cd2865f4cf2
                  triggerType: form_submission
                  url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
                  workspaceId: 4f4e46fd476ea8c507000001
                  siteId: 562ac0395358780a1f5e6fbd
                  filter:
                    name: Email Form
                  lastTriggered: '2023-02-08T23:59:28Z'
                  createdOn: '2016-07-19T01:43:40Z'
                - id: 578d85cce0c47cd2865f4cf3
                  triggerType: form_submission
                  url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
                  workspaceId: 4f4e46fd476ea8c507000001
                  siteId: 562ac0395358780a1f5e6fbd
                  filter:
                    name: Email Form
                  lastTriggered: '2023-02-08T23:59:28Z'
                  createdOn: '2016-07-19T01:43:40Z'
    create:
      path: /sites/{site_id}/webhooks
      method: POST
      docs: >
        Create a new Webhook, to be notified when Webflow resources change.
        Limit of 75 registrations per `triggerType`, per site. <blockquote
        class="callout callout_info" theme="📘">Access to this endpoint requires
        a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `sites:write`
      source:
        openapi: ../openapi.yml
      display-name: Create Webhook
      request:
        name: CreateWebhooksRequest
        path-parameters:
          site_id:
            type: string
            docs: Unique identifier for a Site
        body:
          properties:
            triggerType:
              type: optional<CreateWebhooksRequestTriggerType>
              docs: >
                * `form_submission` - Sends the
                [form_submission](#form_submission) event

                * `site_publish` - Sends a [site_publish](#site_publish) event

                * `page_created` - Send the [page_created](#page_created) event

                * `page_metadata_updated` - Sends the
                [page_metadata_updated](#page_metadata_updated) event

                * `page_deleted` - Sends the [page_deleted](#page_deleted) event

                * `ecomm_new_order` - Sends the new
                [ecomm_new_order](#ecomm_new_order) event

                * `ecomm_order_changed` - Sends the
                [ecomm_order_changed](#ecomm_order_changed) event

                * `ecomm_inventory_changed` - Sends the
                [ecomm_inventory_changed](#ecomm_inventory_changed) event

                * `user_account_added` - Sends the
                [user_account_added](#user_account_added) event

                * `user_account_updated` - Sends the
                [user_account_updated](#user_account_updated) event

                * `user_account_deleted` - Sends the
                [user_account_deleted](#user_account_deleted) event

                * `collection_item_created` - Sends the
                [collection_item_created](#collection_item_created) event

                * `collection_item_changed` - Sends the
                [collection_item_changed](#collection_item_changed) event

                * `collection_item_deleted` - Sends the
                [collection_item_deleted](#collection_item_deleted) event

                * `collection_item_unpublished` - Sends the
                [collection_item_unpublished](#collection_item_unpublished)
                event
            url:
              type: optional<string>
              docs: URL to send the Webhook payload to
            filter:
              type: optional<CreateWebhooksRequestFilter>
              docs: >-
                Only supported for the `form_submission` trigger type. Filter
                for the form you want Webhooks to be sent for. 
        content-type: application/json
      response:
        docs: Request was successful
        type: CreateWebhooksResponse
        status-code: 201
      errors:
        - root.CreateWebhooksRequestBadRequestError
        - root.CreateWebhooksRequestUnauthorizedError
        - root.CreateWebhooksRequestNotFoundError
        - root.CreateWebhooksRequestTooManyRequestsError
        - root.CreateWebhooksRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            triggerType: form_submission
            url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
          response:
            body:
              id: 582266e0cd48de0f0e3c6d8b
              triggerType: form_submission
              url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
              workspaceId: 4f4e46fd476ea8c507000001
              siteId: 562ac0395358780a1f5e6fbd
              lastTriggered: '2023-02-08T23:59:28Z'
              createdOn: '2022-11-08T23:59:28Z'
    get:
      path: /webhooks/{webhook_id}
      method: GET
      docs: Get a specific Webhook instance
      source:
        openapi: ../openapi.yml
      display-name: Get Webhook
      request:
        name: GetWebhooksRequest
        path-parameters:
          webhook_id:
            type: string
            docs: Unique identifier for a Webhook
      response:
        docs: Request was successful
        type: GetWebhooksResponse
        status-code: 200
      errors:
        - root.GetWebhooksRequestBadRequestError
        - root.GetWebhooksRequestUnauthorizedError
        - root.GetWebhooksRequestNotFoundError
        - root.GetWebhooksRequestTooManyRequestsError
        - root.GetWebhooksRequestInternalServerError
      examples:
        - path-parameters:
            webhook_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 582266e0cd48de0f0e3c6d8b
              triggerType: form_submission
              url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
              workspaceId: 4f4e46fd476ea8c507000001
              siteId: 562ac0395358780a1f5e6fbd
              lastTriggered: '2023-02-08T23:59:28Z'
              createdOn: '2022-11-08T23:59:28Z'
    delete:
      path: /webhooks/{webhook_id}
      method: DELETE
      docs: Remove a Webhook
      source:
        openapi: ../openapi.yml
      display-name: Remove Webhook
      request:
        name: DeleteWebhooksRequest
        path-parameters:
          webhook_id:
            type: string
            docs: Unique identifier for a Webhook
      errors:
        - root.DeleteWebhooksRequestBadRequestError
        - root.DeleteWebhooksRequestUnauthorizedError
        - root.DeleteWebhooksRequestNotFoundError
        - root.DeleteWebhooksRequestTooManyRequestsError
        - root.DeleteWebhooksRequestInternalServerError
      examples:
        - path-parameters:
            webhook_id: 580e64008c9a982ac9b8b754
  source:
    openapi: ../openapi.yml
  display-name: Webhooks
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Data API",
      "environments": {
        "Default": "https://api.webflow.com/v2",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Data API
environments:
  Default: https://api.webflow.com/v2
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}