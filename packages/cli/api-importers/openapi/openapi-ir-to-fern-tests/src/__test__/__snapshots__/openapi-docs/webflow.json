{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "AccessGroupsListRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "AccessGroupsListRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "AccessGroupsListRequestForbiddenErrorBody",
          },
          "AccessGroupsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AccessGroupsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AccessGroupsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AccessGroupsListRequestTooManyRequestsErrorBody",
          },
          "AccessGroupsListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ActivityLogsListRequestForbiddenError": {
            "docs": "Forbidden request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "ActivityLogsListRequestForbiddenErrorBody",
          },
          "ActivityLogsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ActivityLogsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ActivityLogsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ActivityLogsListRequestTooManyRequestsErrorBody",
          },
          "AssetsCreateFolderRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsCreateFolderRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsCreateFolderRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsCreateFolderRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsCreateFolderRequestTooManyRequestsErrorBody",
          },
          "AssetsCreateFolderRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsCreateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsCreateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsCreateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsCreateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsCreateRequestTooManyRequestsErrorBody",
          },
          "AssetsCreateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsDeleteRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsDeleteRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsDeleteRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsDeleteRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsDeleteRequestTooManyRequestsErrorBody",
          },
          "AssetsDeleteRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsGetFolderRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsGetFolderRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsGetFolderRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsGetFolderRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsGetFolderRequestTooManyRequestsErrorBody",
          },
          "AssetsGetFolderRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsGetRequestTooManyRequestsErrorBody",
          },
          "AssetsGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsListFoldersRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsListFoldersRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsListFoldersRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsListFoldersRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsListFoldersRequestTooManyRequestsErrorBody",
          },
          "AssetsListFoldersRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsListRequestTooManyRequestsErrorBody",
          },
          "AssetsListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "AssetsUpdateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "AssetsUpdateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "AssetsUpdateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "AssetsUpdateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "AssetsUpdateRequestTooManyRequestsErrorBody",
          },
          "AssetsUpdateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CollectionsCreateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CollectionsCreateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CollectionsCreateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CollectionsCreateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CollectionsCreateRequestTooManyRequestsErrorBody",
          },
          "CollectionsCreateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CollectionsDeleteRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CollectionsDeleteRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CollectionsDeleteRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CollectionsDeleteRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CollectionsDeleteRequestTooManyRequestsErrorBody",
          },
          "CollectionsDeleteRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CollectionsGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CollectionsGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CollectionsGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CollectionsGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CollectionsGetRequestTooManyRequestsErrorBody",
          },
          "CollectionsGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "CollectionsListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "CollectionsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "CollectionsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "CollectionsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "CollectionsListRequestTooManyRequestsErrorBody",
          },
          "CollectionsListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "DeleteCollectionRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "DeleteCollectionRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "DeleteCollectionRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "DeleteCollectionRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "DeleteCollectionRequestTooManyRequestsErrorBody",
          },
          "DeleteCollectionRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "EcommerceGetSettingsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "EcommerceGetSettingsRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "EcommerceGetSettingsRequestConflictErrorBody",
          },
          "EcommerceGetSettingsRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "EcommerceGetSettingsRequestForbiddenErrorBody",
          },
          "EcommerceGetSettingsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "EcommerceGetSettingsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "EcommerceGetSettingsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "EcommerceGetSettingsRequestTooManyRequestsErrorBody",
          },
          "EcommerceGetSettingsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FieldsCreateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FieldsCreateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FieldsCreateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FieldsCreateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FieldsCreateRequestTooManyRequestsErrorBody",
          },
          "FieldsCreateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FieldsUpdateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FieldsUpdateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FieldsUpdateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FieldsUpdateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FieldsUpdateRequestTooManyRequestsErrorBody",
          },
          "FieldsUpdateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FormsGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FormsGetRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "FormsGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FormsGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FormsGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FormsGetRequestTooManyRequestsErrorBody",
          },
          "FormsGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FormsGetSubmissionRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FormsGetSubmissionRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "FormsGetSubmissionRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FormsGetSubmissionRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FormsGetSubmissionRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FormsGetSubmissionRequestTooManyRequestsErrorBody",
          },
          "FormsGetSubmissionRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FormsListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FormsListRequestConflictError": {
            "docs": "To access this feature, the site needs to be republished.",
            "status-code": 409,
            "type": "unknown",
          },
          "FormsListRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "FormsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FormsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FormsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FormsListRequestTooManyRequestsErrorBody",
          },
          "FormsListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FormsListSubmissionsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FormsListSubmissionsRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "FormsListSubmissionsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FormsListSubmissionsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FormsListSubmissionsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FormsListSubmissionsRequestTooManyRequestsErrorBody",
          },
          "FormsListSubmissionsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "FormsUpdateSubmissionRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "FormsUpdateSubmissionRequestConflictError": {
            "docs": "To access this feature, the site needs to be republished.",
            "status-code": 409,
            "type": "unknown",
          },
          "FormsUpdateSubmissionRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "FormsUpdateSubmissionRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "FormsUpdateSubmissionRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "FormsUpdateSubmissionRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "FormsUpdateSubmissionRequestTooManyRequestsErrorBody",
          },
          "FormsUpdateSubmissionRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "InventoryListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "InventoryListRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "InventoryListRequestConflictErrorBody",
          },
          "InventoryListRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "InventoryListRequestForbiddenErrorBody",
          },
          "InventoryListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "InventoryListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "InventoryListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "InventoryListRequestTooManyRequestsErrorBody",
          },
          "InventoryListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "InventoryUpdateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "InventoryUpdateRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "InventoryUpdateRequestConflictErrorBody",
          },
          "InventoryUpdateRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "InventoryUpdateRequestForbiddenErrorBody",
          },
          "InventoryUpdateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "InventoryUpdateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "InventoryUpdateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "InventoryUpdateRequestTooManyRequestsErrorBody",
          },
          "InventoryUpdateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsCreateItemForMultipleLocalesRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsCreateItemForMultipleLocalesRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsCreateItemForMultipleLocalesRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsCreateItemForMultipleLocalesRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsCreateItemForMultipleLocalesRequestTooManyRequestsErrorBody",
          },
          "ItemsCreateItemForMultipleLocalesRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsCreateItemLiveRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsCreateItemLiveRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsCreateItemLiveRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsCreateItemLiveRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsCreateItemLiveRequestTooManyRequestsErrorBody",
          },
          "ItemsCreateItemLiveRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsCreateItemRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsCreateItemRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsCreateItemRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsCreateItemRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsCreateItemRequestTooManyRequestsErrorBody",
          },
          "ItemsCreateItemRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsDeleteItemLiveRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsDeleteItemLiveRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsDeleteItemLiveRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsDeleteItemLiveRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsDeleteItemLiveRequestTooManyRequestsErrorBody",
          },
          "ItemsDeleteItemLiveRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsDeleteItemRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsDeleteItemRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsDeleteItemRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsDeleteItemRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsDeleteItemRequestTooManyRequestsErrorBody",
          },
          "ItemsDeleteItemRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsGetItemLiveRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsGetItemLiveRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsGetItemLiveRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsGetItemLiveRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsGetItemLiveRequestTooManyRequestsErrorBody",
          },
          "ItemsGetItemLiveRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsGetItemRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsGetItemRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsGetItemRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsGetItemRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsGetItemRequestTooManyRequestsErrorBody",
          },
          "ItemsGetItemRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsListItemsLiveRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsListItemsLiveRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsListItemsLiveRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsListItemsLiveRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsListItemsLiveRequestTooManyRequestsErrorBody",
          },
          "ItemsListItemsLiveRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsListItemsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsListItemsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsListItemsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsListItemsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsListItemsRequestTooManyRequestsErrorBody",
          },
          "ItemsListItemsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsPublishItemRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsPublishItemRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsPublishItemRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsPublishItemRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsPublishItemRequestTooManyRequestsErrorBody",
          },
          "ItemsPublishItemRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsUpdateItemLiveRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsUpdateItemLiveRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsUpdateItemLiveRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsUpdateItemLiveRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsUpdateItemLiveRequestTooManyRequestsErrorBody",
          },
          "ItemsUpdateItemLiveRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ItemsUpdateItemRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ItemsUpdateItemRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ItemsUpdateItemRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ItemsUpdateItemRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ItemsUpdateItemRequestTooManyRequestsErrorBody",
          },
          "ItemsUpdateItemRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "OrdersGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "OrdersGetRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "OrdersGetRequestConflictErrorBody",
          },
          "OrdersGetRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "OrdersGetRequestForbiddenErrorBody",
          },
          "OrdersGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "OrdersGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "OrdersGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "OrdersGetRequestTooManyRequestsErrorBody",
          },
          "OrdersGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "OrdersListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "OrdersListRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "OrdersListRequestConflictErrorBody",
          },
          "OrdersListRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "OrdersListRequestForbiddenErrorBody",
          },
          "OrdersListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "OrdersListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "OrdersListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "OrdersListRequestTooManyRequestsErrorBody",
          },
          "OrdersListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "OrdersRefundRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "OrdersRefundRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "OrdersRefundRequestConflictErrorBody",
          },
          "OrdersRefundRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "OrdersRefundRequestForbiddenErrorBody",
          },
          "OrdersRefundRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "OrdersRefundRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "OrdersRefundRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "OrdersRefundRequestTooManyRequestsErrorBody",
          },
          "OrdersRefundRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "OrdersUpdateFulfillRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "OrdersUpdateFulfillRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "OrdersUpdateFulfillRequestConflictErrorBody",
          },
          "OrdersUpdateFulfillRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "OrdersUpdateFulfillRequestForbiddenErrorBody",
          },
          "OrdersUpdateFulfillRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "OrdersUpdateFulfillRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "OrdersUpdateFulfillRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "OrdersUpdateFulfillRequestTooManyRequestsErrorBody",
          },
          "OrdersUpdateFulfillRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "OrdersUpdateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "OrdersUpdateRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "OrdersUpdateRequestConflictErrorBody",
          },
          "OrdersUpdateRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "OrdersUpdateRequestForbiddenErrorBody",
          },
          "OrdersUpdateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "OrdersUpdateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "OrdersUpdateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "OrdersUpdateRequestTooManyRequestsErrorBody",
          },
          "OrdersUpdateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "OrdersUpdateUnfulfillRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "OrdersUpdateUnfulfillRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "OrdersUpdateUnfulfillRequestConflictErrorBody",
          },
          "OrdersUpdateUnfulfillRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "OrdersUpdateUnfulfillRequestForbiddenErrorBody",
          },
          "OrdersUpdateUnfulfillRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "OrdersUpdateUnfulfillRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "OrdersUpdateUnfulfillRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "OrdersUpdateUnfulfillRequestTooManyRequestsErrorBody",
          },
          "OrdersUpdateUnfulfillRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "PagesGetContentRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "PagesGetContentRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "PagesGetContentRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "PagesGetContentRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "PagesGetContentRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "PagesGetContentRequestTooManyRequestsErrorBody",
          },
          "PagesGetContentRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "PagesGetMetadataRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "PagesGetMetadataRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "PagesGetMetadataRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "PagesGetMetadataRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "PagesGetMetadataRequestTooManyRequestsErrorBody",
          },
          "PagesGetMetadataRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "PagesListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "PagesListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "PagesListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "PagesListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "PagesListRequestTooManyRequestsErrorBody",
          },
          "PagesListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ProductsCreateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ProductsCreateRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ProductsCreateRequestConflictErrorBody",
          },
          "ProductsCreateRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ProductsCreateRequestForbiddenErrorBody",
          },
          "ProductsCreateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ProductsCreateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ProductsCreateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ProductsCreateRequestTooManyRequestsErrorBody",
          },
          "ProductsCreateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ProductsCreateSkuRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ProductsCreateSkuRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ProductsCreateSkuRequestConflictErrorBody",
          },
          "ProductsCreateSkuRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ProductsCreateSkuRequestForbiddenErrorBody",
          },
          "ProductsCreateSkuRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ProductsCreateSkuRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ProductsCreateSkuRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ProductsCreateSkuRequestTooManyRequestsErrorBody",
          },
          "ProductsCreateSkuRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ProductsGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ProductsGetRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ProductsGetRequestConflictErrorBody",
          },
          "ProductsGetRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ProductsGetRequestForbiddenErrorBody",
          },
          "ProductsGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ProductsGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ProductsGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ProductsGetRequestTooManyRequestsErrorBody",
          },
          "ProductsGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ProductsListRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "ProductsListRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ProductsListRequestConflictErrorBody",
          },
          "ProductsListRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ProductsListRequestForbiddenErrorBody",
          },
          "ProductsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ProductsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ProductsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ProductsListRequestTooManyRequestsErrorBody",
          },
          "ProductsListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ProductsUpdateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ProductsUpdateRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ProductsUpdateRequestConflictErrorBody",
          },
          "ProductsUpdateRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ProductsUpdateRequestForbiddenErrorBody",
          },
          "ProductsUpdateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ProductsUpdateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ProductsUpdateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ProductsUpdateRequestTooManyRequestsErrorBody",
          },
          "ProductsUpdateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ProductsUpdateSkuRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ProductsUpdateSkuRequestConflictError": {
            "docs": "The site does not have ecommerce enabled.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "ProductsUpdateSkuRequestConflictErrorBody",
          },
          "ProductsUpdateSkuRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "ProductsUpdateSkuRequestForbiddenErrorBody",
          },
          "ProductsUpdateSkuRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ProductsUpdateSkuRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ProductsUpdateSkuRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ProductsUpdateSkuRequestTooManyRequestsErrorBody",
          },
          "ProductsUpdateSkuRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsDeleteCustomCodeRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsDeleteCustomCodeRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsDeleteCustomCodeRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsDeleteCustomCodeRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsDeleteCustomCodeRequestTooManyRequestsErrorBody",
          },
          "ScriptsDeleteCustomCodeRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsGetCustomCodeRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsGetCustomCodeRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsGetCustomCodeRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsGetCustomCodeRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsGetCustomCodeRequestTooManyRequestsErrorBody",
          },
          "ScriptsGetCustomCodeRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsListCustomCodeBlocksRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsListCustomCodeBlocksRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsListCustomCodeBlocksRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsListCustomCodeBlocksRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsListCustomCodeBlocksRequestTooManyRequestsErrorBody",
          },
          "ScriptsListCustomCodeBlocksRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsListRequestTooManyRequestsErrorBody",
          },
          "ScriptsListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsRegisterHostedRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsRegisterHostedRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsRegisterHostedRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsRegisterHostedRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsRegisterHostedRequestTooManyRequestsErrorBody",
          },
          "ScriptsRegisterHostedRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsRegisterInlineRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsRegisterInlineRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsRegisterInlineRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsRegisterInlineRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsRegisterInlineRequestTooManyRequestsErrorBody",
          },
          "ScriptsRegisterInlineRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "ScriptsUpsertCustomCodeRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "ScriptsUpsertCustomCodeRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "ScriptsUpsertCustomCodeRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ScriptsUpsertCustomCodeRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "ScriptsUpsertCustomCodeRequestTooManyRequestsErrorBody",
          },
          "ScriptsUpsertCustomCodeRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "SitesGetCustomDomainRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "SitesGetCustomDomainRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "SitesGetCustomDomainRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "SitesGetCustomDomainRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "SitesGetCustomDomainRequestTooManyRequestsErrorBody",
          },
          "SitesGetCustomDomainRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "SitesGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "SitesGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "SitesGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "SitesGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "SitesGetRequestTooManyRequestsErrorBody",
          },
          "SitesGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "SitesListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "SitesListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "SitesListRequestTooManyRequestsErrorBody",
          },
          "SitesListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "SitesPublishRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "key": "value",
                },
              },
            ],
            "status-code": 400,
            "type": "unknown",
          },
          "SitesPublishRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "SitesPublishRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "SitesPublishRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "SitesPublishRequestTooManyRequestsErrorBody",
          },
          "SitesPublishRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "TokenAuthorizedByRequestForbiddenError": {
            "docs": "Provided access token is valid, but is missing the required scopes.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "status": 403,
                },
              },
            ],
            "status-code": 403,
            "type": "TokenAuthorizedByRequestForbiddenErrorBody",
          },
          "TokenAuthorizedByRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "TokenIntrospectRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdatePageSettingsRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdatePageSettingsRequestTooManyRequestsErrorBody",
          },
          "UpdatePageSettingsRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UpdateStaticContentRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "UpdateStaticContentRequestForbiddenError": {
            "docs": "Provided access token does not have access rights to this content.",
            "status-code": 403,
            "type": "unknown",
          },
          "UpdateStaticContentRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UpdateStaticContentRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateStaticContentRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UpdateStaticContentRequestTooManyRequestsErrorBody",
          },
          "UpdateStaticContentRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UsersDeleteRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "UsersDeleteRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "UsersDeleteRequestForbiddenErrorBody",
          },
          "UsersDeleteRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UsersDeleteRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UsersDeleteRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UsersDeleteRequestTooManyRequestsErrorBody",
          },
          "UsersDeleteRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UsersGetRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "UsersGetRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "UsersGetRequestForbiddenErrorBody",
          },
          "UsersGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UsersGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UsersGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UsersGetRequestTooManyRequestsErrorBody",
          },
          "UsersGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UsersInviteRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "UsersInviteRequestConflictError": {
            "docs": "Conflict",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 409,
            "type": "UsersInviteRequestConflictErrorBody",
          },
          "UsersInviteRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "UsersInviteRequestForbiddenErrorBody",
          },
          "UsersInviteRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UsersInviteRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UsersInviteRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UsersInviteRequestTooManyRequestsErrorBody",
          },
          "UsersInviteRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UsersListRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "UsersListRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "UsersListRequestForbiddenErrorBody",
          },
          "UsersListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UsersListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UsersListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UsersListRequestTooManyRequestsErrorBody",
          },
          "UsersListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "UsersUpdateRequestBadRequestError": {
            "docs": "Validation failure",
            "status-code": 400,
            "type": "unknown",
          },
          "UsersUpdateRequestForbiddenError": {
            "docs": "Forbidden",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "message": "Request not authorized",
                },
              },
            ],
            "status-code": 403,
            "type": "UsersUpdateRequestForbiddenErrorBody",
          },
          "UsersUpdateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "UsersUpdateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "UsersUpdateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "UsersUpdateRequestTooManyRequestsErrorBody",
          },
          "UsersUpdateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "WebhooksCreateRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "WebhooksCreateRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "WebhooksCreateRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "WebhooksCreateRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "WebhooksCreateRequestTooManyRequestsErrorBody",
          },
          "WebhooksCreateRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "WebhooksDeleteRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "WebhooksDeleteRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "WebhooksDeleteRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "WebhooksDeleteRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "WebhooksDeleteRequestTooManyRequestsErrorBody",
          },
          "WebhooksDeleteRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "WebhooksGetRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "WebhooksGetRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "WebhooksGetRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "WebhooksGetRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "WebhooksGetRequestTooManyRequestsErrorBody",
          },
          "WebhooksGetRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
          "WebhooksListRequestBadRequestError": {
            "docs": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
            "status-code": 400,
            "type": "unknown",
          },
          "WebhooksListRequestInternalServerError": {
            "docs": "We had a problem with our server. Try again later.",
            "status-code": 500,
            "type": "unknown",
          },
          "WebhooksListRequestNotFoundError": {
            "docs": "Requested resource not found",
            "status-code": 404,
            "type": "unknown",
          },
          "WebhooksListRequestTooManyRequestsError": {
            "docs": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "code": "too_many_requests",
                  "message": "too many requests",
                },
              },
            ],
            "status-code": 429,
            "type": "WebhooksListRequestTooManyRequestsErrorBody",
          },
          "WebhooksListRequestUnauthorizedError": {
            "docs": "Provided access token is invalid or does not have access to requested resource",
            "status-code": 401,
            "type": "unknown",
          },
        },
        "types": {
          "AccessGroupsListRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "AccessGroupsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogsListRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "ActivityLogsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsCreateFolderRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsCreateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsDeleteRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsGetFolderRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListFoldersRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsUpdateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsCreateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsDeleteRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConflictErrorBodyDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "ConflictErrorBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyOneDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConflictErrorBodyOneDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "ConflictErrorBodyZero": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyZeroDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConflictErrorBodyZeroDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "DeleteCollectionRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommerceGetSettingsRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommerceGetSettingsRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommerceGetSettingsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FieldsCreateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FieldsUpdateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ForbiddenErrorBodyOne": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<string>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ForbiddenErrorBodyOneDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ForbiddenErrorBodyOneDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "ForbiddenErrorBodyZero": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"missing_scopes">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ForbiddenErrorBodyZeroDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ForbiddenErrorBodyZeroDetailsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "map<string, unknown>",
            ],
          },
          "FormsGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsGetSubmissionRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListSubmissionsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsUpdateSubmissionRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryListRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryListRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryUpdateRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryUpdateRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryUpdateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemForMultipleLocalesRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemLiveRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsDeleteItemLiveRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsDeleteItemRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsGetItemLiveRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsGetItemRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsPublishItemRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemLiveRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OauthScope": {
            "enum": [
              {
                "docs": "read details about the authorized user",
                "name": "AuthorizedUserRead",
                "value": "authorized_user:read",
              },
              {
                "docs": "read assets on the site",
                "name": "AssetsRead",
                "value": "assets:read",
              },
              {
                "docs": "write assets on a site",
                "name": "AssetsWrite",
                "value": "assets:write",
              },
              {
                "docs": "read collections and items for a site",
                "name": "CmsRead",
                "value": "cms:read",
              },
              {
                "docs": "write to collections and items for a site",
                "name": "CmsWrite",
                "value": "cms:write",
              },
              {
                "docs": "read custom code on the site",
                "name": "CustomCodeRead",
                "value": "custom_code:read",
              },
              {
                "docs": "modify custom code on the site",
                "name": "CustomCodeWrite",
                "value": "custom_code:write",
              },
              {
                "docs": "read ecommerce data",
                "name": "EcommerceRead",
                "value": "ecommerce:read",
              },
              {
                "docs": "edit ecommerce data",
                "name": "EcommerceWrite",
                "value": "ecommerce:write",
              },
              {
                "docs": "read form data",
                "name": "FormsRead",
                "value": "forms:read",
              },
              {
                "docs": "write form data",
                "name": "FormsWrite",
                "value": "forms:write",
              },
              {
                "docs": "read pages on the site",
                "name": "PagesRead",
                "value": "pages:read",
              },
              {
                "docs": "write to pages on the site",
                "name": "PagesWrite",
                "value": "pages:write",
              },
              {
                "docs": "read component data",
                "name": "ComponentsRead",
                "value": "components:read",
              },
              {
                "docs": "read sites on the site",
                "name": "SitesRead",
                "value": "sites:read",
              },
              {
                "docs": "modify pages on the site",
                "name": "SitesWrite",
                "value": "sites:write",
              },
              {
                "docs": "read users on the site",
                "name": "UsersRead",
                "value": "users:read",
              },
              {
                "docs": "read site activity logs",
                "name": "SiteActivityRead",
                "value": "site_activity:read",
              },
              {
                "docs": "modify users on the site",
                "name": "UsersWrite",
                "value": "users:write",
              },
              {
                "docs": "read workspace resource data",
                "name": "WorkspaceRead",
                "value": "workspace:read",
              },
              {
                "docs": "write workspace resource data",
                "name": "WorkspaceWrite",
                "value": "workspace:write",
              },
              {
                "docs": "read site configuration data",
                "name": "SiteConfigRead",
                "value": "site_config:read",
              },
              {
                "docs": "write site configuration data",
                "name": "SiteConfigWrite",
                "value": "site_config:write",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetMetadataRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestConflictErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": {
                "docs": "Error code",
                "type": "optional<literal<"ecommerce_not_enabled">>",
              },
              "details": {
                "docs": "Array of errors",
                "type": "optional<list<ConflictErrorBodyDetailsItem>>",
              },
              "externalReference": {
                "docs": "Link to more information",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Error message",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsDeleteCustomCodeRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsGetCustomCodeRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsRegisterHostedRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsRegisterInlineRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetCustomDomainRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesPublishRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TokenAuthorizedByRequestForbiddenErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": "optional<list<string>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
              "publicErrorCode": "optional<string>",
              "status": "optional<integer>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateStaticContentRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersDeleteRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "UsersDeleteRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "UsersGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteRequestConflictErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ConflictErrorBodyZero",
              "ConflictErrorBodyOne",
            ],
          },
          "UsersInviteRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "UsersInviteRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "UsersListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateRequestForbiddenErrorBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "ForbiddenErrorBodyZero",
              "ForbiddenErrorBodyOne",
            ],
          },
          "UsersUpdateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksCreateRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksDeleteRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksGetRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksListRequestTooManyRequestsErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "code": "optional<string>",
              "details": "optional<list<unknown>>",
              "externalReference": "optional<string>",
              "message": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  OauthScope:
    enum:
      - value: authorized_user:read
        name: AuthorizedUserRead
        docs: read details about the authorized user
      - value: assets:read
        name: AssetsRead
        docs: read assets on the site
      - value: assets:write
        name: AssetsWrite
        docs: write assets on a site
      - value: cms:read
        name: CmsRead
        docs: read collections and items for a site
      - value: cms:write
        name: CmsWrite
        docs: write to collections and items for a site
      - value: custom_code:read
        name: CustomCodeRead
        docs: read custom code on the site
      - value: custom_code:write
        name: CustomCodeWrite
        docs: modify custom code on the site
      - value: ecommerce:read
        name: EcommerceRead
        docs: read ecommerce data
      - value: ecommerce:write
        name: EcommerceWrite
        docs: edit ecommerce data
      - value: forms:read
        name: FormsRead
        docs: read form data
      - value: forms:write
        name: FormsWrite
        docs: write form data
      - value: pages:read
        name: PagesRead
        docs: read pages on the site
      - value: pages:write
        name: PagesWrite
        docs: write to pages on the site
      - value: components:read
        name: ComponentsRead
        docs: read component data
      - value: sites:read
        name: SitesRead
        docs: read sites on the site
      - value: sites:write
        name: SitesWrite
        docs: modify pages on the site
      - value: users:read
        name: UsersRead
        docs: read users on the site
      - value: site_activity:read
        name: SiteActivityRead
        docs: read site activity logs
      - value: users:write
        name: UsersWrite
        docs: modify users on the site
      - value: workspace:read
        name: WorkspaceRead
        docs: read workspace resource data
      - value: workspace:write
        name: WorkspaceWrite
        docs: write workspace resource data
      - value: site_config:read
        name: SiteConfigRead
        docs: read site configuration data
      - value: site_config:write
        name: SiteConfigWrite
        docs: write site configuration data
    source:
      openapi: ../openapi.yml
  TokenAuthorizedByRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  SitesListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  SitesGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  SitesGetCustomDomainRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  SitesPublishRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ForbiddenErrorBodyZeroDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ForbiddenErrorBodyZero:
    properties:
      code:
        type: optional<literal<"missing_scopes">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ForbiddenErrorBodyZeroDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  ForbiddenErrorBodyOneDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ForbiddenErrorBodyOne:
    properties:
      code:
        type: optional<string>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ForbiddenErrorBodyOneDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  ActivityLogsListRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  ActivityLogsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CollectionsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CollectionsCreateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CollectionsGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  DeleteCollectionRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FieldsCreateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  CollectionsDeleteRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FieldsUpdateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsListItemsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsCreateItemRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsListItemsLiveRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsCreateItemLiveRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsCreateItemForMultipleLocalesRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsGetItemRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsDeleteItemRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsUpdateItemRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsGetItemLiveRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsDeleteItemLiveRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsUpdateItemLiveRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ItemsPublishItemRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  PagesListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  PagesGetMetadataRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdatePageSettingsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  PagesGetContentRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UpdateStaticContentRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsGetCustomCodeRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsDeleteCustomCodeRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsRegisterHostedRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsRegisterInlineRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ScriptsListCustomCodeBlocksRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsCreateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsDeleteRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsUpdateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsListFoldersRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsCreateFolderRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AssetsGetFolderRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  WebhooksListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  WebhooksCreateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  WebhooksGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  WebhooksDeleteRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FormsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FormsGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FormsListSubmissionsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FormsGetSubmissionRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  FormsUpdateSubmissionRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UsersListRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  UsersListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UsersGetRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  UsersGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UsersDeleteRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  UsersDeleteRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UsersUpdateRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  UsersUpdateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  UsersInviteRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  ConflictErrorBodyZeroDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ConflictErrorBodyZero:
    properties:
      code:
        type: optional<string>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyZeroDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  ConflictErrorBodyOneDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ConflictErrorBodyOne:
    properties:
      code:
        type: optional<string>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyOneDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
    inline: true
  UsersInviteRequestConflictErrorBody:
    discriminated: false
    union:
      - ConflictErrorBodyZero
      - ConflictErrorBodyOne
    source:
      openapi: ../openapi.yml
  UsersInviteRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  AccessGroupsListRequestForbiddenErrorBody:
    discriminated: false
    union:
      - ForbiddenErrorBodyZero
      - ForbiddenErrorBodyOne
    source:
      openapi: ../openapi.yml
  AccessGroupsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ProductsListRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ConflictErrorBodyDetailsItem:
    discriminated: false
    union:
      - string
      - map<string, unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ProductsListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ProductsGetRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ProductsGetRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ProductsGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  OrdersListRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  OrdersListRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  OrdersListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  OrdersGetRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  OrdersGetRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  OrdersGetRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  OrdersUpdateRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  OrdersUpdateRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  OrdersUpdateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  OrdersRefundRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  OrdersRefundRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  OrdersRefundRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  InventoryListRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  InventoryListRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  InventoryListRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  InventoryUpdateRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  InventoryUpdateRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  InventoryUpdateRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
  EcommerceGetSettingsRequestForbiddenErrorBody:
    properties:
      status: optional<integer>
      message: optional<string>
      publicErrorCode: optional<string>
      externalReference: optional<string>
      details: optional<list<string>>
    source:
      openapi: ../openapi.yml
  EcommerceGetSettingsRequestConflictErrorBody:
    properties:
      code:
        type: optional<literal<"ecommerce_not_enabled">>
        docs: Error code
      message:
        type: optional<string>
        docs: Error message
      externalReference:
        type: optional<string>
        docs: Link to more information
      details:
        type: optional<list<ConflictErrorBodyDetailsItem>>
        docs: Array of errors
    source:
      openapi: ../openapi.yml
  EcommerceGetSettingsRequestTooManyRequestsErrorBody:
    properties:
      message: optional<string>
      code: optional<string>
      externalReference: optional<string>
      details: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
errors:
  TokenAuthorizedByRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  TokenAuthorizedByRequestForbiddenError:
    status-code: 403
    type: TokenAuthorizedByRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  TokenIntrospectRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  SitesListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  SitesListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  SitesListRequestTooManyRequestsError:
    status-code: 429
    type: SitesListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  SitesGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  SitesGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  SitesGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  SitesGetRequestTooManyRequestsError:
    status-code: 429
    type: SitesGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  SitesGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  SitesGetCustomDomainRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  SitesGetCustomDomainRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  SitesGetCustomDomainRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  SitesGetCustomDomainRequestTooManyRequestsError:
    status-code: 429
    type: SitesGetCustomDomainRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  SitesGetCustomDomainRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  SitesPublishRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Bad Request
    examples:
      - value:
          key: value
  SitesPublishRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  SitesPublishRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  SitesPublishRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  SitesPublishRequestTooManyRequestsError:
    status-code: 429
    type: SitesPublishRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ActivityLogsListRequestForbiddenError:
    status-code: 403
    type: ActivityLogsListRequestForbiddenErrorBody
    docs: Forbidden request
    examples:
      - value:
          message: Request not authorized
  ActivityLogsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ActivityLogsListRequestTooManyRequestsError:
    status-code: 429
    type: ActivityLogsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ActivityLogsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CollectionsListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CollectionsListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CollectionsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CollectionsListRequestTooManyRequestsError:
    status-code: 429
    type: CollectionsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CollectionsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CollectionsCreateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CollectionsCreateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CollectionsCreateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CollectionsCreateRequestTooManyRequestsError:
    status-code: 429
    type: CollectionsCreateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CollectionsCreateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CollectionsGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CollectionsGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CollectionsGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CollectionsGetRequestTooManyRequestsError:
    status-code: 429
    type: CollectionsGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CollectionsGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  DeleteCollectionRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  DeleteCollectionRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  DeleteCollectionRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  DeleteCollectionRequestTooManyRequestsError:
    status-code: 429
    type: DeleteCollectionRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  DeleteCollectionRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FieldsCreateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FieldsCreateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FieldsCreateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FieldsCreateRequestTooManyRequestsError:
    status-code: 429
    type: FieldsCreateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FieldsCreateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  CollectionsDeleteRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  CollectionsDeleteRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  CollectionsDeleteRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  CollectionsDeleteRequestTooManyRequestsError:
    status-code: 429
    type: CollectionsDeleteRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  CollectionsDeleteRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FieldsUpdateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FieldsUpdateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FieldsUpdateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FieldsUpdateRequestTooManyRequestsError:
    status-code: 429
    type: FieldsUpdateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FieldsUpdateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsListItemsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsListItemsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsListItemsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsListItemsRequestTooManyRequestsError:
    status-code: 429
    type: ItemsListItemsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsListItemsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsCreateItemRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsCreateItemRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsCreateItemRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsCreateItemRequestTooManyRequestsError:
    status-code: 429
    type: ItemsCreateItemRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsCreateItemRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsListItemsLiveRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsListItemsLiveRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsListItemsLiveRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsListItemsLiveRequestTooManyRequestsError:
    status-code: 429
    type: ItemsListItemsLiveRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsListItemsLiveRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsCreateItemLiveRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsCreateItemLiveRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsCreateItemLiveRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsCreateItemLiveRequestTooManyRequestsError:
    status-code: 429
    type: ItemsCreateItemLiveRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsCreateItemLiveRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsCreateItemForMultipleLocalesRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsCreateItemForMultipleLocalesRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsCreateItemForMultipleLocalesRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsCreateItemForMultipleLocalesRequestTooManyRequestsError:
    status-code: 429
    type: ItemsCreateItemForMultipleLocalesRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsCreateItemForMultipleLocalesRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsGetItemRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsGetItemRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsGetItemRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsGetItemRequestTooManyRequestsError:
    status-code: 429
    type: ItemsGetItemRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsGetItemRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsDeleteItemRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsDeleteItemRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsDeleteItemRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsDeleteItemRequestTooManyRequestsError:
    status-code: 429
    type: ItemsDeleteItemRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsDeleteItemRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsUpdateItemRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsUpdateItemRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsUpdateItemRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsUpdateItemRequestTooManyRequestsError:
    status-code: 429
    type: ItemsUpdateItemRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsUpdateItemRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsGetItemLiveRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsGetItemLiveRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsGetItemLiveRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsGetItemLiveRequestTooManyRequestsError:
    status-code: 429
    type: ItemsGetItemLiveRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsGetItemLiveRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsDeleteItemLiveRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsDeleteItemLiveRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsDeleteItemLiveRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsDeleteItemLiveRequestTooManyRequestsError:
    status-code: 429
    type: ItemsDeleteItemLiveRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsDeleteItemLiveRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsUpdateItemLiveRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsUpdateItemLiveRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsUpdateItemLiveRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsUpdateItemLiveRequestTooManyRequestsError:
    status-code: 429
    type: ItemsUpdateItemLiveRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsUpdateItemLiveRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ItemsPublishItemRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ItemsPublishItemRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ItemsPublishItemRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ItemsPublishItemRequestTooManyRequestsError:
    status-code: 429
    type: ItemsPublishItemRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ItemsPublishItemRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  PagesListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  PagesListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  PagesListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  PagesListRequestTooManyRequestsError:
    status-code: 429
    type: PagesListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  PagesListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  PagesGetMetadataRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  PagesGetMetadataRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  PagesGetMetadataRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  PagesGetMetadataRequestTooManyRequestsError:
    status-code: 429
    type: PagesGetMetadataRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  PagesGetMetadataRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdatePageSettingsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdatePageSettingsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdatePageSettingsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdatePageSettingsRequestTooManyRequestsError:
    status-code: 429
    type: UpdatePageSettingsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdatePageSettingsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  PagesGetContentRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  PagesGetContentRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  PagesGetContentRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  PagesGetContentRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  PagesGetContentRequestTooManyRequestsError:
    status-code: 429
    type: PagesGetContentRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  PagesGetContentRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UpdateStaticContentRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  UpdateStaticContentRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UpdateStaticContentRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  UpdateStaticContentRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UpdateStaticContentRequestTooManyRequestsError:
    status-code: 429
    type: UpdateStaticContentRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UpdateStaticContentRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsGetCustomCodeRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsGetCustomCodeRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsGetCustomCodeRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsGetCustomCodeRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsGetCustomCodeRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsGetCustomCodeRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsUpsertCustomCodeRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsUpsertCustomCodeRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsUpsertCustomCodeRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsUpsertCustomCodeRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsUpsertCustomCodeRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsUpsertCustomCodeRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsDeleteCustomCodeRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsDeleteCustomCodeRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsDeleteCustomCodeRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsDeleteCustomCodeRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsDeleteCustomCodeRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsDeleteCustomCodeRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsListRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsRegisterHostedRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsRegisterHostedRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsRegisterHostedRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsRegisterHostedRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsRegisterHostedRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsRegisterHostedRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsRegisterInlineRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsRegisterInlineRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsRegisterInlineRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsRegisterInlineRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsRegisterInlineRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsRegisterInlineRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ScriptsListCustomCodeBlocksRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ScriptsListCustomCodeBlocksRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ScriptsListCustomCodeBlocksRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ScriptsListCustomCodeBlocksRequestTooManyRequestsError:
    status-code: 429
    type: ScriptsListCustomCodeBlocksRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ScriptsListCustomCodeBlocksRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsListRequestTooManyRequestsError:
    status-code: 429
    type: AssetsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsCreateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsCreateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsCreateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsCreateRequestTooManyRequestsError:
    status-code: 429
    type: AssetsCreateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsCreateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsGetRequestTooManyRequestsError:
    status-code: 429
    type: AssetsGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsDeleteRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsDeleteRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsDeleteRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsDeleteRequestTooManyRequestsError:
    status-code: 429
    type: AssetsDeleteRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsDeleteRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsUpdateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsUpdateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsUpdateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsUpdateRequestTooManyRequestsError:
    status-code: 429
    type: AssetsUpdateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsUpdateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsListFoldersRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsListFoldersRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsListFoldersRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsListFoldersRequestTooManyRequestsError:
    status-code: 429
    type: AssetsListFoldersRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsListFoldersRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsCreateFolderRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsCreateFolderRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsCreateFolderRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsCreateFolderRequestTooManyRequestsError:
    status-code: 429
    type: AssetsCreateFolderRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsCreateFolderRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AssetsGetFolderRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  AssetsGetFolderRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AssetsGetFolderRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AssetsGetFolderRequestTooManyRequestsError:
    status-code: 429
    type: AssetsGetFolderRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AssetsGetFolderRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  WebhooksListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  WebhooksListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  WebhooksListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  WebhooksListRequestTooManyRequestsError:
    status-code: 429
    type: WebhooksListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  WebhooksListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  WebhooksCreateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  WebhooksCreateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  WebhooksCreateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  WebhooksCreateRequestTooManyRequestsError:
    status-code: 429
    type: WebhooksCreateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  WebhooksCreateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  WebhooksGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  WebhooksGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  WebhooksGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  WebhooksGetRequestTooManyRequestsError:
    status-code: 429
    type: WebhooksGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  WebhooksGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  WebhooksDeleteRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  WebhooksDeleteRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  WebhooksDeleteRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  WebhooksDeleteRequestTooManyRequestsError:
    status-code: 429
    type: WebhooksDeleteRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  WebhooksDeleteRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FormsListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FormsListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FormsListRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  FormsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FormsListRequestConflictError:
    status-code: 409
    type: unknown
    docs: To access this feature, the site needs to be republished.
  FormsListRequestTooManyRequestsError:
    status-code: 429
    type: FormsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FormsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FormsGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FormsGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FormsGetRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  FormsGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FormsGetRequestTooManyRequestsError:
    status-code: 429
    type: FormsGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FormsGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FormsListSubmissionsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FormsListSubmissionsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FormsListSubmissionsRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  FormsListSubmissionsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FormsListSubmissionsRequestTooManyRequestsError:
    status-code: 429
    type: FormsListSubmissionsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FormsListSubmissionsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FormsGetSubmissionRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FormsGetSubmissionRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FormsGetSubmissionRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  FormsGetSubmissionRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FormsGetSubmissionRequestTooManyRequestsError:
    status-code: 429
    type: FormsGetSubmissionRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FormsGetSubmissionRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  FormsUpdateSubmissionRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  FormsUpdateSubmissionRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  FormsUpdateSubmissionRequestForbiddenError:
    status-code: 403
    type: unknown
    docs: Provided access token does not have access rights to this content.
  FormsUpdateSubmissionRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  FormsUpdateSubmissionRequestConflictError:
    status-code: 409
    type: unknown
    docs: To access this feature, the site needs to be republished.
  FormsUpdateSubmissionRequestTooManyRequestsError:
    status-code: 429
    type: FormsUpdateSubmissionRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  FormsUpdateSubmissionRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UsersListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  UsersListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UsersListRequestForbiddenError:
    status-code: 403
    type: UsersListRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  UsersListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UsersListRequestTooManyRequestsError:
    status-code: 429
    type: UsersListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UsersListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UsersGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  UsersGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UsersGetRequestForbiddenError:
    status-code: 403
    type: UsersGetRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  UsersGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UsersGetRequestTooManyRequestsError:
    status-code: 429
    type: UsersGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UsersGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UsersDeleteRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  UsersDeleteRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UsersDeleteRequestForbiddenError:
    status-code: 403
    type: UsersDeleteRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  UsersDeleteRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UsersDeleteRequestTooManyRequestsError:
    status-code: 429
    type: UsersDeleteRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UsersDeleteRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UsersUpdateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  UsersUpdateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UsersUpdateRequestForbiddenError:
    status-code: 403
    type: UsersUpdateRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  UsersUpdateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UsersUpdateRequestTooManyRequestsError:
    status-code: 429
    type: UsersUpdateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UsersUpdateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  UsersInviteRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  UsersInviteRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  UsersInviteRequestForbiddenError:
    status-code: 403
    type: UsersInviteRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  UsersInviteRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  UsersInviteRequestConflictError:
    status-code: 409
    type: UsersInviteRequestConflictErrorBody
    docs: Conflict
    examples:
      - value:
          message: Request not authorized
  UsersInviteRequestTooManyRequestsError:
    status-code: 429
    type: UsersInviteRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  UsersInviteRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  AccessGroupsListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  AccessGroupsListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  AccessGroupsListRequestForbiddenError:
    status-code: 403
    type: AccessGroupsListRequestForbiddenErrorBody
    docs: Forbidden
    examples:
      - value:
          message: Request not authorized
  AccessGroupsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  AccessGroupsListRequestTooManyRequestsError:
    status-code: 429
    type: AccessGroupsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  AccessGroupsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ProductsListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Validation failure
  ProductsListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ProductsListRequestForbiddenError:
    status-code: 403
    type: ProductsListRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ProductsListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ProductsListRequestConflictError:
    status-code: 409
    type: ProductsListRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ProductsListRequestTooManyRequestsError:
    status-code: 429
    type: ProductsListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ProductsListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ProductsCreateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ProductsCreateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ProductsCreateRequestForbiddenError:
    status-code: 403
    type: ProductsCreateRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ProductsCreateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ProductsCreateRequestConflictError:
    status-code: 409
    type: ProductsCreateRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ProductsCreateRequestTooManyRequestsError:
    status-code: 429
    type: ProductsCreateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ProductsCreateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ProductsGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ProductsGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ProductsGetRequestForbiddenError:
    status-code: 403
    type: ProductsGetRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ProductsGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ProductsGetRequestConflictError:
    status-code: 409
    type: ProductsGetRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ProductsGetRequestTooManyRequestsError:
    status-code: 429
    type: ProductsGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ProductsGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ProductsUpdateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ProductsUpdateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ProductsUpdateRequestForbiddenError:
    status-code: 403
    type: ProductsUpdateRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ProductsUpdateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ProductsUpdateRequestConflictError:
    status-code: 409
    type: ProductsUpdateRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ProductsUpdateRequestTooManyRequestsError:
    status-code: 429
    type: ProductsUpdateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ProductsUpdateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ProductsCreateSkuRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ProductsCreateSkuRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ProductsCreateSkuRequestForbiddenError:
    status-code: 403
    type: ProductsCreateSkuRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ProductsCreateSkuRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ProductsCreateSkuRequestConflictError:
    status-code: 409
    type: ProductsCreateSkuRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ProductsCreateSkuRequestTooManyRequestsError:
    status-code: 429
    type: ProductsCreateSkuRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ProductsCreateSkuRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  ProductsUpdateSkuRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  ProductsUpdateSkuRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  ProductsUpdateSkuRequestForbiddenError:
    status-code: 403
    type: ProductsUpdateSkuRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  ProductsUpdateSkuRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  ProductsUpdateSkuRequestConflictError:
    status-code: 409
    type: ProductsUpdateSkuRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  ProductsUpdateSkuRequestTooManyRequestsError:
    status-code: 429
    type: ProductsUpdateSkuRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  ProductsUpdateSkuRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  OrdersListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  OrdersListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  OrdersListRequestForbiddenError:
    status-code: 403
    type: OrdersListRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  OrdersListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  OrdersListRequestConflictError:
    status-code: 409
    type: OrdersListRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  OrdersListRequestTooManyRequestsError:
    status-code: 429
    type: OrdersListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  OrdersListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  OrdersGetRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  OrdersGetRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  OrdersGetRequestForbiddenError:
    status-code: 403
    type: OrdersGetRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  OrdersGetRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  OrdersGetRequestConflictError:
    status-code: 409
    type: OrdersGetRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  OrdersGetRequestTooManyRequestsError:
    status-code: 429
    type: OrdersGetRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  OrdersGetRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  OrdersUpdateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  OrdersUpdateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  OrdersUpdateRequestForbiddenError:
    status-code: 403
    type: OrdersUpdateRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  OrdersUpdateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  OrdersUpdateRequestConflictError:
    status-code: 409
    type: OrdersUpdateRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  OrdersUpdateRequestTooManyRequestsError:
    status-code: 429
    type: OrdersUpdateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  OrdersUpdateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  OrdersUpdateFulfillRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  OrdersUpdateFulfillRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  OrdersUpdateFulfillRequestForbiddenError:
    status-code: 403
    type: OrdersUpdateFulfillRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  OrdersUpdateFulfillRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  OrdersUpdateFulfillRequestConflictError:
    status-code: 409
    type: OrdersUpdateFulfillRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  OrdersUpdateFulfillRequestTooManyRequestsError:
    status-code: 429
    type: OrdersUpdateFulfillRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  OrdersUpdateFulfillRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  OrdersUpdateUnfulfillRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  OrdersUpdateUnfulfillRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  OrdersUpdateUnfulfillRequestForbiddenError:
    status-code: 403
    type: OrdersUpdateUnfulfillRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  OrdersUpdateUnfulfillRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  OrdersUpdateUnfulfillRequestConflictError:
    status-code: 409
    type: OrdersUpdateUnfulfillRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  OrdersUpdateUnfulfillRequestTooManyRequestsError:
    status-code: 429
    type: OrdersUpdateUnfulfillRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  OrdersUpdateUnfulfillRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  OrdersRefundRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  OrdersRefundRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  OrdersRefundRequestForbiddenError:
    status-code: 403
    type: OrdersRefundRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  OrdersRefundRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  OrdersRefundRequestConflictError:
    status-code: 409
    type: OrdersRefundRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  OrdersRefundRequestTooManyRequestsError:
    status-code: 429
    type: OrdersRefundRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  OrdersRefundRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  InventoryListRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  InventoryListRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  InventoryListRequestForbiddenError:
    status-code: 403
    type: InventoryListRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  InventoryListRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  InventoryListRequestConflictError:
    status-code: 409
    type: InventoryListRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  InventoryListRequestTooManyRequestsError:
    status-code: 429
    type: InventoryListRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  InventoryListRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  InventoryUpdateRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  InventoryUpdateRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  InventoryUpdateRequestForbiddenError:
    status-code: 403
    type: InventoryUpdateRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  InventoryUpdateRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  InventoryUpdateRequestConflictError:
    status-code: 409
    type: InventoryUpdateRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  InventoryUpdateRequestTooManyRequestsError:
    status-code: 429
    type: InventoryUpdateRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  InventoryUpdateRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
  EcommerceGetSettingsRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Request body was incorrectly formatted. Likely invalid JSON being sent up.
  EcommerceGetSettingsRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: >-
      Provided access token is invalid or does not have access to requested
      resource
  EcommerceGetSettingsRequestForbiddenError:
    status-code: 403
    type: EcommerceGetSettingsRequestForbiddenErrorBody
    docs: Provided access token is valid, but is missing the required scopes.
    examples:
      - value:
          status: 403
  EcommerceGetSettingsRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Requested resource not found
  EcommerceGetSettingsRequestConflictError:
    status-code: 409
    type: EcommerceGetSettingsRequestConflictErrorBody
    docs: The site does not have ecommerce enabled.
    examples:
      - value:
          message: Request not authorized
  EcommerceGetSettingsRequestTooManyRequestsError:
    status-code: 429
    type: EcommerceGetSettingsRequestTooManyRequestsErrorBody
    docs: >-
      The rate limit of the provided access_token has been reached. Please have
      your application respect the X-RateLimit-Remaining header we include on
      API responses.
    examples:
      - value:
          message: too many requests
          code: too_many_requests
  EcommerceGetSettingsRequestInternalServerError:
    status-code: 500
    type: unknown
    docs: We had a problem with our server. Try again later.
",
    },
    "accessGroups.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "display-name": "List Access Groups",
              "docs": "Get a list of access groups for a site <br><br> Required scope | `users:read`",
              "errors": [
                "root.AccessGroupsListRequestBadRequestError",
                "root.AccessGroupsListRequestUnauthorizedError",
                "root.AccessGroupsListRequestForbiddenError",
                "root.AccessGroupsListRequestNotFoundError",
                "root.AccessGroupsListRequestTooManyRequestsError",
                "root.AccessGroupsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "createdOn": "2022-08-01T19:41:48Z",
                          "id": "62be58d404be8a6cc900c081",
                          "name": "Research Team",
                          "shortId": "rt",
                          "slug": "hitchhikers-guide-research-team",
                        },
                        {
                          "createdOn": "2022-08-01T19:41:48Z",
                          "id": "65a96161991e77bbb4a6c573",
                          "name": "Admin",
                          "shortId": "ad",
                          "slug": "admin",
                        },
                      ],
                      "count": 1,
                      "limit": 10,
                      "offset": 0,
                      "total": 1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/accessgroups",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "AccessGroupsListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                  "sort": {
                    "docs": "Sort string to use when ordering access groups
Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
",
                    "type": "optional<AccessGroupsListRequestSort>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AccessGroupsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AccessGroupsListRequestSort": {
            "enum": [
              {
                "docs": "Sorts users in ascending order based on their created date",
                "name": "CreatedOnAscending",
                "value": "CreatedOn",
              },
              {
                "docs": "Sorts users in descending order based on their created date",
                "name": "CreatedOnDescending",
                "value": "-CreatedOn",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccessGroupsListResponse": {
            "docs": "The list access groups results",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "List of Site Access Groups",
                "type": "optional<list<AccessGroupsListResponseAccessGroupsItem>>",
              },
              "count": {
                "docs": "Number of access groups returned",
                "type": "optional<double>",
              },
              "limit": {
                "default": 10,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of access groups in the collection",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AccessGroupsListResponseAccessGroupsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "The date the Access Group was created",
                "type": "optional<datetime>",
              },
              "id": {
                "docs": "Unique identifier for the Access Group",
                "type": "optional<string>",
              },
              "name": {
                "docs": "Name of the the Access Group",
                "type": "optional<string>",
              },
              "shortId": {
                "docs": "Shortened unique identifier based on name, optimized for its use in the user’s JWT",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Shortened unique identifier based on name, optimized for human readability and public API use",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  AccessGroupsListRequestSort:
    enum:
      - value: CreatedOn
        name: CreatedOnAscending
        docs: Sorts users in ascending order based on their created date
      - value: '-CreatedOn'
        name: CreatedOnDescending
        docs: Sorts users in descending order based on their created date
    source:
      openapi: ../openapi.yml
  AccessGroupsListResponseAccessGroupsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Access Group
      name:
        type: optional<string>
        docs: Name of the the Access Group
      shortId:
        type: optional<string>
        docs: >-
          Shortened unique identifier based on name, optimized for its use in
          the user’s JWT
      slug:
        type: optional<string>
        docs: >-
          Shortened unique identifier based on name, optimized for human
          readability and public API use
      createdOn:
        type: optional<datetime>
        docs: The date the Access Group was created
    source:
      openapi: ../openapi.yml
    inline: true
  AccessGroupsListResponse:
    docs: The list access groups results
    properties:
      count:
        type: optional<double>
        docs: Number of access groups returned
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 10
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of access groups in the collection
      accessGroups:
        type: optional<list<AccessGroupsListResponseAccessGroupsItem>>
        docs: List of Site Access Groups
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/accessgroups
      method: GET
      auth: true
      docs: >-
        Get a list of access groups for a site <br><br> Required scope |
        `users:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Access Groups
      request:
        name: AccessGroupsListRequest
        query-parameters:
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          sort:
            type: optional<AccessGroupsListRequestSort>
            docs: |
              Sort string to use when ordering access groups
              Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
      response:
        docs: Request was successful
        type: AccessGroupsListResponse
        status-code: 200
      errors:
        - root.AccessGroupsListRequestBadRequestError
        - root.AccessGroupsListRequestUnauthorizedError
        - root.AccessGroupsListRequestForbiddenError
        - root.AccessGroupsListRequestNotFoundError
        - root.AccessGroupsListRequestTooManyRequestsError
        - root.AccessGroupsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              count: 1
              limit: 10
              offset: 0
              total: 1
              accessGroups:
                - id: 62be58d404be8a6cc900c081
                  name: Research Team
                  shortId: rt
                  slug: hitchhikers-guide-research-team
                  createdOn: '2022-08-01T19:41:48Z'
                - id: 65a96161991e77bbb4a6c573
                  name: Admin
                  shortId: ad
                  slug: admin
                  createdOn: '2022-08-01T19:41:48Z'
  source:
    openapi: ../openapi.yml
",
    },
    "assets.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Assets",
          "endpoints": {
            "create": {
              "auth": true,
              "display-name": "Create Asset Metadata",
              "docs": "Create a new asset entry.  </br></br> This endpoint generates a response with the following information: `uploadUrl` and `uploadDetails`.  You can use these two properties to [upload the file to Amazon s3 by making a POST](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOST.html) request to the `uploadUrl` with the `uploadDetails` object as your header information in the request. </br></br>  Required scope | `assets:write`
",
              "errors": [
                "root.AssetsCreateRequestBadRequestError",
                "root.AssetsCreateRequestUnauthorizedError",
                "root.AssetsCreateRequestNotFoundError",
                "root.AssetsCreateRequestTooManyRequestsError",
                "root.AssetsCreateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "fileHash": "3c7d87c9575702bc3b1e991f4d3c638e",
                    "fileName": "file.png",
                  },
                  "response": {
                    "body": {
                      "assetUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d907ab9e91e3e9f56385e_paranoidAndroid-2024.png",
                      "contentType": "image/png",
                      "createdOn": "2023-04-11T16:32:21Z",
                      "hostedUrl": "https://d1otoma47x30pg.cloudfront.net/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                      "id": "64358b9544249dc43d37d2b7",
                      "lastUpdated": "2023-04-12T20:31:03Z",
                      "originalFileName": "file.png",
                      "parentFolder": "6436b1ce5281cace05b65aea",
                      "uploadDetails": {
                        "Cache-Control": "max-age=31536000, must-revalidate",
                        "Policy": "<a-very-long-alphanumeric-token-with-equal-sign-at-the-end>",
                        "X-Amz-Algorithm": "AWS4-HMAC-SHA256",
                        "X-Amz-Credential": "<credential-key>/<date>/<region-zone>/s3/aws4_request",
                        "X-Amz-Date": "<date-in-iso-like-string>",
                        "X-Amz-Signature": "<one-line-ling-alphanumeric-signature>",
                        "acl": "public-read",
                        "bucket": "webflow-bucket-name",
                        "content-type": "image/png",
                        "key": "<siteId>/<fileId>_<filename-with-extension>",
                        "success_action_status": "201",
                      },
                      "uploadUrl": "https://s3.amazonaws.com/webflow-dev-assets/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/assets",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "fileHash": {
                      "docs": "MD5 hash of the file",
                      "type": "string",
                    },
                    "fileName": {
                      "docs": "file name including file extension",
                      "type": "string",
                    },
                    "parentFolder": {
                      "docs": "id of the Asset folder (optional)",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AssetsCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsCreateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-folder": {
              "auth": true,
              "display-name": "Create Asset Folder",
              "docs": "Create an Asset Folder within a given site <br><br> Required scope | `assets:write`",
              "errors": [
                "root.AssetsCreateFolderRequestBadRequestError",
                "root.AssetsCreateFolderRequestUnauthorizedError",
                "root.AssetsCreateFolderRequestNotFoundError",
                "root.AssetsCreateFolderRequestTooManyRequestsError",
                "root.AssetsCreateFolderRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "displayName": "my asset folder",
                  },
                  "response": {
                    "body": {
                      "assets": [
                        "63e5889e7fe4eafa7384cea4",
                        "659595234426a9fcbad57043",
                      ],
                      "createdOn": "2018-10-14T21:55:49Z",
                      "displayName": "emoji icons",
                      "id": "6390c49774a71f0e3c1a08ee",
                      "lastUpdated": "2022-12-07T16:51:37Z",
                      "parentFolder": "6390c49774a71f99f21a08eb",
                      "siteId": "6390c49674a71f84b51a08d8",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/asset_folders",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "A human readable name for the Asset Folder",
                      "type": "string",
                    },
                    "parentFolder": {
                      "docs": "An (optional) pointer to a parent Asset Folder (or null for root)",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AssetsCreateFolderRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsCreateFolderResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": true,
              "display-name": "Delete Asset",
              "docs": "Delete an Asset",
              "errors": [
                "root.AssetsDeleteRequestBadRequestError",
                "root.AssetsDeleteRequestUnauthorizedError",
                "root.AssetsDeleteRequestNotFoundError",
                "root.AssetsDeleteRequestTooManyRequestsError",
                "root.AssetsDeleteRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_id": "580e63fc8c9a982ac9b8b745",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/assets/{asset_id}",
              "path-parameters": {
                "asset_id": {
                  "docs": "Unique identifier for an Asset on a site",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": true,
              "display-name": "Get Asset",
              "docs": "Get an Asset </br></br> Required scope | `assets:read`",
              "errors": [
                "root.AssetsGetRequestBadRequestError",
                "root.AssetsGetRequestUnauthorizedError",
                "root.AssetsGetRequestNotFoundError",
                "root.AssetsGetRequestTooManyRequestsError",
                "root.AssetsGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "response": {
                    "body": {
                      "altText": "A red chair",
                      "contentType": "image/png",
                      "createdOn": "2016-09-02T23:26:22Z",
                      "displayName": "example-image-123.png",
                      "hostedUrl": "example.com/hostedimage.png",
                      "id": "55131cd036c09f7d07883dfc",
                      "lastUpdated": "2016-09-06T21:12:22Z",
                      "originalFileName": "image.png",
                      "siteId": "62749158efef318abc8d5a0f",
                      "size": 1500,
                      "variants": [
                        {
                          "displayName": "A brown dog",
                          "error": "error",
                          "format": "format",
                          "height": 900,
                          "hostedUrl": "example.com/hostedimage.png",
                          "originalFileName": "image.png",
                          "quality": 1,
                          "width": 1500,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/assets/{asset_id}",
              "path-parameters": {
                "asset_id": {
                  "docs": "Unique identifier for an Asset on a site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-folder": {
              "auth": true,
              "display-name": "Get Asset Folder",
              "docs": "Get details about a specific Asset Folder <br><br> Required scope | `assets:read`",
              "errors": [
                "root.AssetsGetFolderRequestBadRequestError",
                "root.AssetsGetFolderRequestUnauthorizedError",
                "root.AssetsGetFolderRequestNotFoundError",
                "root.AssetsGetFolderRequestTooManyRequestsError",
                "root.AssetsGetFolderRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_folder_id": "6390c49774a71f0e3c1a08ee",
                  },
                  "response": {
                    "body": {
                      "assets": [
                        "63e5889e7fe4eafa7384cea4",
                        "659595234426a9fcbad57043",
                      ],
                      "createdOn": "2018-10-14T21:55:49Z",
                      "displayName": "emoji icons",
                      "id": "6390c49774a71f0e3c1a08ee",
                      "lastUpdated": "2022-12-07T16:51:37Z",
                      "parentFolder": "6390c49774a71f99f21a08eb",
                      "siteId": "6390c49674a71f84b51a08d8",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/asset_folders/{asset_folder_id}",
              "path-parameters": {
                "asset_folder_id": {
                  "docs": "Unique identifier for an Asset Folder",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsGetFolderResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Assets",
              "docs": "List assets for a given site </br></br> Required scope | `assets:read`",
              "errors": [
                "root.AssetsListRequestBadRequestError",
                "root.AssetsListRequestUnauthorizedError",
                "root.AssetsListRequestNotFoundError",
                "root.AssetsListRequestTooManyRequestsError",
                "root.AssetsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "assets": [
                        {
                          "altText": "A red chair",
                          "contentType": "image/png",
                          "createdOn": "2023-02-09T23:58:22Z",
                          "displayName": "63e5889e7fe4eafa7384cea4_Candy-Wrapper.png",
                          "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/63938b302ea6b0aa6f3d8745/63e5889e7fe4eafa7384cea4_Vectors-Wrapper.svg",
                          "id": "63e5889e7fe4eafa7384cea4",
                          "lastUpdated": "2023-03-01T23:42:57Z",
                          "originalFileName": "Candy-Wrapper.svg",
                          "siteId": "63938b302ea6b0aa6f3d8745",
                          "size": 2212772,
                          "variants": [
                            {
                              "displayName": "660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                              "format": "png",
                              "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                              "originalFileName": "Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                              "quality": 100,
                              "width": 500,
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/assets",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-folders": {
              "auth": true,
              "display-name": "List Asset Folders",
              "docs": "List Asset Folders within a given site <br><br> Required scope | `assets:read`",
              "errors": [
                "root.AssetsListFoldersRequestBadRequestError",
                "root.AssetsListFoldersRequestUnauthorizedError",
                "root.AssetsListFoldersRequestNotFoundError",
                "root.AssetsListFoldersRequestTooManyRequestsError",
                "root.AssetsListFoldersRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "assetFolders": [
                        {
                          "assets": [
                            "63e5889e7fe4eafa7384cea4",
                            "659595234426a9fcbad57043",
                          ],
                          "createdOn": "2018-10-14T21:55:49Z",
                          "displayName": "emoji icons",
                          "id": "6390c49774a71f0e3c1a08ee",
                          "lastUpdated": "2022-12-07T16:51:37Z",
                          "siteId": "6390c49674a71f84b51a08d8",
                        },
                      ],
                      "pagination": {
                        "limit": 1,
                        "offset": 0,
                        "total": 1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/asset_folders",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsListFoldersResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "display-name": "Update Asset",
              "docs": "Update an Asset </br></br> Required scope | `assets:write`",
              "errors": [
                "root.AssetsUpdateRequestBadRequestError",
                "root.AssetsUpdateRequestUnauthorizedError",
                "root.AssetsUpdateRequestNotFoundError",
                "root.AssetsUpdateRequestTooManyRequestsError",
                "root.AssetsUpdateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "asset_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "displayName": "bulldoze.png",
                  },
                  "response": {
                    "body": {
                      "altText": "A red chair",
                      "contentType": "image/png",
                      "createdOn": "2016-09-02T23:26:22Z",
                      "displayName": "example-image-123.png",
                      "hostedUrl": "example.com/hostedimage.png",
                      "id": "55131cd036c09f7d07883dfc",
                      "lastUpdated": "2016-09-06T21:12:22Z",
                      "originalFileName": "image.png",
                      "siteId": "62749158efef318abc8d5a0f",
                      "size": 1500,
                      "variants": [
                        {
                          "displayName": "A brown dog",
                          "error": "error",
                          "format": "format",
                          "height": 900,
                          "hostedUrl": "example.com/hostedimage.png",
                          "originalFileName": "image.png",
                          "quality": 1,
                          "width": 1500,
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/assets/{asset_id}",
              "path-parameters": {
                "asset_id": {
                  "docs": "Unique identifier for an Asset on a site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "file name including file extension",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AssetsUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "AssetsUpdateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AssetsCreateFolderResponse": {
            "docs": "Asset Folder details",
            "inline": undefined,
            "properties": {
              "assets": {
                "docs": "Array of Asset instances in the folder",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "Date that the Asset Folder was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "User visible name for the Asset Folder",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Asset Folder",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Asset Folder was last updated on",
                "type": "optional<datetime>",
              },
              "parentFolder": {
                "docs": "Pointer to parent Asset Folder (or null if root)",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the site the Asset Folder belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsCreateResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "assetUrl": {
                "docs": "S3 link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "contentType": "optional<string>",
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "hostedUrl": {
                "docs": "Represents the link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": "optional<string>",
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name when uploaded. If not specified at time of upload, it may be extracted from the raw file name",
                "type": "optional<string>",
              },
              "parentFolder": {
                "docs": "Parent folder for the asset",
                "type": "optional<string>",
              },
              "uploadDetails": {
                "docs": "Metadata for uploading the asset binary",
                "type": "optional<AssetsCreateResponseUploadDetails>",
              },
              "uploadUrl": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsCreateResponseUploadDetails": {
            "docs": "Metadata for uploading the asset binary",
            "inline": true,
            "properties": {
              "Cache-Control": "optional<string>",
              "Policy": "optional<string>",
              "X-Amz-Algorithm": "optional<string>",
              "X-Amz-Credential": "optional<string>",
              "X-Amz-Date": "optional<string>",
              "X-Amz-Signature": "optional<string>",
              "acl": "optional<string>",
              "bucket": "optional<string>",
              "content-type": "optional<string>",
              "key": "optional<string>",
              "success_action_status": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsGetFolderResponse": {
            "docs": "Asset Folder details",
            "inline": undefined,
            "properties": {
              "assets": {
                "docs": "Array of Asset instances in the folder",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "Date that the Asset Folder was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "User visible name for the Asset Folder",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Asset Folder",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Asset Folder was last updated on",
                "type": "optional<datetime>",
              },
              "parentFolder": {
                "docs": "Pointer to parent Asset Folder (or null if root)",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the site the Asset Folder belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsGetResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "altText": {
                "docs": "The visual description of the asset",
                "type": "optional<string>",
              },
              "contentType": {
                "docs": "File format type",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Display name of the asset",
                "type": "optional<string>",
              },
              "hostedUrl": {
                "docs": "Link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Unique identifier for this asset",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name at the time of upload",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "Unique identifier for the site that hosts this asset",
                "type": "optional<string>",
              },
              "size": {
                "docs": "size in bytes",
                "type": "optional<integer>",
              },
              "variants": "optional<list<AssetsGetResponseVariantsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsGetResponseVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "Display name of the variant",
                "type": "optional<string>",
              },
              "error": {
                "docs": "Any associated validation errors",
                "type": "optional<string>",
              },
              "format": {
                "docs": "format of the variant",
                "type": "optional<string>",
              },
              "height": {
                "docs": "Height in pixels",
                "type": "optional<integer>",
              },
              "hostedUrl": {
                "docs": "URL of where the asset variant is hosted",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "originalFileName": {
                "docs": "Original file name of the variant",
                "type": "optional<string>",
              },
              "quality": {
                "docs": "Value between 0 and 100 representing the image quality",
                "type": "optional<integer>",
              },
              "width": {
                "docs": "Width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListFoldersResponse": {
            "docs": "The Asset Folders object",
            "inline": undefined,
            "properties": {
              "assetFolders": {
                "docs": "A list of Asset folders",
                "type": "optional<list<AssetsListFoldersResponseAssetFoldersItem>>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<AssetsListFoldersResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListFoldersResponseAssetFoldersItem": {
            "docs": "Asset Folder details",
            "inline": true,
            "properties": {
              "assets": {
                "docs": "Array of Asset instances in the folder",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "Date that the Asset Folder was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "User visible name for the Asset Folder",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Asset Folder",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Asset Folder was last updated on",
                "type": "optional<datetime>",
              },
              "parentFolder": {
                "docs": "Pointer to parent Asset Folder (or null if root)",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the site the Asset Folder belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListFoldersResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListResponse": {
            "docs": "A list of assets",
            "inline": undefined,
            "properties": {
              "assets": "optional<list<AssetsListResponseAssetsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListResponseAssetsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "altText": {
                "docs": "The visual description of the asset",
                "type": "optional<string>",
              },
              "contentType": {
                "docs": "File format type",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Display name of the asset",
                "type": "optional<string>",
              },
              "hostedUrl": {
                "docs": "Link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Unique identifier for this asset",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name at the time of upload",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "Unique identifier for the site that hosts this asset",
                "type": "optional<string>",
              },
              "size": {
                "docs": "size in bytes",
                "type": "optional<integer>",
              },
              "variants": "optional<list<AssetsListResponseAssetsItemVariantsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsListResponseAssetsItemVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "Display name of the variant",
                "type": "optional<string>",
              },
              "error": {
                "docs": "Any associated validation errors",
                "type": "optional<string>",
              },
              "format": {
                "docs": "format of the variant",
                "type": "optional<string>",
              },
              "height": {
                "docs": "Height in pixels",
                "type": "optional<integer>",
              },
              "hostedUrl": {
                "docs": "URL of where the asset variant is hosted",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "originalFileName": {
                "docs": "Original file name of the variant",
                "type": "optional<string>",
              },
              "quality": {
                "docs": "Value between 0 and 100 representing the image quality",
                "type": "optional<integer>",
              },
              "width": {
                "docs": "Width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsUpdateResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "altText": {
                "docs": "The visual description of the asset",
                "type": "optional<string>",
              },
              "contentType": {
                "docs": "File format type",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "Date the asset metadata was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Display name of the asset",
                "type": "optional<string>",
              },
              "hostedUrl": {
                "docs": "Link to the asset",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "Unique identifier for this asset",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date the asset metadata was last updated",
                "type": "optional<datetime>",
              },
              "originalFileName": {
                "docs": "Original file name at the time of upload",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "Unique identifier for the site that hosts this asset",
                "type": "optional<string>",
              },
              "size": {
                "docs": "size in bytes",
                "type": "optional<integer>",
              },
              "variants": "optional<list<AssetsUpdateResponseVariantsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssetsUpdateResponseVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "Display name of the variant",
                "type": "optional<string>",
              },
              "error": {
                "docs": "Any associated validation errors",
                "type": "optional<string>",
              },
              "format": {
                "docs": "format of the variant",
                "type": "optional<string>",
              },
              "height": {
                "docs": "Height in pixels",
                "type": "optional<integer>",
              },
              "hostedUrl": {
                "docs": "URL of where the asset variant is hosted",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "originalFileName": {
                "docs": "Original file name of the variant",
                "type": "optional<string>",
              },
              "quality": {
                "docs": "Value between 0 and 100 representing the image quality",
                "type": "optional<integer>",
              },
              "width": {
                "docs": "Width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  AssetsListResponseAssetsItemVariantsItem:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsListResponseAssetsItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<AssetsListResponseAssetsItemVariantsItem>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsListResponse:
    docs: A list of assets
    properties:
      assets: optional<list<AssetsListResponseAssetsItem>>
    source:
      openapi: ../openapi.yml
  AssetsCreateResponseUploadDetails:
    docs: Metadata for uploading the asset binary
    properties:
      acl: optional<string>
      bucket: optional<string>
      X-Amz-Algorithm: optional<string>
      X-Amz-Credential: optional<string>
      X-Amz-Date: optional<string>
      key: optional<string>
      Policy: optional<string>
      X-Amz-Signature: optional<string>
      success_action_status: optional<string>
      content-type: optional<string>
      Cache-Control: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsCreateResponse:
    properties:
      uploadDetails:
        type: optional<AssetsCreateResponseUploadDetails>
        docs: Metadata for uploading the asset binary
      contentType: optional<string>
      id: optional<string>
      parentFolder:
        type: optional<string>
        docs: Parent folder for the asset
      uploadUrl:
        type: optional<string>
        validation:
          format: uri
      assetUrl:
        type: optional<string>
        docs: S3 link to the asset
        validation:
          format: uri
      hostedUrl:
        type: optional<string>
        docs: Represents the link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: >-
          Original file name when uploaded. If not specified at time of upload,
          it may be extracted from the raw file name
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
    source:
      openapi: ../openapi.yml
  AssetsGetResponseVariantsItem:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsGetResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<AssetsGetResponseVariantsItem>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../openapi.yml
  AssetsUpdateResponseVariantsItem:
    properties:
      hostedUrl:
        type: optional<string>
        docs: URL of where the asset variant is hosted
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name of the variant
      displayName:
        type: optional<string>
        docs: Display name of the variant
      format:
        type: optional<string>
        docs: format of the variant
      width:
        type: optional<integer>
        docs: Width in pixels
      height:
        type: optional<integer>
        docs: Height in pixels
      quality:
        type: optional<integer>
        docs: Value between 0 and 100 representing the image quality
      error:
        type: optional<string>
        docs: Any associated validation errors
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsUpdateResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for this asset
      contentType:
        type: optional<string>
        docs: File format type
      size:
        type: optional<integer>
        docs: size in bytes
      siteId:
        type: optional<string>
        docs: Unique identifier for the site that hosts this asset
      hostedUrl:
        type: optional<string>
        docs: Link to the asset
        validation:
          format: uri
      originalFileName:
        type: optional<string>
        docs: Original file name at the time of upload
      displayName:
        type: optional<string>
        docs: Display name of the asset
      lastUpdated:
        type: optional<datetime>
        docs: Date the asset metadata was last updated
      createdOn:
        type: optional<datetime>
        docs: Date the asset metadata was created
      variants: optional<list<AssetsUpdateResponseVariantsItem>>
      altText:
        type: optional<string>
        docs: The visual description of the asset
    source:
      openapi: ../openapi.yml
  AssetsListFoldersResponseAssetFoldersItem:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique id of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsListFoldersResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  AssetsListFoldersResponse:
    docs: The Asset Folders object
    properties:
      assetFolders:
        type: optional<list<AssetsListFoldersResponseAssetFoldersItem>>
        docs: A list of Asset folders
      pagination:
        type: optional<AssetsListFoldersResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  AssetsCreateFolderResponse:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique id of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../openapi.yml
  AssetsGetFolderResponse:
    docs: Asset Folder details
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Asset Folder
      displayName:
        type: optional<string>
        docs: User visible name for the Asset Folder
      parentFolder:
        type: optional<string>
        docs: Pointer to parent Asset Folder (or null if root)
      assets:
        type: optional<list<string>>
        docs: Array of Asset instances in the folder
      siteId:
        type: optional<string>
        docs: The unique id of the site the Asset Folder belongs to
      createdOn:
        type: optional<datetime>
        docs: Date that the Asset Folder was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Asset Folder was last updated on
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/assets
      method: GET
      auth: true
      docs: List assets for a given site </br></br> Required scope | `assets:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Assets
      response:
        docs: Request was successful
        type: AssetsListResponse
        status-code: 200
      errors:
        - root.AssetsListRequestBadRequestError
        - root.AssetsListRequestUnauthorizedError
        - root.AssetsListRequestNotFoundError
        - root.AssetsListRequestTooManyRequestsError
        - root.AssetsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              assets:
                - id: 63e5889e7fe4eafa7384cea4
                  contentType: image/png
                  size: 2212772
                  siteId: 63938b302ea6b0aa6f3d8745
                  hostedUrl: >-
                    https://s3.amazonaws.com/webflow-prod-assets/63938b302ea6b0aa6f3d8745/63e5889e7fe4eafa7384cea4_Vectors-Wrapper.svg
                  originalFileName: Candy-Wrapper.svg
                  displayName: 63e5889e7fe4eafa7384cea4_Candy-Wrapper.png
                  lastUpdated: '2023-03-01T23:42:57Z'
                  createdOn: '2023-02-09T23:58:22Z'
                  variants:
                    - hostedUrl: >-
                        https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png
                      originalFileName: >-
                        Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png
                      displayName: >-
                        660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png
                      format: png
                      width: 500
                      quality: 100
                  altText: A red chair
    create:
      path: /sites/{site_id}/assets
      method: POST
      auth: true
      docs: >
        Create a new asset entry.  </br></br> This endpoint generates a response
        with the following information: `uploadUrl` and `uploadDetails`.  You
        can use these two properties to [upload the file to Amazon s3 by making
        a
        POST](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOST.html)
        request to the `uploadUrl` with the `uploadDetails` object as your
        header information in the request. </br></br>  Required scope |
        `assets:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Asset Metadata
      request:
        name: AssetsCreateRequest
        body:
          properties:
            fileName:
              type: string
              docs: file name including file extension
            fileHash:
              type: string
              docs: MD5 hash of the file
            parentFolder:
              type: optional<string>
              docs: id of the Asset folder (optional)
        content-type: application/json
      response:
        docs: Request was successful
        type: AssetsCreateResponse
        status-code: 200
      errors:
        - root.AssetsCreateRequestBadRequestError
        - root.AssetsCreateRequestUnauthorizedError
        - root.AssetsCreateRequestNotFoundError
        - root.AssetsCreateRequestTooManyRequestsError
        - root.AssetsCreateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            fileName: file.png
            fileHash: 3c7d87c9575702bc3b1e991f4d3c638e
          response:
            body:
              uploadDetails:
                acl: public-read
                bucket: webflow-bucket-name
                X-Amz-Algorithm: AWS4-HMAC-SHA256
                X-Amz-Credential: <credential-key>/<date>/<region-zone>/s3/aws4_request
                X-Amz-Date: <date-in-iso-like-string>
                key: <siteId>/<fileId>_<filename-with-extension>
                Policy: <a-very-long-alphanumeric-token-with-equal-sign-at-the-end>
                X-Amz-Signature: <one-line-ling-alphanumeric-signature>
                success_action_status: '201'
                content-type: image/png
                Cache-Control: max-age=31536000, must-revalidate
              contentType: image/png
              id: 64358b9544249dc43d37d2b7
              parentFolder: 6436b1ce5281cace05b65aea
              uploadUrl: >-
                https://s3.amazonaws.com/webflow-dev-assets/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png
              assetUrl: >-
                https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d907ab9e91e3e9f56385e_paranoidAndroid-2024.png
              hostedUrl: >-
                https://d1otoma47x30pg.cloudfront.net/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png
              originalFileName: file.png
              createdOn: '2023-04-11T16:32:21Z'
              lastUpdated: '2023-04-12T20:31:03Z'
    get:
      path: /assets/{asset_id}
      method: GET
      auth: true
      docs: Get an Asset </br></br> Required scope | `assets:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        asset_id:
          type: string
          docs: Unique identifier for an Asset on a site
      display-name: Get Asset
      response:
        docs: Request was successful
        type: AssetsGetResponse
        status-code: 200
      errors:
        - root.AssetsGetRequestBadRequestError
        - root.AssetsGetRequestUnauthorizedError
        - root.AssetsGetRequestNotFoundError
        - root.AssetsGetRequestTooManyRequestsError
        - root.AssetsGetRequestInternalServerError
      examples:
        - path-parameters:
            asset_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              id: 55131cd036c09f7d07883dfc
              contentType: image/png
              size: 1500
              siteId: 62749158efef318abc8d5a0f
              hostedUrl: example.com/hostedimage.png
              originalFileName: image.png
              displayName: example-image-123.png
              lastUpdated: '2016-09-06T21:12:22Z'
              createdOn: '2016-09-02T23:26:22Z'
              variants:
                - hostedUrl: example.com/hostedimage.png
                  originalFileName: image.png
                  displayName: A brown dog
                  format: format
                  width: 1500
                  height: 900
                  quality: 1
                  error: error
              altText: A red chair
    delete:
      path: /assets/{asset_id}
      method: DELETE
      auth: true
      docs: Delete an Asset
      source:
        openapi: ../openapi.yml
      path-parameters:
        asset_id:
          type: string
          docs: Unique identifier for an Asset on a site
      display-name: Delete Asset
      errors:
        - root.AssetsDeleteRequestBadRequestError
        - root.AssetsDeleteRequestUnauthorizedError
        - root.AssetsDeleteRequestNotFoundError
        - root.AssetsDeleteRequestTooManyRequestsError
        - root.AssetsDeleteRequestInternalServerError
      examples:
        - path-parameters:
            asset_id: 580e63fc8c9a982ac9b8b745
    update:
      path: /assets/{asset_id}
      method: PATCH
      auth: true
      docs: Update an Asset </br></br> Required scope | `assets:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        asset_id:
          type: string
          docs: Unique identifier for an Asset on a site
      display-name: Update Asset
      request:
        name: AssetsUpdateRequest
        body:
          properties:
            displayName:
              type: string
              docs: file name including file extension
        content-type: application/json
      response:
        docs: Request was successful
        type: AssetsUpdateResponse
        status-code: 200
      errors:
        - root.AssetsUpdateRequestBadRequestError
        - root.AssetsUpdateRequestUnauthorizedError
        - root.AssetsUpdateRequestNotFoundError
        - root.AssetsUpdateRequestTooManyRequestsError
        - root.AssetsUpdateRequestInternalServerError
      examples:
        - path-parameters:
            asset_id: 580e63fc8c9a982ac9b8b745
          request:
            displayName: bulldoze.png
          response:
            body:
              id: 55131cd036c09f7d07883dfc
              contentType: image/png
              size: 1500
              siteId: 62749158efef318abc8d5a0f
              hostedUrl: example.com/hostedimage.png
              originalFileName: image.png
              displayName: example-image-123.png
              lastUpdated: '2016-09-06T21:12:22Z'
              createdOn: '2016-09-02T23:26:22Z'
              variants:
                - hostedUrl: example.com/hostedimage.png
                  originalFileName: image.png
                  displayName: A brown dog
                  format: format
                  width: 1500
                  height: 900
                  quality: 1
                  error: error
              altText: A red chair
    list-folders:
      path: /sites/{site_id}/asset_folders
      method: GET
      auth: true
      docs: >-
        List Asset Folders within a given site <br><br> Required scope |
        `assets:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Asset Folders
      response:
        docs: Request was successful
        type: AssetsListFoldersResponse
        status-code: 200
      errors:
        - root.AssetsListFoldersRequestBadRequestError
        - root.AssetsListFoldersRequestUnauthorizedError
        - root.AssetsListFoldersRequestNotFoundError
        - root.AssetsListFoldersRequestTooManyRequestsError
        - root.AssetsListFoldersRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              assetFolders:
                - id: 6390c49774a71f0e3c1a08ee
                  displayName: emoji icons
                  assets:
                    - 63e5889e7fe4eafa7384cea4
                    - 659595234426a9fcbad57043
                  siteId: 6390c49674a71f84b51a08d8
                  createdOn: '2018-10-14T21:55:49Z'
                  lastUpdated: '2022-12-07T16:51:37Z'
              pagination:
                limit: 1
                offset: 0
                total: 1
    create-folder:
      path: /sites/{site_id}/asset_folders
      method: POST
      auth: true
      docs: >-
        Create an Asset Folder within a given site <br><br> Required scope |
        `assets:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Asset Folder
      request:
        name: AssetsCreateFolderRequest
        body:
          properties:
            displayName:
              type: string
              docs: A human readable name for the Asset Folder
            parentFolder:
              type: optional<string>
              docs: >-
                An (optional) pointer to a parent Asset Folder (or null for
                root)
        content-type: application/json
      response:
        docs: Request was successful
        type: AssetsCreateFolderResponse
        status-code: 200
      errors:
        - root.AssetsCreateFolderRequestBadRequestError
        - root.AssetsCreateFolderRequestUnauthorizedError
        - root.AssetsCreateFolderRequestNotFoundError
        - root.AssetsCreateFolderRequestTooManyRequestsError
        - root.AssetsCreateFolderRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            displayName: my asset folder
          response:
            body:
              id: 6390c49774a71f0e3c1a08ee
              displayName: emoji icons
              parentFolder: 6390c49774a71f99f21a08eb
              assets:
                - 63e5889e7fe4eafa7384cea4
                - 659595234426a9fcbad57043
              siteId: 6390c49674a71f84b51a08d8
              createdOn: '2018-10-14T21:55:49Z'
              lastUpdated: '2022-12-07T16:51:37Z'
    get-folder:
      path: /asset_folders/{asset_folder_id}
      method: GET
      auth: true
      docs: >-
        Get details about a specific Asset Folder <br><br> Required scope |
        `assets:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        asset_folder_id:
          type: string
          docs: Unique identifier for an Asset Folder
      display-name: Get Asset Folder
      response:
        docs: Request was successful
        type: AssetsGetFolderResponse
        status-code: 200
      errors:
        - root.AssetsGetFolderRequestBadRequestError
        - root.AssetsGetFolderRequestUnauthorizedError
        - root.AssetsGetFolderRequestNotFoundError
        - root.AssetsGetFolderRequestTooManyRequestsError
        - root.AssetsGetFolderRequestInternalServerError
      examples:
        - path-parameters:
            asset_folder_id: 6390c49774a71f0e3c1a08ee
          response:
            body:
              id: 6390c49774a71f0e3c1a08ee
              displayName: emoji icons
              parentFolder: 6390c49774a71f99f21a08eb
              assets:
                - 63e5889e7fe4eafa7384cea4
                - 659595234426a9fcbad57043
              siteId: 6390c49674a71f84b51a08d8
              createdOn: '2018-10-14T21:55:49Z'
              lastUpdated: '2022-12-07T16:51:37Z'
  source:
    openapi: ../openapi.yml
  display-name: Assets
",
    },
    "collections.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Collections",
          "endpoints": {
            "create": {
              "auth": true,
              "display-name": "Create Collection",
              "docs": "Create a Collection for a site. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.CollectionsCreateRequestBadRequestError",
                "root.CollectionsCreateRequestUnauthorizedError",
                "root.CollectionsCreateRequestNotFoundError",
                "root.CollectionsCreateRequestTooManyRequestsError",
                "root.CollectionsCreateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "displayName": "Blog Posts",
                    "singularName": "Blog Post",
                    "slug": "posts",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2016-10-24T19:41:48Z",
                      "displayName": "Blog Posts",
                      "fields": [
                        {
                          "displayName": "Name",
                          "id": "23cc2d952d4e4631ffd4345d2743db4e",
                          "isEditable": true,
                          "isRequired": true,
                          "slug": "name",
                          "type": "PlainText",
                        },
                      ],
                      "id": "580e63fc8c9a982ac9b8b745",
                      "lastUpdated": "2016-10-24T19:42:38Z",
                      "singularName": "Blog Post",
                      "slug": "post",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/collections",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "Name of the collection. Each collection name must be distinct.",
                      "type": "string",
                    },
                    "singularName": {
                      "docs": "Singular name of each item.",
                      "type": "string",
                    },
                    "slug": {
                      "docs": "Part of a URL that identifier",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CollectionsCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CollectionsCreateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": true,
              "display-name": "Delete Collection Field",
              "docs": "Delete a custom field in a collection. This endpoint does not currently support bulk deletion. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.CollectionsDeleteRequestBadRequestError",
                "root.CollectionsDeleteRequestUnauthorizedError",
                "root.CollectionsDeleteRequestNotFoundError",
                "root.CollectionsDeleteRequestTooManyRequestsError",
                "root.CollectionsDeleteRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "field_id": "580e63fc8c9a982ac9b8b745",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}/fields/{field_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "field_id": {
                  "docs": "Unique identifier for a Field in a collection",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete-collection": {
              "auth": true,
              "display-name": "Delete Collection",
              "docs": "Delete a collection using its ID. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.DeleteCollectionRequestBadRequestError",
                "root.DeleteCollectionRequestUnauthorizedError",
                "root.DeleteCollectionRequestNotFoundError",
                "root.DeleteCollectionRequestTooManyRequestsError",
                "root.DeleteCollectionRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": true,
              "display-name": "Get Collection Details",
              "docs": "Get the full details of a collection from its ID. </br></br> Required scope | `cms:read`",
              "errors": [
                "root.CollectionsGetRequestBadRequestError",
                "root.CollectionsGetRequestUnauthorizedError",
                "root.CollectionsGetRequestNotFoundError",
                "root.CollectionsGetRequestTooManyRequestsError",
                "root.CollectionsGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2016-10-24T19:41:48Z",
                      "displayName": "Blog Posts",
                      "fields": [
                        {
                          "displayName": "Name",
                          "id": "23cc2d952d4e4631ffd4345d2743db4e",
                          "isEditable": true,
                          "isRequired": true,
                          "slug": "name",
                          "type": "PlainText",
                        },
                      ],
                      "id": "580e63fc8c9a982ac9b8b745",
                      "lastUpdated": "2016-10-24T19:42:38Z",
                      "singularName": "Blog Post",
                      "slug": "post",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CollectionsGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Collections",
              "docs": "List of all Collections within a Site. </br></br> Required scope | `cms:read`",
              "errors": [
                "root.CollectionsListRequestBadRequestError",
                "root.CollectionsListRequestUnauthorizedError",
                "root.CollectionsListRequestNotFoundError",
                "root.CollectionsListRequestTooManyRequestsError",
                "root.CollectionsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "collections": [
                        {
                          "createdOn": "2019-06-12T13:35:14Z",
                          "displayName": "Products",
                          "id": "63692ab61fb2852f582ba8f5",
                          "lastUpdated": "2022-11-17T15:08:50Z",
                          "singularName": "Product",
                          "slug": "product",
                        },
                        {
                          "createdOn": "2019-06-12T13:35:14Z",
                          "displayName": "Categories",
                          "id": "63692ab61fb2856e6a2ba8f6",
                          "lastUpdated": "2022-11-17T15:08:50Z",
                          "singularName": "Category",
                          "slug": "category",
                        },
                        {
                          "createdOn": "2019-06-12T13:35:14Z",
                          "displayName": "SKUs",
                          "id": "63692ab61fb285a8562ba8f4",
                          "lastUpdated": "2022-11-17T15:08:50Z",
                          "singularName": "SKU",
                          "slug": "sku",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/collections",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "CollectionsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CollectionsCreateResponse": {
            "docs": "A collection object",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "The date the collection was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Name given to the Collection",
                "type": "optional<string>",
              },
              "fields": {
                "docs": "The list of fields in the Collection",
                "type": "list<CollectionsCreateResponseFieldsItem>",
              },
              "id": {
                "docs": "Unique identifier for a Collection",
                "type": "string",
              },
              "lastUpdated": {
                "docs": "The date the collection was last updated",
                "type": "optional<datetime>",
              },
              "singularName": {
                "docs": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Slug of Collection in Site URL structure",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsCreateResponseFieldsItem": {
            "docs": "The details of a field in a collection",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for a Field",
                "type": "string",
              },
              "isEditable": {
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "CollectionsCreateResponseFieldsItemType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsCreateResponseFieldsItemType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsGetResponse": {
            "docs": "A collection object",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "The date the collection was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Name given to the Collection",
                "type": "optional<string>",
              },
              "fields": {
                "docs": "The list of fields in the Collection",
                "type": "list<CollectionsGetResponseFieldsItem>",
              },
              "id": {
                "docs": "Unique identifier for a Collection",
                "type": "string",
              },
              "lastUpdated": {
                "docs": "The date the collection was last updated",
                "type": "optional<datetime>",
              },
              "singularName": {
                "docs": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Slug of Collection in Site URL structure",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsGetResponseFieldsItem": {
            "docs": "The details of a field in a collection",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for a Field",
                "type": "string",
              },
              "isEditable": {
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "CollectionsGetResponseFieldsItemType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsGetResponseFieldsItemType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsListResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "collections": {
                "docs": "An array of Collections",
                "type": "optional<list<CollectionsListResponseCollectionsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionsListResponseCollectionsItem": {
            "docs": "A collection object",
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "The date the collection was created",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "Name given to the Collection",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for a Collection",
                "type": "string",
              },
              "lastUpdated": {
                "docs": "The date the collection was last updated",
                "type": "optional<datetime>",
              },
              "singularName": {
                "docs": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "Slug of Collection in Site URL structure",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  CollectionsListResponseCollectionsItem:
    docs: A collection object
    properties:
      id:
        type: string
        docs: Unique identifier for a Collection
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionsListResponse:
    properties:
      collections:
        type: optional<list<CollectionsListResponseCollectionsItem>>
        docs: An array of Collections
    source:
      openapi: ../openapi.yml
  CollectionsCreateResponseFieldsItemType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  CollectionsCreateResponseFieldsItem:
    docs: The details of a field in a collection
    properties:
      id:
        type: string
        docs: Unique identifier for a Field
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
      type:
        type: CollectionsCreateResponseFieldsItemType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionsCreateResponse:
    docs: A collection object
    properties:
      id:
        type: string
        docs: Unique identifier for a Collection
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
      fields:
        docs: The list of fields in the Collection
        type: list<CollectionsCreateResponseFieldsItem>
    source:
      openapi: ../openapi.yml
  CollectionsGetResponseFieldsItemType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  CollectionsGetResponseFieldsItem:
    docs: The details of a field in a collection
    properties:
      id:
        type: string
        docs: Unique identifier for a Field
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
      type:
        type: CollectionsGetResponseFieldsItemType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionsGetResponse:
    docs: A collection object
    properties:
      id:
        type: string
        docs: Unique identifier for a Collection
      displayName:
        type: optional<string>
        docs: Name given to the Collection
      singularName:
        type: optional<string>
        docs: >-
          The name of one Item in Collection (e.g. ”Blog Post” if the Collection
          is called “Blog Posts”)
      slug:
        type: optional<string>
        docs: Slug of Collection in Site URL structure
      createdOn:
        type: optional<datetime>
        docs: The date the collection was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the collection was last updated
      fields:
        docs: The list of fields in the Collection
        type: list<CollectionsGetResponseFieldsItem>
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/collections
      method: GET
      auth: true
      docs: >-
        List of all Collections within a Site. </br></br> Required scope |
        `cms:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Collections
      response:
        docs: Request was successful
        type: CollectionsListResponse
        status-code: 200
      errors:
        - root.CollectionsListRequestBadRequestError
        - root.CollectionsListRequestUnauthorizedError
        - root.CollectionsListRequestNotFoundError
        - root.CollectionsListRequestTooManyRequestsError
        - root.CollectionsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              collections:
                - id: 63692ab61fb2852f582ba8f5
                  displayName: Products
                  singularName: Product
                  slug: product
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
                - id: 63692ab61fb2856e6a2ba8f6
                  displayName: Categories
                  singularName: Category
                  slug: category
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
                - id: 63692ab61fb285a8562ba8f4
                  displayName: SKUs
                  singularName: SKU
                  slug: sku
                  createdOn: '2019-06-12T13:35:14Z'
                  lastUpdated: '2022-11-17T15:08:50Z'
    create:
      path: /sites/{site_id}/collections
      method: POST
      auth: true
      docs: Create a Collection for a site. </br></br> Required scope | `cms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Collection
      request:
        name: CollectionsCreateRequest
        body:
          properties:
            displayName:
              type: string
              docs: Name of the collection. Each collection name must be distinct.
            singularName:
              type: string
              docs: Singular name of each item.
            slug:
              type: optional<string>
              docs: Part of a URL that identifier
        content-type: application/json
      response:
        docs: Request was successful
        type: CollectionsCreateResponse
        status-code: 200
      errors:
        - root.CollectionsCreateRequestBadRequestError
        - root.CollectionsCreateRequestUnauthorizedError
        - root.CollectionsCreateRequestNotFoundError
        - root.CollectionsCreateRequestTooManyRequestsError
        - root.CollectionsCreateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            displayName: Blog Posts
            singularName: Blog Post
            slug: posts
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              displayName: Blog Posts
              singularName: Blog Post
              slug: post
              createdOn: '2016-10-24T19:41:48Z'
              lastUpdated: '2016-10-24T19:42:38Z'
              fields:
                - id: 23cc2d952d4e4631ffd4345d2743db4e
                  isRequired: true
                  isEditable: true
                  type: PlainText
                  slug: name
                  displayName: Name
    get:
      path: /collections/{collection_id}
      method: GET
      auth: true
      docs: >-
        Get the full details of a collection from its ID. </br></br> Required
        scope | `cms:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Get Collection Details
      response:
        docs: Request was successful
        type: CollectionsGetResponse
        status-code: 200
      errors:
        - root.CollectionsGetRequestBadRequestError
        - root.CollectionsGetRequestUnauthorizedError
        - root.CollectionsGetRequestNotFoundError
        - root.CollectionsGetRequestTooManyRequestsError
        - root.CollectionsGetRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              displayName: Blog Posts
              singularName: Blog Post
              slug: post
              createdOn: '2016-10-24T19:41:48Z'
              lastUpdated: '2016-10-24T19:42:38Z'
              fields:
                - id: 23cc2d952d4e4631ffd4345d2743db4e
                  isRequired: true
                  isEditable: true
                  type: PlainText
                  slug: name
                  displayName: Name
    delete-collection:
      path: /collections/{collection_id}
      method: DELETE
      auth: true
      docs: >-
        Delete a collection using its ID. </br></br> Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Delete Collection
      errors:
        - root.DeleteCollectionRequestBadRequestError
        - root.DeleteCollectionRequestUnauthorizedError
        - root.DeleteCollectionRequestNotFoundError
        - root.DeleteCollectionRequestTooManyRequestsError
        - root.DeleteCollectionRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
    delete:
      path: /collections/{collection_id}/fields/{field_id}
      method: DELETE
      auth: true
      docs: >-
        Delete a custom field in a collection. This endpoint does not currently
        support bulk deletion. </br></br> Required scope | `cms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        field_id:
          type: string
          docs: Unique identifier for a Field in a collection
      display-name: Delete Collection Field
      errors:
        - root.CollectionsDeleteRequestBadRequestError
        - root.CollectionsDeleteRequestUnauthorizedError
        - root.CollectionsDeleteRequestNotFoundError
        - root.CollectionsDeleteRequestTooManyRequestsError
        - root.CollectionsDeleteRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            field_id: 580e63fc8c9a982ac9b8b745
  source:
    openapi: ../openapi.yml
  display-name: Collections
",
    },
    "collections/fields.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "display-name": "Create Collection Field",
              "docs": "Create a custom field in a collection.  </br></br> Slugs must be all lowercase letters without spaces. If you pass a string with uppercase letters and/or spaces to the "Slug" property, Webflow will convert the slug to lowercase and replace spaces with "-." </br></br> Only some field types can be created through the API.  This endpoint does not currently support bulk creation.  </br></br>  Required scope | `cms:write`
",
              "errors": [
                "root.FieldsCreateRequestBadRequestError",
                "root.FieldsCreateRequestUnauthorizedError",
                "root.FieldsCreateRequestNotFoundError",
                "root.FieldsCreateRequestTooManyRequestsError",
                "root.FieldsCreateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "displayName": "Post Body",
                    "helpText": "Add the body of your post here",
                    "isRequired": false,
                    "type": "RichText",
                  },
                  "response": {
                    "body": {
                      "displayName": "Post Body",
                      "helpText": "Add the body of your post here",
                      "id": "75821f618da60c18383330bcc0ca488b",
                      "isEditable": true,
                      "isRequired": false,
                      "slug": "post-body",
                      "type": "RichText",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/fields",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "The name of a field",
                      "type": "string",
                    },
                    "helpText": {
                      "docs": "Additional text to help anyone filling out this field",
                      "type": "optional<string>",
                    },
                    "isRequired": {
                      "docs": "define whether a field is required in a collection",
                      "type": "optional<boolean>",
                    },
                    "type": {
                      "docs": "Choose these appropriate field type for your collection data",
                      "type": "FieldsCreateRequestType",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "FieldsCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FieldsCreateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "display-name": "Update Collection Field",
              "docs": "Update a custom field in a collection.  </br></br> Required scope | `cms:write`",
              "errors": [
                "root.FieldsUpdateRequestBadRequestError",
                "root.FieldsUpdateRequestUnauthorizedError",
                "root.FieldsUpdateRequestNotFoundError",
                "root.FieldsUpdateRequestTooManyRequestsError",
                "root.FieldsUpdateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "field_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "displayName": "Post Body",
                    "helpText": "Add the body of your post here",
                    "isRequired": false,
                  },
                  "response": {
                    "body": {
                      "displayName": "Post Body",
                      "helpText": "Add the body of your post here",
                      "id": "75821f618da60c18383330bcc0ca488b",
                      "isEditable": true,
                      "isRequired": false,
                      "slug": "post-body",
                      "type": "RichText",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/fields/{field_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "field_id": {
                  "docs": "Unique identifier for a Field in a collection",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "displayName": {
                      "docs": "The name of a field",
                      "type": "optional<string>",
                    },
                    "helpText": {
                      "docs": "Additional text to help anyone filling out this field",
                      "type": "optional<string>",
                    },
                    "isRequired": {
                      "docs": "Define whether a field is required in a collection",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "FieldsUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FieldsUpdateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "FieldsCreateRequestType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "File",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FieldsCreateResponse": {
            "docs": "The details of a field in a collection",
            "inline": undefined,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for a Field",
                "type": "string",
              },
              "isEditable": {
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "FieldsCreateResponseType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FieldsCreateResponseType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FieldsUpdateResponse": {
            "docs": "The details of a field in a collection",
            "inline": undefined,
            "properties": {
              "displayName": {
                "docs": "The name of a field",
                "type": "string",
              },
              "helpText": {
                "docs": "Additional text to help anyone filling out this field",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for a Field",
                "type": "string",
              },
              "isEditable": {
                "docs": "Define whether the field is editable",
                "type": "optional<boolean>",
              },
              "isRequired": {
                "docs": "define whether a field is required in a collection",
                "type": "boolean",
              },
              "slug": {
                "docs": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to "-."",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Choose these appropriate field type for your collection data",
                "type": "FieldsUpdateResponseType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FieldsUpdateResponseType": {
            "docs": "Choose these appropriate field type for your collection data",
            "enum": [
              "PlainText",
              "RichText",
              "Image",
              "MultiImage",
              "Video",
              "Link",
              "Email",
              "Phone",
              "Number",
              "DateTime",
              "Switch",
              "Color",
              "ExtFileRef",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  FieldsCreateRequestType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - File
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  FieldsCreateResponseType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  FieldsCreateResponse:
    docs: The details of a field in a collection
    properties:
      id:
        type: string
        docs: Unique identifier for a Field
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
      type:
        type: FieldsCreateResponseType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
  FieldsUpdateResponseType:
    enum:
      - PlainText
      - RichText
      - Image
      - MultiImage
      - Video
      - Link
      - Email
      - Phone
      - Number
      - DateTime
      - Switch
      - Color
      - ExtFileRef
    docs: Choose these appropriate field type for your collection data
    inline: true
    source:
      openapi: ../openapi.yml
  FieldsUpdateResponse:
    docs: The details of a field in a collection
    properties:
      id:
        type: string
        docs: Unique identifier for a Field
      isRequired:
        type: boolean
        docs: define whether a field is required in a collection
      isEditable:
        type: optional<boolean>
        docs: Define whether the field is editable
      type:
        type: FieldsUpdateResponseType
        docs: Choose these appropriate field type for your collection data
      slug:
        type: optional<string>
        docs: >-
          Slug of Field in Site URL structure. Slugs should be all lowercase
          with no spaces. Any spaces will be converted to "-."
      displayName:
        type: string
        docs: The name of a field
      helpText:
        type: optional<string>
        docs: Additional text to help anyone filling out this field
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /collections/{collection_id}/fields
      method: POST
      auth: true
      docs: >
        Create a custom field in a collection.  </br></br> Slugs must be all
        lowercase letters without spaces. If you pass a string with uppercase
        letters and/or spaces to the "Slug" property, Webflow will convert the
        slug to lowercase and replace spaces with "-." </br></br> Only some
        field types can be created through the API.  This endpoint does not
        currently support bulk creation.  </br></br>  Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Create Collection Field
      request:
        name: FieldsCreateRequest
        body:
          properties:
            isRequired:
              type: optional<boolean>
              docs: define whether a field is required in a collection
            type:
              type: FieldsCreateRequestType
              docs: Choose these appropriate field type for your collection data
            displayName:
              type: string
              docs: The name of a field
            helpText:
              type: optional<string>
              docs: Additional text to help anyone filling out this field
        content-type: application/json
      response:
        docs: Request was successful
        type: FieldsCreateResponse
        status-code: 200
      errors:
        - root.FieldsCreateRequestBadRequestError
        - root.FieldsCreateRequestUnauthorizedError
        - root.FieldsCreateRequestNotFoundError
        - root.FieldsCreateRequestTooManyRequestsError
        - root.FieldsCreateRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            isRequired: false
            type: RichText
            displayName: Post Body
            helpText: Add the body of your post here
          response:
            body:
              id: 75821f618da60c18383330bcc0ca488b
              isRequired: false
              isEditable: true
              type: RichText
              slug: post-body
              displayName: Post Body
              helpText: Add the body of your post here
    update:
      path: /collections/{collection_id}/fields/{field_id}
      method: PATCH
      auth: true
      docs: >-
        Update a custom field in a collection.  </br></br> Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        field_id:
          type: string
          docs: Unique identifier for a Field in a collection
      display-name: Update Collection Field
      request:
        name: FieldsUpdateRequest
        body:
          properties:
            isRequired:
              type: optional<boolean>
              docs: Define whether a field is required in a collection
            displayName:
              type: optional<string>
              docs: The name of a field
            helpText:
              type: optional<string>
              docs: Additional text to help anyone filling out this field
        content-type: application/json
      response:
        docs: Request was successful
        type: FieldsUpdateResponse
        status-code: 200
      errors:
        - root.FieldsUpdateRequestBadRequestError
        - root.FieldsUpdateRequestUnauthorizedError
        - root.FieldsUpdateRequestNotFoundError
        - root.FieldsUpdateRequestTooManyRequestsError
        - root.FieldsUpdateRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            field_id: 580e63fc8c9a982ac9b8b745
          request:
            isRequired: false
            displayName: Post Body
            helpText: Add the body of your post here
          response:
            body:
              id: 75821f618da60c18383330bcc0ca488b
              isRequired: false
              isEditable: true
              type: RichText
              slug: post-body
              displayName: Post Body
              helpText: Add the body of your post here
  source:
    openapi: ../openapi.yml
",
    },
    "collections/items.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create-item": {
              "auth": true,
              "display-name": "Create Collection Item",
              "docs": "<style>.rm-Markdown.markdown-body a{color: #146EF5 !important;}</style> Create Item in a Collection.</br></br> To create items across multiple locales, <a href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales"> please use the bulk item endpoint.</a> </br></br> Required scope | <code>CMS:write</code>",
              "errors": [
                "root.ItemsCreateItemRequestBadRequestError",
                "root.ItemsCreateItemRequestUnauthorizedError",
                "root.ItemsCreateItemRequestNotFoundError",
                "root.ItemsCreateItemRequestTooManyRequestsError",
                "root.ItemsCreateItemRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<ItemsCreateItemRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ItemsCreateItemRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "ItemsCreateItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-item-for-multiple-locales": {
              "auth": true,
              "display-name": "Create Item for Multiple Locales",
              "docs": "Create single Item in a Collection with multiple corresponding locales. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.ItemsCreateItemForMultipleLocalesRequestBadRequestError",
                "root.ItemsCreateItemForMultipleLocalesRequestUnauthorizedError",
                "root.ItemsCreateItemForMultipleLocalesRequestNotFoundError",
                "root.ItemsCreateItemForMultipleLocalesRequestTooManyRequestsError",
                "root.ItemsCreateItemForMultipleLocalesRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "cmsLocaleIds": [
                        "653ad57de882f528b32e810e",
                        "6514390aea353fc691d69827",
                        "65143930ea353fc691d69cd8",
                      ],
                      "createdOn": "2023-03-17T18:47:35.560Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": false,
                        "name": "My new item",
                        "slug": "my-new-item",
                      },
                      "id": "580e64008c9a982ac9b8b754",
                      "isArchived": true,
                      "isDraft": true,
                      "lastPublished": "2023-03-17T18:47:35.560Z",
                      "lastUpdated": "2023-03-17T18:47:35.560Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/bulk",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleIds": {
                      "docs": "Array of identifiers for the locales where the item will be created",
                      "type": "optional<list<string>>",
                    },
                    "fieldData": "optional<ItemsCreateItemForMultipleLocalesRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ItemsCreateItemForMultipleLocalesRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "ItemsCreateItemForMultipleLocalesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-item-live": {
              "auth": true,
              "display-name": "Create Live Collection Item",
              "docs": "Create live Item in a Collection. This Item will be published to the live site. </br></br> To create items across multiple locales, <a href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales"> please use this endpoint.</a> </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.ItemsCreateItemLiveRequestBadRequestError",
                "root.ItemsCreateItemLiveRequestUnauthorizedError",
                "root.ItemsCreateItemLiveRequestNotFoundError",
                "root.ItemsCreateItemLiveRequestTooManyRequestsError",
                "root.ItemsCreateItemLiveRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/live",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<ItemsCreateItemLiveRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ItemsCreateItemLiveRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "ItemsCreateItemLiveResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete-item": {
              "auth": true,
              "display-name": "Delete Collection Item",
              "docs": "Delete an Item from a Collection. This endpoint does not currently support bulk deletion. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.ItemsDeleteItemRequestBadRequestError",
                "root.ItemsDeleteItemRequestUnauthorizedError",
                "root.ItemsDeleteItemRequestNotFoundError",
                "root.ItemsDeleteItemRequestTooManyRequestsError",
                "root.ItemsDeleteItemRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "name": "ItemsDeleteItemRequest",
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<string>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete-item-live": {
              "auth": true,
              "display-name": "Delete Collection Item (Live)",
              "docs": "Remove a live item from the site. Removing a published item will unpublish the item from the live site and set it to draft. This endpoint does not currently support bulk deletion.</br></br> Required scope | `CMS:write`",
              "errors": [
                "root.ItemsDeleteItemLiveRequestBadRequestError",
                "root.ItemsDeleteItemLiveRequestUnauthorizedError",
                "root.ItemsDeleteItemLiveRequestNotFoundError",
                "root.ItemsDeleteItemLiveRequestTooManyRequestsError",
                "root.ItemsDeleteItemLiveRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/live",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "name": "ItemsDeleteItemLiveRequest",
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<string>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-item": {
              "auth": true,
              "display-name": "Get Collection Item",
              "docs": "Get details of a selected Collection Item. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.ItemsGetItemRequestBadRequestError",
                "root.ItemsGetItemRequestUnauthorizedError",
                "root.ItemsGetItemRequestNotFoundError",
                "root.ItemsGetItemRequestTooManyRequestsError",
                "root.ItemsGetItemRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "name": "ItemsGetItemRequest",
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ItemsGetItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-item-live": {
              "auth": true,
              "display-name": "Get Live Collection Item",
              "docs": "Get details of a selected Collection live Item. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.ItemsGetItemLiveRequestBadRequestError",
                "root.ItemsGetItemLiveRequestUnauthorizedError",
                "root.ItemsGetItemLiveRequestNotFoundError",
                "root.ItemsGetItemLiveRequestTooManyRequestsError",
                "root.ItemsGetItemLiveRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/live",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "name": "ItemsGetItemLiveRequest",
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ItemsGetItemLiveResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-items": {
              "auth": true,
              "display-name": "List Collection Items",
              "docs": "List of all Items within a Collection. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.ItemsListItemsRequestBadRequestError",
                "root.ItemsListItemsRequestUnauthorizedError",
                "root.ItemsListItemsRequestNotFoundError",
                "root.ItemsListItemsRequestTooManyRequestsError",
                "root.ItemsListItemsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2022-06-25T14:51:27.809Z",
                          "fieldData": {
                            "department": "Data",
                            "name": "Senior Data Analyst",
                            "slug": "senior-data-analyst",
                            "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                          },
                          "id": "62b720ef280c7a7a3be8cabe",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2022-06-30T13:35:20.878Z",
                          "lastUpdated": "2022-06-25T14:51:27.809Z",
                        },
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2023-04-10T11:45:30.567Z",
                          "fieldData": {
                            "department": "Product",
                            "name": "Product Manager",
                            "slug": "product-manager",
                            "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                          },
                          "id": "62c880ef281c7b7b4cf9dabc",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2023-04-15T10:25:18.123Z",
                          "lastUpdated": "2023-04-10T11:45:30.567Z",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "name": "ItemsListItemsRequest",
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "name": {
                    "docs": "The name of the item(s)",
                    "type": "optional<string>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                  "slug": {
                    "docs": "The slug of the item",
                    "type": "optional<string>",
                  },
                  "sortBy": {
                    "docs": "Sort results by the provided value",
                    "type": "optional<ItemsListItemsRequestSortBy>",
                  },
                  "sortOrder": {
                    "docs": "Sorts the results by asc or desc",
                    "type": "optional<ItemsListItemsRequestSortOrder>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ItemsListItemsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-items-live": {
              "auth": true,
              "display-name": "List Live Collection Items",
              "docs": "List of all live Items within a Collection. </br></br> Required scope | `CMS:read`",
              "errors": [
                "root.ItemsListItemsLiveRequestBadRequestError",
                "root.ItemsListItemsLiveRequestUnauthorizedError",
                "root.ItemsListItemsLiveRequestNotFoundError",
                "root.ItemsListItemsLiveRequestTooManyRequestsError",
                "root.ItemsListItemsLiveRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2022-06-25T14:51:27.809Z",
                          "fieldData": {
                            "department": "Data",
                            "name": "Senior Data Analyst",
                            "slug": "senior-data-analyst",
                            "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                          },
                          "id": "62b720ef280c7a7a3be8cabe",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2022-06-30T13:35:20.878Z",
                          "lastUpdated": "2022-06-25T14:51:27.809Z",
                        },
                        {
                          "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                          "createdOn": "2023-04-10T11:45:30.567Z",
                          "fieldData": {
                            "department": "Product",
                            "name": "Product Manager",
                            "slug": "product-manager",
                            "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                          },
                          "id": "62c880ef281c7b7b4cf9dabc",
                          "isArchived": false,
                          "isDraft": false,
                          "lastPublished": "2023-04-15T10:25:18.123Z",
                          "lastUpdated": "2023-04-10T11:45:30.567Z",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/live",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "name": "ItemsListItemsLiveRequest",
                "query-parameters": {
                  "cmsLocaleId": {
                    "docs": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "name": {
                    "docs": "The name of the item(s)",
                    "type": "optional<string>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                  "slug": {
                    "docs": "The slug of the item",
                    "type": "optional<string>",
                  },
                  "sortBy": {
                    "docs": "Sort results by the provided value",
                    "type": "optional<ItemsListItemsLiveRequestSortBy>",
                  },
                  "sortOrder": {
                    "docs": "Sorts the results by asc or desc",
                    "type": "optional<ItemsListItemsLiveRequestSortOrder>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ItemsListItemsLiveResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish-item": {
              "auth": true,
              "display-name": "Publish Collection Item",
              "docs": "Publish an item or multiple items. </br></br> Required scope | `cms:write`",
              "errors": [
                "root.ItemsPublishItemRequestBadRequestError",
                "root.ItemsPublishItemRequestUnauthorizedError",
                "root.ItemsPublishItemRequestNotFoundError",
                "root.ItemsPublishItemRequestTooManyRequestsError",
                "root.ItemsPublishItemRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                  },
                  "request": {
                    "itemIds": [
                      "itemIds",
                    ],
                  },
                  "response": {
                    "body": {
                      "errors": [
                        "Staging item ID 643fd856d66b6528195ee2cf not found.",
                      ],
                      "publishedItemIds": [
                        "643fd856d66b6528195ee2ca",
                        "643fd856d66b6528195ee2cb",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/publish",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "itemIds": "list<string>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ItemsPublishItemRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 202,
                "type": "ItemsPublishItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-item": {
              "auth": true,
              "display-name": "Update Collection Item",
              "docs": "Update a selected Item in a Collection. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.ItemsUpdateItemRequestBadRequestError",
                "root.ItemsUpdateItemRequestUnauthorizedError",
                "root.ItemsUpdateItemRequestNotFoundError",
                "root.ItemsUpdateItemRequestTooManyRequestsError",
                "root.ItemsUpdateItemRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<ItemsUpdateItemRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ItemsUpdateItemRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ItemsUpdateItemResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-item-live": {
              "auth": true,
              "display-name": "Update Live Collection Item",
              "docs": "Update a selected live Item in a Collection. The updates for this Item will be published to the live site. </br></br> Required scope | `CMS:write`",
              "errors": [
                "root.ItemsUpdateItemLiveRequestBadRequestError",
                "root.ItemsUpdateItemLiveRequestUnauthorizedError",
                "root.ItemsUpdateItemLiveRequestNotFoundError",
                "root.ItemsUpdateItemLiveRequestTooManyRequestsError",
                "root.ItemsUpdateItemLiveRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "request": {
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "fieldData": {
                      "color": "#db4b68",
                      "date": "2022-11-18T00:00:00.000Z",
                      "featured": true,
                      "name": "Pan Galactic Gargle Blaster Recipe",
                      "slug": "pan-galactic-gargle-blaster",
                    },
                    "isArchived": false,
                    "isDraft": false,
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2022-11-17T17:11:57.148Z",
                      "fieldData": {
                        "color": "#db4b68",
                        "date": "2022-11-18T00:00:00.000Z",
                        "featured": true,
                        "name": "Pan Galactic Gargle Blaster Recipe",
                        "slug": "pan-galactic-gargle-blaster",
                      },
                      "id": "42b720ef280c7a7a3be8cabe",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2022-11-29T16:22:43.159Z",
                      "lastUpdated": "2022-11-17T17:19:43.282Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/live",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "cmsLocaleId": {
                      "docs": "Identifier for the locale of the CMS item",
                      "type": "optional<string>",
                    },
                    "fieldData": "optional<ItemsUpdateItemLiveRequestFieldData>",
                    "isArchived": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to archived",
                      "type": "optional<boolean>",
                    },
                    "isDraft": {
                      "default": false,
                      "docs": "Boolean determining if the Item is set to draft",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ItemsUpdateItemLiveRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ItemsUpdateItemLiveResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ItemsCreateItemForMultipleLocalesRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemForMultipleLocalesResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleIds": {
                "docs": "Array of identifiers for the locales where the item will be created",
                "type": "optional<list<string>>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsCreateItemForMultipleLocalesResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemForMultipleLocalesResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemLiveRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemLiveResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsCreateItemLiveResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemLiveResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsCreateItemResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsCreateItemResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsGetItemLiveResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsGetItemLiveResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsGetItemLiveResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsGetItemResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsGetItemResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsGetItemResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveRequestSortBy": {
            "enum": [
              "lastPublished",
              "name",
              "slug",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveRequestSortOrder": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveResponse": {
            "docs": "Results from collection items list",
            "inline": undefined,
            "properties": {
              "items": {
                "docs": "List of Items within the collection",
                "type": "optional<list<ItemsListItemsLiveResponseItemsItem>>",
              },
              "pagination": "optional<ItemsListItemsLiveResponsePagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveResponseItemsItem": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsListItemsLiveResponseItemsItemFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveResponseItemsItemFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsLiveResponsePagination": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "limit": {
                "default": 100,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of items in the collection",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsRequestSortBy": {
            "enum": [
              "lastPublished",
              "name",
              "slug",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsRequestSortOrder": {
            "enum": [
              "asc",
              "desc",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsResponse": {
            "docs": "Results from collection items list",
            "inline": undefined,
            "properties": {
              "items": {
                "docs": "List of Items within the collection",
                "type": "optional<list<ItemsListItemsResponseItemsItem>>",
              },
              "pagination": "optional<ItemsListItemsResponsePagination>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsResponseItemsItem": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsListItemsResponseItemsItemFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsResponseItemsItemFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsListItemsResponsePagination": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "limit": {
                "default": 100,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of items in the collection",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsPublishItemResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": "optional<list<string>>",
              "publishedItemIds": "optional<list<string>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemLiveRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemLiveResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsUpdateItemLiveResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemLiveResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemRequestFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<ItemsUpdateItemResponseFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ItemsUpdateItemResponseFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ItemsListItemsRequestSortBy:
    enum:
      - lastPublished
      - name
      - slug
    source:
      openapi: ../openapi.yml
  ItemsListItemsRequestSortOrder:
    enum:
      - asc
      - desc
    source:
      openapi: ../openapi.yml
  ItemsListItemsResponseItemsItemFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsListItemsResponseItemsItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsListItemsResponseItemsItemFieldData>
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsListItemsResponsePagination:
    properties:
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 100
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of items in the collection
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsListItemsResponse:
    docs: Results from collection items list
    properties:
      items:
        type: optional<list<ItemsListItemsResponseItemsItem>>
        docs: List of Items within the collection
      pagination: optional<ItemsListItemsResponsePagination>
    source:
      openapi: ../openapi.yml
  ItemsCreateItemRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsCreateItemResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsCreateItemResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsCreateItemResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsListItemsLiveRequestSortBy:
    enum:
      - lastPublished
      - name
      - slug
    source:
      openapi: ../openapi.yml
  ItemsListItemsLiveRequestSortOrder:
    enum:
      - asc
      - desc
    source:
      openapi: ../openapi.yml
  ItemsListItemsLiveResponseItemsItemFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsListItemsLiveResponseItemsItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsListItemsLiveResponseItemsItemFieldData>
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsListItemsLiveResponsePagination:
    properties:
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 100
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of items in the collection
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsListItemsLiveResponse:
    docs: Results from collection items list
    properties:
      items:
        type: optional<list<ItemsListItemsLiveResponseItemsItem>>
        docs: List of Items within the collection
      pagination: optional<ItemsListItemsLiveResponsePagination>
    source:
      openapi: ../openapi.yml
  ItemsCreateItemLiveRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsCreateItemLiveResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsCreateItemLiveResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsCreateItemLiveResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsCreateItemForMultipleLocalesRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsCreateItemForMultipleLocalesResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsCreateItemForMultipleLocalesResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleIds:
        type: optional<list<string>>
        docs: Array of identifiers for the locales where the item will be created
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsCreateItemForMultipleLocalesResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsGetItemResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsGetItemResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsGetItemResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsUpdateItemRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsUpdateItemResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsUpdateItemResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsUpdateItemResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsGetItemLiveResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsGetItemLiveResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsGetItemLiveResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsUpdateItemLiveRequestFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsUpdateItemLiveResponseFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  ItemsUpdateItemLiveResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<ItemsUpdateItemLiveResponseFieldData>
    source:
      openapi: ../openapi.yml
  ItemsPublishItemResponse:
    properties:
      publishedItemIds: optional<list<string>>
      errors: optional<list<string>>
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list-items:
      path: /collections/{collection_id}/items
      method: GET
      auth: true
      docs: >-
        List of all Items within a Collection. </br></br> Required scope |
        `CMS:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: List Collection Items
      request:
        name: ItemsListItemsRequest
        query-parameters:
          cmsLocaleId:
            type: optional<string>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          name:
            type: optional<string>
            docs: The name of the item(s)
          slug:
            type: optional<string>
            docs: The slug of the item
          sortBy:
            type: optional<ItemsListItemsRequestSortBy>
            docs: Sort results by the provided value
          sortOrder:
            type: optional<ItemsListItemsRequestSortOrder>
            docs: Sorts the results by asc or desc
      response:
        docs: Request was successful
        type: ItemsListItemsResponse
        status-code: 200
      errors:
        - root.ItemsListItemsRequestBadRequestError
        - root.ItemsListItemsRequestUnauthorizedError
        - root.ItemsListItemsRequestNotFoundError
        - root.ItemsListItemsRequestTooManyRequestsError
        - root.ItemsListItemsRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              items:
                - id: 62b720ef280c7a7a3be8cabe
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2022-06-30T13:35:20.878Z'
                  lastUpdated: '2022-06-25T14:51:27.809Z'
                  createdOn: '2022-06-25T14:51:27.809Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Senior Data Analyst
                    slug: senior-data-analyst
                    url: https://boards.greenhouse.io/webflow/jobs/26567701
                    department: Data
                - id: 62c880ef281c7b7b4cf9dabc
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2023-04-15T10:25:18.123Z'
                  lastUpdated: '2023-04-10T11:45:30.567Z'
                  createdOn: '2023-04-10T11:45:30.567Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Product Manager
                    slug: product-manager
                    url: https://boards.greenhouse.io/webflow/jobs/31234567
                    department: Product
              pagination:
                limit: 25
                offset: 0
                total: 2
    create-item:
      path: /collections/{collection_id}/items
      method: POST
      auth: true
      docs: >-
        <style>.rm-Markdown.markdown-body a{color: #146EF5 !important;}</style>
        Create Item in a Collection.</br></br> To create items across multiple
        locales, <a
        href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales">
        please use the bulk item endpoint.</a> </br></br> Required scope |
        <code>CMS:write</code>
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Create Collection Item
      request:
        name: ItemsCreateItemRequest
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<ItemsCreateItemRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: ItemsCreateItemResponse
        status-code: 202
      errors:
        - root.ItemsCreateItemRequestBadRequestError
        - root.ItemsCreateItemRequestUnauthorizedError
        - root.ItemsCreateItemRequestNotFoundError
        - root.ItemsCreateItemRequestTooManyRequestsError
        - root.ItemsCreateItemRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    list-items-live:
      path: /collections/{collection_id}/items/live
      method: GET
      auth: true
      docs: >-
        List of all live Items within a Collection. </br></br> Required scope |
        `CMS:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: List Live Collection Items
      request:
        name: ItemsListItemsLiveRequest
        query-parameters:
          cmsLocaleId:
            type: optional<string>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          name:
            type: optional<string>
            docs: The name of the item(s)
          slug:
            type: optional<string>
            docs: The slug of the item
          sortBy:
            type: optional<ItemsListItemsLiveRequestSortBy>
            docs: Sort results by the provided value
          sortOrder:
            type: optional<ItemsListItemsLiveRequestSortOrder>
            docs: Sorts the results by asc or desc
      response:
        docs: Request was successful
        type: ItemsListItemsLiveResponse
        status-code: 200
      errors:
        - root.ItemsListItemsLiveRequestBadRequestError
        - root.ItemsListItemsLiveRequestUnauthorizedError
        - root.ItemsListItemsLiveRequestNotFoundError
        - root.ItemsListItemsLiveRequestTooManyRequestsError
        - root.ItemsListItemsLiveRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              items:
                - id: 62b720ef280c7a7a3be8cabe
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2022-06-30T13:35:20.878Z'
                  lastUpdated: '2022-06-25T14:51:27.809Z'
                  createdOn: '2022-06-25T14:51:27.809Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Senior Data Analyst
                    slug: senior-data-analyst
                    url: https://boards.greenhouse.io/webflow/jobs/26567701
                    department: Data
                - id: 62c880ef281c7b7b4cf9dabc
                  cmsLocaleId: 66f6e966c9e1dc700a857ca3
                  lastPublished: '2023-04-15T10:25:18.123Z'
                  lastUpdated: '2023-04-10T11:45:30.567Z'
                  createdOn: '2023-04-10T11:45:30.567Z'
                  isArchived: false
                  isDraft: false
                  fieldData:
                    name: Product Manager
                    slug: product-manager
                    url: https://boards.greenhouse.io/webflow/jobs/31234567
                    department: Product
              pagination:
                limit: 25
                offset: 0
                total: 2
    create-item-live:
      path: /collections/{collection_id}/items/live
      method: POST
      auth: true
      docs: >-
        Create live Item in a Collection. This Item will be published to the
        live site. </br></br> To create items across multiple locales, <a
        href="https://developers.webflow.com/data/reference/create-item-for-multiple-locales">
        please use this endpoint.</a> </br></br> Required scope | `CMS:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Create Live Collection Item
      request:
        name: ItemsCreateItemLiveRequest
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<ItemsCreateItemLiveRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: ItemsCreateItemLiveResponse
        status-code: 202
      errors:
        - root.ItemsCreateItemLiveRequestBadRequestError
        - root.ItemsCreateItemLiveRequestUnauthorizedError
        - root.ItemsCreateItemLiveRequestNotFoundError
        - root.ItemsCreateItemLiveRequestTooManyRequestsError
        - root.ItemsCreateItemLiveRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    create-item-for-multiple-locales:
      path: /collections/{collection_id}/items/bulk
      method: POST
      auth: true
      docs: >-
        Create single Item in a Collection with multiple corresponding locales.
        </br></br> Required scope | `CMS:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Create Item for Multiple Locales
      request:
        name: ItemsCreateItemForMultipleLocalesRequest
        body:
          properties:
            cmsLocaleIds:
              type: optional<list<string>>
              docs: >-
                Array of identifiers for the locales where the item will be
                created
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<ItemsCreateItemForMultipleLocalesRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: ItemsCreateItemForMultipleLocalesResponse
        status-code: 202
      errors:
        - root.ItemsCreateItemForMultipleLocalesRequestBadRequestError
        - root.ItemsCreateItemForMultipleLocalesRequestUnauthorizedError
        - root.ItemsCreateItemForMultipleLocalesRequestNotFoundError
        - root.ItemsCreateItemForMultipleLocalesRequestTooManyRequestsError
        - root.ItemsCreateItemForMultipleLocalesRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request: {}
          response:
            body:
              id: 580e64008c9a982ac9b8b754
              cmsLocaleIds:
                - 653ad57de882f528b32e810e
                - 6514390aea353fc691d69827
                - 65143930ea353fc691d69cd8
              lastPublished: '2023-03-17T18:47:35.560Z'
              lastUpdated: '2023-03-17T18:47:35.560Z'
              createdOn: '2023-03-17T18:47:35.560Z'
              isArchived: true
              isDraft: true
              fieldData:
                name: My new item
                slug: my-new-item
                date: '2022-11-18T00:00:00.000Z'
                featured: false
                color: '#db4b68'
    get-item:
      path: /collections/{collection_id}/items/{item_id}
      method: GET
      auth: true
      docs: >-
        Get details of a selected Collection Item. </br></br> Required scope |
        `CMS:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Get Collection Item
      request:
        name: ItemsGetItemRequest
        query-parameters:
          cmsLocaleId:
            type: optional<string>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      response:
        docs: Request was successful
        type: ItemsGetItemResponse
        status-code: 200
      errors:
        - root.ItemsGetItemRequestBadRequestError
        - root.ItemsGetItemRequestUnauthorizedError
        - root.ItemsGetItemRequestNotFoundError
        - root.ItemsGetItemRequestTooManyRequestsError
        - root.ItemsGetItemRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    delete-item:
      path: /collections/{collection_id}/items/{item_id}
      method: DELETE
      auth: true
      docs: >-
        Delete an Item from a Collection. This endpoint does not currently
        support bulk deletion. </br></br> Required scope | `CMS:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Delete Collection Item
      request:
        name: ItemsDeleteItemRequest
        query-parameters:
          cmsLocaleId:
            type: optional<string>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      errors:
        - root.ItemsDeleteItemRequestBadRequestError
        - root.ItemsDeleteItemRequestUnauthorizedError
        - root.ItemsDeleteItemRequestNotFoundError
        - root.ItemsDeleteItemRequestTooManyRequestsError
        - root.ItemsDeleteItemRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
    update-item:
      path: /collections/{collection_id}/items/{item_id}
      method: PATCH
      auth: true
      docs: >-
        Update a selected Item in a Collection. </br></br> Required scope |
        `CMS:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Update Collection Item
      request:
        name: ItemsUpdateItemRequest
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<ItemsUpdateItemRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: ItemsUpdateItemResponse
        status-code: 200
      errors:
        - root.ItemsUpdateItemRequestBadRequestError
        - root.ItemsUpdateItemRequestUnauthorizedError
        - root.ItemsUpdateItemRequestNotFoundError
        - root.ItemsUpdateItemRequestTooManyRequestsError
        - root.ItemsUpdateItemRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    get-item-live:
      path: /collections/{collection_id}/items/{item_id}/live
      method: GET
      auth: true
      docs: >-
        Get details of a selected Collection live Item. </br></br> Required
        scope | `CMS:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Get Live Collection Item
      request:
        name: ItemsGetItemLiveRequest
        query-parameters:
          cmsLocaleId:
            type: optional<string>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      response:
        docs: Request was successful
        type: ItemsGetItemLiveResponse
        status-code: 200
      errors:
        - root.ItemsGetItemLiveRequestBadRequestError
        - root.ItemsGetItemLiveRequestUnauthorizedError
        - root.ItemsGetItemLiveRequestNotFoundError
        - root.ItemsGetItemLiveRequestTooManyRequestsError
        - root.ItemsGetItemLiveRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    delete-item-live:
      path: /collections/{collection_id}/items/{item_id}/live
      method: DELETE
      auth: true
      docs: >-
        Remove a live item from the site. Removing a published item will
        unpublish the item from the live site and set it to draft. This endpoint
        does not currently support bulk deletion.</br></br> Required scope |
        `CMS:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Delete Collection Item (Live)
      request:
        name: ItemsDeleteItemLiveRequest
        query-parameters:
          cmsLocaleId:
            type: optional<string>
            docs: >-
              Unique identifier for a CMS Locale. This UID is different from the
              Site locale identifier and is listed as `cmsLocaleId` in the Sites
              response. To query multiple locales, input a comma separated
              string.
      errors:
        - root.ItemsDeleteItemLiveRequestBadRequestError
        - root.ItemsDeleteItemLiveRequestUnauthorizedError
        - root.ItemsDeleteItemLiveRequestNotFoundError
        - root.ItemsDeleteItemLiveRequestTooManyRequestsError
        - root.ItemsDeleteItemLiveRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
    update-item-live:
      path: /collections/{collection_id}/items/{item_id}/live
      method: PATCH
      auth: true
      docs: >-
        Update a selected live Item in a Collection. The updates for this Item
        will be published to the live site. </br></br> Required scope |
        `CMS:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Update Live Collection Item
      request:
        name: ItemsUpdateItemLiveRequest
        body:
          properties:
            cmsLocaleId:
              type: optional<string>
              docs: Identifier for the locale of the CMS item
            isArchived:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to archived
              default: false
            isDraft:
              type: optional<boolean>
              docs: Boolean determining if the Item is set to draft
              default: false
            fieldData: optional<ItemsUpdateItemLiveRequestFieldData>
        content-type: application/json
      response:
        docs: Request was successful
        type: ItemsUpdateItemLiveResponse
        status-code: 200
      errors:
        - root.ItemsUpdateItemLiveRequestBadRequestError
        - root.ItemsUpdateItemLiveRequestUnauthorizedError
        - root.ItemsUpdateItemLiveRequestNotFoundError
        - root.ItemsUpdateItemLiveRequestTooManyRequestsError
        - root.ItemsUpdateItemLiveRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            cmsLocaleId: 653ad57de882f528b32e810e
            isArchived: false
            isDraft: false
            fieldData:
              name: Pan Galactic Gargle Blaster Recipe
              slug: pan-galactic-gargle-blaster
              date: '2022-11-18T00:00:00.000Z'
              featured: true
              color: '#db4b68'
          response:
            body:
              id: 42b720ef280c7a7a3be8cabe
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2022-11-29T16:22:43.159Z'
              lastUpdated: '2022-11-17T17:19:43.282Z'
              createdOn: '2022-11-17T17:11:57.148Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: Pan Galactic Gargle Blaster Recipe
                slug: pan-galactic-gargle-blaster
                date: '2022-11-18T00:00:00.000Z'
                featured: true
                color: '#db4b68'
    publish-item:
      path: /collections/{collection_id}/items/publish
      method: POST
      auth: true
      docs: >-
        Publish an item or multiple items. </br></br> Required scope |
        `cms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
      display-name: Publish Collection Item
      request:
        name: ItemsPublishItemRequest
        body:
          properties:
            itemIds: list<string>
        content-type: application/json
      response:
        docs: Request was successful
        type: ItemsPublishItemResponse
        status-code: 202
      errors:
        - root.ItemsPublishItemRequestBadRequestError
        - root.ItemsPublishItemRequestUnauthorizedError
        - root.ItemsPublishItemRequestNotFoundError
        - root.ItemsPublishItemRequestTooManyRequestsError
        - root.ItemsPublishItemRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
          request:
            itemIds:
              - itemIds
          response:
            body:
              publishedItemIds:
                - 643fd856d66b6528195ee2ca
                - 643fd856d66b6528195ee2cb
              errors:
                - Staging item ID 643fd856d66b6528195ee2cf not found.
  source:
    openapi: ../openapi.yml
",
    },
    "ecommerce.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-settings": {
              "auth": true,
              "display-name": "Get Ecommerce Settings",
              "docs": "Retrieve ecommerce settings for a site.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.EcommerceGetSettingsRequestBadRequestError",
                "root.EcommerceGetSettingsRequestUnauthorizedError",
                "root.EcommerceGetSettingsRequestForbiddenError",
                "root.EcommerceGetSettingsRequestNotFoundError",
                "root.EcommerceGetSettingsRequestConflictError",
                "root.EcommerceGetSettingsRequestTooManyRequestsError",
                "root.EcommerceGetSettingsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2018-10-04T15:21:02Z",
                      "defaultCurrency": "USD",
                      "siteId": "5eb0b5583bf24e2d3a488969",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/ecommerce/settings",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "EcommerceGetSettingsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EcommerceGetSettingsResponse": {
            "docs": "Ecommerce settings for a Webflow Site",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date that the Site was created on",
                "type": "optional<datetime>",
              },
              "defaultCurrency": {
                "docs": "The three-letter ISO currency code for the Site",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The identifier of the Site",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  EcommerceGetSettingsResponse:
    docs: Ecommerce settings for a Webflow Site
    properties:
      siteId:
        type: optional<string>
        docs: The identifier of the Site
      createdOn:
        type: optional<datetime>
        docs: Date that the Site was created on
      defaultCurrency:
        type: optional<string>
        docs: The three-letter ISO currency code for the Site
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-settings:
      path: /sites/{site_id}/ecommerce/settings
      method: GET
      auth: true
      docs: |
        Retrieve ecommerce settings for a site.

        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Get Ecommerce Settings
      response:
        docs: Request was successful
        type: EcommerceGetSettingsResponse
        status-code: 200
      errors:
        - root.EcommerceGetSettingsRequestBadRequestError
        - root.EcommerceGetSettingsRequestUnauthorizedError
        - root.EcommerceGetSettingsRequestForbiddenError
        - root.EcommerceGetSettingsRequestNotFoundError
        - root.EcommerceGetSettingsRequestConflictError
        - root.EcommerceGetSettingsRequestTooManyRequestsError
        - root.EcommerceGetSettingsRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              siteId: 5eb0b5583bf24e2d3a488969
              createdOn: '2018-10-04T15:21:02Z'
              defaultCurrency: USD
  source:
    openapi: ../openapi.yml
",
    },
    "forms.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Forms",
          "endpoints": {
            "get": {
              "auth": true,
              "display-name": "Get Form Schema",
              "docs": "Get information about a given form</br></br> Required scope | `forms:read`",
              "errors": [
                "root.FormsGetRequestBadRequestError",
                "root.FormsGetRequestUnauthorizedError",
                "root.FormsGetRequestForbiddenError",
                "root.FormsGetRequestNotFoundError",
                "root.FormsGetRequestTooManyRequestsError",
                "root.FormsGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2016-10-24T19:41:29Z",
                      "displayName": "Email Form",
                      "fields": {
                        "589a331aa51e760df7ccb89d": {
                          "displayName": "Email",
                          "placeholder": "Enter your email",
                          "type": "Email",
                          "userVisible": true,
                        },
                        "660d5bcc9c0772150459dfb1": {
                          "displayName": "Name",
                          "type": "Plain",
                          "userVisible": true,
                        },
                      },
                      "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                      "id": "589a331aa51e760df7ccb89e",
                      "lastUpdated": "2016-10-24T19:43:17Z",
                      "pageId": "6419db964a9c43f6a3af6348",
                      "pageName": "Home",
                      "responseSettings": {
                        "redirectMethod": "GET",
                        "redirectUrl": "https://example.com",
                        "sendEmailConfirmation": true,
                      },
                      "siteDomainId": "6419db964a9c436a4baf6248",
                      "siteId": "580e63e98c9a982ac9b8b741",
                      "workspaceId": "580e63fc8c9a982ac9b8b744",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/forms/{form_id}",
              "path-parameters": {
                "form_id": {
                  "docs": "Unique identifier for a Form",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FormsGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-submission": {
              "auth": true,
              "display-name": "Get Form Submission",
              "docs": "Get information about a given form submission</br></br> Required scope | `forms:read`",
              "errors": [
                "root.FormsGetSubmissionRequestBadRequestError",
                "root.FormsGetSubmissionRequestUnauthorizedError",
                "root.FormsGetSubmissionRequestForbiddenError",
                "root.FormsGetSubmissionRequestNotFoundError",
                "root.FormsGetSubmissionRequestTooManyRequestsError",
                "root.FormsGetSubmissionRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_submission_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "dateSubmitted": "2022-09-14T12:35:16Z",
                      "displayName": "Sample Form",
                      "formResponse": {
                        "First Name": "Arthur",
                        "Last Name": "Dent",
                      },
                      "id": "6321ca84df3949bfc6752327",
                      "siteId": "62749158efef318abc8d5a0f",
                      "workspaceId": "62749158efef318abc8d5a0f",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/form_submissions/{form_submission_id}",
              "path-parameters": {
                "form_submission_id": {
                  "docs": "Unique identifier for a Form Submission",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FormsGetSubmissionResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Forms",
              "docs": "List forms for a given site </br></br> Required scope | `forms:read`",
              "errors": [
                "root.FormsListRequestBadRequestError",
                "root.FormsListRequestUnauthorizedError",
                "root.FormsListRequestForbiddenError",
                "root.FormsListRequestNotFoundError",
                "root.FormsListRequestConflictError",
                "root.FormsListRequestTooManyRequestsError",
                "root.FormsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "forms": [
                        {
                          "createdOn": "2016-10-24T19:41:29Z",
                          "displayName": "Email Form",
                          "fields": {
                            "0": {
                              "displayName": "Email",
                              "userVisible": true,
                            },
                            "1": {
                              "displayName": "Email",
                              "userVisible": true,
                            },
                          },
                          "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                          "id": "589a331aa51e760df7ccb89e",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "pageId": "6419db964a9c43f6a3af6348",
                          "pageName": "Home",
                          "responseSettings": {
                            "redirectMethod": "GET",
                            "redirectUrl": "https://example.com",
                            "sendEmailConfirmation": true,
                          },
                          "siteDomainId": "6419db964a9c436a4baf6248",
                          "siteId": "580e63e98c9a982ac9b8b741",
                          "workspaceId": "580e63fc8c9a982ac9b8b744",
                        },
                        {
                          "createdOn": "2016-10-24T19:41:29Z",
                          "displayName": "Name Form",
                          "fields": {
                            "0": {
                              "displayName": "Email",
                              "userVisible": true,
                            },
                          },
                          "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                          "id": "580ff8d7ba3e45ba9fe588e9",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "pageId": "6419db964a9c43f6a3af6348",
                          "pageName": "Home",
                          "responseSettings": {
                            "redirectMethod": "GET",
                            "redirectUrl": "https://example.com",
                            "sendEmailConfirmation": false,
                          },
                          "siteDomainId": "6419db964a9c436a4baf6248",
                          "siteId": "580e63e98c9a982ac9b8b741",
                          "workspaceId": "580e63fc8c9a982ac9b8b744",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/forms",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "FormsListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FormsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-submissions": {
              "auth": true,
              "display-name": "List Form Submissions",
              "docs": "List form submissions for a given form </br></br> Required scope | `forms:read`",
              "errors": [
                "root.FormsListSubmissionsRequestBadRequestError",
                "root.FormsListSubmissionsRequestUnauthorizedError",
                "root.FormsListSubmissionsRequestForbiddenError",
                "root.FormsListSubmissionsRequestNotFoundError",
                "root.FormsListSubmissionsRequestTooManyRequestsError",
                "root.FormsListSubmissionsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "formSubmissions": [
                        {
                          "dateSubmitted": "2022-09-14T12:35:16Z",
                          "displayName": "Sample Form",
                          "formResponse": {
                            "First Name": "Arthur",
                            "Last Name": "Dent",
                          },
                          "id": "6321ca84df3949bfc6752327",
                          "siteId": "62749158efef318abc8d5a0f",
                          "workspaceId": "62749158efef318abc8d5a0f",
                        },
                        {
                          "dateSubmitted": "2022-09-14T12:35:16Z",
                          "displayName": "Sample Form",
                          "formResponse": {
                            "First Name": "Ford",
                            "Last Name": "Prefect",
                          },
                          "id": "660d64fabf6e0a0d4edab981",
                          "siteId": "62749158efef318abc8d5a0f",
                          "workspaceId": "62749158efef318abc8d5a0f",
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/forms/{form_id}/submissions",
              "path-parameters": {
                "form_id": {
                  "docs": "Unique identifier for a Form",
                  "type": "string",
                },
              },
              "request": {
                "name": "FormsListSubmissionsRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FormsListSubmissionsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-submission": {
              "auth": true,
              "display-name": "Modify Form Submission",
              "docs": "Update hidden fields on a form submission</br></br> Required scope | `forms:write`",
              "errors": [
                "root.FormsUpdateSubmissionRequestBadRequestError",
                "root.FormsUpdateSubmissionRequestUnauthorizedError",
                "root.FormsUpdateSubmissionRequestForbiddenError",
                "root.FormsUpdateSubmissionRequestNotFoundError",
                "root.FormsUpdateSubmissionRequestConflictError",
                "root.FormsUpdateSubmissionRequestTooManyRequestsError",
                "root.FormsUpdateSubmissionRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "form_submission_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "dateSubmitted": "2022-09-14T12:35:16Z",
                      "displayName": "Sample Form",
                      "formResponse": {
                        "First Name": "Arthur",
                        "Last Name": "Dent",
                      },
                      "id": "6321ca84df3949bfc6752327",
                      "siteId": "62749158efef318abc8d5a0f",
                      "workspaceId": "62749158efef318abc8d5a0f",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/form_submissions/{form_submission_id}",
              "path-parameters": {
                "form_submission_id": {
                  "docs": "Unique identifier for a Form Submission",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "formSubmissionData": {
                      "docs": "An existing **hidden field** defined on the form schema, and the corresponding value to set",
                      "type": "optional<map<string, unknown>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "FormsUpdateSubmissionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "FormsUpdateSubmissionResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "FormSubmissionPayload": {
            "docs": "The Webhook payload for when a form is submitted",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<FormSubmissionPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormSubmissionPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "data": {
                "docs": "The data submitted in the form",
                "type": "optional<map<string, unknown>>",
              },
              "formElementId": {
                "docs": "The unique id of the Form element",
                "type": "optional<string>",
              },
              "formId": {
                "docs": "The ID of the form submission",
                "type": "optional<string>",
              },
              "id": {
                "docs": "the ID of the event",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the form",
                "type": "optional<string>",
              },
              "schema": {
                "docs": "A list of fields from the submitted form",
                "type": "optional<list<unknown>>",
              },
              "siteId": {
                "docs": "The id of the site that the form was submitted from",
                "type": "optional<string>",
              },
              "submittedAt": {
                "docs": "The timestamp the form was submitted",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsGetResponse": {
            "docs": "A form and its corresponding metadata",
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date that the Form was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "fields": {
                "docs": "A collection of form field objects",
                "type": "optional<map<string, FormsGetResponseFieldsValue>>",
              },
              "formElementId": {
                "docs": "The unique id of the Form element",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique id for the Form",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Form was last updated on",
                "type": "optional<datetime>",
              },
              "pageId": {
                "docs": "The unique id for the Page on which the Form is placed",
                "type": "optional<string>",
              },
              "pageName": {
                "docs": "The user-visible name of the Page where the Form is placed",
                "type": "optional<string>",
              },
              "responseSettings": {
                "docs": "Settings for form responses",
                "type": "optional<FormsGetResponseResponseSettings>",
              },
              "siteDomainId": {
                "docs": "The unique id corresponding to the site's Domain name",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsGetResponseFieldsValue": {
            "docs": "An object containing field info for a specific fieldID.",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The field name displayed on the site",
                "type": "optional<string>",
              },
              "placeholder": {
                "docs": "The placeholder text for the field",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The field type",
                "type": "optional<FormsGetResponseFieldsValueType>",
              },
              "userVisible": {
                "docs": "Whether the field is visible to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsGetResponseFieldsValueType": {
            "docs": "The field type",
            "enum": [
              "Plain",
              "Email",
              "Password",
              "Phone",
              "Number",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsGetResponseResponseSettings": {
            "docs": "Settings for form responses",
            "inline": true,
            "properties": {
              "redirectAction": {
                "docs": "The action to take after form submission",
                "type": "optional<string>",
              },
              "redirectMethod": {
                "docs": "The HTTP request method to use for the redirectUrl (eg. POST or GET)",
                "type": "optional<string>",
              },
              "redirectUrl": {
                "docs": "The url or path to redirect the user to after form submission",
                "type": "optional<string>",
              },
              "sendEmailConfirmation": {
                "docs": "Whether to send an email confirmation to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsGetSubmissionResponse": {
            "docs": "A form submission",
            "inline": undefined,
            "properties": {
              "dateSubmitted": {
                "docs": "Date that the Form was submitted on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "formResponse": {
                "docs": "The data submitted in the Form",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "The unique id of the Form submission",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListResponse": {
            "docs": "A list of forms",
            "inline": undefined,
            "properties": {
              "forms": "optional<list<FormsListResponseFormsItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<FormsListResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListResponseFormsItem": {
            "docs": "A Webflow form",
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "Date that the Form was created on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "fields": {
                "docs": "A collection of form field objects",
                "type": "optional<map<string, FormsListResponseFormsItemFieldsValue>>",
              },
              "formElementId": {
                "docs": "The unique id of the Form element",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique id for the Form",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date that the Form was last updated on",
                "type": "optional<datetime>",
              },
              "pageId": {
                "docs": "The unique id for the Page on which the Form is placed",
                "type": "optional<string>",
              },
              "pageName": {
                "docs": "The user-visible name of the Page where the Form is placed",
                "type": "optional<string>",
              },
              "responseSettings": {
                "docs": "Settings for form responses",
                "type": "optional<FormsListResponseFormsItemResponseSettings>",
              },
              "siteDomainId": {
                "docs": "The unique id corresponding to the site's Domain name",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListResponseFormsItemFieldsValue": {
            "docs": "An object containing field info for a specific fieldID.",
            "inline": true,
            "properties": {
              "displayName": {
                "docs": "The field name displayed on the site",
                "type": "optional<string>",
              },
              "placeholder": {
                "docs": "The placeholder text for the field",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The field type",
                "type": "optional<FormsListResponseFormsItemFieldsValueType>",
              },
              "userVisible": {
                "docs": "Whether the field is visible to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListResponseFormsItemFieldsValueType": {
            "docs": "The field type",
            "enum": [
              "Plain",
              "Email",
              "Password",
              "Phone",
              "Number",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListResponseFormsItemResponseSettings": {
            "docs": "Settings for form responses",
            "inline": true,
            "properties": {
              "redirectAction": {
                "docs": "The action to take after form submission",
                "type": "optional<string>",
              },
              "redirectMethod": {
                "docs": "The HTTP request method to use for the redirectUrl (eg. POST or GET)",
                "type": "optional<string>",
              },
              "redirectUrl": {
                "docs": "The url or path to redirect the user to after form submission",
                "type": "optional<string>",
              },
              "sendEmailConfirmation": {
                "docs": "Whether to send an email confirmation to the user",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListSubmissionsResponse": {
            "docs": "A list of form submissions",
            "inline": undefined,
            "properties": {
              "formSubmissions": "optional<list<FormsListSubmissionsResponseFormSubmissionsItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<FormsListSubmissionsResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListSubmissionsResponseFormSubmissionsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "dateSubmitted": {
                "docs": "Date that the Form was submitted on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "formResponse": {
                "docs": "The data submitted in the Form",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "The unique id of the Form submission",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsListSubmissionsResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "FormsUpdateSubmissionResponse": {
            "docs": "A form submission",
            "inline": undefined,
            "properties": {
              "dateSubmitted": {
                "docs": "Date that the Form was submitted on",
                "type": "optional<datetime>",
              },
              "displayName": {
                "docs": "The Form name displayed on the site",
                "type": "optional<string>",
              },
              "formResponse": {
                "docs": "The data submitted in the Form",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "The unique id of the Form submission",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The unique id of the Site the Form belongs to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The unique id of the Workspace the Site belongs to",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "form_submission": {
            "display-name": "Form Submission",
            "docs": "Information about a form that was subitted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "data": {
                      "First Name": "Zaphod",
                      "Last Name": "Beeblebrox",
                      "Phone Number": 15550000000,
                      "email": "zaphod@heartofgold.ai",
                    },
                    "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    "formId": "65429eadebe8a9f3a30f62d0",
                    "id": "6321ca84df3949bfc6752327",
                    "name": "Contact Us",
                    "schema": [
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c4",
                        "fieldName": "First Name",
                        "fieldType": "FormTextInput",
                      },
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c5",
                        "fieldName": "Last Name",
                        "fieldType": "FormTextInput",
                      },
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c6",
                        "fieldName": "email",
                        "fieldType": "FormTextInput",
                      },
                      {
                        "fieldElementId": "285042f7-d554-dc7f-102c-aa10d6a2d2c7",
                        "fieldName": "Phone Number",
                        "fieldType": "FormTextInput",
                      },
                    ],
                    "siteId": "65427cf400e02b306eaa049c",
                    "submittedAt": "2022-09-14T12:35:16.117Z",
                  },
                  "triggerType": "form_submission",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a form is submitted",
              "type": "FormSubmissionPayload",
            },
          },
        },
      },
      "rawContents": "types:
  FormsListResponseFormsItemFieldsValueType:
    enum:
      - Plain
      - Email
      - Password
      - Phone
      - Number
    docs: The field type
    inline: true
    source:
      openapi: ../openapi.yml
  FormsListResponseFormsItemFieldsValue:
    docs: An object containing field info for a specific fieldID.
    properties:
      displayName:
        type: optional<string>
        docs: The field name displayed on the site
      type:
        type: optional<FormsListResponseFormsItemFieldsValueType>
        docs: The field type
      placeholder:
        type: optional<string>
        docs: The placeholder text for the field
      userVisible:
        type: optional<boolean>
        docs: Whether the field is visible to the user
    source:
      openapi: ../openapi.yml
    inline: true
  FormsListResponseFormsItemResponseSettings:
    docs: Settings for form responses
    properties:
      redirectUrl:
        type: optional<string>
        docs: The url or path to redirect the user to after form submission
      redirectMethod:
        type: optional<string>
        docs: The HTTP request method to use for the redirectUrl (eg. POST or GET)
      redirectAction:
        type: optional<string>
        docs: The action to take after form submission
      sendEmailConfirmation:
        type: optional<boolean>
        docs: Whether to send an email confirmation to the user
    source:
      openapi: ../openapi.yml
    inline: true
  FormsListResponseFormsItem:
    docs: A Webflow form
    properties:
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      createdOn:
        type: optional<datetime>
        docs: Date that the Form was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Form was last updated on
      fields:
        type: optional<map<string, FormsListResponseFormsItemFieldsValue>>
        docs: A collection of form field objects
      responseSettings:
        type: optional<FormsListResponseFormsItemResponseSettings>
        docs: Settings for form responses
      id:
        type: optional<string>
        docs: The unique id for the Form
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      siteDomainId:
        type: optional<string>
        docs: The unique id corresponding to the site's Domain name
      pageId:
        type: optional<string>
        docs: The unique id for the Page on which the Form is placed
      pageName:
        type: optional<string>
        docs: The user-visible name of the Page where the Form is placed
      formElementId:
        type: optional<string>
        docs: The unique id of the Form element
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
    source:
      openapi: ../openapi.yml
    inline: true
  FormsListResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  FormsListResponse:
    docs: A list of forms
    properties:
      forms: optional<list<FormsListResponseFormsItem>>
      pagination:
        type: optional<FormsListResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  FormsGetResponseFieldsValueType:
    enum:
      - Plain
      - Email
      - Password
      - Phone
      - Number
    docs: The field type
    inline: true
    source:
      openapi: ../openapi.yml
  FormsGetResponseFieldsValue:
    docs: An object containing field info for a specific fieldID.
    properties:
      displayName:
        type: optional<string>
        docs: The field name displayed on the site
      type:
        type: optional<FormsGetResponseFieldsValueType>
        docs: The field type
      placeholder:
        type: optional<string>
        docs: The placeholder text for the field
      userVisible:
        type: optional<boolean>
        docs: Whether the field is visible to the user
    source:
      openapi: ../openapi.yml
    inline: true
  FormsGetResponseResponseSettings:
    docs: Settings for form responses
    properties:
      redirectUrl:
        type: optional<string>
        docs: The url or path to redirect the user to after form submission
      redirectMethod:
        type: optional<string>
        docs: The HTTP request method to use for the redirectUrl (eg. POST or GET)
      redirectAction:
        type: optional<string>
        docs: The action to take after form submission
      sendEmailConfirmation:
        type: optional<boolean>
        docs: Whether to send an email confirmation to the user
    source:
      openapi: ../openapi.yml
    inline: true
  FormsGetResponse:
    docs: A form and its corresponding metadata
    properties:
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      createdOn:
        type: optional<datetime>
        docs: Date that the Form was created on
      lastUpdated:
        type: optional<datetime>
        docs: Date that the Form was last updated on
      fields:
        type: optional<map<string, FormsGetResponseFieldsValue>>
        docs: A collection of form field objects
      responseSettings:
        type: optional<FormsGetResponseResponseSettings>
        docs: Settings for form responses
      id:
        type: optional<string>
        docs: The unique id for the Form
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      siteDomainId:
        type: optional<string>
        docs: The unique id corresponding to the site's Domain name
      pageId:
        type: optional<string>
        docs: The unique id for the Page on which the Form is placed
      pageName:
        type: optional<string>
        docs: The user-visible name of the Page where the Form is placed
      formElementId:
        type: optional<string>
        docs: The unique id of the Form element
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
    source:
      openapi: ../openapi.yml
  FormsListSubmissionsResponseFormSubmissionsItem:
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../openapi.yml
    inline: true
  FormsListSubmissionsResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  FormsListSubmissionsResponse:
    docs: A list of form submissions
    properties:
      formSubmissions: optional<list<FormsListSubmissionsResponseFormSubmissionsItem>>
      pagination:
        type: optional<FormsListSubmissionsResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  FormsGetSubmissionResponse:
    docs: A form submission
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../openapi.yml
  FormsUpdateSubmissionResponse:
    docs: A form submission
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Form submission
      displayName:
        type: optional<string>
        docs: The Form name displayed on the site
      siteId:
        type: optional<string>
        docs: The unique id of the Site the Form belongs to
      workspaceId:
        type: optional<string>
        docs: The unique id of the Workspace the Site belongs to
      dateSubmitted:
        type: optional<datetime>
        docs: Date that the Form was submitted on
      formResponse:
        type: optional<map<string, unknown>>
        docs: The data submitted in the Form
    source:
      openapi: ../openapi.yml
  FormSubmissionPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      name:
        type: optional<string>
        docs: The name of the form
      siteId:
        type: optional<string>
        docs: The id of the site that the form was submitted from
      data:
        type: optional<map<string, unknown>>
        docs: The data submitted in the form
      schema:
        type: optional<list<unknown>>
        docs: A list of fields from the submitted form
      submittedAt:
        type: optional<string>
        docs: The timestamp the form was submitted
      id:
        type: optional<string>
        docs: the ID of the event
      formId:
        type: optional<string>
        docs: The ID of the form submission
      formElementId:
        type: optional<string>
        docs: The unique id of the Form element
    source:
      openapi: ../openapi.yml
    inline: true
  FormSubmissionPayload:
    docs: The Webhook payload for when a form is submitted
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<FormSubmissionPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/forms
      method: GET
      auth: true
      docs: List forms for a given site </br></br> Required scope | `forms:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Forms
      request:
        name: FormsListRequest
        query-parameters:
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: Request was successful
        type: FormsListResponse
        status-code: 200
      errors:
        - root.FormsListRequestBadRequestError
        - root.FormsListRequestUnauthorizedError
        - root.FormsListRequestForbiddenError
        - root.FormsListRequestNotFoundError
        - root.FormsListRequestConflictError
        - root.FormsListRequestTooManyRequestsError
        - root.FormsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              forms:
                - displayName: Email Form
                  createdOn: '2016-10-24T19:41:29Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  fields:
                    '0':
                      displayName: Email
                      userVisible: true
                    '1':
                      displayName: Email
                      userVisible: true
                  responseSettings:
                    redirectUrl: https://example.com
                    redirectMethod: GET
                    sendEmailConfirmation: true
                  id: 589a331aa51e760df7ccb89e
                  siteId: 580e63e98c9a982ac9b8b741
                  siteDomainId: 6419db964a9c436a4baf6248
                  pageId: 6419db964a9c43f6a3af6348
                  pageName: Home
                  formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
                  workspaceId: 580e63fc8c9a982ac9b8b744
                - displayName: Name Form
                  createdOn: '2016-10-24T19:41:29Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  fields:
                    '0':
                      displayName: Email
                      userVisible: true
                  responseSettings:
                    redirectUrl: https://example.com
                    redirectMethod: GET
                    sendEmailConfirmation: false
                  id: 580ff8d7ba3e45ba9fe588e9
                  siteId: 580e63e98c9a982ac9b8b741
                  siteDomainId: 6419db964a9c436a4baf6248
                  pageId: 6419db964a9c43f6a3af6348
                  pageName: Home
                  formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
                  workspaceId: 580e63fc8c9a982ac9b8b744
              pagination:
                limit: 25
                offset: 0
                total: 2
    get:
      path: /forms/{form_id}
      method: GET
      auth: true
      docs: >-
        Get information about a given form</br></br> Required scope |
        `forms:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        form_id:
          type: string
          docs: Unique identifier for a Form
      display-name: Get Form Schema
      response:
        docs: Request was successful
        type: FormsGetResponse
        status-code: 200
      errors:
        - root.FormsGetRequestBadRequestError
        - root.FormsGetRequestUnauthorizedError
        - root.FormsGetRequestForbiddenError
        - root.FormsGetRequestNotFoundError
        - root.FormsGetRequestTooManyRequestsError
        - root.FormsGetRequestInternalServerError
      examples:
        - path-parameters:
            form_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              displayName: Email Form
              createdOn: '2016-10-24T19:41:29Z'
              lastUpdated: '2016-10-24T19:43:17Z'
              fields:
                660d5bcc9c0772150459dfb1:
                  displayName: Name
                  type: Plain
                  userVisible: true
                589a331aa51e760df7ccb89d:
                  displayName: Email
                  type: Email
                  placeholder: Enter your email
                  userVisible: true
              responseSettings:
                redirectUrl: https://example.com
                redirectMethod: GET
                sendEmailConfirmation: true
              id: 589a331aa51e760df7ccb89e
              siteId: 580e63e98c9a982ac9b8b741
              siteDomainId: 6419db964a9c436a4baf6248
              pageId: 6419db964a9c43f6a3af6348
              pageName: Home
              formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
              workspaceId: 580e63fc8c9a982ac9b8b744
    list-submissions:
      path: /forms/{form_id}/submissions
      method: GET
      auth: true
      docs: >-
        List form submissions for a given form </br></br> Required scope |
        `forms:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        form_id:
          type: string
          docs: Unique identifier for a Form
      display-name: List Form Submissions
      request:
        name: FormsListSubmissionsRequest
        query-parameters:
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: FormsListSubmissionsResponse
        status-code: 200
      errors:
        - root.FormsListSubmissionsRequestBadRequestError
        - root.FormsListSubmissionsRequestUnauthorizedError
        - root.FormsListSubmissionsRequestForbiddenError
        - root.FormsListSubmissionsRequestNotFoundError
        - root.FormsListSubmissionsRequestTooManyRequestsError
        - root.FormsListSubmissionsRequestInternalServerError
      examples:
        - path-parameters:
            form_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              formSubmissions:
                - id: 6321ca84df3949bfc6752327
                  displayName: Sample Form
                  siteId: 62749158efef318abc8d5a0f
                  workspaceId: 62749158efef318abc8d5a0f
                  dateSubmitted: '2022-09-14T12:35:16Z'
                  formResponse:
                    First Name: Arthur
                    Last Name: Dent
                - id: 660d64fabf6e0a0d4edab981
                  displayName: Sample Form
                  siteId: 62749158efef318abc8d5a0f
                  workspaceId: 62749158efef318abc8d5a0f
                  dateSubmitted: '2022-09-14T12:35:16Z'
                  formResponse:
                    First Name: Ford
                    Last Name: Prefect
              pagination:
                limit: 25
                offset: 0
                total: 2
    get-submission:
      path: /form_submissions/{form_submission_id}
      method: GET
      auth: true
      docs: >-
        Get information about a given form submission</br></br> Required scope |
        `forms:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        form_submission_id:
          type: string
          docs: Unique identifier for a Form Submission
      display-name: Get Form Submission
      response:
        docs: Request was successful
        type: FormsGetSubmissionResponse
        status-code: 200
      errors:
        - root.FormsGetSubmissionRequestBadRequestError
        - root.FormsGetSubmissionRequestUnauthorizedError
        - root.FormsGetSubmissionRequestForbiddenError
        - root.FormsGetSubmissionRequestNotFoundError
        - root.FormsGetSubmissionRequestTooManyRequestsError
        - root.FormsGetSubmissionRequestInternalServerError
      examples:
        - path-parameters:
            form_submission_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              id: 6321ca84df3949bfc6752327
              displayName: Sample Form
              siteId: 62749158efef318abc8d5a0f
              workspaceId: 62749158efef318abc8d5a0f
              dateSubmitted: '2022-09-14T12:35:16Z'
              formResponse:
                First Name: Arthur
                Last Name: Dent
    update-submission:
      path: /form_submissions/{form_submission_id}
      method: PATCH
      auth: true
      docs: >-
        Update hidden fields on a form submission</br></br> Required scope |
        `forms:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        form_submission_id:
          type: string
          docs: Unique identifier for a Form Submission
      display-name: Modify Form Submission
      request:
        name: FormsUpdateSubmissionRequest
        body:
          properties:
            formSubmissionData:
              type: optional<map<string, unknown>>
              docs: >-
                An existing **hidden field** defined on the form schema, and the
                corresponding value to set
        content-type: application/json
      response:
        docs: Request was successful
        type: FormsUpdateSubmissionResponse
        status-code: 200
      errors:
        - root.FormsUpdateSubmissionRequestBadRequestError
        - root.FormsUpdateSubmissionRequestUnauthorizedError
        - root.FormsUpdateSubmissionRequestForbiddenError
        - root.FormsUpdateSubmissionRequestNotFoundError
        - root.FormsUpdateSubmissionRequestConflictError
        - root.FormsUpdateSubmissionRequestTooManyRequestsError
        - root.FormsUpdateSubmissionRequestInternalServerError
      examples:
        - path-parameters:
            form_submission_id: 580e63e98c9a982ac9b8b741
          request: {}
          response:
            body:
              id: 6321ca84df3949bfc6752327
              displayName: Sample Form
              siteId: 62749158efef318abc8d5a0f
              workspaceId: 62749158efef318abc8d5a0f
              dateSubmitted: '2022-09-14T12:35:16Z'
              formResponse:
                First Name: Arthur
                Last Name: Dent
  source:
    openapi: ../openapi.yml
  display-name: Forms
webhooks:
  form_submission:
    method: POST
    display-name: Form Submission
    headers: {}
    payload:
      type: FormSubmissionPayload
      docs: The Webhook payload for when a form is submitted
    examples:
      - payload:
          triggerType: form_submission
          payload:
            name: Contact Us
            siteId: 65427cf400e02b306eaa049c
            data:
              First Name: Zaphod
              Last Name: Beeblebrox
              email: zaphod@heartofgold.ai
              Phone Number: 15550000000
            schema:
              - fieldName: First Name
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c4
              - fieldName: Last Name
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c5
              - fieldName: email
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c6
              - fieldName: Phone Number
                fieldType: FormTextInput
                fieldElementId: 285042f7-d554-dc7f-102c-aa10d6a2d2c7
            submittedAt: '2022-09-14T12:35:16.117Z'
            id: 6321ca84df3949bfc6752327
            formId: 65429eadebe8a9f3a30f62d0
            formElementId: 4e038d2c-6a1e-4953-7be9-a59a2b453177
    docs: Information about a form that was subitted
",
    },
    "inventory.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Inventory",
          "endpoints": {
            "list": {
              "auth": true,
              "display-name": "List Inventory",
              "docs": "List the current inventory levels for a particular SKU item.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.InventoryListRequestBadRequestError",
                "root.InventoryListRequestUnauthorizedError",
                "root.InventoryListRequestForbiddenError",
                "root.InventoryListRequestNotFoundError",
                "root.InventoryListRequestConflictError",
                "root.InventoryListRequestTooManyRequestsError",
                "root.InventoryListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "response": {
                    "body": {
                      "id": "5bfedb42bab0ad90fa7dad39",
                      "inventoryType": "infinite",
                      "quantity": 100,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/inventory",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "InventoryListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "display-name": "Update Item Inventory",
              "docs": "Updates the current inventory levels for a particular SKU item. Updates may be given in one or two methods, absolutely or incrementally. Absolute updates are done by setting `quantity` directly. Incremental updates are by specifying the inventory delta in `updateQuantity` which is then added to the `quantity` stored on the server.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.InventoryUpdateRequestBadRequestError",
                "root.InventoryUpdateRequestUnauthorizedError",
                "root.InventoryUpdateRequestForbiddenError",
                "root.InventoryUpdateRequestNotFoundError",
                "root.InventoryUpdateRequestConflictError",
                "root.InventoryUpdateRequestTooManyRequestsError",
                "root.InventoryUpdateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "collection_id": "580e63fc8c9a982ac9b8b745",
                    "item_id": "580e64008c9a982ac9b8b754",
                  },
                  "request": {
                    "inventoryType": "infinite",
                  },
                  "response": {
                    "body": {
                      "id": "5bfedb42bab0ad90fa7dad39",
                      "inventoryType": "infinite",
                      "quantity": 100,
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/collections/{collection_id}/items/{item_id}/inventory",
              "path-parameters": {
                "collection_id": {
                  "docs": "Unique identifier for a Collection",
                  "type": "string",
                },
                "item_id": {
                  "docs": "Unique identifier for an Item",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "inventoryType": {
                      "docs": "infinite or finite",
                      "type": "InventoryUpdateRequestInventoryType",
                    },
                    "quantity": {
                      "docs": "Immediately sets quantity to this value.",
                      "type": "optional<double>",
                    },
                    "updateQuantity": {
                      "docs": "Adds this quantity to currently store quantity. Can be negative.",
                      "type": "optional<double>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "InventoryUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "InventoryUpdateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EcommInventoryChangedPayload": {
            "docs": "The availabile inventory for an item",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier for a SKU item",
                "type": "optional<string>",
              },
              "inventoryType": {
                "docs": "infinite or finite",
                "type": "optional<EcommInventoryChangedPayloadInventoryType>",
              },
              "quantity": {
                "docs": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommInventoryChangedPayloadInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryListResponse": {
            "docs": "The availabile inventory for an item",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier for a SKU item",
                "type": "optional<string>",
              },
              "inventoryType": {
                "docs": "infinite or finite",
                "type": "optional<InventoryListResponseInventoryType>",
              },
              "quantity": {
                "docs": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryListResponseInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryUpdateRequestInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryUpdateResponse": {
            "docs": "The availabile inventory for an item",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "Unique identifier for a SKU item",
                "type": "optional<string>",
              },
              "inventoryType": {
                "docs": "infinite or finite",
                "type": "optional<InventoryUpdateResponseInventoryType>",
              },
              "quantity": {
                "docs": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "InventoryUpdateResponseInventoryType": {
            "docs": "infinite or finite",
            "enum": [
              "infinite",
              "finite",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "ecomm_inventory_changed": {
            "display-name": "Updated eComm Inventory",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "id": "5bfedb42bab0ad90fa7dad39",
                  "quantity": 100,
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The availabile inventory for an item",
              "type": "EcommInventoryChangedPayload",
            },
          },
        },
      },
      "rawContents": "types:
  InventoryListResponseInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  InventoryListResponse:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<InventoryListResponseInventoryType>
        docs: infinite or finite
    source:
      openapi: ../openapi.yml
  InventoryUpdateRequestInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  InventoryUpdateResponseInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  InventoryUpdateResponse:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<InventoryUpdateResponseInventoryType>
        docs: infinite or finite
    source:
      openapi: ../openapi.yml
  EcommInventoryChangedPayloadInventoryType:
    enum:
      - infinite
      - finite
    docs: infinite or finite
    inline: true
    source:
      openapi: ../openapi.yml
  EcommInventoryChangedPayload:
    docs: The availabile inventory for an item
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for a SKU item
      quantity:
        type: optional<double>
        docs: >-
          Total quantity of items remaining in inventory (if inventoryType is
          finite)
      inventoryType:
        type: optional<EcommInventoryChangedPayloadInventoryType>
        docs: infinite or finite
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /collections/{collection_id}/items/{item_id}/inventory
      method: GET
      auth: true
      docs: |
        List the current inventory levels for a particular SKU item.

        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: List Inventory
      response:
        docs: Request was successful
        type: InventoryListResponse
        status-code: 200
      errors:
        - root.InventoryListRequestBadRequestError
        - root.InventoryListRequestUnauthorizedError
        - root.InventoryListRequestForbiddenError
        - root.InventoryListRequestNotFoundError
        - root.InventoryListRequestConflictError
        - root.InventoryListRequestTooManyRequestsError
        - root.InventoryListRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 5bfedb42bab0ad90fa7dad39
              quantity: 100
              inventoryType: infinite
    update:
      path: /collections/{collection_id}/items/{item_id}/inventory
      method: PATCH
      auth: true
      docs: >
        Updates the current inventory levels for a particular SKU item. Updates
        may be given in one or two methods, absolutely or incrementally.
        Absolute updates are done by setting `quantity` directly. Incremental
        updates are by specifying the inventory delta in `updateQuantity` which
        is then added to the `quantity` stored on the server.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        collection_id:
          type: string
          docs: Unique identifier for a Collection
        item_id:
          type: string
          docs: Unique identifier for an Item
      display-name: Update Item Inventory
      request:
        name: InventoryUpdateRequest
        body:
          properties:
            inventoryType:
              type: InventoryUpdateRequestInventoryType
              docs: infinite or finite
            updateQuantity:
              type: optional<double>
              docs: Adds this quantity to currently store quantity. Can be negative.
            quantity:
              type: optional<double>
              docs: Immediately sets quantity to this value.
        content-type: application/json
      response:
        docs: Request was successful
        type: InventoryUpdateResponse
        status-code: 200
      errors:
        - root.InventoryUpdateRequestBadRequestError
        - root.InventoryUpdateRequestUnauthorizedError
        - root.InventoryUpdateRequestForbiddenError
        - root.InventoryUpdateRequestNotFoundError
        - root.InventoryUpdateRequestConflictError
        - root.InventoryUpdateRequestTooManyRequestsError
        - root.InventoryUpdateRequestInternalServerError
      examples:
        - path-parameters:
            collection_id: 580e63fc8c9a982ac9b8b745
            item_id: 580e64008c9a982ac9b8b754
          request:
            inventoryType: infinite
          response:
            body:
              id: 5bfedb42bab0ad90fa7dad39
              quantity: 100
              inventoryType: infinite
  source:
    openapi: ../openapi.yml
  display-name: Inventory
webhooks:
  ecomm_inventory_changed:
    method: POST
    display-name: Updated eComm Inventory
    headers: {}
    payload:
      type: EcommInventoryChangedPayload
      docs: The availabile inventory for an item
    examples:
      - payload:
          id: 5bfedb42bab0ad90fa7dad39
          quantity: 100
",
    },
    "items.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "CollectionItemChangedPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CollectionItemChangedPayloadFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemChangedPayloadFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemCreatedPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the item was created",
                "type": "optional<string>",
              },
              "fieldData": "optional<CollectionItemCreatedPayloadFieldData>",
              "id": {
                "docs": "Unique identifier for the Item",
                "type": "string",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Item is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Item is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the item was last published",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "The date the item was last updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemCreatedPayloadFieldData": {
            "docs": undefined,
            "extra-properties": true,
            "inline": true,
            "properties": {
              "name": {
                "docs": "Name of the Item",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemDeletedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<CollectionItemDeletedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemDeletedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "collectionId": {
                "docs": "The ID of the collection",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of the collection item that was deleted",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The ID of the site",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The ID of the workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemUnpublishedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<CollectionItemUnpublishedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CollectionItemUnpublishedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "collectionId": {
                "docs": "The ID of the collection",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of the collection item that was deleted",
                "type": "optional<string>",
              },
              "siteId": {
                "docs": "The ID of the site",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "The ID of the workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "collection_item_changed": {
            "display-name": "Item Updated",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "fieldData": {
                    "color": "#db4b68",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "isArchived": false,
                  "isDraft": false,
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
              "type": "CollectionItemChangedPayload",
            },
          },
          "collection_item_created": {
            "display-name": "Item Created",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "fieldData": {
                    "color": "#db4b68",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "isArchived": false,
                  "isDraft": false,
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
              "type": "CollectionItemCreatedPayload",
            },
          },
          "collection_item_deleted": {
            "display-name": "Item Deleted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "collectionId": "664243617fcc8b464b23c4ee",
                    "id": "66424365e972c886137a1cf1",
                    "siteId": "65427cf400e02b306eaa049c",
                    "workspaceId": "625860a7a6c16d624927122f",
                  },
                  "triggerType": "collection_item_deleted,",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "CollectionItemDeletedPayload",
          },
          "collection_item_unpublished": {
            "display-name": "Item Unpublished",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "collectionId": "664243617fcc8b464b23c4ee",
                    "id": "66424365e972c886137a1cf1",
                    "siteId": "65427cf400e02b306eaa049c",
                    "workspaceId": "625860a7a6c16d624927122f",
                  },
                  "triggerType": "collection_item_deleted,",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "CollectionItemUnpublishedPayload",
          },
        },
      },
      "rawContents": "types:
  CollectionItemCreatedPayloadFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemCreatedPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CollectionItemCreatedPayloadFieldData>
    source:
      openapi: ../openapi.yml
  CollectionItemChangedPayloadFieldData:
    properties:
      name:
        type: optional<string>
        docs: Name of the Item
      slug:
        type: optional<string>
        docs: >-
          URL structure of the Item in your site. Note: Updates to an item slug
          will break all links referencing the old slug.
    extra-properties: true
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemChangedPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: string
        docs: Unique identifier for the Item
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<string>
        docs: The date the item was last published
      lastUpdated:
        type: optional<string>
        docs: The date the item was last updated
      createdOn:
        type: optional<string>
        docs: The date the item was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Item is set to draft
        default: false
      fieldData: optional<CollectionItemChangedPayloadFieldData>
    source:
      openapi: ../openapi.yml
  CollectionItemDeletedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      id:
        type: optional<string>
        docs: The ID of the collection item that was deleted
      siteId:
        type: optional<string>
        docs: The ID of the site
      workspaceId:
        type: optional<string>
        docs: The ID of the workspace
      collectionId:
        type: optional<string>
        docs: The ID of the collection
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemDeletedPayload:
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<CollectionItemDeletedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
  CollectionItemUnpublishedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      id:
        type: optional<string>
        docs: The ID of the collection item that was deleted
      siteId:
        type: optional<string>
        docs: The ID of the site
      workspaceId:
        type: optional<string>
        docs: The ID of the workspace
      collectionId:
        type: optional<string>
        docs: The ID of the collection
    source:
      openapi: ../openapi.yml
    inline: true
  CollectionItemUnpublishedPayload:
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<CollectionItemUnpublishedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
webhooks:
  collection_item_created:
    method: POST
    display-name: Item Created
    headers: {}
    payload:
      type: CollectionItemCreatedPayload
      docs: >
        The fields that define the schema for a given Item are based on the
        Collection that Item belongs to. Beyond the user defined fields, there
        are a handful of additional fields that are automatically created for
        all items
    examples:
      - payload:
          id: 42b720ef280c7a7a3be8cabe
          cmsLocaleId: 653ad57de882f528b32e810e
          lastPublished: '2022-11-29T16:22:43.159Z'
          lastUpdated: '2022-11-17T17:19:43.282Z'
          createdOn: '2022-11-17T17:11:57.148Z'
          isArchived: false
          isDraft: false
          fieldData:
            name: Pan Galactic Gargle Blaster Recipe
            slug: pan-galactic-gargle-blaster
            date: '2022-11-18T00:00:00.000Z'
            featured: true
            color: '#db4b68'
  collection_item_changed:
    method: POST
    display-name: Item Updated
    headers: {}
    payload:
      type: CollectionItemChangedPayload
      docs: >
        The fields that define the schema for a given Item are based on the
        Collection that Item belongs to. Beyond the user defined fields, there
        are a handful of additional fields that are automatically created for
        all items
    examples:
      - payload:
          id: 42b720ef280c7a7a3be8cabe
          cmsLocaleId: 653ad57de882f528b32e810e
          lastPublished: '2022-11-29T16:22:43.159Z'
          lastUpdated: '2022-11-17T17:19:43.282Z'
          createdOn: '2022-11-17T17:11:57.148Z'
          isArchived: false
          isDraft: false
          fieldData:
            name: Pan Galactic Gargle Blaster Recipe
            slug: pan-galactic-gargle-blaster
            date: '2022-11-18T00:00:00.000Z'
            featured: true
            color: '#db4b68'
  collection_item_deleted:
    method: POST
    display-name: Item Deleted
    headers: {}
    payload: CollectionItemDeletedPayload
    examples:
      - payload:
          triggerType: collection_item_deleted,
          payload:
            id: 66424365e972c886137a1cf1
            siteId: 65427cf400e02b306eaa049c
            workspaceId: 625860a7a6c16d624927122f
            collectionId: 664243617fcc8b464b23c4ee
  collection_item_unpublished:
    method: POST
    display-name: Item Unpublished
    headers: {}
    payload: CollectionItemUnpublishedPayload
    examples:
      - payload:
          triggerType: collection_item_deleted,
          payload:
            id: 66424365e972c886137a1cf1
            siteId: 65427cf400e02b306eaa049c
            workspaceId: 625860a7a6c16d624927122f
            collectionId: 664243617fcc8b464b23c4ee
",
    },
    "orders.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Orders",
          "endpoints": {
            "get": {
              "auth": true,
              "display-name": "Get Order",
              "docs": "Retrieve a single product by its id. All of its SKUs will also be retrieved.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.OrdersGetRequestBadRequestError",
                "root.OrdersGetRequestUnauthorizedError",
                "root.OrdersGetRequestForbiddenError",
                "root.OrdersGetRequestNotFoundError",
                "root.OrdersGetRequestConflictError",
                "root.OrdersGetRequestTooManyRequestsError",
                "root.OrdersGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": " 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": " 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": " 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": " 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": " 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": " 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": " 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": " 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}",
              "path-parameters": {
                "order_id": {
                  "docs": "Unique identifier for an Order",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "OrdersGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Orders",
              "docs": "List all orders created for a given site.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.OrdersListRequestBadRequestError",
                "root.OrdersListRequestUnauthorizedError",
                "root.OrdersListRequestForbiddenError",
                "root.OrdersListRequestNotFoundError",
                "root.OrdersListRequestConflictError",
                "root.OrdersListRequestTooManyRequestsError",
                "root.OrdersListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "orders": [
                        {
                          "acceptedOn": "2024-04-10T13:16:21Z",
                          "allAddresses": [
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "billing",
                            },
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "shipping",
                            },
                          ],
                          "applicationFee": {
                            "string": " 4.23 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "billingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "billing",
                          },
                          "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                          "customData": [
                            {
                              "key": "value",
                            },
                          ],
                          "customerInfo": {
                            "email": "arthur.dent@example.com",
                            "fullName": "Arthur Dent",
                          },
                          "customerPaid": {
                            "string": " 211.55 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "downloadFiles": [
                            {
                              "id": "5e9a5eba75e0ac242e1b6f64",
                              "name": "The modern web design process - Webflow Ebook.pdf",
                              "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                            },
                          ],
                          "hasDownloads": false,
                          "isCustomerDeleted": false,
                          "isShippingRequired": false,
                          "metadata": {
                            "isBuyNow": false,
                          },
                          "netAmount": {
                            "string": " 200.89 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                          "orderId": "7c1-9fd",
                          "paymentProcessor": "stripe",
                          "purchasedItems": [
                            {
                              "count": 2,
                              "height": 70,
                              "length": 9,
                              "productId": "66072fb61b89448912e26791",
                              "productName": "Luxurious Fresh Ball",
                              "productSlug": "luxurious-fresh-ball",
                              "rowTotal": {
                                "string": " 111.22 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb71b89448912e2683f",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                              },
                              "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                              "variantPrice": {
                                "string": " 55.61 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "weight": 11,
                              "width": 82,
                            },
                            {
                              "count": 1,
                              "height": 72,
                              "length": 18,
                              "productId": "66072fb61b89448912e2678b",
                              "productName": "Incredible Bronze Towels",
                              "productSlug": "incredible-bronze-towels",
                              "rowTotal": {
                                "string": " 83.09 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb71b89448912e2681e",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e26729_image16.jpeg",
                              },
                              "variantName": "Incredible Bronze Towels Sleek: Frozen, Incredible: Metal",
                              "variantPrice": {
                                "string": " 83.09 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                              "variantSlug": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                              "width": 19,
                            },
                          ],
                          "purchasedItemsCount": 3,
                          "shippingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "japanType": "kanji",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "shipping",
                          },
                          "shippingProvider": "Shipping Company, Co.",
                          "shippingTracking": "tr00000000002",
                          "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000002",
                          "status": "unfulfilled",
                          "stripeCard": {
                            "brand": "Visa",
                            "expires": {
                              "month": 4,
                              "year": 2025,
                            },
                            "last4": "4242",
                            "ownerName": "Arthur Dent",
                          },
                          "stripeDetails": {
                            "chargeId": "ch_3P410iJYFi4lcbXW0DxUkzCH",
                            "customerId": "cus_Ptod8KJBiiPgnH",
                            "paymentIntentId": "pi_3P410iJYFi4lcbXW0EKKgcVg",
                            "paymentMethod": "pm_1P410gJYFi4lcbXWbeKghqjK",
                          },
                          "totals": {
                            "extras": [
                              {
                                "description": "CA Taxes (6.25%)",
                                "name": "State Taxes",
                                "price": {
                                  "string": "3.44",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "tax",
                              },
                            ],
                          },
                        },
                        {
                          "acceptedOn": "2024-03-29T21:29:21Z",
                          "allAddresses": [
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "billing",
                            },
                            {
                              "addressee": "Arthur Dent",
                              "city": "New York",
                              "country": "US",
                              "line1": "20 W 34th St",
                              "line2": "Empire State Building",
                              "postalCode": "10118",
                              "state": "New York",
                              "type": "shipping",
                            },
                          ],
                          "applicationFee": {
                            "string": " 2.37 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "billingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "billing",
                          },
                          "comment": "Example comment to myself",
                          "customData": [
                            {
                              "key": "value",
                            },
                          ],
                          "customerInfo": {
                            "email": "arthur.dent@example.com",
                            "fullName": "Arthur Dent",
                          },
                          "customerPaid": {
                            "string": " 118.73 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "downloadFiles": [
                            {
                              "id": "5e9a5eba75e0ac242e1b6f64",
                              "name": "New product guide",
                              "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                            },
                          ],
                          "hasDownloads": false,
                          "isCustomerDeleted": false,
                          "isShippingRequired": true,
                          "metadata": {
                            "isBuyNow": false,
                          },
                          "netAmount": {
                            "string": " 112.62 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "orderComment": "",
                          "orderId": "fc7-128",
                          "paymentProcessor": "stripe",
                          "purchasedItems": [
                            {
                              "count": 1,
                              "height": 70,
                              "length": 9,
                              "productId": "66072fb61b89448912e26791",
                              "productName": "Luxurious Fresh Ball",
                              "productSlug": "luxurious-fresh-ball",
                              "rowTotal": {
                                "string": " 55.61 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb71b89448912e2683f",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                              },
                              "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                              "variantPrice": {
                                "string": " 55.61 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                              "weight": 11,
                              "width": 82,
                            },
                            {
                              "count": 1,
                              "height": 85,
                              "length": 40,
                              "productId": "66072fb61b89448912e26799",
                              "productName": "Recycled Steel Gloves",
                              "productSlug": "recycled-steel-gloves",
                              "rowTotal": {
                                "string": " 53.44 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantId": "66072fb91b89448912e26ab9",
                              "variantImage": {
                                "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                              },
                              "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                              "variantPrice": {
                                "string": " 53.44 USD",
                                "unit": "USD",
                                "value": "5892",
                              },
                              "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                              "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                              "weight": 38,
                              "width": 76,
                            },
                          ],
                          "purchasedItemsCount": 2,
                          "refundedOn": "2024-04-08T18:25:04Z",
                          "shippingAddress": {
                            "addressee": "Arthur Dent",
                            "city": "New York",
                            "country": "US",
                            "line1": "20 W 34th St",
                            "line2": "Empire State Building",
                            "postalCode": "10118",
                            "state": "New York",
                            "type": "shipping",
                          },
                          "shippingProvider": "Shipping Company, Co.",
                          "shippingTracking": "tr00000000001",
                          "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                          "status": "refunded",
                          "stripeCard": {
                            "brand": "Visa",
                            "expires": {
                              "month": 4,
                              "year": 2024,
                            },
                            "last4": "4242",
                            "ownerName": "Arthur Dent",
                          },
                          "stripeDetails": {
                            "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                            "customerId": "cus_PpRsNHwWdUoRKR",
                            "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                            "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                            "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                            "refundReason": "fraudulent",
                          },
                          "totals": {
                            "extras": [
                              {
                                "description": "NY Taxes (4.00%)",
                                "name": "State Taxes",
                                "price": {
                                  "string": " 4.36 USD",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "tax",
                              },
                              {
                                "description": "NEW YORK Taxes (4.88%)",
                                "name": "City Taxes",
                                "price": {
                                  "string": " 5.32 USD",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "tax",
                              },
                              {
                                "description": "",
                                "name": "Flat",
                                "price": {
                                  "string": " 0.00 USD",
                                  "unit": "USD",
                                  "value": "5892",
                                },
                                "type": "shipping",
                              },
                            ],
                            "subtotal": {
                              "string": " 109.05 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "total": {
                              "string": " 118.73 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                          },
                        },
                      ],
                      "pagination": {
                        "limit": 100,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "OrdersListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                  "status": {
                    "docs": "Filter the orders by status",
                    "type": "optional<OrdersListRequestStatus>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "OrdersListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "refund": {
              "auth": true,
              "display-name": "Refund Order",
              "docs": "This API will reverse a Stripe charge and refund an order back to a
customer. It will also set the order's status to `refunded`.


Required scope | `ecommerce:write`
",
              "errors": [
                "root.OrdersRefundRequestBadRequestError",
                "root.OrdersRefundRequestUnauthorizedError",
                "root.OrdersRefundRequestForbiddenError",
                "root.OrdersRefundRequestNotFoundError",
                "root.OrdersRefundRequestConflictError",
                "root.OrdersRefundRequestTooManyRequestsError",
                "root.OrdersRefundRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": " 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": " 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": " 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": " 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": " 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": " 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": " 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": " 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}/refund",
              "path-parameters": {
                "order_id": {
                  "docs": "Unique identifier for an Order",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "reason": {
                      "docs": "The reason for the refund",
                      "type": "optional<OrdersRefundRequestReason>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "OrdersRefundRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "OrdersRefundResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "display-name": "Update Order",
              "docs": "This API lets you update the fields, `comment`, `shippingProvider`, and/or `shippingTracking` for a given order. All three fields can be updated simultaneously or independently.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.OrdersUpdateRequestBadRequestError",
                "root.OrdersUpdateRequestUnauthorizedError",
                "root.OrdersUpdateRequestForbiddenError",
                "root.OrdersUpdateRequestNotFoundError",
                "root.OrdersUpdateRequestConflictError",
                "root.OrdersUpdateRequestTooManyRequestsError",
                "root.OrdersUpdateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": " 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": " 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": " 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": " 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": " 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": " 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": " 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": " 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}",
              "path-parameters": {
                "order_id": {
                  "docs": "Unique identifier for an Order",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "comment": {
                      "docs": "Arbitrary data for your records",
                      "type": "optional<string>",
                    },
                    "shippingProvider": {
                      "docs": "Company or method used to ship order",
                      "type": "optional<string>",
                    },
                    "shippingTracking": {
                      "docs": "Tracking number for order shipment",
                      "type": "optional<string>",
                    },
                    "shippingTrackingURL": {
                      "docs": "URL to track order shipment",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "OrdersUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "OrdersUpdateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-fulfill": {
              "auth": true,
              "display-name": "Fulfill Order",
              "docs": "Updates an order's status to fulfilled

Required scope | `ecommerce:write`
",
              "errors": [
                "root.OrdersUpdateFulfillRequestBadRequestError",
                "root.OrdersUpdateFulfillRequestUnauthorizedError",
                "root.OrdersUpdateFulfillRequestForbiddenError",
                "root.OrdersUpdateFulfillRequestNotFoundError",
                "root.OrdersUpdateFulfillRequestConflictError",
                "root.OrdersUpdateFulfillRequestTooManyRequestsError",
                "root.OrdersUpdateFulfillRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": " 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": " 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": " 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": " 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": " 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": " 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": " 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": " 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}/fulfill",
              "path-parameters": {
                "order_id": {
                  "docs": "Unique identifier for an Order",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "sendOrderFulfilledEmail": {
                      "default": false,
                      "docs": "Whether or not the Order Fulfilled email should be sent",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "OrdersUpdateFulfillRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "OrdersUpdateFulfillResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-unfulfill": {
              "auth": true,
              "display-name": "Unfulfill Order",
              "docs": "Updates an order's status to unfulfilled

Required scope | `ecommerce:write`
",
              "errors": [
                "root.OrdersUpdateUnfulfillRequestBadRequestError",
                "root.OrdersUpdateUnfulfillRequestUnauthorizedError",
                "root.OrdersUpdateUnfulfillRequestForbiddenError",
                "root.OrdersUpdateUnfulfillRequestNotFoundError",
                "root.OrdersUpdateUnfulfillRequestConflictError",
                "root.OrdersUpdateUnfulfillRequestTooManyRequestsError",
                "root.OrdersUpdateUnfulfillRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "order_id": "5e8518516e147040726cc415",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "acceptedOn": "2024-03-29T21:29:21Z",
                      "allAddresses": [
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "billing",
                        },
                        {
                          "addressee": "Arthur Dent",
                          "city": "New York",
                          "country": "US",
                          "japanType": "kana",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "postalCode": "10118",
                          "state": "New York",
                          "type": "shipping",
                        },
                      ],
                      "applicationFee": {
                        "string": " 2.37 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "billingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kana",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "billing",
                      },
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "customData": [
                        {
                          "key": "value",
                        },
                      ],
                      "customerInfo": {
                        "email": "arthur.dent@example.com",
                        "fullName": "Arthur Dent",
                      },
                      "customerPaid": {
                        "string": " 118.73 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "disputeLastStatus": "charge_refunded",
                      "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                      "disputedOn": "2024-03-29T21:29:21Z",
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                        },
                      ],
                      "fulfilledOn": "2024-03-29T21:29:21Z",
                      "hasDownloads": false,
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "metadata": {
                        "isBuyNow": false,
                      },
                      "netAmount": {
                        "string": " 112.62 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                      "orderId": "fc7-128",
                      "paymentProcessor": "stripe",
                      "purchasedItems": [
                        {
                          "count": 1,
                          "height": 70,
                          "length": 9,
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "rowTotal": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb71b89448912e2683f",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          },
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantPrice": {
                            "string": " 55.61 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "weight": 11,
                          "width": 82,
                        },
                        {
                          "count": 1,
                          "height": 85,
                          "length": 40,
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "rowTotal": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          },
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantPrice": {
                            "string": " 53.44 USD",
                            "unit": "USD",
                            "value": "5892",
                          },
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "weight": 38,
                          "width": 76,
                        },
                      ],
                      "purchasedItemsCount": 2,
                      "refundedOn": "2024-04-08T18:25:04Z",
                      "shippingAddress": {
                        "addressee": "Arthur Dent",
                        "city": "New York",
                        "country": "US",
                        "japanType": "kanji",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "postalCode": "10118",
                        "state": "New York",
                        "type": "shipping",
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "status": "refunded",
                      "stripeCard": {
                        "brand": "Visa",
                        "expires": {
                          "month": 4,
                          "year": 2024,
                        },
                        "last4": "4242",
                        "ownerName": "Arthur Dent",
                      },
                      "stripeDetails": {
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent",
                      },
                      "totals": {
                        "extras": [
                          {
                            "description": "NY Taxes (4.00%)",
                            "name": "State Taxes",
                            "price": {
                              "string": " 4.36 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "NEW YORK Taxes (4.88%)",
                            "name": "City Taxes",
                            "price": {
                              "string": " 5.32 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "tax",
                          },
                          {
                            "description": "",
                            "name": "Flat",
                            "price": {
                              "string": " 0.00 USD",
                              "unit": "USD",
                              "value": "5892",
                            },
                            "type": "shipping",
                          },
                        ],
                        "subtotal": {
                          "string": " 109.05 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "total": {
                          "string": " 118.73 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                      },
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/orders/{order_id}/unfulfill",
              "path-parameters": {
                "order_id": {
                  "docs": "Unique identifier for an Order",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "OrdersUpdateUnfulfillResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EcommNewOrderPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<EcommNewOrderPayloadAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<EcommNewOrderPayloadApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<EcommNewOrderPayloadBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<EcommNewOrderPayloadCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<EcommNewOrderPayloadCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<EcommNewOrderPayloadDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<EcommNewOrderPayloadDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<EcommNewOrderPayloadMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<EcommNewOrderPayloadNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<EcommNewOrderPayloadPaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<EcommNewOrderPayloadPurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<EcommNewOrderPayloadShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<EcommNewOrderPayloadStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<EcommNewOrderPayloadStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<EcommNewOrderPayloadStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<EcommNewOrderPayloadTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<EcommNewOrderPayloadAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommNewOrderPayloadAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<EcommNewOrderPayloadBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommNewOrderPayloadBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<EcommNewOrderPayloadPurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<EcommNewOrderPayloadPurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<EcommNewOrderPayloadPurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<EcommNewOrderPayloadPurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadPurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<EcommNewOrderPayloadShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommNewOrderPayloadShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<EcommNewOrderPayloadStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<EcommNewOrderPayloadStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<EcommNewOrderPayloadTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<EcommNewOrderPayloadTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<EcommNewOrderPayloadTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<EcommNewOrderPayloadTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<EcommNewOrderPayloadTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommNewOrderPayloadTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<EcommOrderChangedPayloadAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<EcommOrderChangedPayloadApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<EcommOrderChangedPayloadBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<EcommOrderChangedPayloadCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<EcommOrderChangedPayloadCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<EcommOrderChangedPayloadDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<EcommOrderChangedPayloadDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<EcommOrderChangedPayloadMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<EcommOrderChangedPayloadNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<EcommOrderChangedPayloadPaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<EcommOrderChangedPayloadPurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<EcommOrderChangedPayloadShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<EcommOrderChangedPayloadStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<EcommOrderChangedPayloadStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<EcommOrderChangedPayloadStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<EcommOrderChangedPayloadTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<EcommOrderChangedPayloadAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommOrderChangedPayloadAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<EcommOrderChangedPayloadBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommOrderChangedPayloadBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<EcommOrderChangedPayloadPurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<EcommOrderChangedPayloadPurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadPurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<EcommOrderChangedPayloadShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<EcommOrderChangedPayloadShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<EcommOrderChangedPayloadStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<EcommOrderChangedPayloadStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<EcommOrderChangedPayloadTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<EcommOrderChangedPayloadTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<EcommOrderChangedPayloadTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<EcommOrderChangedPayloadTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<EcommOrderChangedPayloadTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EcommOrderChangedPayloadTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<OrdersGetResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<OrdersGetResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<OrdersGetResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<OrdersGetResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<OrdersGetResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<OrdersGetResponseDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<OrdersGetResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<OrdersGetResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<OrdersGetResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<OrdersGetResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<OrdersGetResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<OrdersGetResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<OrdersGetResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<OrdersGetResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<OrdersGetResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<OrdersGetResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersGetResponseAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersGetResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersGetResponseBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersGetResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<OrdersGetResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<OrdersGetResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<OrdersGetResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<OrdersGetResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<OrdersGetResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersGetResponseShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersGetResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<OrdersGetResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<OrdersGetResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<OrdersGetResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<OrdersGetResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<OrdersGetResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<OrdersGetResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<OrdersGetResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersGetResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListRequestStatus": {
            "enum": [
              "pending",
              "refunded",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "fulfilled",
              "disputed",
              "unfulfilled",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponse": {
            "docs": "Results from order list",
            "inline": undefined,
            "properties": {
              "orders": {
                "docs": "List of orders",
                "type": "optional<list<OrdersListResponseOrdersItem>>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<OrdersListResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<OrdersListResponseOrdersItemAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<OrdersListResponseOrdersItemApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<OrdersListResponseOrdersItemBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<OrdersListResponseOrdersItemCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<OrdersListResponseOrdersItemCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<OrdersListResponseOrdersItemDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<OrdersListResponseOrdersItemDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<OrdersListResponseOrdersItemMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<OrdersListResponseOrdersItemNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<OrdersListResponseOrdersItemPaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<OrdersListResponseOrdersItemPurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<OrdersListResponseOrdersItemShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<OrdersListResponseOrdersItemStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<OrdersListResponseOrdersItemStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<OrdersListResponseOrdersItemStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<OrdersListResponseOrdersItemTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersListResponseOrdersItemAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersListResponseOrdersItemAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersListResponseOrdersItemBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersListResponseOrdersItemBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<OrdersListResponseOrdersItemPurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<OrdersListResponseOrdersItemPurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<OrdersListResponseOrdersItemPurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemPurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersListResponseOrdersItemShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersListResponseOrdersItemShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<OrdersListResponseOrdersItemStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<OrdersListResponseOrdersItemStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<OrdersListResponseOrdersItemTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<OrdersListResponseOrdersItemTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<OrdersListResponseOrdersItemTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<OrdersListResponseOrdersItemTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<OrdersListResponseOrdersItemTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponseOrdersItemTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersListResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundRequestReason": {
            "docs": "The reason for the refund",
            "enum": [
              "duplicate",
              "fraudulent",
              "requested",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<OrdersRefundResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<OrdersRefundResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<OrdersRefundResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<OrdersRefundResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<OrdersRefundResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<OrdersRefundResponseDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<OrdersRefundResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<OrdersRefundResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<OrdersRefundResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<OrdersRefundResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<OrdersRefundResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<OrdersRefundResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<OrdersRefundResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<OrdersRefundResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<OrdersRefundResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<OrdersRefundResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersRefundResponseAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersRefundResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersRefundResponseBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersRefundResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<OrdersRefundResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<OrdersRefundResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<OrdersRefundResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<OrdersRefundResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<OrdersRefundResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersRefundResponseShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersRefundResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<OrdersRefundResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<OrdersRefundResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<OrdersRefundResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<OrdersRefundResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<OrdersRefundResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<OrdersRefundResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<OrdersRefundResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersRefundResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<OrdersUpdateFulfillResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<OrdersUpdateFulfillResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<OrdersUpdateFulfillResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<OrdersUpdateFulfillResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<OrdersUpdateFulfillResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<OrdersUpdateFulfillResponseDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<OrdersUpdateFulfillResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<OrdersUpdateFulfillResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<OrdersUpdateFulfillResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<OrdersUpdateFulfillResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<OrdersUpdateFulfillResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<OrdersUpdateFulfillResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<OrdersUpdateFulfillResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<OrdersUpdateFulfillResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<OrdersUpdateFulfillResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<OrdersUpdateFulfillResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateFulfillResponseAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateFulfillResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateFulfillResponseBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateFulfillResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<OrdersUpdateFulfillResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<OrdersUpdateFulfillResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<OrdersUpdateFulfillResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateFulfillResponseShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateFulfillResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<OrdersUpdateFulfillResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<OrdersUpdateFulfillResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<OrdersUpdateFulfillResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<OrdersUpdateFulfillResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<OrdersUpdateFulfillResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<OrdersUpdateFulfillResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<OrdersUpdateFulfillResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateFulfillResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<OrdersUpdateResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<OrdersUpdateResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<OrdersUpdateResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<OrdersUpdateResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<OrdersUpdateResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<OrdersUpdateResponseDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<OrdersUpdateResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<OrdersUpdateResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<OrdersUpdateResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<OrdersUpdateResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<OrdersUpdateResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<OrdersUpdateResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<OrdersUpdateResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<OrdersUpdateResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<OrdersUpdateResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<OrdersUpdateResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateResponseAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateResponseBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<OrdersUpdateResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<OrdersUpdateResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<OrdersUpdateResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<OrdersUpdateResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<OrdersUpdateResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateResponseShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<OrdersUpdateResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<OrdersUpdateResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<OrdersUpdateResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<OrdersUpdateResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<OrdersUpdateResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<OrdersUpdateResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<OrdersUpdateResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "acceptedOn": {
                "docs": "The ISO8601 timestamp that an Order was placed.",
                "type": "optional<datetime>",
              },
              "allAddresses": {
                "docs": "All addresses provided by the customer during the ordering flow.",
                "type": "optional<list<OrdersUpdateUnfulfillResponseAllAddressesItem>>",
              },
              "applicationFee": {
                "docs": "The application fee assessed by the platform",
                "type": "optional<OrdersUpdateUnfulfillResponseApplicationFee>",
              },
              "billingAddress": {
                "docs": "The billing address",
                "type": "optional<OrdersUpdateUnfulfillResponseBillingAddress>",
              },
              "comment": {
                "docs": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                "type": "optional<string>",
              },
              "customData": {
                "docs": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.
",
                "type": "optional<list<map<string, unknown>>>",
              },
              "customerInfo": {
                "docs": "An object with the keys `fullName` and `email`.",
                "type": "optional<OrdersUpdateUnfulfillResponseCustomerInfo>",
              },
              "customerPaid": {
                "docs": "The total paid by the customer",
                "type": "optional<OrdersUpdateUnfulfillResponseCustomerPaid>",
              },
              "disputeLastStatus": {
                "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
                "type": "optional<OrdersUpdateUnfulfillResponseDisputeLastStatus>",
              },
              "disputeUpdatedOn": {
                "docs": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.
",
                "type": "optional<datetime>",
              },
              "disputedOn": {
                "docs": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "downloadFiles": {
                "docs": "An array of downloadable file objects.",
                "type": "optional<list<OrdersUpdateUnfulfillResponseDownloadFilesItem>>",
              },
              "fulfilledOn": {
                "docs": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
",
                "type": "optional<datetime>",
              },
              "hasDownloads": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that are downloadable.
",
                "type": "optional<boolean>",
              },
              "isCustomerDeleted": {
                "docs": "A boolean indicating whether the customer has been deleted from the site.
",
                "type": "optional<boolean>",
              },
              "isShippingRequired": {
                "docs": "A boolean indicating whether the order contains one or more purchased items that require shipping.
",
                "type": "optional<boolean>",
              },
              "metadata": "optional<OrdersUpdateUnfulfillResponseMetadata>",
              "netAmount": {
                "docs": "The net amount after application fees",
                "type": "optional<OrdersUpdateUnfulfillResponseNetAmount>",
              },
              "orderComment": {
                "docs": "A comment that the customer left when making their Order",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.
",
                "type": "optional<string>",
              },
              "paymentProcessor": {
                "docs": "A string indicating the payment processor used for this order.
",
                "type": "optional<string>",
              },
              "paypalDetails": "optional<OrdersUpdateUnfulfillResponsePaypalDetails>",
              "purchasedItems": {
                "docs": "An array of all things that the Customer purchased.",
                "type": "optional<list<OrdersUpdateUnfulfillResponsePurchasedItemsItem>>",
              },
              "purchasedItemsCount": {
                "docs": "The sum of all 'count' fields in 'purchasedItems'.",
                "type": "optional<double>",
              },
              "refundedOn": {
                "docs": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                "type": "optional<datetime>",
              },
              "shippingAddress": {
                "docs": "The shipping address",
                "type": "optional<OrdersUpdateUnfulfillResponseShippingAddress>",
              },
              "shippingProvider": {
                "docs": "A string editable by the API user to note the shipping provider used (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTracking": {
                "docs": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).
",
                "type": "optional<string>",
              },
              "shippingTrackingURL": {
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "status": {
                "docs": "The status of the Order
",
                "type": "optional<OrdersUpdateUnfulfillResponseStatus>",
              },
              "stripeCard": {
                "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
                "type": "optional<OrdersUpdateUnfulfillResponseStripeCard>",
              },
              "stripeDetails": {
                "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                "type": "optional<OrdersUpdateUnfulfillResponseStripeDetails>",
              },
              "totals": {
                "docs": "An object describing various pricing totals",
                "type": "optional<OrdersUpdateUnfulfillResponseTotals>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseAllAddressesItem": {
            "docs": "A customer address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateUnfulfillResponseAllAddressesItemJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateUnfulfillResponseAllAddressesItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseAllAddressesItemJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseAllAddressesItemType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseApplicationFee": {
            "docs": "The application fee assessed by the platform",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseBillingAddress": {
            "docs": "The billing address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateUnfulfillResponseBillingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateUnfulfillResponseBillingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseBillingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseBillingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseCustomerInfo": {
            "docs": "An object with the keys `fullName` and `email`.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The Customer's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "fullName": {
                "docs": "The full name of the Customer",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseCustomerPaid": {
            "docs": "The total paid by the customer",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseDisputeLastStatus": {
            "docs": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
",
            "enum": [
              "warning_needs_response",
              "warning_under_review",
              "warning_closed",
              "needs_response",
              "under_review",
              "charge_refunded",
              "won",
              "lost",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseDownloadFilesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier for the downloadable file",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The user-facing name for the downloadable file",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The hosted location for the downloadable file",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseMetadata": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "isBuyNow": "optional<boolean>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseNetAmount": {
            "docs": "The net amount after application fees",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePaypalDetails": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "captureId": {
                "docs": "PayPal capture identifier",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "PayPal dispute identifier",
                "type": "optional<string>",
              },
              "orderId": {
                "docs": "PayPal order identifier",
                "type": "optional<string>",
              },
              "payerId": {
                "docs": "PayPal payer identifier",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "PayPal refund identifier",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "PayPal-issued reason for the refund",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePurchasedItemsItem": {
            "docs": "An Item that was purchased",
            "inline": true,
            "properties": {
              "count": {
                "docs": "Number of Item purchased.",
                "type": "optional<double>",
              },
              "height": {
                "docs": "The physical height of the variant if provided, or null",
                "type": "optional<double>",
              },
              "length": {
                "docs": "The physical length of the variant if provided, or null",
                "type": "optional<double>",
              },
              "productId": {
                "docs": "The unique identifier for the Product",
                "type": "optional<string>",
              },
              "productName": {
                "docs": "User-facing name of the Product",
                "type": "optional<string>",
              },
              "productSlug": {
                "docs": "Slug for the Product",
                "type": "optional<string>",
              },
              "rowTotal": {
                "docs": "The total for the row",
                "type": "optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemRowTotal>",
              },
              "variantId": {
                "docs": "Identifier for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantImage": "optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImage>",
              "variantName": {
                "docs": "User-facing name of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantPrice": {
                "docs": "The price corresponding to the variant",
                "type": "optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantPrice>",
              },
              "variantSKU": {
                "docs": "The user-defined custom SKU of the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "variantSlug": {
                "docs": "Slug for the Product Variant (SKU)",
                "type": "optional<string>",
              },
              "weight": {
                "docs": "The physical weight of the variant if provided, or null",
                "type": "optional<double>",
              },
              "width": {
                "docs": "The physical width of the variant if provided, or null",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePurchasedItemsItemRowTotal": {
            "docs": "The total for the row",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImage": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "file": "optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFile>",
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFile": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "contentType": {
                "docs": "The MIME type of the image",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The creation timestamp of the image",
                "type": "optional<datetime>",
              },
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": {
                "docs": "the original name of the image",
                "type": "optional<string>",
              },
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "variants": {
                "docs": "Variants of the supplied image",
                "type": "optional<list<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFileVariantsItem>>",
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFileVariantsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "height": {
                "docs": "The image height in pixels",
                "type": "optional<integer>",
              },
              "originalFileName": "optional<string>",
              "size": {
                "docs": "The image size in bytes",
                "type": "optional<double>",
              },
              "url": {
                "docs": "The hosted location for the Variant's image",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "width": {
                "docs": "The image width in pixels",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantPrice": {
            "docs": "The price corresponding to the variant",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseShippingAddress": {
            "docs": "The shipping address",
            "inline": true,
            "properties": {
              "addressee": {
                "docs": "Display name on the address",
                "type": "optional<string>",
              },
              "city": {
                "docs": "The city of the address.",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country of the address",
                "type": "optional<string>",
              },
              "japanType": {
                "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
                "type": "optional<OrdersUpdateUnfulfillResponseShippingAddressJapanType>",
              },
              "line1": {
                "docs": "The first line of the address",
                "type": "optional<string>",
              },
              "line2": {
                "docs": "The second line of the address",
                "type": "optional<string>",
              },
              "postalCode": {
                "docs": "The postal code of the address",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state or province of the address",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the order address (billing or shipping)",
                "type": "optional<OrdersUpdateUnfulfillResponseShippingAddressType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseShippingAddressJapanType": {
            "docs": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "enum": [
              "kana",
              "kanji",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseShippingAddressType": {
            "docs": "The type of the order address (billing or shipping)",
            "enum": [
              "shipping",
              "billing",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseStatus": {
            "docs": "The status of the Order
",
            "enum": [
              "pending",
              "unfulfilled",
              "fulfilled",
              "disputed",
              {
                "name": "DisputeLost",
                "value": "dispute-lost",
              },
              "refunded",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseStripeCard": {
            "docs": "Details on the card used to fulfill this order, if this order was finalized with Stripe.
",
            "inline": true,
            "properties": {
              "brand": {
                "docs": "The card's brand (ie. credit card network)",
                "type": "optional<OrdersUpdateUnfulfillResponseStripeCardBrand>",
              },
              "expires": {
                "docs": "The card's expiration date.",
                "type": "optional<OrdersUpdateUnfulfillResponseStripeCardExpires>",
              },
              "last4": {
                "docs": "The last 4 digits on the card as a string",
                "type": "optional<string>",
              },
              "ownerName": {
                "docs": "The name on the card.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseStripeCardBrand": {
            "docs": "The card's brand (ie. credit card network)",
            "enum": [
              "Visa",
              {
                "name": "AmericanExpress",
                "value": "American Express",
              },
              "MasterCard",
              "Discover",
              "JCB",
              {
                "name": "DinersClub",
                "value": "Diners Club",
              },
              "Unknown",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseStripeCardExpires": {
            "docs": "The card's expiration date.",
            "inline": true,
            "properties": {
              "month": {
                "docs": "Month that the card expires",
                "type": "optional<double>",
              },
              "year": {
                "docs": "Year that the card expires",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseStripeDetails": {
            "docs": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "inline": true,
            "properties": {
              "chargeId": {
                "docs": "Stripe-generated charge identifier, or null",
                "type": "optional<string>",
              },
              "customerId": {
                "docs": "Stripe-generated customer identifier, or null",
                "type": "optional<string>",
              },
              "disputeId": {
                "docs": "Stripe-generated dispute identifier, or null",
                "type": "optional<string>",
              },
              "paymentIntentId": {
                "docs": "Stripe-generated identifier for the PaymentIntent, or null",
                "type": "optional<string>",
              },
              "paymentMethod": {
                "docs": "Stripe-generated identifier for the PaymentMethod used",
                "type": "optional<string>",
              },
              "refundId": {
                "docs": "Stripe-generated refund identifier, or null",
                "type": "optional<string>",
              },
              "refundReason": {
                "docs": "Stripe-generated refund reason, or null",
                "type": "optional<string>",
              },
              "subscriptionId": {
                "docs": "Stripe-generated identifier for the Subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseTotals": {
            "docs": "An object describing various pricing totals",
            "inline": true,
            "properties": {
              "extras": {
                "docs": "An array of extra items, includes discounts, shipping, and taxes.",
                "type": "optional<list<OrdersUpdateUnfulfillResponseTotalsExtrasItem>>",
              },
              "subtotal": {
                "docs": "The subtotal price",
                "type": "optional<OrdersUpdateUnfulfillResponseTotalsSubtotal>",
              },
              "total": {
                "docs": "The total price",
                "type": "optional<OrdersUpdateUnfulfillResponseTotalsTotal>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseTotalsExtrasItem": {
            "docs": "Extra order items, includes discounts, shipping, and taxes.",
            "inline": true,
            "properties": {
              "description": {
                "docs": "A human-readable (but English) description of this extra charge.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "A human-readable (but English) name for this extra charge.",
                "type": "optional<string>",
              },
              "price": {
                "docs": "The price for the item",
                "type": "optional<OrdersUpdateUnfulfillResponseTotalsExtrasItemPrice>",
              },
              "type": {
                "docs": "The type of extra item this is.",
                "type": "optional<OrdersUpdateUnfulfillResponseTotalsExtrasItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseTotalsExtrasItemPrice": {
            "docs": "The price for the item",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseTotalsExtrasItemType": {
            "docs": "The type of extra item this is.",
            "enum": [
              "discount",
              {
                "name": "DiscountShipping",
                "value": "discount-shipping",
              },
              "shipping",
              "tax",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseTotalsSubtotal": {
            "docs": "The subtotal price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OrdersUpdateUnfulfillResponseTotalsTotal": {
            "docs": "The total price",
            "inline": true,
            "properties": {
              "string": {
                "docs": "The user-facing string representation of the amount",
                "type": "optional<string>",
              },
              "unit": {
                "docs": "The three-letter ISO currency code",
                "type": "optional<string>",
              },
              "value": {
                "docs": "The numeric value in the base unit of the currency",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "ecomm_new_order": {
            "display-name": "New eComm Order",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "acceptedOn": "2024-03-29T21:29:21Z",
                  "allAddresses": [
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "billing",
                    },
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "shipping",
                    },
                  ],
                  "applicationFee": {
                    "string": " 2.37 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "billingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "billing",
                  },
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "customData": [
                    {
                      "key": "value",
                    },
                  ],
                  "customerInfo": {
                    "email": "arthur.dent@example.com",
                    "fullName": "Arthur Dent",
                  },
                  "customerPaid": {
                    "string": " 118.73 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "disputeLastStatus": "charge_refunded",
                  "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                  "disputedOn": "2024-03-29T21:29:21Z",
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                    },
                  ],
                  "fulfilledOn": "2024-03-29T21:29:21Z",
                  "hasDownloads": false,
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "metadata": {
                    "isBuyNow": false,
                  },
                  "netAmount": {
                    "string": " 112.62 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                  "orderId": "fc7-128",
                  "paymentProcessor": "stripe",
                  "purchasedItems": [
                    {
                      "count": 1,
                      "height": 70,
                      "length": 9,
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "rowTotal": {
                        "string": " 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb71b89448912e2683f",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      },
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantPrice": {
                        "string": " 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "weight": 11,
                      "width": 82,
                    },
                    {
                      "count": 1,
                      "height": 85,
                      "length": 40,
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "rowTotal": {
                        "string": " 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      },
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantPrice": {
                        "string": " 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "weight": 38,
                      "width": 76,
                    },
                  ],
                  "purchasedItemsCount": 2,
                  "refundedOn": "2024-04-08T18:25:04Z",
                  "shippingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "japanType": "kanji",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "shipping",
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "status": "refunded",
                  "stripeCard": {
                    "brand": "Visa",
                    "expires": {
                      "month": 4,
                      "year": 2024,
                    },
                    "last4": "4242",
                    "ownerName": "Arthur Dent",
                  },
                  "stripeDetails": {
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent",
                  },
                  "totals": {
                    "extras": [
                      {
                        "description": "NY Taxes (4.00%)",
                        "name": "State Taxes",
                        "price": {
                          "string": " 4.36 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "NEW YORK Taxes (4.88%)",
                        "name": "City Taxes",
                        "price": {
                          "string": " 5.32 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "",
                        "name": "Flat",
                        "price": {
                          "string": " 0.00 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "shipping",
                      },
                    ],
                    "subtotal": {
                      "string": " 109.05 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                    "total": {
                      "string": " 118.73 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "EcommNewOrderPayload",
          },
          "ecomm_order_changed": {
            "display-name": "Updated eComm Order",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "acceptedOn": "2024-03-29T21:29:21Z",
                  "allAddresses": [
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "billing",
                    },
                    {
                      "addressee": "Arthur Dent",
                      "city": "New York",
                      "country": "US",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "postalCode": "10118",
                      "state": "New York",
                      "type": "shipping",
                    },
                  ],
                  "applicationFee": {
                    "string": " 2.37 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "billingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "billing",
                  },
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "customData": [
                    {
                      "key": "value",
                    },
                  ],
                  "customerInfo": {
                    "email": "arthur.dent@example.com",
                    "fullName": "Arthur Dent",
                  },
                  "customerPaid": {
                    "string": " 118.73 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "disputeLastStatus": "charge_refunded",
                  "disputeUpdatedOn": "2024-03-29T21:29:21Z",
                  "disputedOn": "2024-03-29T21:29:21Z",
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa",
                    },
                  ],
                  "fulfilledOn": "2024-03-29T21:29:21Z",
                  "hasDownloads": false,
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "metadata": {
                    "isBuyNow": false,
                  },
                  "netAmount": {
                    "string": " 112.62 USD",
                    "unit": "USD",
                    "value": "5892",
                  },
                  "orderComment": "Please gift wrap with a personal note saying "Happy Birthday, Ford! 🎉",
                  "orderId": "fc7-128",
                  "paymentProcessor": "stripe",
                  "purchasedItems": [
                    {
                      "count": 1,
                      "height": 70,
                      "length": 9,
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "rowTotal": {
                        "string": " 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb71b89448912e2683f",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      },
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantPrice": {
                        "string": " 55.61 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "weight": 11,
                      "width": 82,
                    },
                    {
                      "count": 1,
                      "height": 85,
                      "length": 40,
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "rowTotal": {
                        "string": " 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      },
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantPrice": {
                        "string": " 53.44 USD",
                        "unit": "USD",
                        "value": "5892",
                      },
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "weight": 38,
                      "width": 76,
                    },
                  ],
                  "purchasedItemsCount": 2,
                  "refundedOn": "2024-04-08T18:25:04Z",
                  "shippingAddress": {
                    "addressee": "Arthur Dent",
                    "city": "New York",
                    "country": "US",
                    "japanType": "kanji",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "postalCode": "10118",
                    "state": "New York",
                    "type": "shipping",
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "status": "refunded",
                  "stripeCard": {
                    "brand": "Visa",
                    "expires": {
                      "month": 4,
                      "year": 2024,
                    },
                    "last4": "4242",
                    "ownerName": "Arthur Dent",
                  },
                  "stripeDetails": {
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent",
                  },
                  "totals": {
                    "extras": [
                      {
                        "description": "NY Taxes (4.00%)",
                        "name": "State Taxes",
                        "price": {
                          "string": " 4.36 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "NEW YORK Taxes (4.88%)",
                        "name": "City Taxes",
                        "price": {
                          "string": " 5.32 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "tax",
                      },
                      {
                        "description": "",
                        "name": "Flat",
                        "price": {
                          "string": " 0.00 USD",
                          "unit": "USD",
                          "value": "5892",
                        },
                        "type": "shipping",
                      },
                    ],
                    "subtotal": {
                      "string": " 109.05 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                    "total": {
                      "string": " 118.73 USD",
                      "unit": "USD",
                      "value": "5892",
                    },
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "EcommOrderChangedPayload",
          },
        },
      },
      "rawContents": "types:
  OrdersListRequestStatus:
    enum:
      - pending
      - refunded
      - value: dispute-lost
        name: DisputeLost
      - fulfilled
      - disputed
      - unfulfilled
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<OrdersListResponseOrdersItemAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersListResponseOrdersItemAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<OrdersListResponseOrdersItemShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersListResponseOrdersItemShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<OrdersListResponseOrdersItemBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersListResponseOrdersItemBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<OrdersListResponseOrdersItemPurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrdersListResponseOrdersItemPurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrdersListResponseOrdersItemPurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<OrdersListResponseOrdersItemPurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<OrdersListResponseOrdersItemStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<OrdersListResponseOrdersItemStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemPaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersListResponseOrdersItemTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrdersListResponseOrdersItemTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrdersListResponseOrdersItemTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrdersListResponseOrdersItemTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<OrdersListResponseOrdersItemTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrdersListResponseOrdersItemTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItemDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponseOrdersItem:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<OrdersListResponseOrdersItemStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrdersListResponseOrdersItemDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrdersListResponseOrdersItemCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrdersListResponseOrdersItemNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrdersListResponseOrdersItemApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrdersListResponseOrdersItemAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrdersListResponseOrdersItemShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrdersListResponseOrdersItemBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrdersListResponseOrdersItemCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrdersListResponseOrdersItemPurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<OrdersListResponseOrdersItemStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<OrdersListResponseOrdersItemStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<OrdersListResponseOrdersItemPaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrdersListResponseOrdersItemMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrdersListResponseOrdersItemTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrdersListResponseOrdersItemDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersListResponse:
    docs: Results from order list
    properties:
      orders:
        type: optional<list<OrdersListResponseOrdersItem>>
        docs: List of orders
      pagination:
        type: optional<OrdersListResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  OrdersGetResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<OrdersGetResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersGetResponseAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<OrdersGetResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersGetResponseShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<OrdersGetResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersGetResponseBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<OrdersGetResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<OrdersGetResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrdersGetResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrdersGetResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<OrdersGetResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<OrdersGetResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<OrdersGetResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersGetResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrdersGetResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrdersGetResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrdersGetResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<OrdersGetResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrdersGetResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersGetResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<OrdersGetResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrdersGetResponseDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrdersGetResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrdersGetResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrdersGetResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrdersGetResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrdersGetResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrdersGetResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrdersGetResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrdersGetResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<OrdersGetResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<OrdersGetResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<OrdersGetResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrdersGetResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrdersGetResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrdersGetResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<OrdersUpdateResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateResponseAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<OrdersUpdateResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateResponseShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<OrdersUpdateResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateResponseBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<OrdersUpdateResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<OrdersUpdateResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrdersUpdateResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrdersUpdateResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<OrdersUpdateResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<OrdersUpdateResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<OrdersUpdateResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrdersUpdateResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrdersUpdateResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrdersUpdateResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<OrdersUpdateResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrdersUpdateResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<OrdersUpdateResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrdersUpdateResponseDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrdersUpdateResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrdersUpdateResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrdersUpdateResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrdersUpdateResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrdersUpdateResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrdersUpdateResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrdersUpdateResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrdersUpdateResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<OrdersUpdateResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<OrdersUpdateResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<OrdersUpdateResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrdersUpdateResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrdersUpdateResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrdersUpdateResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<OrdersUpdateFulfillResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateFulfillResponseAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<OrdersUpdateFulfillResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateFulfillResponseShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<OrdersUpdateFulfillResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateFulfillResponseBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<OrdersUpdateFulfillResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrdersUpdateFulfillResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrdersUpdateFulfillResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<OrdersUpdateFulfillResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<OrdersUpdateFulfillResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<OrdersUpdateFulfillResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateFulfillResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrdersUpdateFulfillResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrdersUpdateFulfillResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrdersUpdateFulfillResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<OrdersUpdateFulfillResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrdersUpdateFulfillResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateFulfillResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<OrdersUpdateFulfillResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrdersUpdateFulfillResponseDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrdersUpdateFulfillResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrdersUpdateFulfillResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrdersUpdateFulfillResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrdersUpdateFulfillResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrdersUpdateFulfillResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrdersUpdateFulfillResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrdersUpdateFulfillResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrdersUpdateFulfillResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<OrdersUpdateFulfillResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<OrdersUpdateFulfillResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<OrdersUpdateFulfillResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrdersUpdateFulfillResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrdersUpdateFulfillResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrdersUpdateFulfillResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<OrdersUpdateUnfulfillResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateUnfulfillResponseAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<OrdersUpdateUnfulfillResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateUnfulfillResponseShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<OrdersUpdateUnfulfillResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersUpdateUnfulfillResponseBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: >-
        optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<OrdersUpdateUnfulfillResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<OrdersUpdateUnfulfillResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<OrdersUpdateUnfulfillResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersUpdateUnfulfillResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrdersUpdateUnfulfillResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrdersUpdateUnfulfillResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrdersUpdateUnfulfillResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<OrdersUpdateUnfulfillResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrdersUpdateUnfulfillResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersUpdateUnfulfillResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<OrdersUpdateUnfulfillResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrdersUpdateUnfulfillResponseDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrdersUpdateUnfulfillResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrdersUpdateUnfulfillResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrdersUpdateUnfulfillResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrdersUpdateUnfulfillResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrdersUpdateUnfulfillResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrdersUpdateUnfulfillResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrdersUpdateUnfulfillResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrdersUpdateUnfulfillResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<OrdersUpdateUnfulfillResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<OrdersUpdateUnfulfillResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<OrdersUpdateUnfulfillResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrdersUpdateUnfulfillResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrdersUpdateUnfulfillResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrdersUpdateUnfulfillResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  OrdersRefundRequestReason:
    enum:
      - duplicate
      - fraudulent
      - requested
    docs: The reason for the refund
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<OrdersRefundResponseAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersRefundResponseAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<OrdersRefundResponseShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersRefundResponseShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<OrdersRefundResponseBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<OrdersRefundResponseBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<OrdersRefundResponsePurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<OrdersRefundResponsePurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<OrdersRefundResponsePurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<OrdersRefundResponsePurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<OrdersRefundResponsePurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<OrdersRefundResponseStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<OrdersRefundResponseStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponsePaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  OrdersRefundResponseTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<OrdersRefundResponseTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<OrdersRefundResponseTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<OrdersRefundResponseTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<OrdersRefundResponseTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<OrdersRefundResponseTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponseDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  OrdersRefundResponse:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<OrdersRefundResponseStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<OrdersRefundResponseDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<OrdersRefundResponseCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<OrdersRefundResponseNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<OrdersRefundResponseApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<OrdersRefundResponseAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<OrdersRefundResponseShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<OrdersRefundResponseBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<OrdersRefundResponseCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<OrdersRefundResponsePurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<OrdersRefundResponseStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<OrdersRefundResponseStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<OrdersRefundResponsePaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<OrdersRefundResponseMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<OrdersRefundResponseTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<OrdersRefundResponseDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<EcommNewOrderPayloadAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<EcommNewOrderPayloadAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<EcommNewOrderPayloadShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<EcommNewOrderPayloadShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<EcommNewOrderPayloadBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<EcommNewOrderPayloadBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<EcommNewOrderPayloadPurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<EcommNewOrderPayloadPurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<EcommNewOrderPayloadPurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<EcommNewOrderPayloadPurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<EcommNewOrderPayloadPurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<EcommNewOrderPayloadStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<EcommNewOrderPayloadStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadPaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommNewOrderPayloadTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<EcommNewOrderPayloadTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<EcommNewOrderPayloadTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<EcommNewOrderPayloadTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<EcommNewOrderPayloadTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<EcommNewOrderPayloadTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayloadDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  EcommNewOrderPayload:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<EcommNewOrderPayloadStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<EcommNewOrderPayloadDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<EcommNewOrderPayloadCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<EcommNewOrderPayloadNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<EcommNewOrderPayloadApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<EcommNewOrderPayloadAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<EcommNewOrderPayloadShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<EcommNewOrderPayloadBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<EcommNewOrderPayloadCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<EcommNewOrderPayloadPurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<EcommNewOrderPayloadStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<EcommNewOrderPayloadStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<EcommNewOrderPayloadPaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<EcommNewOrderPayloadMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<EcommNewOrderPayloadTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<EcommNewOrderPayloadDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadStatus:
    enum:
      - pending
      - unfulfilled
      - fulfilled
      - disputed
      - value: dispute-lost
        name: DisputeLost
      - refunded
    docs: |
      The status of the Order
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadDisputeLastStatus:
    enum:
      - warning_needs_response
      - warning_under_review
      - warning_closed
      - needs_response
      - under_review
      - charge_refunded
      - won
      - lost
    docs: >
      If an order was disputed by the customer, then this key will be set with
      the [dispute's status](https://stripe.com/docs/api#dispute_object-status).
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadCustomerPaid:
    docs: The total paid by the customer
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadNetAmount:
    docs: The net amount after application fees
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadApplicationFee:
    docs: The application fee assessed by the platform
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadAllAddressesItemType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadAllAddressesItemJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadAllAddressesItem:
    docs: A customer address
    properties:
      type:
        type: optional<EcommOrderChangedPayloadAllAddressesItemType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<EcommOrderChangedPayloadAllAddressesItemJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadShippingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadShippingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadShippingAddress:
    docs: The shipping address
    properties:
      type:
        type: optional<EcommOrderChangedPayloadShippingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<EcommOrderChangedPayloadShippingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadBillingAddressType:
    enum:
      - shipping
      - billing
    docs: The type of the order address (billing or shipping)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadBillingAddressJapanType:
    enum:
      - kana
      - kanji
    docs: >-
      Represents a Japan-only address format. This field will only appear on
      orders placed from Japan.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadBillingAddress:
    docs: The billing address
    properties:
      type:
        type: optional<EcommOrderChangedPayloadBillingAddressType>
        docs: The type of the order address (billing or shipping)
      japanType:
        type: optional<EcommOrderChangedPayloadBillingAddressJapanType>
        docs: >-
          Represents a Japan-only address format. This field will only appear on
          orders placed from Japan.
      addressee:
        type: optional<string>
        docs: Display name on the address
      line1:
        type: optional<string>
        docs: The first line of the address
      line2:
        type: optional<string>
        docs: The second line of the address
      city:
        type: optional<string>
        docs: The city of the address.
      state:
        type: optional<string>
        docs: The state or province of the address
      country:
        type: optional<string>
        docs: The country of the address
      postalCode:
        type: optional<string>
        docs: The postal code of the address
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadCustomerInfo:
    docs: An object with the keys `fullName` and `email`.
    properties:
      fullName:
        type: optional<string>
        docs: The full name of the Customer
      email:
        type: optional<string>
        docs: The Customer's email address
        validation:
          format: email
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemRowTotal:
    docs: The total for the row
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      originalFileName: optional<string>
      size:
        type: optional<double>
        docs: The image size in bytes
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile:
    properties:
      size:
        type: optional<double>
        docs: The image size in bytes
      originalFileName:
        type: optional<string>
        docs: the original name of the image
      createdOn:
        type: optional<datetime>
        docs: The creation timestamp of the image
      contentType:
        type: optional<string>
        docs: The MIME type of the image
      width:
        type: optional<integer>
        docs: The image width in pixels
      height:
        type: optional<integer>
        docs: The image height in pixels
      variants:
        type: >-
          optional<list<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFileVariantsItem>>
        docs: Variants of the supplied image
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantImage:
    properties:
      url:
        type: optional<string>
        docs: The hosted location for the Variant's image
        validation:
          format: uri
      file: optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImageFile>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItemVariantPrice:
    docs: The price corresponding to the variant
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPurchasedItemsItem:
    docs: An Item that was purchased
    properties:
      count:
        type: optional<double>
        docs: Number of Item purchased.
      rowTotal:
        type: optional<EcommOrderChangedPayloadPurchasedItemsItemRowTotal>
        docs: The total for the row
      productId:
        type: optional<string>
        docs: The unique identifier for the Product
      productName:
        type: optional<string>
        docs: User-facing name of the Product
      productSlug:
        type: optional<string>
        docs: Slug for the Product
      variantId:
        type: optional<string>
        docs: Identifier for the Product Variant (SKU)
      variantName:
        type: optional<string>
        docs: User-facing name of the Product Variant (SKU)
      variantSlug:
        type: optional<string>
        docs: Slug for the Product Variant (SKU)
      variantSKU:
        type: optional<string>
        docs: The user-defined custom SKU of the Product Variant (SKU)
      variantImage: optional<EcommOrderChangedPayloadPurchasedItemsItemVariantImage>
      variantPrice:
        type: optional<EcommOrderChangedPayloadPurchasedItemsItemVariantPrice>
        docs: The price corresponding to the variant
      weight:
        type: optional<double>
        docs: The physical weight of the variant if provided, or null
      width:
        type: optional<double>
        docs: The physical width of the variant if provided, or null
      height:
        type: optional<double>
        docs: The physical height of the variant if provided, or null
      length:
        type: optional<double>
        docs: The physical length of the variant if provided, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadStripeDetails:
    docs: >-
      An object with various Stripe IDs, useful for linking into the stripe
      dashboard.
    properties:
      subscriptionId:
        type: optional<string>
        docs: Stripe-generated identifier for the Subscription
      paymentMethod:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentMethod used
      paymentIntentId:
        type: optional<string>
        docs: Stripe-generated identifier for the PaymentIntent, or null
      customerId:
        type: optional<string>
        docs: Stripe-generated customer identifier, or null
      chargeId:
        type: optional<string>
        docs: Stripe-generated charge identifier, or null
      disputeId:
        type: optional<string>
        docs: Stripe-generated dispute identifier, or null
      refundId:
        type: optional<string>
        docs: Stripe-generated refund identifier, or null
      refundReason:
        type: optional<string>
        docs: Stripe-generated refund reason, or null
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadStripeCardBrand:
    enum:
      - Visa
      - value: American Express
        name: AmericanExpress
      - MasterCard
      - Discover
      - JCB
      - value: Diners Club
        name: DinersClub
      - Unknown
    docs: The card's brand (ie. credit card network)
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadStripeCardExpires:
    docs: The card's expiration date.
    properties:
      year:
        type: optional<double>
        docs: Year that the card expires
      month:
        type: optional<double>
        docs: Month that the card expires
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadStripeCard:
    docs: >
      Details on the card used to fulfill this order, if this order was
      finalized with Stripe.
    properties:
      last4:
        type: optional<string>
        docs: The last 4 digits on the card as a string
      brand:
        type: optional<EcommOrderChangedPayloadStripeCardBrand>
        docs: The card's brand (ie. credit card network)
      ownerName:
        type: optional<string>
        docs: The name on the card.
      expires:
        type: optional<EcommOrderChangedPayloadStripeCardExpires>
        docs: The card's expiration date.
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadPaypalDetails:
    properties:
      orderId:
        type: optional<string>
        docs: PayPal order identifier
      payerId:
        type: optional<string>
        docs: PayPal payer identifier
      captureId:
        type: optional<string>
        docs: PayPal capture identifier
      refundId:
        type: optional<string>
        docs: PayPal refund identifier
      refundReason:
        type: optional<string>
        docs: PayPal-issued reason for the refund
      disputeId:
        type: optional<string>
        docs: PayPal dispute identifier
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadMetadata:
    properties:
      isBuyNow: optional<boolean>
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsSubtotal:
    docs: The subtotal price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsExtrasItemType:
    enum:
      - discount
      - value: discount-shipping
        name: DiscountShipping
      - shipping
      - tax
    docs: The type of extra item this is.
    inline: true
    source:
      openapi: ../openapi.yml
  EcommOrderChangedPayloadTotalsExtrasItemPrice:
    docs: The price for the item
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsExtrasItem:
    docs: Extra order items, includes discounts, shipping, and taxes.
    properties:
      type:
        type: optional<EcommOrderChangedPayloadTotalsExtrasItemType>
        docs: The type of extra item this is.
      name:
        type: optional<string>
        docs: A human-readable (but English) name for this extra charge.
      description:
        type: optional<string>
        docs: A human-readable (but English) description of this extra charge.
      price:
        type: optional<EcommOrderChangedPayloadTotalsExtrasItemPrice>
        docs: The price for the item
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotalsTotal:
    docs: The total price
    properties:
      unit:
        type: optional<string>
        docs: The three-letter ISO currency code
      value:
        type: optional<string>
        docs: The numeric value in the base unit of the currency
      string:
        type: optional<string>
        docs: The user-facing string representation of the amount
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadTotals:
    docs: An object describing various pricing totals
    properties:
      subtotal:
        type: optional<EcommOrderChangedPayloadTotalsSubtotal>
        docs: The subtotal price
      extras:
        type: optional<list<EcommOrderChangedPayloadTotalsExtrasItem>>
        docs: An array of extra items, includes discounts, shipping, and taxes.
      total:
        type: optional<EcommOrderChangedPayloadTotalsTotal>
        docs: The total price
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayloadDownloadFilesItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the downloadable file
      name:
        type: optional<string>
        docs: The user-facing name for the downloadable file
      url:
        type: optional<string>
        docs: The hosted location for the downloadable file
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  EcommOrderChangedPayload:
    properties:
      orderId:
        type: optional<string>
        docs: >
          The order id. Will usually be 6 hex characters, but can also be 9 hex
          characters if the site has a very large number of Orders. Randomly
          assigned.
      status:
        type: optional<EcommOrderChangedPayloadStatus>
        docs: |
          The status of the Order
      comment:
        type: optional<string>
        docs: >-
          A comment string for this Order, which is editable by API user (not
          used by Webflow).
      orderComment:
        type: optional<string>
        docs: A comment that the customer left when making their Order
      acceptedOn:
        type: optional<datetime>
        docs: The ISO8601 timestamp that an Order was placed.
      fulfilledOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'fulfilled', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      refundedOn:
        type: optional<datetime>
        docs: >-
          When an Order is marked as 'refunded', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputedOn:
        type: optional<datetime>
        docs: >
          When an Order is marked as 'disputed', this field represents the
          timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.
      disputeUpdatedOn:
        type: optional<datetime>
        docs: >
          If an Order has been disputed by the customer, this key will be set to
          the ISO8601 timestamp of the last update received. If the Order is not
          disputed, the key will be null.
      disputeLastStatus:
        type: optional<EcommOrderChangedPayloadDisputeLastStatus>
        docs: >
          If an order was disputed by the customer, then this key will be set
          with the [dispute's
          status](https://stripe.com/docs/api#dispute_object-status).
      customerPaid:
        type: optional<EcommOrderChangedPayloadCustomerPaid>
        docs: The total paid by the customer
      netAmount:
        type: optional<EcommOrderChangedPayloadNetAmount>
        docs: The net amount after application fees
      applicationFee:
        type: optional<EcommOrderChangedPayloadApplicationFee>
        docs: The application fee assessed by the platform
      allAddresses:
        type: optional<list<EcommOrderChangedPayloadAllAddressesItem>>
        docs: All addresses provided by the customer during the ordering flow.
      shippingAddress:
        type: optional<EcommOrderChangedPayloadShippingAddress>
        docs: The shipping address
      billingAddress:
        type: optional<EcommOrderChangedPayloadBillingAddress>
        docs: The billing address
      shippingProvider:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping provider used
          (not used by Webflow).
      shippingTracking:
        type: optional<string>
        docs: >
          A string editable by the API user to note the shipping tracking number
          for the order (not used by Webflow).
      shippingTrackingURL:
        type: optional<string>
        validation:
          format: uri
      customerInfo:
        type: optional<EcommOrderChangedPayloadCustomerInfo>
        docs: An object with the keys `fullName` and `email`.
      purchasedItems:
        type: optional<list<EcommOrderChangedPayloadPurchasedItemsItem>>
        docs: An array of all things that the Customer purchased.
      purchasedItemsCount:
        type: optional<double>
        docs: The sum of all 'count' fields in 'purchasedItems'.
      stripeDetails:
        type: optional<EcommOrderChangedPayloadStripeDetails>
        docs: >-
          An object with various Stripe IDs, useful for linking into the stripe
          dashboard.
      stripeCard:
        type: optional<EcommOrderChangedPayloadStripeCard>
        docs: >
          Details on the card used to fulfill this order, if this order was
          finalized with Stripe.
      paypalDetails: optional<EcommOrderChangedPayloadPaypalDetails>
      customData:
        type: optional<list<map<string, unknown>>>
        docs: >
          An array of additional inputs for custom order data gathering. Each
          object in the array represents an input with a name, and a textInput,
          textArea, or checkbox value.
      metadata: optional<EcommOrderChangedPayloadMetadata>
      isCustomerDeleted:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the customer has been deleted from the
          site.
      isShippingRequired:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that require shipping.
      hasDownloads:
        type: optional<boolean>
        docs: >
          A boolean indicating whether the order contains one or more purchased
          items that are downloadable.
      paymentProcessor:
        type: optional<string>
        docs: |
          A string indicating the payment processor used for this order.
      totals:
        type: optional<EcommOrderChangedPayloadTotals>
        docs: An object describing various pricing totals
      downloadFiles:
        type: optional<list<EcommOrderChangedPayloadDownloadFilesItem>>
        docs: An array of downloadable file objects.
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/orders
      method: GET
      auth: true
      docs: |
        List all orders created for a given site.

        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Orders
      request:
        name: OrdersListRequest
        query-parameters:
          status:
            type: optional<OrdersListRequestStatus>
            docs: Filter the orders by status
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: OrdersListResponse
        status-code: 200
      errors:
        - root.OrdersListRequestBadRequestError
        - root.OrdersListRequestUnauthorizedError
        - root.OrdersListRequestForbiddenError
        - root.OrdersListRequestNotFoundError
        - root.OrdersListRequestConflictError
        - root.OrdersListRequestTooManyRequestsError
        - root.OrdersListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              orders:
                - orderId: 7c1-9fd
                  status: unfulfilled
                  comment: >-
                    Customer requested gift wrapping and a personalized note
                    saying: Happy Birthday, Ford! 🎉 Please ensure the item is
                    packed with extra bubble wrap for safe transit.
                  orderComment: >-
                    Please gift wrap with a personal note saying "Happy
                    Birthday, Ford! 🎉
                  acceptedOn: '2024-04-10T13:16:21Z'
                  customerPaid:
                    unit: USD
                    value: '5892'
                    string: ' 211.55 USD'
                  netAmount:
                    unit: USD
                    value: '5892'
                    string: ' 200.89 USD'
                  applicationFee:
                    unit: USD
                    value: '5892'
                    string: ' 4.23 USD'
                  allAddresses:
                    - type: billing
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                    - type: shipping
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                  shippingAddress:
                    type: shipping
                    japanType: kanji
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  billingAddress:
                    type: billing
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  shippingProvider: Shipping Company, Co.
                  shippingTracking: tr00000000002
                  shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000002
                  customerInfo:
                    fullName: Arthur Dent
                    email: arthur.dent@example.com
                  purchasedItems:
                    - count: 2
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: ' 111.22 USD'
                      productId: 66072fb61b89448912e26791
                      productName: Luxurious Fresh Ball
                      productSlug: luxurious-fresh-ball
                      variantId: 66072fb71b89448912e2683f
                      variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                      variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: ' 55.61 USD'
                      weight: 11
                      width: 82
                      height: 70
                      length: 9
                    - count: 1
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: ' 83.09 USD'
                      productId: 66072fb61b89448912e2678b
                      productName: Incredible Bronze Towels
                      productSlug: incredible-bronze-towels
                      variantId: 66072fb71b89448912e2681e
                      variantName: >-
                        Incredible Bronze Towels Sleek: Frozen, Incredible:
                        Metal
                      variantSlug: incredible-bronze-towels-sleek-frozen-incredible-metal
                      variantSKU: incredible-bronze-towels-sleek-frozen-incredible-metal
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e26729_image16.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: ' 83.09 USD'
                      width: 19
                      height: 72
                      length: 18
                  purchasedItemsCount: 3
                  stripeDetails:
                    paymentMethod: pm_1P410gJYFi4lcbXWbeKghqjK
                    paymentIntentId: pi_3P410iJYFi4lcbXW0EKKgcVg
                    customerId: cus_Ptod8KJBiiPgnH
                    chargeId: ch_3P410iJYFi4lcbXW0DxUkzCH
                  stripeCard:
                    last4: '4242'
                    brand: Visa
                    ownerName: Arthur Dent
                    expires:
                      year: 2025
                      month: 4
                  customData:
                    - key: value
                  metadata:
                    isBuyNow: false
                  isCustomerDeleted: false
                  isShippingRequired: false
                  hasDownloads: false
                  paymentProcessor: stripe
                  totals:
                    extras:
                      - type: tax
                        name: State Taxes
                        description: CA Taxes (6.25%)
                        price:
                          unit: USD
                          value: '5892'
                          string: '3.44'
                  downloadFiles:
                    - id: 5e9a5eba75e0ac242e1b6f64
                      name: The modern web design process - Webflow Ebook.pdf
                      url: >-
                        https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
                - orderId: fc7-128
                  status: refunded
                  comment: Example comment to myself
                  orderComment: ''
                  acceptedOn: '2024-03-29T21:29:21Z'
                  refundedOn: '2024-04-08T18:25:04Z'
                  customerPaid:
                    unit: USD
                    value: '5892'
                    string: ' 118.73 USD'
                  netAmount:
                    unit: USD
                    value: '5892'
                    string: ' 112.62 USD'
                  applicationFee:
                    unit: USD
                    value: '5892'
                    string: ' 2.37 USD'
                  allAddresses:
                    - type: billing
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                    - type: shipping
                      addressee: Arthur Dent
                      line1: 20 W 34th St
                      line2: Empire State Building
                      city: New York
                      state: New York
                      country: US
                      postalCode: '10118'
                  shippingAddress:
                    type: shipping
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  billingAddress:
                    type: billing
                    addressee: Arthur Dent
                    line1: 20 W 34th St
                    line2: Empire State Building
                    city: New York
                    state: New York
                    country: US
                    postalCode: '10118'
                  shippingProvider: Shipping Company, Co.
                  shippingTracking: tr00000000001
                  shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
                  customerInfo:
                    fullName: Arthur Dent
                    email: arthur.dent@example.com
                  purchasedItems:
                    - count: 1
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: ' 55.61 USD'
                      productId: 66072fb61b89448912e26791
                      productName: Luxurious Fresh Ball
                      productSlug: luxurious-fresh-ball
                      variantId: 66072fb71b89448912e2683f
                      variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                      variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: ' 55.61 USD'
                      weight: 11
                      width: 82
                      height: 70
                      length: 9
                    - count: 1
                      rowTotal:
                        unit: USD
                        value: '5892'
                        string: ' 53.44 USD'
                      productId: 66072fb61b89448912e26799
                      productName: Recycled Steel Gloves
                      productSlug: recycled-steel-gloves
                      variantId: 66072fb91b89448912e26ab9
                      variantName: >-
                        Recycled Steel Gloves Electronic: Granite, Handcrafted:
                        grey
                      variantSlug: >-
                        recycled-steel-gloves-electronic-granite-handcrafted-grey
                      variantSKU: >-
                        recycled-steel-gloves-electronic-granite-handcrafted-grey
                      variantImage:
                        url: >-
                          https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                      variantPrice:
                        unit: USD
                        value: '5892'
                        string: ' 53.44 USD'
                      weight: 38
                      width: 76
                      height: 85
                      length: 40
                  purchasedItemsCount: 2
                  stripeDetails:
                    paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                    paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                    customerId: cus_PpRsNHwWdUoRKR
                    chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                    refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                    refundReason: fraudulent
                  stripeCard:
                    last4: '4242'
                    brand: Visa
                    ownerName: Arthur Dent
                    expires:
                      year: 2024
                      month: 4
                  customData:
                    - key: value
                  metadata:
                    isBuyNow: false
                  isCustomerDeleted: false
                  isShippingRequired: true
                  hasDownloads: false
                  paymentProcessor: stripe
                  totals:
                    subtotal:
                      unit: USD
                      value: '5892'
                      string: ' 109.05 USD'
                    extras:
                      - type: tax
                        name: State Taxes
                        description: NY Taxes (4.00%)
                        price:
                          unit: USD
                          value: '5892'
                          string: ' 4.36 USD'
                      - type: tax
                        name: City Taxes
                        description: NEW YORK Taxes (4.88%)
                        price:
                          unit: USD
                          value: '5892'
                          string: ' 5.32 USD'
                      - type: shipping
                        name: Flat
                        description: ''
                        price:
                          unit: USD
                          value: '5892'
                          string: ' 0.00 USD'
                    total:
                      unit: USD
                      value: '5892'
                      string: ' 118.73 USD'
                  downloadFiles:
                    - id: 5e9a5eba75e0ac242e1b6f64
                      name: New product guide
                      url: >-
                        https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
              pagination:
                limit: 100
                offset: 0
                total: 2
    get:
      path: /sites/{site_id}/orders/{order_id}
      method: GET
      auth: true
      docs: >
        Retrieve a single product by its id. All of its SKUs will also be
        retrieved.


        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        order_id:
          type: string
          docs: Unique identifier for an Order
      display-name: Get Order
      response:
        docs: Request was successful
        type: OrdersGetResponse
        status-code: 200
      errors:
        - root.OrdersGetRequestBadRequestError
        - root.OrdersGetRequestUnauthorizedError
        - root.OrdersGetRequestForbiddenError
        - root.OrdersGetRequestNotFoundError
        - root.OrdersGetRequestConflictError
        - root.OrdersGetRequestTooManyRequestsError
        - root.OrdersGetRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: ' 118.73 USD'
              netAmount:
                unit: USD
                value: '5892'
                string: ' 112.62 USD'
              applicationFee:
                unit: USD
                value: '5892'
                string: ' 2.37 USD'
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: ' 109.05 USD'
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 4.36 USD'
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 5.32 USD'
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 0.00 USD'
                total:
                  unit: USD
                  value: '5892'
                  string: ' 118.73 USD'
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    update:
      path: /sites/{site_id}/orders/{order_id}
      method: PATCH
      auth: true
      docs: >
        This API lets you update the fields, `comment`, `shippingProvider`,
        and/or `shippingTracking` for a given order. All three fields can be
        updated simultaneously or independently.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        order_id:
          type: string
          docs: Unique identifier for an Order
      display-name: Update Order
      request:
        name: OrdersUpdateRequest
        body:
          properties:
            comment:
              type: optional<string>
              docs: Arbitrary data for your records
            shippingProvider:
              type: optional<string>
              docs: Company or method used to ship order
            shippingTracking:
              type: optional<string>
              docs: Tracking number for order shipment
            shippingTrackingURL:
              type: optional<string>
              docs: URL to track order shipment
        content-type: application/json
      response:
        docs: Request was successful
        type: OrdersUpdateResponse
        status-code: 200
      errors:
        - root.OrdersUpdateRequestBadRequestError
        - root.OrdersUpdateRequestUnauthorizedError
        - root.OrdersUpdateRequestForbiddenError
        - root.OrdersUpdateRequestNotFoundError
        - root.OrdersUpdateRequestConflictError
        - root.OrdersUpdateRequestTooManyRequestsError
        - root.OrdersUpdateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          request: {}
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: ' 118.73 USD'
              netAmount:
                unit: USD
                value: '5892'
                string: ' 112.62 USD'
              applicationFee:
                unit: USD
                value: '5892'
                string: ' 2.37 USD'
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: ' 109.05 USD'
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 4.36 USD'
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 5.32 USD'
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 0.00 USD'
                total:
                  unit: USD
                  value: '5892'
                  string: ' 118.73 USD'
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    update-fulfill:
      path: /sites/{site_id}/orders/{order_id}/fulfill
      method: POST
      auth: true
      docs: |
        Updates an order's status to fulfilled

        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        order_id:
          type: string
          docs: Unique identifier for an Order
      display-name: Fulfill Order
      request:
        name: OrdersUpdateFulfillRequest
        body:
          properties:
            sendOrderFulfilledEmail:
              type: optional<boolean>
              docs: Whether or not the Order Fulfilled email should be sent
              default: false
        content-type: application/json
      response:
        docs: Request was successful
        type: OrdersUpdateFulfillResponse
        status-code: 200
      errors:
        - root.OrdersUpdateFulfillRequestBadRequestError
        - root.OrdersUpdateFulfillRequestUnauthorizedError
        - root.OrdersUpdateFulfillRequestForbiddenError
        - root.OrdersUpdateFulfillRequestNotFoundError
        - root.OrdersUpdateFulfillRequestConflictError
        - root.OrdersUpdateFulfillRequestTooManyRequestsError
        - root.OrdersUpdateFulfillRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          request: {}
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: ' 118.73 USD'
              netAmount:
                unit: USD
                value: '5892'
                string: ' 112.62 USD'
              applicationFee:
                unit: USD
                value: '5892'
                string: ' 2.37 USD'
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: ' 109.05 USD'
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 4.36 USD'
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 5.32 USD'
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 0.00 USD'
                total:
                  unit: USD
                  value: '5892'
                  string: ' 118.73 USD'
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    update-unfulfill:
      path: /sites/{site_id}/orders/{order_id}/unfulfill
      method: POST
      auth: true
      docs: |
        Updates an order's status to unfulfilled

        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        order_id:
          type: string
          docs: Unique identifier for an Order
      display-name: Unfulfill Order
      response:
        docs: Request was successful
        type: OrdersUpdateUnfulfillResponse
        status-code: 200
      errors:
        - root.OrdersUpdateUnfulfillRequestBadRequestError
        - root.OrdersUpdateUnfulfillRequestUnauthorizedError
        - root.OrdersUpdateUnfulfillRequestForbiddenError
        - root.OrdersUpdateUnfulfillRequestNotFoundError
        - root.OrdersUpdateUnfulfillRequestConflictError
        - root.OrdersUpdateUnfulfillRequestTooManyRequestsError
        - root.OrdersUpdateUnfulfillRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: ' 118.73 USD'
              netAmount:
                unit: USD
                value: '5892'
                string: ' 112.62 USD'
              applicationFee:
                unit: USD
                value: '5892'
                string: ' 2.37 USD'
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: ' 109.05 USD'
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 4.36 USD'
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 5.32 USD'
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 0.00 USD'
                total:
                  unit: USD
                  value: '5892'
                  string: ' 118.73 USD'
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
    refund:
      path: /sites/{site_id}/orders/{order_id}/refund
      method: POST
      auth: true
      docs: |
        This API will reverse a Stripe charge and refund an order back to a
        customer. It will also set the order's status to `refunded`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        order_id:
          type: string
          docs: Unique identifier for an Order
      display-name: Refund Order
      request:
        name: OrdersRefundRequest
        body:
          properties:
            reason:
              type: optional<OrdersRefundRequestReason>
              docs: The reason for the refund
        content-type: application/json
      response:
        docs: Request was successful
        type: OrdersRefundResponse
        status-code: 200
      errors:
        - root.OrdersRefundRequestBadRequestError
        - root.OrdersRefundRequestUnauthorizedError
        - root.OrdersRefundRequestForbiddenError
        - root.OrdersRefundRequestNotFoundError
        - root.OrdersRefundRequestConflictError
        - root.OrdersRefundRequestTooManyRequestsError
        - root.OrdersRefundRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            order_id: 5e8518516e147040726cc415
          request: {}
          response:
            body:
              orderId: fc7-128
              status: refunded
              comment: >-
                Customer requested gift wrapping and a personalized note saying:
                Happy Birthday, Ford! 🎉 Please ensure the item is packed with
                extra bubble wrap for safe transit.
              orderComment: >-
                Please gift wrap with a personal note saying "Happy Birthday,
                Ford! 🎉
              acceptedOn: '2024-03-29T21:29:21Z'
              fulfilledOn: '2024-03-29T21:29:21Z'
              refundedOn: '2024-04-08T18:25:04Z'
              disputedOn: '2024-03-29T21:29:21Z'
              disputeUpdatedOn: '2024-03-29T21:29:21Z'
              disputeLastStatus: charge_refunded
              customerPaid:
                unit: USD
                value: '5892'
                string: ' 118.73 USD'
              netAmount:
                unit: USD
                value: '5892'
                string: ' 112.62 USD'
              applicationFee:
                unit: USD
                value: '5892'
                string: ' 2.37 USD'
              allAddresses:
                - type: billing
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
                - type: shipping
                  japanType: kana
                  addressee: Arthur Dent
                  line1: 20 W 34th St
                  line2: Empire State Building
                  city: New York
                  state: New York
                  country: US
                  postalCode: '10118'
              shippingAddress:
                type: shipping
                japanType: kanji
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              billingAddress:
                type: billing
                japanType: kana
                addressee: Arthur Dent
                line1: 20 W 34th St
                line2: Empire State Building
                city: New York
                state: New York
                country: US
                postalCode: '10118'
              shippingProvider: Shipping Company, Co.
              shippingTracking: tr00000000001
              shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
              customerInfo:
                fullName: Arthur Dent
                email: arthur.dent@example.com
              purchasedItems:
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  productId: 66072fb61b89448912e26791
                  productName: Luxurious Fresh Ball
                  productSlug: luxurious-fresh-ball
                  variantId: 66072fb71b89448912e2683f
                  variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
                  variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 55.61 USD'
                  weight: 11
                  width: 82
                  height: 70
                  length: 9
                - count: 1
                  rowTotal:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  productId: 66072fb61b89448912e26799
                  productName: Recycled Steel Gloves
                  productSlug: recycled-steel-gloves
                  variantId: 66072fb91b89448912e26ab9
                  variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
                  variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
                  variantImage:
                    url: >-
                      https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
                  variantPrice:
                    unit: USD
                    value: '5892'
                    string: ' 53.44 USD'
                  weight: 38
                  width: 76
                  height: 85
                  length: 40
              purchasedItemsCount: 2
              stripeDetails:
                paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
                paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
                customerId: cus_PpRsNHwWdUoRKR
                chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
                refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
                refundReason: fraudulent
              stripeCard:
                last4: '4242'
                brand: Visa
                ownerName: Arthur Dent
                expires:
                  year: 2024
                  month: 4
              customData:
                - key: value
              metadata:
                isBuyNow: false
              isCustomerDeleted: false
              isShippingRequired: true
              hasDownloads: false
              paymentProcessor: stripe
              totals:
                subtotal:
                  unit: USD
                  value: '5892'
                  string: ' 109.05 USD'
                extras:
                  - type: tax
                    name: State Taxes
                    description: NY Taxes (4.00%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 4.36 USD'
                  - type: tax
                    name: City Taxes
                    description: NEW YORK Taxes (4.88%)
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 5.32 USD'
                  - type: shipping
                    name: Flat
                    description: ''
                    price:
                      unit: USD
                      value: '5892'
                      string: ' 0.00 USD'
                total:
                  unit: USD
                  value: '5892'
                  string: ' 118.73 USD'
              downloadFiles:
                - id: 5e9a5eba75e0ac242e1b6f64
                  name: New product guide
                  url: >-
                    https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
  source:
    openapi: ../openapi.yml
  display-name: Orders
webhooks:
  ecomm_new_order:
    method: POST
    display-name: New eComm Order
    headers: {}
    payload: EcommNewOrderPayload
    examples:
      - payload:
          orderId: fc7-128
          status: refunded
          comment: >-
            Customer requested gift wrapping and a personalized note saying:
            Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra
            bubble wrap for safe transit.
          orderComment: >-
            Please gift wrap with a personal note saying "Happy Birthday, Ford!
            🎉
          acceptedOn: '2024-03-29T21:29:21Z'
          fulfilledOn: '2024-03-29T21:29:21Z'
          refundedOn: '2024-04-08T18:25:04Z'
          disputedOn: '2024-03-29T21:29:21Z'
          disputeUpdatedOn: '2024-03-29T21:29:21Z'
          disputeLastStatus: charge_refunded
          customerPaid:
            unit: USD
            value: '5892'
            string: ' 118.73 USD'
          netAmount:
            unit: USD
            value: '5892'
            string: ' 112.62 USD'
          applicationFee:
            unit: USD
            value: '5892'
            string: ' 2.37 USD'
          allAddresses:
            - type: billing
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
            - type: shipping
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
          shippingAddress:
            type: shipping
            japanType: kanji
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          billingAddress:
            type: billing
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          shippingProvider: Shipping Company, Co.
          shippingTracking: tr00000000001
          shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
          customerInfo:
            fullName: Arthur Dent
            email: arthur.dent@example.com
          purchasedItems:
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: ' 55.61 USD'
              productId: 66072fb61b89448912e26791
              productName: Luxurious Fresh Ball
              productSlug: luxurious-fresh-ball
              variantId: 66072fb71b89448912e2683f
              variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
              variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: ' 55.61 USD'
              weight: 11
              width: 82
              height: 70
              length: 9
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: ' 53.44 USD'
              productId: 66072fb61b89448912e26799
              productName: Recycled Steel Gloves
              productSlug: recycled-steel-gloves
              variantId: 66072fb91b89448912e26ab9
              variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
              variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: ' 53.44 USD'
              weight: 38
              width: 76
              height: 85
              length: 40
          purchasedItemsCount: 2
          stripeDetails:
            paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
            paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
            customerId: cus_PpRsNHwWdUoRKR
            chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
            refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
            refundReason: fraudulent
          stripeCard:
            last4: '4242'
            brand: Visa
            ownerName: Arthur Dent
            expires:
              year: 2024
              month: 4
          customData:
            - key: value
          metadata:
            isBuyNow: false
          isCustomerDeleted: false
          isShippingRequired: true
          hasDownloads: false
          paymentProcessor: stripe
          totals:
            subtotal:
              unit: USD
              value: '5892'
              string: ' 109.05 USD'
            extras:
              - type: tax
                name: State Taxes
                description: NY Taxes (4.00%)
                price:
                  unit: USD
                  value: '5892'
                  string: ' 4.36 USD'
              - type: tax
                name: City Taxes
                description: NEW YORK Taxes (4.88%)
                price:
                  unit: USD
                  value: '5892'
                  string: ' 5.32 USD'
              - type: shipping
                name: Flat
                description: ''
                price:
                  unit: USD
                  value: '5892'
                  string: ' 0.00 USD'
            total:
              unit: USD
              value: '5892'
              string: ' 118.73 USD'
          downloadFiles:
            - id: 5e9a5eba75e0ac242e1b6f64
              name: New product guide
              url: >-
                https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
  ecomm_order_changed:
    method: POST
    display-name: Updated eComm Order
    headers: {}
    payload: EcommOrderChangedPayload
    examples:
      - payload:
          orderId: fc7-128
          status: refunded
          comment: >-
            Customer requested gift wrapping and a personalized note saying:
            Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra
            bubble wrap for safe transit.
          orderComment: >-
            Please gift wrap with a personal note saying "Happy Birthday, Ford!
            🎉
          acceptedOn: '2024-03-29T21:29:21Z'
          fulfilledOn: '2024-03-29T21:29:21Z'
          refundedOn: '2024-04-08T18:25:04Z'
          disputedOn: '2024-03-29T21:29:21Z'
          disputeUpdatedOn: '2024-03-29T21:29:21Z'
          disputeLastStatus: charge_refunded
          customerPaid:
            unit: USD
            value: '5892'
            string: ' 118.73 USD'
          netAmount:
            unit: USD
            value: '5892'
            string: ' 112.62 USD'
          applicationFee:
            unit: USD
            value: '5892'
            string: ' 2.37 USD'
          allAddresses:
            - type: billing
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
            - type: shipping
              addressee: Arthur Dent
              line1: 20 W 34th St
              line2: Empire State Building
              city: New York
              state: New York
              country: US
              postalCode: '10118'
          shippingAddress:
            type: shipping
            japanType: kanji
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          billingAddress:
            type: billing
            addressee: Arthur Dent
            line1: 20 W 34th St
            line2: Empire State Building
            city: New York
            state: New York
            country: US
            postalCode: '10118'
          shippingProvider: Shipping Company, Co.
          shippingTracking: tr00000000001
          shippingTrackingURL: https://www.shippingcompany.com/tracking/tr00000000001
          customerInfo:
            fullName: Arthur Dent
            email: arthur.dent@example.com
          purchasedItems:
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: ' 55.61 USD'
              productId: 66072fb61b89448912e26791
              productName: Luxurious Fresh Ball
              productSlug: luxurious-fresh-ball
              variantId: 66072fb71b89448912e2683f
              variantName: 'Luxurious Fresh Ball Generic: Bronze, Practical: Plastic'
              variantSlug: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantSKU: luxurious-fresh-ball-generic-bronze-practical-plastic
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: ' 55.61 USD'
              weight: 11
              width: 82
              height: 70
              length: 9
            - count: 1
              rowTotal:
                unit: USD
                value: '5892'
                string: ' 53.44 USD'
              productId: 66072fb61b89448912e26799
              productName: Recycled Steel Gloves
              productSlug: recycled-steel-gloves
              variantId: 66072fb91b89448912e26ab9
              variantName: 'Recycled Steel Gloves Electronic: Granite, Handcrafted: grey'
              variantSlug: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantSKU: recycled-steel-gloves-electronic-granite-handcrafted-grey
              variantImage:
                url: >-
                  https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg
              variantPrice:
                unit: USD
                value: '5892'
                string: ' 53.44 USD'
              weight: 38
              width: 76
              height: 85
              length: 40
          purchasedItemsCount: 2
          stripeDetails:
            paymentMethod: pm_1OzmzBJYFi4lcbXWHKNdXU7j
            paymentIntentId: pi_3OzmzDJYFi4lcbXW1hTBW6ft
            customerId: cus_PpRsNHwWdUoRKR
            chargeId: ch_3OzmzDJYFi4lcbXW1ndkkrH2
            refundId: re_3OzmzDJYFi4lcbXW1kFAmlBk
            refundReason: fraudulent
          stripeCard:
            last4: '4242'
            brand: Visa
            ownerName: Arthur Dent
            expires:
              year: 2024
              month: 4
          customData:
            - key: value
          metadata:
            isBuyNow: false
          isCustomerDeleted: false
          isShippingRequired: true
          hasDownloads: false
          paymentProcessor: stripe
          totals:
            subtotal:
              unit: USD
              value: '5892'
              string: ' 109.05 USD'
            extras:
              - type: tax
                name: State Taxes
                description: NY Taxes (4.00%)
                price:
                  unit: USD
                  value: '5892'
                  string: ' 4.36 USD'
              - type: tax
                name: City Taxes
                description: NEW YORK Taxes (4.88%)
                price:
                  unit: USD
                  value: '5892'
                  string: ' 5.32 USD'
              - type: shipping
                name: Flat
                description: ''
                price:
                  unit: USD
                  value: '5892'
                  string: ' 0.00 USD'
            total:
              unit: USD
              value: '5892'
              string: ' 118.73 USD'
          downloadFiles:
            - id: 5e9a5eba75e0ac242e1b6f64
              name: New product guide
              url: >-
                https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa
",
    },
    "pages.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Pages",
          "endpoints": {
            "get-content": {
              "auth": true,
              "display-name": "Get Page Content",
              "docs": "Get static content from a static page. </br> If you do not provide a Locale ID in your request, the response will return any content that can be localized from the Primary locale</br></br> Required scope | `pages:read`",
              "errors": [
                "root.PagesGetContentRequestBadRequestError",
                "root.PagesGetContentRequestUnauthorizedError",
                "root.PagesGetContentRequestForbiddenError",
                "root.PagesGetContentRequestNotFoundError",
                "root.PagesGetContentRequestTooManyRequestsError",
                "root.PagesGetContentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "65427cf400e02b306eaa04a0",
                  },
                  "response": {
                    "body": {
                      "nodes": [
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                          "text": {
                            "html": "<h1>The Hitchhiker's Guide to the Galaxy</h1>",
                            "text": "The Hitchhiker's Guide to the Galaxy",
                          },
                          "type": "text",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                          "text": {
                            "html": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>",
                          },
                          "type": "text",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                          "image": {
                            "alt": "Marvin, the Paranoid Android",
                            "assetId": "659595234426a9fcbad57043",
                          },
                          "type": "image",
                        },
                      ],
                      "pageId": "658205daa3e8206a523b5ad4",
                      "pagination": {
                        "limit": 3,
                        "offset": 0,
                        "total": 3,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pages/{page_id}/dom",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "request": {
                "name": "PagesGetContentRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<string>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "PagesGetContentResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-metadata": {
              "auth": true,
              "display-name": "Get Page Metadata",
              "docs": "Get metadata information for a single page </br></br> Required scope | `pages:read`",
              "errors": [
                "root.PagesGetMetadataRequestBadRequestError",
                "root.PagesGetMetadataRequestUnauthorizedError",
                "root.PagesGetMetadataRequestNotFoundError",
                "root.PagesGetMetadataRequestTooManyRequestsError",
                "root.PagesGetMetadataRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "65427cf400e02b306eaa04a0",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "canBranch": true,
                      "createdOn": "2024-03-11T10:42:00Z",
                      "draft": false,
                      "id": "6596da6045e56dee495bcbba",
                      "isMembersOnly": false,
                      "lastUpdated": "2024-03-11T10:42:42Z",
                      "localeId": "653fd9af6a07fc9cfd7a5e57",
                      "openGraph": {
                        "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                        "descriptionCopied": false,
                        "title": "Explore the Cosmos with The Ultimate Guide",
                        "titleCopied": false,
                      },
                      "publishedPath": "/en-us/guide-to-the-galaxy",
                      "seo": {
                        "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                        "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                      },
                      "siteId": "6258612d1ee792848f805dcf",
                      "slug": "guide-to-the-galaxy",
                      "title": "Guide to the Galaxy",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pages/{page_id}",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "request": {
                "name": "PagesGetMetadataRequest",
                "query-parameters": {
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "PagesGetMetadataResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Pages",
              "docs": "List of all pages for a site </br></br> Required scope | `pages:read`",
              "errors": [
                "root.PagesListRequestBadRequestError",
                "root.PagesListRequestUnauthorizedError",
                "root.PagesListRequestNotFoundError",
                "root.PagesListRequestTooManyRequestsError",
                "root.PagesListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "query-parameters": {
                    "locale": "65427cf400e02b306eaa04a0",
                  },
                  "response": {
                    "body": {
                      "pages": [
                        {
                          "archived": false,
                          "canBranch": true,
                          "createdOn": "2024-03-11T10:42:00Z",
                          "draft": false,
                          "id": "6596da6045e56dee495bcbba",
                          "isMembersOnly": false,
                          "lastUpdated": "2024-03-11T10:42:42Z",
                          "localeId": "653fd9af6a07fc9cfd7a5e57",
                          "openGraph": {
                            "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                            "descriptionCopied": false,
                            "title": "Explore the Cosmos with The Ultimate Guide",
                            "titleCopied": false,
                          },
                          "publishedPath": "/en-us/guide-to-the-galaxy",
                          "seo": {
                            "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                            "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                          },
                          "siteId": "6258612d1ee792848f805dcf",
                          "slug": "guide-to-the-galaxy",
                          "title": "Guide to the Galaxy",
                        },
                        {
                          "archived": false,
                          "canBranch": true,
                          "createdOn": "2024-05-25T09:00:00Z",
                          "draft": false,
                          "id": "6596da6045e56dee495bcbad",
                          "isMembersOnly": false,
                          "lastUpdated": "2024-05-25T09:42:00Z",
                          "localeId": "653fd9af6a07fc9cfd7a5e57",
                          "openGraph": {
                            "description": "Join the galaxy in celebrating Towel Day, the day dedicated to carrying towels everywhere in memory of Douglas Adams.",
                            "descriptionCopied": false,
                            "title": "Towel Day - Don't Panic",
                            "titleCopied": false,
                          },
                          "publishedPath": "/en-us/towel-day",
                          "seo": {
                            "description": "A guide to celebrating Towel Day, in honor of the most massively useful thing an interstellar hitchhiker can have.",
                            "title": "Celebrate Towel Day - The Hitchhiker's Guide to the Galaxy",
                          },
                          "siteId": "6258612d1ee792848f805dcf",
                          "slug": "towel-day",
                          "title": "Towel Day Celebrations",
                        },
                      ],
                      "pagination": {
                        "limit": 20,
                        "offset": 0,
                        "total": 2,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/pages",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "PagesListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<string>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "PagesListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-page-settings": {
              "auth": true,
              "display-name": "Update Page Metadata",
              "docs": "Update Page-level metadata, including SEO and Open Graph fields. </br></br> Required scope | `pages:write`",
              "errors": [
                "root.UpdatePageSettingsRequestBadRequestError",
                "root.UpdatePageSettingsRequestUnauthorizedError",
                "root.UpdatePageSettingsRequestNotFoundError",
                "root.UpdatePageSettingsRequestTooManyRequestsError",
                "root.UpdatePageSettingsRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "65427cf400e02b306eaa04a0",
                  },
                  "request": {
                    "openGraph": {
                      "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                      "title": "Explore the Cosmos with The Ultimate Guide",
                    },
                    "seo": {
                      "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                      "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                    },
                    "slug": "guide-to-the-galaxy",
                    "title": "Guide to the Galaxy",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "canBranch": true,
                      "createdOn": "2024-03-11T10:42:00Z",
                      "draft": false,
                      "id": "6596da6045e56dee495bcbba",
                      "isMembersOnly": false,
                      "lastUpdated": "2024-03-11T10:42:42Z",
                      "localeId": "653fd9af6a07fc9cfd7a5e57",
                      "openGraph": {
                        "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                        "descriptionCopied": false,
                        "title": "Explore the Cosmos with The Ultimate Guide",
                        "titleCopied": false,
                      },
                      "publishedPath": "/en-us/guide-to-the-galaxy",
                      "seo": {
                        "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.",
                        "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                      },
                      "siteId": "6258612d1ee792848f805dcf",
                      "slug": "guide-to-the-galaxy",
                      "title": "Guide to the Galaxy",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/pages/{page_id}",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "openGraph": {
                      "docs": "Open Graph fields for the Page",
                      "type": "optional<UpdatePageSettingsRequestOpenGraph>",
                    },
                    "seo": {
                      "docs": "SEO-related fields for the Page",
                      "type": "optional<UpdatePageSettingsRequestSeo>",
                    },
                    "slug": {
                      "docs": "slug of the Page (derived from title)",
                      "type": "optional<string>",
                    },
                    "title": {
                      "docs": "Title of the Page",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdatePageSettingsRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "locale": {
                    "docs": "Unique identifier for a specific locale. Applicable, when using localization.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdatePageSettingsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-static-content": {
              "auth": true,
              "display-name": "Update Page Content",
              "docs": "This endpoint allows for updating static content on a static page within a secondary locale. It is designed specifically for localized pages and can handle up to 1000 nodes per request.
<blockquote class="callout callout_info"><p><strong>Note:</strong>This endpoint is specifically for localized pages. Ensure that the locale specified is a valid secondary locale for the site.</p></blockquote>

Required scope | `pages:write`
",
              "errors": [
                "root.UpdateStaticContentRequestBadRequestError",
                "root.UpdateStaticContentRequestUnauthorizedError",
                "root.UpdateStaticContentRequestForbiddenError",
                "root.UpdateStaticContentRequestNotFoundError",
                "root.UpdateStaticContentRequestTooManyRequestsError",
                "root.UpdateStaticContentRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "query-parameters": {
                    "locale": "locale",
                  },
                  "request": {
                    "nodes": [
                      {
                        "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                        "text": "<h1>The Hitchhiker's Guide to the Galaxy</h1>",
                      },
                      {
                        "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                        "text": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>",
                      },
                      {
                        "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                        "text": "<img alt='Marvin, the Paranoid Android' src='path/to/image/with/assetId/659595234426a9fcbad57043'/>",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "errors": [
                        "errors",
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/pages/{page_id}/dom",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "nodes": "list<UpdateStaticContentRequestNodesItem>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateStaticContentRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "locale": {
                    "docs": "The locale identifier.",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UpdateStaticContentResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "PageCreatedPayload": {
            "docs": "The Webhook payload for when a Page is created",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<PageCreatedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageCreatedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "createdOn": "optional<datetime>",
              "pageId": "optional<string>",
              "pageTitle": "optional<string>",
              "siteId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageDeletedPayload": {
            "docs": "The Webhook payload for when a Page is deleted",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<PageDeletedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageDeletedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "deletedOn": "optional<datetime>",
              "pageId": "optional<string>",
              "pageTitle": "optional<string>",
              "siteId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageMetadataUpdatedPayload": {
            "docs": "The Webhook payload for when a Page's metadata is updated",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<PageMetadataUpdatedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PageMetadataUpdatedPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "lastUpdated": "optional<datetime>",
              "pageId": "optional<string>",
              "pageTitle": "optional<string>",
              "siteId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentResponse": {
            "docs": "The DOM (Document Object Model) schema represents the content structure of a web page. It captures various content nodes, such as text and images, along with their associated attributes. Each node has a unique identifier and can be of different types like text or image. The schema also provides pagination details for scenarios where the content nodes are too many to be fetched in a single request.
",
            "inline": undefined,
            "properties": {
              "nodes": "optional<list<PagesGetContentResponseNodesItem>>",
              "pageId": {
                "docs": "Page ID",
                "type": "optional<string>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<PagesGetContentResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentResponseNodesItem": {
            "docs": "A generic representation of a content element within the Document Object Model (DOM). Each node has a unique identifier and a specific type that determines its content structure and attributes.
",
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "The custom attributes of the node",
                "type": "optional<map<string, string>>",
              },
              "id": {
                "docs": "Node UUID",
                "type": "optional<string>",
              },
              "image": {
                "docs": "Represents an image within the DOM. It contains details about the image, such as its alternative text (alt) for accessibility and an asset identifier for fetching the actual image resource. Additional attributes can be associated with the image for styling or other purposes.
",
                "type": "optional<PagesGetContentResponseNodesItemImage>",
              },
              "text": {
                "docs": "Represents textual content within the DOM. It contains both the raw text and its HTML representation, allowing for flexibility in rendering and processing. Additional attributes can be associated with the text for styling or other purposes.
",
                "type": "optional<PagesGetContentResponseNodesItemText>",
              },
              "type": "optional<PagesGetContentResponseNodesItemType>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentResponseNodesItemImage": {
            "docs": "Represents an image within the DOM. It contains details about the image, such as its alternative text (alt) for accessibility and an asset identifier for fetching the actual image resource. Additional attributes can be associated with the image for styling or other purposes.
",
            "inline": true,
            "properties": {
              "alt": "optional<string>",
              "assetId": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentResponseNodesItemText": {
            "docs": "Represents textual content within the DOM. It contains both the raw text and its HTML representation, allowing for flexibility in rendering and processing. Additional attributes can be associated with the text for styling or other purposes.
",
            "inline": true,
            "properties": {
              "html": "optional<string>",
              "text": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentResponseNodesItemType": {
            "enum": [
              "text",
              "image",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetContentResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetMetadataResponse": {
            "docs": "The Page object",
            "inline": undefined,
            "properties": {
              "archived": {
                "default": false,
                "docs": "Whether the Page has been archived",
                "type": "optional<boolean>",
              },
              "canBranch": {
                "default": false,
                "docs": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                "type": "optional<boolean>",
              },
              "collectionId": {
                "docs": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Page was created",
                "type": "optional<datetime>",
              },
              "draft": {
                "default": false,
                "docs": "Whether the Page is a draft",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "Unique identifier for the Page",
                "type": "string",
              },
              "isMembersOnly": {
                "default": false,
                "docs": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                "type": "optional<boolean>",
              },
              "lastUpdated": {
                "docs": "The date the Page was most recently updated",
                "type": "optional<datetime>",
              },
              "localeId": {
                "docs": "Unique ID of the page locale",
                "type": "optional<string>",
              },
              "openGraph": {
                "docs": "Open Graph fields for the Page",
                "type": "optional<PagesGetMetadataResponseOpenGraph>",
              },
              "parentId": {
                "docs": "Identifier of the parent folder",
                "type": "optional<string>",
              },
              "publishedPath": {
                "docs": "Relative path of the published page URL",
                "type": "optional<string>",
              },
              "seo": {
                "docs": "SEO-related fields for the Page",
                "type": "optional<PagesGetMetadataResponseSeo>",
              },
              "siteId": {
                "docs": "Unique identifier for the Site",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "slug of the Page (derived from title)",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Title of the Page",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetMetadataResponseOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesGetMetadataResponseSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesListResponse": {
            "docs": "The Page object",
            "inline": undefined,
            "properties": {
              "pages": "optional<list<PagesListResponsePagesItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<PagesListResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesListResponsePagesItem": {
            "docs": "The Page object",
            "inline": true,
            "properties": {
              "archived": {
                "default": false,
                "docs": "Whether the Page has been archived",
                "type": "optional<boolean>",
              },
              "canBranch": {
                "default": false,
                "docs": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                "type": "optional<boolean>",
              },
              "collectionId": {
                "docs": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Page was created",
                "type": "optional<datetime>",
              },
              "draft": {
                "default": false,
                "docs": "Whether the Page is a draft",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "Unique identifier for the Page",
                "type": "string",
              },
              "isMembersOnly": {
                "default": false,
                "docs": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                "type": "optional<boolean>",
              },
              "lastUpdated": {
                "docs": "The date the Page was most recently updated",
                "type": "optional<datetime>",
              },
              "localeId": {
                "docs": "Unique ID of the page locale",
                "type": "optional<string>",
              },
              "openGraph": {
                "docs": "Open Graph fields for the Page",
                "type": "optional<PagesListResponsePagesItemOpenGraph>",
              },
              "parentId": {
                "docs": "Identifier of the parent folder",
                "type": "optional<string>",
              },
              "publishedPath": {
                "docs": "Relative path of the published page URL",
                "type": "optional<string>",
              },
              "seo": {
                "docs": "SEO-related fields for the Page",
                "type": "optional<PagesListResponsePagesItemSeo>",
              },
              "siteId": {
                "docs": "Unique identifier for the Site",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "slug of the Page (derived from title)",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Title of the Page",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesListResponsePagesItemOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesListResponsePagesItemSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesListResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsRequestOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsRequestSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsResponse": {
            "docs": "The Page object",
            "inline": undefined,
            "properties": {
              "archived": {
                "default": false,
                "docs": "Whether the Page has been archived",
                "type": "optional<boolean>",
              },
              "canBranch": {
                "default": false,
                "docs": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                "type": "optional<boolean>",
              },
              "collectionId": {
                "docs": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Page was created",
                "type": "optional<datetime>",
              },
              "draft": {
                "default": false,
                "docs": "Whether the Page is a draft",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "Unique identifier for the Page",
                "type": "string",
              },
              "isMembersOnly": {
                "default": false,
                "docs": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                "type": "optional<boolean>",
              },
              "lastUpdated": {
                "docs": "The date the Page was most recently updated",
                "type": "optional<datetime>",
              },
              "localeId": {
                "docs": "Unique ID of the page locale",
                "type": "optional<string>",
              },
              "openGraph": {
                "docs": "Open Graph fields for the Page",
                "type": "optional<UpdatePageSettingsResponseOpenGraph>",
              },
              "parentId": {
                "docs": "Identifier of the parent folder",
                "type": "optional<string>",
              },
              "publishedPath": {
                "docs": "Relative path of the published page URL",
                "type": "optional<string>",
              },
              "seo": {
                "docs": "SEO-related fields for the Page",
                "type": "optional<UpdatePageSettingsResponseSeo>",
              },
              "siteId": {
                "docs": "Unique identifier for the Site",
                "type": "optional<string>",
              },
              "slug": {
                "docs": "slug of the Page (derived from title)",
                "type": "optional<string>",
              },
              "title": {
                "docs": "Title of the Page",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsResponseOpenGraph": {
            "docs": "Open Graph fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The description supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "descriptionCopied": {
                "default": true,
                "docs": "Indicates the Open Graph description was copied from the SEO description",
                "type": "optional<boolean>",
              },
              "title": {
                "docs": "The title supplied to Open Graph annotations",
                "type": "optional<string>",
              },
              "titleCopied": {
                "default": true,
                "docs": "Indicates the Open Graph title was copied from the SEO title",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdatePageSettingsResponseSeo": {
            "docs": "SEO-related fields for the Page",
            "inline": true,
            "properties": {
              "description": {
                "docs": "The Page description shown in search engine results",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The Page title shown in search engine results",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateStaticContentRequestNodesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "nodeId": {
                "docs": "Node UUID",
                "type": "string",
              },
              "text": {
                "docs": "HTML content of the node, including the HTML tag. The HTML tags must be the same as what's returned from the Get Content endpoint.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateStaticContentResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": {
                "docs": "A list of error messages, if any.",
                "type": "list<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "page_created": {
            "display-name": "Page Created",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "createdOn": "2024-07-26T16:32:50Z",
                    "pageId": "66a3cfb276641574f5d58311",
                    "pageTitle": "Heart of Gold Specs",
                    "siteId": "65427cf400e02b306eaa049c",
                  },
                  "triggerType": "page_created",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Page is created",
              "type": "PageCreatedPayload",
            },
          },
          "page_deleted": {
            "display-name": "Page Deleted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "deletedOn": "2024-07-26T16:32:50Z",
                    "pageId": "66a3cfb276641574f5d58311",
                    "pageTitle": "Heart of Gold Specs",
                    "siteId": "65427cf400e02b306eaa049c",
                  },
                  "triggerType": "page_deleted",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Page is deleted",
              "type": "PageDeletedPayload",
            },
          },
          "page_metadata_updated": {
            "display-name": "Page Metadata Updated",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "lastUpdated": "2024-07-26T16:32:50Z",
                    "pageId": "66a3cfb276641574f5d58311",
                    "pageTitle": "Heart of Gold Specs",
                    "siteId": "65427cf400e02b306eaa049c",
                  },
                  "triggerType": "page_metadata_updated",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Page's metadata is updated",
              "type": "PageMetadataUpdatedPayload",
            },
          },
        },
      },
      "rawContents": "types:
  PagesListResponsePagesItemSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  PagesListResponsePagesItemOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
    source:
      openapi: ../openapi.yml
    inline: true
  PagesListResponsePagesItem:
    docs: The Page object
    properties:
      id:
        type: string
        docs: Unique identifier for the Page
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
      seo:
        type: optional<PagesListResponsePagesItemSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<PagesListResponsePagesItemOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<string>
        docs: Unique ID of the page locale
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
    source:
      openapi: ../openapi.yml
    inline: true
  PagesListResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  PagesListResponse:
    docs: The Page object
    properties:
      pages: optional<list<PagesListResponsePagesItem>>
      pagination:
        type: optional<PagesListResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  PagesGetMetadataResponseSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  PagesGetMetadataResponseOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
    source:
      openapi: ../openapi.yml
    inline: true
  PagesGetMetadataResponse:
    docs: The Page object
    properties:
      id:
        type: string
        docs: Unique identifier for the Page
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
      seo:
        type: optional<PagesGetMetadataResponseSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<PagesGetMetadataResponseOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<string>
        docs: Unique ID of the page locale
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
    source:
      openapi: ../openapi.yml
  UpdatePageSettingsRequestSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsRequestOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsResponseSeo:
    docs: SEO-related fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The Page title shown in search engine results
      description:
        type: optional<string>
        docs: The Page description shown in search engine results
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsResponseOpenGraph:
    docs: Open Graph fields for the Page
    properties:
      title:
        type: optional<string>
        docs: The title supplied to Open Graph annotations
      titleCopied:
        type: optional<boolean>
        docs: Indicates the Open Graph title was copied from the SEO title
        default: true
      description:
        type: optional<string>
        docs: The description supplied to Open Graph annotations
      descriptionCopied:
        type: optional<boolean>
        docs: >-
          Indicates the Open Graph description was copied from the SEO
          description
        default: true
    source:
      openapi: ../openapi.yml
    inline: true
  UpdatePageSettingsResponse:
    docs: The Page object
    properties:
      id:
        type: string
        docs: Unique identifier for the Page
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site
      title:
        type: optional<string>
        docs: Title of the Page
      slug:
        type: optional<string>
        docs: slug of the Page (derived from title)
      parentId:
        type: optional<string>
        docs: Identifier of the parent folder
      collectionId:
        type: optional<string>
        docs: >-
          Unique identifier for a linked Collection, value will be null if the
          Page is not part of a Collection.
      createdOn:
        type: optional<datetime>
        docs: The date the Page was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the Page was most recently updated
      archived:
        type: optional<boolean>
        docs: Whether the Page has been archived
        default: false
      draft:
        type: optional<boolean>
        docs: Whether the Page is a draft
        default: false
      canBranch:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page supports [Page
          Branching](https://university.webflow.com/lesson/page-branching)
        default: false
      isMembersOnly:
        type: optional<boolean>
        docs: >-
          Indicates whether the Page is restricted by [Memberships
          Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)
        default: false
      seo:
        type: optional<UpdatePageSettingsResponseSeo>
        docs: SEO-related fields for the Page
      openGraph:
        type: optional<UpdatePageSettingsResponseOpenGraph>
        docs: Open Graph fields for the Page
      localeId:
        type: optional<string>
        docs: Unique ID of the page locale
      publishedPath:
        type: optional<string>
        docs: Relative path of the published page URL
    source:
      openapi: ../openapi.yml
  PagesGetContentResponseNodesItemType:
    enum:
      - text
      - image
    inline: true
    source:
      openapi: ../openapi.yml
  PagesGetContentResponseNodesItemText:
    docs: >
      Represents textual content within the DOM. It contains both the raw text
      and its HTML representation, allowing for flexibility in rendering and
      processing. Additional attributes can be associated with the text for
      styling or other purposes.
    properties:
      html: optional<string>
      text: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  PagesGetContentResponseNodesItemImage:
    docs: >
      Represents an image within the DOM. It contains details about the image,
      such as its alternative text (alt) for accessibility and an asset
      identifier for fetching the actual image resource. Additional attributes
      can be associated with the image for styling or other purposes.
    properties:
      alt: optional<string>
      assetId: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  PagesGetContentResponseNodesItem:
    docs: >
      A generic representation of a content element within the Document Object
      Model (DOM). Each node has a unique identifier and a specific type that
      determines its content structure and attributes.
    properties:
      id:
        type: optional<string>
        docs: Node UUID
      type: optional<PagesGetContentResponseNodesItemType>
      text:
        type: optional<PagesGetContentResponseNodesItemText>
        docs: >
          Represents textual content within the DOM. It contains both the raw
          text and its HTML representation, allowing for flexibility in
          rendering and processing. Additional attributes can be associated with
          the text for styling or other purposes.
      image:
        type: optional<PagesGetContentResponseNodesItemImage>
        docs: >
          Represents an image within the DOM. It contains details about the
          image, such as its alternative text (alt) for accessibility and an
          asset identifier for fetching the actual image resource. Additional
          attributes can be associated with the image for styling or other
          purposes.
      attributes:
        type: optional<map<string, string>>
        docs: The custom attributes of the node
    source:
      openapi: ../openapi.yml
    inline: true
  PagesGetContentResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  PagesGetContentResponse:
    docs: >
      The DOM (Document Object Model) schema represents the content structure of
      a web page. It captures various content nodes, such as text and images,
      along with their associated attributes. Each node has a unique identifier
      and can be of different types like text or image. The schema also provides
      pagination details for scenarios where the content nodes are too many to
      be fetched in a single request.
    properties:
      pageId:
        type: optional<string>
        docs: Page ID
      nodes: optional<list<PagesGetContentResponseNodesItem>>
      pagination:
        type: optional<PagesGetContentResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  UpdateStaticContentRequestNodesItem:
    properties:
      nodeId:
        type: string
        docs: Node UUID
      text:
        type: string
        docs: >-
          HTML content of the node, including the HTML tag. The HTML tags must
          be the same as what's returned from the Get Content endpoint.
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateStaticContentResponse:
    properties:
      errors:
        docs: A list of error messages, if any.
        type: list<string>
    source:
      openapi: ../openapi.yml
  PageCreatedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId: optional<string>
      pageId: optional<string>
      pageTitle: optional<string>
      createdOn: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  PageCreatedPayload:
    docs: The Webhook payload for when a Page is created
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<PageCreatedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
  PageMetadataUpdatedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId: optional<string>
      pageId: optional<string>
      pageTitle: optional<string>
      lastUpdated: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  PageMetadataUpdatedPayload:
    docs: The Webhook payload for when a Page's metadata is updated
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<PageMetadataUpdatedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
  PageDeletedPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId: optional<string>
      pageId: optional<string>
      pageTitle: optional<string>
      deletedOn: optional<datetime>
    source:
      openapi: ../openapi.yml
    inline: true
  PageDeletedPayload:
    docs: The Webhook payload for when a Page is deleted
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<PageDeletedPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/pages
      method: GET
      auth: true
      docs: List of all pages for a site </br></br> Required scope | `pages:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Pages
      request:
        name: PagesListRequest
        query-parameters:
          locale:
            type: optional<string>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: Request was successful
        type: PagesListResponse
        status-code: 200
      errors:
        - root.PagesListRequestBadRequestError
        - root.PagesListRequestUnauthorizedError
        - root.PagesListRequestNotFoundError
        - root.PagesListRequestTooManyRequestsError
        - root.PagesListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
          response:
            body:
              pages:
                - id: 6596da6045e56dee495bcbba
                  siteId: 6258612d1ee792848f805dcf
                  title: Guide to the Galaxy
                  slug: guide-to-the-galaxy
                  createdOn: '2024-03-11T10:42:00Z'
                  lastUpdated: '2024-03-11T10:42:42Z'
                  archived: false
                  draft: false
                  canBranch: true
                  isMembersOnly: false
                  seo:
                    title: The Ultimate Hitchhiker's Guide to the Galaxy
                    description: >-
                      Everything you need to know about the galaxy, from
                      avoiding Vogon poetry to the importance of towels.
                  openGraph:
                    title: Explore the Cosmos with The Ultimate Guide
                    titleCopied: false
                    description: >-
                      Dive deep into the mysteries of the universe with your
                      guide to everything galactic.
                    descriptionCopied: false
                  localeId: 653fd9af6a07fc9cfd7a5e57
                  publishedPath: /en-us/guide-to-the-galaxy
                - id: 6596da6045e56dee495bcbad
                  siteId: 6258612d1ee792848f805dcf
                  title: Towel Day Celebrations
                  slug: towel-day
                  createdOn: '2024-05-25T09:00:00Z'
                  lastUpdated: '2024-05-25T09:42:00Z'
                  archived: false
                  draft: false
                  canBranch: true
                  isMembersOnly: false
                  seo:
                    title: Celebrate Towel Day - The Hitchhiker's Guide to the Galaxy
                    description: >-
                      A guide to celebrating Towel Day, in honor of the most
                      massively useful thing an interstellar hitchhiker can
                      have.
                  openGraph:
                    title: Towel Day - Don't Panic
                    titleCopied: false
                    description: >-
                      Join the galaxy in celebrating Towel Day, the day
                      dedicated to carrying towels everywhere in memory of
                      Douglas Adams.
                    descriptionCopied: false
                  localeId: 653fd9af6a07fc9cfd7a5e57
                  publishedPath: /en-us/towel-day
              pagination:
                limit: 20
                offset: 0
                total: 2
    get-metadata:
      path: /pages/{page_id}
      method: GET
      auth: true
      docs: >-
        Get metadata information for a single page </br></br> Required scope |
        `pages:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Get Page Metadata
      request:
        name: PagesGetMetadataRequest
        query-parameters:
          locale:
            type: optional<string>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
      response:
        docs: Request was successful
        type: PagesGetMetadataResponse
        status-code: 200
      errors:
        - root.PagesGetMetadataRequestBadRequestError
        - root.PagesGetMetadataRequestUnauthorizedError
        - root.PagesGetMetadataRequestNotFoundError
        - root.PagesGetMetadataRequestTooManyRequestsError
        - root.PagesGetMetadataRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
          response:
            body:
              id: 6596da6045e56dee495bcbba
              siteId: 6258612d1ee792848f805dcf
              title: Guide to the Galaxy
              slug: guide-to-the-galaxy
              createdOn: '2024-03-11T10:42:00Z'
              lastUpdated: '2024-03-11T10:42:42Z'
              archived: false
              draft: false
              canBranch: true
              isMembersOnly: false
              seo:
                title: The Ultimate Hitchhiker's Guide to the Galaxy
                description: >-
                  Everything you need to know about the galaxy, from avoiding
                  Vogon poetry to the importance of towels.
              openGraph:
                title: Explore the Cosmos with The Ultimate Guide
                titleCopied: false
                description: >-
                  Dive deep into the mysteries of the universe with your guide
                  to everything galactic.
                descriptionCopied: false
              localeId: 653fd9af6a07fc9cfd7a5e57
              publishedPath: /en-us/guide-to-the-galaxy
    update-page-settings:
      path: /pages/{page_id}
      method: PUT
      auth: true
      docs: >-
        Update Page-level metadata, including SEO and Open Graph fields.
        </br></br> Required scope | `pages:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Update Page Metadata
      request:
        name: UpdatePageSettingsRequest
        query-parameters:
          locale:
            type: optional<string>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
        body:
          properties:
            title:
              type: optional<string>
              docs: Title of the Page
            slug:
              type: optional<string>
              docs: slug of the Page (derived from title)
            seo:
              type: optional<UpdatePageSettingsRequestSeo>
              docs: SEO-related fields for the Page
            openGraph:
              type: optional<UpdatePageSettingsRequestOpenGraph>
              docs: Open Graph fields for the Page
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdatePageSettingsResponse
        status-code: 200
      errors:
        - root.UpdatePageSettingsRequestBadRequestError
        - root.UpdatePageSettingsRequestUnauthorizedError
        - root.UpdatePageSettingsRequestNotFoundError
        - root.UpdatePageSettingsRequestTooManyRequestsError
        - root.UpdatePageSettingsRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
          request:
            title: Guide to the Galaxy
            slug: guide-to-the-galaxy
            seo:
              title: The Ultimate Hitchhiker's Guide to the Galaxy
              description: >-
                Everything you need to know about the galaxy, from avoiding
                Vogon poetry to the importance of towels.
            openGraph:
              title: Explore the Cosmos with The Ultimate Guide
              description: >-
                Dive deep into the mysteries of the universe with your guide to
                everything galactic.
          response:
            body:
              id: 6596da6045e56dee495bcbba
              siteId: 6258612d1ee792848f805dcf
              title: Guide to the Galaxy
              slug: guide-to-the-galaxy
              createdOn: '2024-03-11T10:42:00Z'
              lastUpdated: '2024-03-11T10:42:42Z'
              archived: false
              draft: false
              canBranch: true
              isMembersOnly: false
              seo:
                title: The Ultimate Hitchhiker's Guide to the Galaxy
                description: >-
                  Everything you need to know about the galaxy, from avoiding
                  Vogon poetry to the importance of towels.
              openGraph:
                title: Explore the Cosmos with The Ultimate Guide
                titleCopied: false
                description: >-
                  Dive deep into the mysteries of the universe with your guide
                  to everything galactic.
                descriptionCopied: false
              localeId: 653fd9af6a07fc9cfd7a5e57
              publishedPath: /en-us/guide-to-the-galaxy
    get-content:
      path: /pages/{page_id}/dom
      method: GET
      auth: true
      docs: >-
        Get static content from a static page. </br> If you do not provide a
        Locale ID in your request, the response will return any content that can
        be localized from the Primary locale</br></br> Required scope |
        `pages:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Get Page Content
      request:
        name: PagesGetContentRequest
        query-parameters:
          locale:
            type: optional<string>
            docs: >-
              Unique identifier for a specific locale. Applicable, when using
              localization.
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: Request was successful
        type: PagesGetContentResponse
        status-code: 200
      errors:
        - root.PagesGetContentRequestBadRequestError
        - root.PagesGetContentRequestUnauthorizedError
        - root.PagesGetContentRequestForbiddenError
        - root.PagesGetContentRequestNotFoundError
        - root.PagesGetContentRequestTooManyRequestsError
        - root.PagesGetContentRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: 65427cf400e02b306eaa04a0
          response:
            body:
              pageId: 658205daa3e8206a523b5ad4
              nodes:
                - id: a245c12d-995b-55ee-5ec7-aa36a6cad623
                  type: text
                  text:
                    html: <h1>The Hitchhiker's Guide to the Galaxy</h1>
                    text: The Hitchhiker's Guide to the Galaxy
                  attributes:
                    key: value
                - id: a245c12d-995b-55ee-5ec7-aa36a6cad627
                  type: text
                  text:
                    html: >-
                      <div><h3>Don't Panic!</h3><p>Always know where your towel
                      is.</p></div>
                  attributes:
                    key: value
                - id: a245c12d-995b-55ee-5ec7-aa36a6cad629
                  type: image
                  image:
                    alt: Marvin, the Paranoid Android
                    assetId: 659595234426a9fcbad57043
                  attributes:
                    key: value
              pagination:
                limit: 3
                offset: 0
                total: 3
    update-static-content:
      path: /pages/{page_id}/dom
      method: POST
      auth: true
      docs: >
        This endpoint allows for updating static content on a static page within
        a secondary locale. It is designed specifically for localized pages and
        can handle up to 1000 nodes per request.

        <blockquote class="callout callout_info"><p><strong>Note:</strong>This
        endpoint is specifically for localized pages. Ensure that the locale
        specified is a valid secondary locale for the site.</p></blockquote>


        Required scope | `pages:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Update Page Content
      request:
        name: UpdateStaticContentRequest
        query-parameters:
          locale:
            type: string
            docs: The locale identifier.
        body:
          properties:
            nodes: list<UpdateStaticContentRequestNodesItem>
        content-type: application/json
      response:
        docs: Request was successful
        type: UpdateStaticContentResponse
        status-code: 200
      errors:
        - root.UpdateStaticContentRequestBadRequestError
        - root.UpdateStaticContentRequestUnauthorizedError
        - root.UpdateStaticContentRequestForbiddenError
        - root.UpdateStaticContentRequestNotFoundError
        - root.UpdateStaticContentRequestTooManyRequestsError
        - root.UpdateStaticContentRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          query-parameters:
            locale: locale
          request:
            nodes:
              - nodeId: a245c12d-995b-55ee-5ec7-aa36a6cad623
                text: <h1>The Hitchhiker's Guide to the Galaxy</h1>
              - nodeId: a245c12d-995b-55ee-5ec7-aa36a6cad627
                text: >-
                  <div><h3>Don't Panic!</h3><p>Always know where your towel
                  is.</p></div>
              - nodeId: a245c12d-995b-55ee-5ec7-aa36a6cad629
                text: >-
                  <img alt='Marvin, the Paranoid Android'
                  src='path/to/image/with/assetId/659595234426a9fcbad57043'/>
          response:
            body:
              errors:
                - errors
  source:
    openapi: ../openapi.yml
  display-name: Pages
webhooks:
  page_created:
    method: POST
    display-name: Page Created
    headers: {}
    payload:
      type: PageCreatedPayload
      docs: The Webhook payload for when a Page is created
    examples:
      - payload:
          triggerType: page_created
          payload:
            siteId: 65427cf400e02b306eaa049c
            pageId: 66a3cfb276641574f5d58311
            pageTitle: Heart of Gold Specs
            createdOn: '2024-07-26T16:32:50Z'
  page_metadata_updated:
    method: POST
    display-name: Page Metadata Updated
    headers: {}
    payload:
      type: PageMetadataUpdatedPayload
      docs: The Webhook payload for when a Page's metadata is updated
    examples:
      - payload:
          triggerType: page_metadata_updated
          payload:
            siteId: 65427cf400e02b306eaa049c
            pageId: 66a3cfb276641574f5d58311
            pageTitle: Heart of Gold Specs
            lastUpdated: '2024-07-26T16:32:50Z'
  page_deleted:
    method: POST
    display-name: Page Deleted
    headers: {}
    payload:
      type: PageDeletedPayload
      docs: The Webhook payload for when a Page is deleted
    examples:
      - payload:
          triggerType: page_deleted
          payload:
            siteId: 65427cf400e02b306eaa049c
            pageId: 66a3cfb276641574f5d58311
            pageTitle: Heart of Gold Specs
            deletedOn: '2024-07-26T16:32:50Z'
",
    },
    "pages/scripts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete-custom-code": {
              "auth": true,
              "display-name": "Delete Custom Code",
              "docs": "Delete the custom code block that an app has created for a page </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote> Required scope | `custom_code:write`
",
              "errors": [
                "root.ScriptsDeleteCustomCodeRequestBadRequestError",
                "root.ScriptsDeleteCustomCodeRequestUnauthorizedError",
                "root.ScriptsDeleteCustomCodeRequestNotFoundError",
                "root.ScriptsDeleteCustomCodeRequestTooManyRequestsError",
                "root.ScriptsDeleteCustomCodeRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/pages/{page_id}/custom_code",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-custom-code": {
              "auth": true,
              "display-name": "Get Custom Code",
              "docs": "Get all registered scripts that have been applied to a specific Page.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote> Required scope | `custom_code:read`
",
              "errors": [
                "root.ScriptsGetCustomCodeRequestBadRequestError",
                "root.ScriptsGetCustomCodeRequestUnauthorizedError",
                "root.ScriptsGetCustomCodeRequestNotFoundError",
                "root.ScriptsGetCustomCodeRequestTooManyRequestsError",
                "root.ScriptsGetCustomCodeRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "response": {
                    "body": {
                      "createdOn": "createdOn",
                      "lastUpdated": "lastUpdated",
                      "scripts": [
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "id",
                          "location": "header",
                          "version": "version",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/pages/{page_id}/custom_code",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ScriptsGetCustomCodeResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsert-custom-code": {
              "auth": true,
              "display-name": "Add/Update Custom Code",
              "docs": "Add a registered script to a Page.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote> Required scope | `custom_code:write`
",
              "errors": [
                "root.ScriptsUpsertCustomCodeRequestBadRequestError",
                "root.ScriptsUpsertCustomCodeRequestUnauthorizedError",
                "root.ScriptsUpsertCustomCodeRequestNotFoundError",
                "root.ScriptsUpsertCustomCodeRequestTooManyRequestsError",
                "root.ScriptsUpsertCustomCodeRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "page_id": "63c720f9347c2139b248e552",
                  },
                  "request": {
                    "scripts": [
                      {
                        "attributes": {
                          "my-attribute": "some-value",
                        },
                        "id": "cms_slider",
                        "location": "header",
                        "version": "1.0.0",
                      },
                      {
                        "id": "alert",
                        "location": "header",
                        "version": "0.0.1",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "lastUpdated": "2022-10-26T00:28:54.191Z",
                      "scripts": [
                        {
                          "attributes": {
                            "my-attribute": "some-value",
                          },
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/pages/{page_id}/custom_code",
              "path-parameters": {
                "page_id": {
                  "docs": "Unique identifier for a Page",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "scripts": {
                      "docs": "A list of scripts applied to a Site or a Page",
                      "type": "optional<list<ScriptsUpsertCustomCodeRequestScriptsItem>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ScriptsUpsertCustomCodeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ScriptsUpsertCustomCodeResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ScriptsGetCustomCodeResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<ScriptsGetCustomCodeResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsGetCustomCodeResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsGetCustomCodeResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsGetCustomCodeResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeRequestScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsUpsertCustomCodeRequestScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeRequestScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<ScriptsUpsertCustomCodeResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsUpsertCustomCodeResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ScriptsGetCustomCodeResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsGetCustomCodeResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsGetCustomCodeResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsGetCustomCodeResponse:
    properties:
      scripts:
        type: optional<list<ScriptsGetCustomCodeResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeRequestScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeRequestScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsUpsertCustomCodeRequestScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsUpsertCustomCodeResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsUpsertCustomCodeResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsUpsertCustomCodeResponse:
    properties:
      scripts:
        type: optional<list<ScriptsUpsertCustomCodeResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-custom-code:
      path: /pages/{page_id}/custom_code
      method: GET
      auth: true
      docs: >
        Get all registered scripts that have been applied to a specific Page. 
        </br></br>  In order to use the Custom Code APIs for Sites and Pages,
        Custom Code Scripts must first be registered  to a Site via the
        `registered_scripts` endpoints, and then applied to a Site or Page using
        the appropriate `custom_code` endpoints.  <blockquote class="callout
        callout_info" theme="📘">Access to this endpoint requires a bearer token
        from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote> Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Get Custom Code
      response:
        docs: Request was successful
        type: ScriptsGetCustomCodeResponse
        status-code: 200
      errors:
        - root.ScriptsGetCustomCodeRequestBadRequestError
        - root.ScriptsGetCustomCodeRequestUnauthorizedError
        - root.ScriptsGetCustomCodeRequestNotFoundError
        - root.ScriptsGetCustomCodeRequestTooManyRequestsError
        - root.ScriptsGetCustomCodeRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          response:
            body:
              scripts:
                - id: id
                  location: header
                  version: version
                  attributes:
                    key: value
              lastUpdated: lastUpdated
              createdOn: createdOn
    upsert-custom-code:
      path: /pages/{page_id}/custom_code
      method: PUT
      auth: true
      docs: >
        Add a registered script to a Page.  </br></br>  In order to use the
        Custom Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  <blockquote class="callout callout_info" theme="📘">Access
        to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote> Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Add/Update Custom Code
      request:
        name: ScriptsUpsertCustomCodeRequest
        body:
          properties:
            scripts:
              type: optional<list<ScriptsUpsertCustomCodeRequestScriptsItem>>
              docs: A list of scripts applied to a Site or a Page
        content-type: application/json
      response:
        docs: Request was successful
        type: ScriptsUpsertCustomCodeResponse
        status-code: 200
      errors:
        - root.ScriptsUpsertCustomCodeRequestBadRequestError
        - root.ScriptsUpsertCustomCodeRequestUnauthorizedError
        - root.ScriptsUpsertCustomCodeRequestNotFoundError
        - root.ScriptsUpsertCustomCodeRequestTooManyRequestsError
        - root.ScriptsUpsertCustomCodeRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
          request:
            scripts:
              - id: cms_slider
                location: header
                version: 1.0.0
                attributes:
                  my-attribute: some-value
              - id: alert
                location: header
                version: 0.0.1
          response:
            body:
              scripts:
                - id: cms_slider
                  location: header
                  version: 1.0.0
                  attributes:
                    my-attribute: some-value
                - id: alert
                  location: header
                  version: 0.0.1
                  attributes:
                    key: value
              lastUpdated: '2022-10-26T00:28:54.191Z'
              createdOn: '2022-10-26T00:28:54.191Z'
    delete-custom-code:
      path: /pages/{page_id}/custom_code
      method: DELETE
      auth: true
      docs: >
        Delete the custom code block that an app has created for a page
        </br></br>  In order to use the Custom Code APIs for Sites and Pages,
        Custom Code Scripts must first be registered  to a Site via the
        `registered_scripts` endpoints, and then applied to a Site or Page using
        the appropriate `custom_code` endpoints.  <blockquote class="callout
        callout_info" theme="📘">Access to this endpoint requires a bearer token
        from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote> Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        page_id:
          type: string
          docs: Unique identifier for a Page
      display-name: Delete Custom Code
      errors:
        - root.ScriptsDeleteCustomCodeRequestBadRequestError
        - root.ScriptsDeleteCustomCodeRequestUnauthorizedError
        - root.ScriptsDeleteCustomCodeRequestNotFoundError
        - root.ScriptsDeleteCustomCodeRequestTooManyRequestsError
        - root.ScriptsDeleteCustomCodeRequestInternalServerError
      examples:
        - path-parameters:
            page_id: 63c720f9347c2139b248e552
  source:
    openapi: ../openapi.yml
",
    },
    "products.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "create": {
              "auth": true,
              "display-name": "Create Product & SKU",
              "docs": "Creating a new Product involves creating both a Product and a SKU, since a Product Item has to have, at minimum, a single SKU.

In order to create a Product with multiple SKUs - for example a T-shirt in sizes small, medium and large - you'll need to create `sku-properties`. In our T-shirt example, a single `sku-property` would be Color. Within that property, we'll need to list out the various colors a T-shirt could be as an array of `enum` values: `royal-blue`, `crimson-red`, and `forrest-green`.

Once, you've created a Product and its `sku-properties` with `enum` values, you can create your default SKU, which will automatically be a combination of the first `sku-properties` you've created. In our example, the default SKU will be a Royal Blue T-Shirt, because our first `enum` of our Color `sku-property` is Royal Blue. After you've created your product, you can create additional SKUs using the <a href="https://developers.webflow.com/reference/create-skus">Create SKU endpoint</a>

Upon creation, the default product type will be `Advanced`. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown.

Required scope | `ecommerce:write`",
              "errors": [
                "root.ProductsCreateRequestBadRequestError",
                "root.ProductsCreateRequestUnauthorizedError",
                "root.ProductsCreateRequestForbiddenError",
                "root.ProductsCreateRequestNotFoundError",
                "root.ProductsCreateRequestConflictError",
                "root.ProductsCreateRequestTooManyRequestsError",
                "root.ProductsCreateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "product": {
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "createdOn": "2024-04-04T14:22:28Z",
                        "fieldData": {
                          "categories": [
                            "categories",
                          ],
                          "default-sku": "66072fb71b89448912e2681c",
                          "description": "A plain t-shirt",
                          "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                          "name": "T-Shirt",
                          "shippable": true,
                          "sku-properties": [
                            {
                              "enum": [
                                {
                                  "id": "8d21a625d655ab260e9941c27180c75b",
                                  "name": "Small",
                                  "slug": "small",
                                },
                                {
                                  "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                  "name": "Medium",
                                  "slug": "medium",
                                },
                                {
                                  "id": "ec7877d6137ecf7ec86f726c135b1812",
                                  "name": "Large",
                                  "slug": "large",
                                },
                              ],
                              "id": "31b77fa66fa376c2c0abb458d5be39fb",
                              "name": "Size",
                            },
                            {
                              "enum": [
                                {
                                  "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                  "name": "Royal Blue",
                                  "slug": "royal-blue",
                                },
                                {
                                  "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                  "name": "Crimson Red",
                                  "slug": "crimson-red",
                                },
                                {
                                  "id": "996cd95c97fd5620d0a374c835b37205",
                                  "name": "Forrest Green",
                                  "slug": "forrest-green",
                                },
                              ],
                              "id": "74d3738e62c568d5634dd6989daec5ec",
                              "name": "Color",
                            },
                          ],
                          "slug": "t-shirt",
                          "tax-category": "standard-taxable",
                        },
                        "id": "660eb7a486d1d6e0412292d7",
                        "isArchived": false,
                        "isDraft": false,
                        "lastPublished": "2024-04-04T14:24:19Z",
                        "lastUpdated": "2024-04-04T14:30:19Z",
                      },
                      "skus": [
                        {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "createdOn": "2023-03-17T18:47:35Z",
                          "fieldData": {
                            "name": "Blue T-shirt",
                            "price": {
                              "unit": "USD",
                              "value": 100,
                            },
                            "quantity": 10,
                            "sku-values": {
                              "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                            },
                            "slug": "t-shirt-blue",
                          },
                          "id": "580e63fc8c9a982ac9b8b745",
                          "lastPublished": "2023-03-17T18:47:35Z",
                          "lastUpdated": "2023-03-17T18:47:35Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/products",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "product": {
                      "docs": "The Product object",
                      "type": "optional<ProductsCreateRequestProduct>",
                    },
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<ProductsCreateRequestPublishStatus>",
                    },
                    "sku": {
                      "docs": "The SKU object",
                      "type": "optional<ProductsCreateRequestSku>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ProductsCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ProductsCreateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create-sku": {
              "auth": true,
              "display-name": "Create SKU",
              "docs": "Create additional SKUs to cover every variant of your Product. The Default SKU already counts as one of the variants.

Creating additional SKUs will set the product type to `Advanced` for the product associated with the SKUs. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.ProductsCreateSkuRequestBadRequestError",
                "root.ProductsCreateSkuRequestUnauthorizedError",
                "root.ProductsCreateSkuRequestForbiddenError",
                "root.ProductsCreateSkuRequestNotFoundError",
                "root.ProductsCreateSkuRequestConflictError",
                "root.ProductsCreateSkuRequestTooManyRequestsError",
                "root.ProductsCreateSkuRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "skus": [
                      {},
                    ],
                  },
                  "response": {
                    "body": {
                      "skus": [
                        {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "createdOn": "2023-03-17T18:47:35Z",
                          "fieldData": {
                            "name": "Blue T-shirt",
                            "price": {
                              "unit": "USD",
                              "value": 100,
                            },
                            "quantity": 10,
                            "sku-values": {
                              "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                            },
                            "slug": "t-shirt-blue",
                          },
                          "id": "580e63fc8c9a982ac9b8b745",
                          "lastPublished": "2023-03-17T18:47:35Z",
                          "lastUpdated": "2023-03-17T18:47:35Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}/skus",
              "path-parameters": {
                "product_id": {
                  "docs": "Unique identifier for a Product",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<ProductsCreateSkuRequestPublishStatus>",
                    },
                    "skus": {
                      "docs": "An array of the SKU data your are adding",
                      "type": "list<ProductsCreateSkuRequestSkusItem>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ProductsCreateSkuRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ProductsCreateSkuResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": true,
              "display-name": "Get Product and SKUs",
              "docs": "Retrieve a single product by its id. All of its SKUs will also be retrieved.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.ProductsGetRequestBadRequestError",
                "root.ProductsGetRequestUnauthorizedError",
                "root.ProductsGetRequestForbiddenError",
                "root.ProductsGetRequestNotFoundError",
                "root.ProductsGetRequestConflictError",
                "root.ProductsGetRequestTooManyRequestsError",
                "root.ProductsGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "product": {
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "createdOn": "2024-04-04T14:22:28Z",
                        "fieldData": {
                          "categories": [
                            "categories",
                          ],
                          "default-sku": "66072fb71b89448912e2681c",
                          "description": "A plain t-shirt",
                          "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                          "name": "T-Shirt",
                          "shippable": true,
                          "sku-properties": [
                            {
                              "enum": [
                                {
                                  "id": "8d21a625d655ab260e9941c27180c75b",
                                  "name": "Small",
                                  "slug": "small",
                                },
                                {
                                  "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                  "name": "Medium",
                                  "slug": "medium",
                                },
                                {
                                  "id": "ec7877d6137ecf7ec86f726c135b1812",
                                  "name": "Large",
                                  "slug": "large",
                                },
                              ],
                              "id": "31b77fa66fa376c2c0abb458d5be39fb",
                              "name": "Size",
                            },
                            {
                              "enum": [
                                {
                                  "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                  "name": "Royal Blue",
                                  "slug": "royal-blue",
                                },
                                {
                                  "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                  "name": "Crimson Red",
                                  "slug": "crimson-red",
                                },
                                {
                                  "id": "996cd95c97fd5620d0a374c835b37205",
                                  "name": "Forrest Green",
                                  "slug": "forrest-green",
                                },
                              ],
                              "id": "74d3738e62c568d5634dd6989daec5ec",
                              "name": "Color",
                            },
                          ],
                          "slug": "t-shirt",
                          "tax-category": "standard-taxable",
                        },
                        "id": "660eb7a486d1d6e0412292d7",
                        "isArchived": false,
                        "isDraft": false,
                        "lastPublished": "2024-04-04T14:24:19Z",
                        "lastUpdated": "2024-04-04T14:30:19Z",
                      },
                      "skus": [
                        {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "createdOn": "2023-03-17T18:47:35Z",
                          "fieldData": {
                            "name": "Blue T-shirt",
                            "price": {
                              "unit": "USD",
                              "value": 100,
                            },
                            "quantity": 10,
                            "sku-values": {
                              "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                            },
                            "slug": "t-shirt-blue",
                          },
                          "id": "580e63fc8c9a982ac9b8b745",
                          "lastPublished": "2023-03-17T18:47:35Z",
                          "lastUpdated": "2023-03-17T18:47:35Z",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}",
              "path-parameters": {
                "product_id": {
                  "docs": "Unique identifier for a Product",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ProductsGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Products & SKUs",
              "docs": "Retrieve all products for a site. Use `limit` and `offset` to page through all products with subsequent requests. All SKUs for each product will also be fetched and returned. The `limit`, `offset` and `total` values represent Products only and do not include any SKUs.

Required scope | `ecommerce:read`
",
              "errors": [
                "root.ProductsListRequestBadRequestError",
                "root.ProductsListRequestUnauthorizedError",
                "root.ProductsListRequestForbiddenError",
                "root.ProductsListRequestNotFoundError",
                "root.ProductsListRequestConflictError",
                "root.ProductsListRequestTooManyRequestsError",
                "root.ProductsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "product": {
                            "cmsLocaleId": "653ad57de882f528b32e810e",
                            "createdOn": "2024-04-04T14:22:28Z",
                            "fieldData": {
                              "default-sku": "66072fb71b89448912e2681c",
                              "description": "A plain t-shirt",
                              "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                              "name": "T-Shirt",
                              "shippable": true,
                              "sku-properties": [
                                {
                                  "enum": [
                                    {
                                      "id": "8d21a625d655ab260e9941c27180c75b",
                                      "name": "Small",
                                      "slug": "small",
                                    },
                                    {
                                      "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                      "name": "Medium",
                                      "slug": "medium",
                                    },
                                    {
                                      "id": "ec7877d6137ecf7ec86f726c135b1812",
                                      "name": "Large",
                                      "slug": "large",
                                    },
                                  ],
                                  "id": "31b77fa66fa376c2c0abb458d5be39fb",
                                  "name": "Size",
                                },
                                {
                                  "enum": [
                                    {
                                      "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                      "name": "Royal Blue",
                                      "slug": "royal-blue",
                                    },
                                    {
                                      "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                      "name": "Crimson Red",
                                      "slug": "crimson-red",
                                    },
                                    {
                                      "id": "996cd95c97fd5620d0a374c835b37205",
                                      "name": "Forrest Green",
                                      "slug": "forrest-green",
                                    },
                                  ],
                                  "id": "74d3738e62c568d5634dd6989daec5ec",
                                  "name": "Color",
                                },
                              ],
                              "slug": "t-shirt",
                              "tax-category": "standard-taxable",
                            },
                            "id": "660eb7a486d1d6e0412292d7",
                            "isArchived": false,
                            "isDraft": false,
                            "lastPublished": "2024-04-04T14:24:19Z",
                            "lastUpdated": "2024-04-04T14:30:19Z",
                          },
                          "skus": [
                            {
                              "cmsLocaleId": "653ad57de882f528b32e810e",
                              "createdOn": "2023-03-17T18:47:35Z",
                              "fieldData": {
                                "name": "Blue T-shirt",
                                "price": {
                                  "unit": "USD",
                                  "value": 100,
                                },
                                "quantity": 10,
                                "sku-values": {
                                  "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                                },
                                "slug": "t-shirt-blue",
                              },
                              "id": "580e63fc8c9a982ac9b8b745",
                              "lastPublished": "2023-03-17T18:47:35Z",
                              "lastUpdated": "2023-03-17T18:47:35Z",
                            },
                          ],
                        },
                      ],
                      "pagination": {
                        "limit": 100,
                        "offset": 0,
                        "total": 100,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/products",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "ProductsListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ProductsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "display-name": "Update Product",
              "docs": "Updating an existing Product will set the product type to `Advanced`. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.ProductsUpdateRequestBadRequestError",
                "root.ProductsUpdateRequestUnauthorizedError",
                "root.ProductsUpdateRequestForbiddenError",
                "root.ProductsUpdateRequestNotFoundError",
                "root.ProductsUpdateRequestConflictError",
                "root.ProductsUpdateRequestTooManyRequestsError",
                "root.ProductsUpdateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2024-04-04T14:22:28Z",
                      "fieldData": {
                        "categories": [
                          "categories",
                        ],
                        "default-sku": "66072fb71b89448912e2681c",
                        "description": "A plain t-shirt",
                        "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                        "name": "T-Shirt",
                        "shippable": true,
                        "sku-properties": [
                          {
                            "enum": [
                              {
                                "id": "8d21a625d655ab260e9941c27180c75b",
                                "name": "Small",
                                "slug": "small",
                              },
                              {
                                "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                                "name": "Medium",
                                "slug": "medium",
                              },
                              {
                                "id": "ec7877d6137ecf7ec86f726c135b1812",
                                "name": "Large",
                                "slug": "large",
                              },
                            ],
                            "id": "31b77fa66fa376c2c0abb458d5be39fb",
                            "name": "Size",
                          },
                          {
                            "enum": [
                              {
                                "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                                "name": "Royal Blue",
                                "slug": "royal-blue",
                              },
                              {
                                "id": "68d98f2fbafc0fd45651cddc44798dd0",
                                "name": "Crimson Red",
                                "slug": "crimson-red",
                              },
                              {
                                "id": "996cd95c97fd5620d0a374c835b37205",
                                "name": "Forrest Green",
                                "slug": "forrest-green",
                              },
                            ],
                            "id": "74d3738e62c568d5634dd6989daec5ec",
                            "name": "Color",
                          },
                        ],
                        "slug": "t-shirt",
                        "tax-category": "standard-taxable",
                      },
                      "id": "660eb7a486d1d6e0412292d7",
                      "isArchived": false,
                      "isDraft": false,
                      "lastPublished": "2024-04-04T14:24:19Z",
                      "lastUpdated": "2024-04-04T14:30:19Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}",
              "path-parameters": {
                "product_id": {
                  "docs": "Unique identifier for a Product",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "product": {
                      "docs": "The Product object",
                      "type": "optional<ProductsUpdateRequestProduct>",
                    },
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<ProductsUpdateRequestPublishStatus>",
                    },
                    "sku": {
                      "docs": "The SKU object",
                      "type": "optional<ProductsUpdateRequestSku>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ProductsUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ProductsUpdateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update-sku": {
              "auth": true,
              "display-name": "Update SKU",
              "docs": "Updating an existing SKU will set the product type to `Advanced` for the product associated with the SKU. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.

Required scope | `ecommerce:write`
",
              "errors": [
                "root.ProductsUpdateSkuRequestBadRequestError",
                "root.ProductsUpdateSkuRequestUnauthorizedError",
                "root.ProductsUpdateSkuRequestForbiddenError",
                "root.ProductsUpdateSkuRequestNotFoundError",
                "root.ProductsUpdateSkuRequestConflictError",
                "root.ProductsUpdateSkuRequestTooManyRequestsError",
                "root.ProductsUpdateSkuRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "product_id": "580e63fc8c9a982ac9b8b745",
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "sku_id": "5e8518516e147040726cc415",
                  },
                  "request": {
                    "sku": {},
                  },
                  "response": {
                    "body": {
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "createdOn": "2023-03-17T18:47:35Z",
                      "fieldData": {
                        "compare-at-price": {
                          "unit": "USD",
                          "value": 100,
                        },
                        "ec-sku-billing-method": "one-time",
                        "ec-sku-subscription-plan": {
                          "frequency": 1,
                          "interval": "day",
                          "plans": [
                            {},
                          ],
                          "trial": 7,
                        },
                        "name": "Blue T-shirt",
                        "price": {
                          "unit": "USD",
                          "value": 100,
                        },
                        "quantity": 10,
                        "sku-values": {
                          "ff42fee0113744f693a764e3431a9cc2": "64a74715c456e36762fc39a1",
                        },
                        "slug": "t-shirt-blue",
                        "track-inventory": true,
                      },
                      "id": "580e63fc8c9a982ac9b8b745",
                      "lastPublished": "2023-03-17T18:47:35Z",
                      "lastUpdated": "2023-03-17T18:47:35Z",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/products/{product_id}/skus/{sku_id}",
              "path-parameters": {
                "product_id": {
                  "docs": "Unique identifier for a Product",
                  "type": "string",
                },
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
                "sku_id": {
                  "docs": "Unique identifier for a SKU",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "publishStatus": {
                      "default": "staging",
                      "docs": "Indicate whether your Product should be set as "staging" or "live"",
                      "type": "optional<ProductsUpdateSkuRequestPublishStatus>",
                    },
                    "sku": {
                      "docs": "The SKU object",
                      "type": "ProductsUpdateSkuRequestSku",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ProductsUpdateSkuRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ProductsUpdateSkuResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ProductsCreateRequestProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ProductsCreateRequestProductFieldData>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ProductsCreateRequestProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ProductsCreateRequestProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ProductsCreateRequestProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ProductsCreateRequestProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSku": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsCreateRequestSkuFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsCreateRequestSkuFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsCreateRequestSkuFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsCreateRequestSkuFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateRequestSkuFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponse": {
            "docs": "A product and its SKUs.",
            "inline": undefined,
            "properties": {
              "product": {
                "docs": "The Product object",
                "type": "optional<ProductsCreateResponseProduct>",
              },
              "skus": {
                "docs": "A list of SKU Objects",
                "type": "optional<list<ProductsCreateResponseSkusItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ProductsCreateResponseProductFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ProductsCreateResponseProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ProductsCreateResponseProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ProductsCreateResponseProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ProductsCreateResponseProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsCreateResponseSkusItemFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsCreateResponseSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsCreateResponseSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsCreateResponseSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateResponseSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsCreateSkuRequestSkusItemFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsCreateSkuRequestSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsCreateSkuRequestSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuRequestSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "skus": "optional<list<ProductsCreateSkuResponseSkusItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsCreateSkuResponseSkusItemFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsCreateSkuResponseSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsCreateSkuResponseSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsCreateSkuResponseSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponse": {
            "docs": "A product and its SKUs.",
            "inline": undefined,
            "properties": {
              "product": {
                "docs": "The Product object",
                "type": "optional<ProductsGetResponseProduct>",
              },
              "skus": {
                "docs": "A list of SKU Objects",
                "type": "optional<list<ProductsGetResponseSkusItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ProductsGetResponseProductFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ProductsGetResponseProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ProductsGetResponseProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ProductsGetResponseProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ProductsGetResponseProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsGetResponseSkusItemFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsGetResponseSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsGetResponseSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsGetResponseSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsGetResponseSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponse": {
            "docs": "Results from product list",
            "inline": undefined,
            "properties": {
              "items": {
                "docs": "List of Item objects within the Collection. Contains product and skus keys for each Item",
                "type": "optional<list<ProductsListResponseItemsItem>>",
              },
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ProductsListResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItem": {
            "docs": "A product and its SKUs.",
            "inline": true,
            "properties": {
              "product": {
                "docs": "The Product object",
                "type": "optional<ProductsListResponseItemsItemProduct>",
              },
              "skus": {
                "docs": "A list of SKU Objects",
                "type": "optional<list<ProductsListResponseItemsItemSkusItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ProductsListResponseItemsItemProductFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ProductsListResponseItemsItemProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ProductsListResponseItemsItemProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ProductsListResponseItemsItemProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ProductsListResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItem": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsListResponseItemsItemSkusItemFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsListResponseItemsItemSkusItemFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsListResponseItemsItemSkusItemFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponseItemsItemSkusItemFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsListResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestProduct": {
            "docs": "The Product object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ProductsUpdateRequestProductFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestProductFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ProductsUpdateRequestProductFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ProductsUpdateRequestProductFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ProductsUpdateRequestProductFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestProductFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestProductFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ProductsUpdateRequestProductFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestProductFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestProductFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSku": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsUpdateRequestSkuFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsUpdateRequestSkuFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsUpdateRequestSkuFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsUpdateRequestSkuFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateRequestSkuFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateResponse": {
            "docs": "The Product object",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
                "type": "optional<ProductsUpdateResponseFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "isArchived": {
                "default": false,
                "docs": "Boolean determining if the Product is set to archived",
                "type": "optional<boolean>",
              },
              "isDraft": {
                "default": false,
                "docs": "Boolean determining if the Product is set to draft",
                "type": "optional<boolean>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateResponseFieldData": {
            "docs": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "inline": true,
            "properties": {
              "categories": {
                "docs": "The categories your product belongs to.",
                "type": "optional<list<string>>",
              },
              "default-sku": {
                "docs": "The default SKU associated with this product.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "A description of your product",
                "type": "optional<string>",
              },
              "ec-product-type": {
                "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
                "type": "optional<ProductsUpdateResponseFieldDataEcProductType>",
              },
              "name": {
                "docs": "Name of the Product",
                "type": "optional<string>",
              },
              "shippable": {
                "docs": "Boolean determining if the Product is shippable",
                "type": "optional<boolean>",
              },
              "sku-properties": {
                "docs": "Variant types to include in SKUs",
                "type": "optional<list<ProductsUpdateResponseFieldDataSkuPropertiesItem>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "optional<string>",
              },
              "tax-category": {
                "docs": "Product tax class",
                "type": "optional<ProductsUpdateResponseFieldDataTaxCategory>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateResponseFieldDataEcProductType": {
            "docs": "<a href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced"",
            "enum": [
              "ff42fee0113744f693a764e3431a9cc2",
              "f22027db68002190aef89a4a2b7ac8a1",
              "c599e43b1a1c34d5a323aedf75d3adf6",
              "b6ccc1830db4b1babeb06a9ac5f6dd76",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateResponseFieldDataSkuPropertiesItem": {
            "docs": "A variant/option type for a SKU",
            "inline": true,
            "properties": {
              "enum": {
                "docs": "The individual Product variants that are contained within the collection",
                "type": "list<ProductsUpdateResponseFieldDataSkuPropertiesItemEnumItem>",
              },
              "id": {
                "docs": "Unique identifier for a collection of Product Variants",
                "type": "string",
              },
              "name": {
                "docs": "Name of the collection of Product Variants",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateResponseFieldDataSkuPropertiesItemEnumItem": {
            "docs": "Enumerated Product variants/Options for the SKU",
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for a Product variant/Option",
                "type": "string",
              },
              "name": {
                "docs": "Name of the Product variant/Option",
                "type": "string",
              },
              "slug": {
                "docs": "Slug for the Product variant/Option in the Site URL structure",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateResponseFieldDataTaxCategory": {
            "docs": "Product tax class",
            "enum": [
              {
                "name": "StandardTaxable",
                "value": "standard-taxable",
              },
              {
                "name": "StandardExempt",
                "value": "standard-exempt",
              },
              {
                "name": "BooksReligious",
                "value": "books-religious",
              },
              {
                "name": "BooksTextbook",
                "value": "books-textbook",
              },
              "clothing",
              {
                "name": "ClothingSwimwear",
                "value": "clothing-swimwear",
              },
              {
                "name": "DigitalGoods",
                "value": "digital-goods",
              },
              {
                "name": "DigitalService",
                "value": "digital-service",
              },
              {
                "name": "DrugsNonPrescription",
                "value": "drugs-non-prescription",
              },
              {
                "name": "DrugsPrescription",
                "value": "drugs-prescription",
              },
              {
                "name": "FoodBottledWater",
                "value": "food-bottled-water",
              },
              {
                "name": "FoodCandy",
                "value": "food-candy",
              },
              {
                "name": "FoodGroceries",
                "value": "food-groceries",
              },
              {
                "name": "FoodPrepared",
                "value": "food-prepared",
              },
              {
                "name": "FoodSoda",
                "value": "food-soda",
              },
              {
                "name": "FoodSupplements",
                "value": "food-supplements",
              },
              {
                "name": "MagazineIndividual",
                "value": "magazine-individual",
              },
              {
                "name": "MagazineSubscription",
                "value": "magazine-subscription",
              },
              {
                "name": "ServiceAdmission",
                "value": "service-admission",
              },
              {
                "name": "ServiceAdvertising",
                "value": "service-advertising",
              },
              {
                "name": "ServiceDryCleaning",
                "value": "service-dry-cleaning",
              },
              {
                "name": "ServiceHairdressing",
                "value": "service-hairdressing",
              },
              {
                "name": "ServiceInstallation",
                "value": "service-installation",
              },
              {
                "name": "ServiceMiscellaneous",
                "value": "service-miscellaneous",
              },
              {
                "name": "ServiceParking",
                "value": "service-parking",
              },
              {
                "name": "ServicePrinting",
                "value": "service-printing",
              },
              {
                "name": "ServiceProfessional",
                "value": "service-professional",
              },
              {
                "name": "ServiceRepair",
                "value": "service-repair",
              },
              {
                "name": "ServiceTraining",
                "value": "service-training",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestPublishStatus": {
            "default": "staging",
            "docs": "Indicate whether your Product should be set as "staging" or "live"",
            "enum": [
              "staging",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSku": {
            "docs": "The SKU object",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsUpdateSkuRequestSkuFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsUpdateSkuRequestSkuFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsUpdateSkuRequestSkuFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuRequestSkuFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponse": {
            "docs": "The SKU object",
            "inline": undefined,
            "properties": {
              "cmsLocaleId": {
                "docs": "Identifier for the locale of the CMS item",
                "type": "optional<string>",
              },
              "createdOn": {
                "docs": "The date the Product was created",
                "type": "optional<datetime>",
              },
              "fieldData": {
                "docs": "Standard and Custom fields for a SKU",
                "type": "optional<ProductsUpdateSkuResponseFieldData>",
              },
              "id": {
                "docs": "Unique identifier for the Product",
                "type": "optional<string>",
              },
              "lastPublished": {
                "docs": "The date the Product was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Product was last updated",
                "type": "optional<datetime>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldData": {
            "docs": "Standard and Custom fields for a SKU",
            "inline": true,
            "properties": {
              "compare-at-price": {
                "docs": "comparison price of SKU",
                "type": "optional<ProductsUpdateSkuResponseFieldDataCompareAtPrice>",
              },
              "ec-sku-billing-method": "optional<ProductsUpdateSkuResponseFieldDataEcSkuBillingMethod>",
              "ec-sku-subscription-plan": "optional<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlan>",
              "name": {
                "docs": "Name of the Product",
                "type": "string",
              },
              "price": {
                "docs": "price of SKU",
                "type": "ProductsUpdateSkuResponseFieldDataPrice",
              },
              "quantity": {
                "docs": "Quantity of SKU that will be tracked as items are ordered.",
                "type": "optional<double>",
              },
              "sku-values": {
                "docs": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.
",
                "type": "optional<map<string, string>>",
              },
              "slug": {
                "docs": "URL structure of the Product in your site.",
                "type": "string",
              },
              "track-inventory": {
                "default": false,
                "docs": "A boolean indicating whether inventory for this product should be tracked.",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataCompareAtPrice": {
            "docs": "comparison price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataEcSkuBillingMethod": {
            "enum": [
              {
                "name": "OneTime",
                "value": "one-time",
              },
              "subscription",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "frequency": {
                "docs": "Frequncy of billing within interval",
                "type": "optional<double>",
              },
              "interval": {
                "docs": "Interval of subscription renewal",
                "type": "optional<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanInterval>",
              },
              "plans": "optional<list<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItem>>",
              "trial": {
                "docs": "Number of days of a trial",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanInterval": {
            "docs": "Interval of subscription renewal",
            "enum": [
              "day",
              "week",
              "month",
              "year",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The unique identifier of the plan",
                "type": "optional<string>",
              },
              "platform": {
                "docs": "The platform of the subscription plan",
                "type": "optional<literal<"stripe">>",
              },
              "status": {
                "docs": "The status of the plan",
                "type": "optional<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus": {
            "docs": "The status of the plan",
            "enum": [
              "active",
              "inactive",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ProductsUpdateSkuResponseFieldDataPrice": {
            "docs": "price of SKU",
            "inline": true,
            "properties": {
              "unit": {
                "docs": "Currency of Item",
                "type": "optional<string>",
              },
              "value": {
                "docs": "Price of SKU",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ProductsListResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: >-
          list<ProductsListResponseItemsItemProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsListResponseItemsItemProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsListResponseItemsItemProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: >-
          optional<list<ProductsListResponseItemsItemProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductsListResponseItemsItemProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductsListResponseItemsItemProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<ProductsListResponseItemsItemProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsListResponseItemsItemSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsListResponseItemsItemSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: >-
        optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: >-
        optional<ProductsListResponseItemsItemSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItemSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsListResponseItemsItemSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponseItemsItem:
    docs: A product and its SKUs.
    properties:
      product:
        type: optional<ProductsListResponseItemsItemProduct>
        docs: The Product object
      skus:
        type: optional<list<ProductsListResponseItemsItemSkusItem>>
        docs: A list of SKU Objects
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsListResponse:
    docs: Results from product list
    properties:
      items:
        type: optional<list<ProductsListResponseItemsItem>>
        docs: >-
          List of Item objects within the Collection. Contains product and skus
          keys for each Item
      pagination:
        type: optional<ProductsListResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<ProductsCreateRequestProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<ProductsCreateRequestProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductsCreateRequestProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductsCreateRequestProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestProduct:
    docs: The Product object
    properties:
      fieldData:
        type: optional<ProductsCreateRequestProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestSkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestSkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestSkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestSkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsCreateRequestSkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsCreateRequestSkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsCreateRequestSkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsCreateRequestSkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateRequestSku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsCreateRequestSkuFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<ProductsCreateResponseProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateResponseProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateResponseProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: >-
          optional<list<ProductsCreateResponseProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductsCreateResponseProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductsCreateResponseProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<ProductsCreateResponseProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsCreateResponseSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsCreateResponseSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsCreateResponseSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsCreateResponseSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponseSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsCreateResponseSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateResponse:
    docs: A product and its SKUs.
    properties:
      product:
        type: optional<ProductsCreateResponseProduct>
        docs: The Product object
      skus:
        type: optional<list<ProductsCreateResponseSkusItem>>
        docs: A list of SKU Objects
    source:
      openapi: ../openapi.yml
  ProductsGetResponseProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<ProductsGetResponseProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsGetResponseProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsGetResponseProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<ProductsGetResponseProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductsGetResponseProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductsGetResponseProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<ProductsGetResponseProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsGetResponseSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsGetResponseSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsGetResponseSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsGetResponseSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponseSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsGetResponseSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsGetResponse:
    docs: A product and its SKUs.
    properties:
      product:
        type: optional<ProductsGetResponseProduct>
        docs: The Product object
      skus:
        type: optional<list<ProductsGetResponseSkusItem>>
        docs: A list of SKU Objects
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestProductFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestProductFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<ProductsUpdateRequestProductFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestProductFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestProductFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestProductFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<ProductsUpdateRequestProductFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductsUpdateRequestProductFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductsUpdateRequestProductFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestProduct:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<ProductsUpdateRequestProductFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestSkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestSkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestSkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestSkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsUpdateRequestSkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsUpdateRequestSkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsUpdateRequestSkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsUpdateRequestSkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateRequestSku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsUpdateRequestSkuFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateResponseFieldDataSkuPropertiesItemEnumItem:
    docs: Enumerated Product variants/Options for the SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a Product variant/Option
      name:
        type: string
        docs: Name of the Product variant/Option
      slug:
        type: string
        docs: Slug for the Product variant/Option in the Site URL structure
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateResponseFieldDataSkuPropertiesItem:
    docs: A variant/option type for a SKU
    properties:
      id:
        type: string
        docs: Unique identifier for a collection of Product Variants
      name:
        type: string
        docs: Name of the collection of Product Variants
      enum:
        docs: >-
          The individual Product variants that are contained within the
          collection
        type: list<ProductsUpdateResponseFieldDataSkuPropertiesItemEnumItem>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateResponseFieldDataTaxCategory:
    enum:
      - value: standard-taxable
        name: StandardTaxable
      - value: standard-exempt
        name: StandardExempt
      - value: books-religious
        name: BooksReligious
      - value: books-textbook
        name: BooksTextbook
      - clothing
      - value: clothing-swimwear
        name: ClothingSwimwear
      - value: digital-goods
        name: DigitalGoods
      - value: digital-service
        name: DigitalService
      - value: drugs-non-prescription
        name: DrugsNonPrescription
      - value: drugs-prescription
        name: DrugsPrescription
      - value: food-bottled-water
        name: FoodBottledWater
      - value: food-candy
        name: FoodCandy
      - value: food-groceries
        name: FoodGroceries
      - value: food-prepared
        name: FoodPrepared
      - value: food-soda
        name: FoodSoda
      - value: food-supplements
        name: FoodSupplements
      - value: magazine-individual
        name: MagazineIndividual
      - value: magazine-subscription
        name: MagazineSubscription
      - value: service-admission
        name: ServiceAdmission
      - value: service-advertising
        name: ServiceAdvertising
      - value: service-dry-cleaning
        name: ServiceDryCleaning
      - value: service-hairdressing
        name: ServiceHairdressing
      - value: service-installation
        name: ServiceInstallation
      - value: service-miscellaneous
        name: ServiceMiscellaneous
      - value: service-parking
        name: ServiceParking
      - value: service-printing
        name: ServicePrinting
      - value: service-professional
        name: ServiceProfessional
      - value: service-repair
        name: ServiceRepair
      - value: service-training
        name: ServiceTraining
    docs: Product tax class
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateResponseFieldDataEcProductType:
    enum:
      - ff42fee0113744f693a764e3431a9cc2
      - f22027db68002190aef89a4a2b7ac8a1
      - c599e43b1a1c34d5a323aedf75d3adf6
      - b6ccc1830db4b1babeb06a9ac5f6dd76
    docs: >-
      <a
      href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
      types.</a> Enums reflect the following values in order: Physical, Digital,
      Service, Advanced"
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateResponseFieldData:
    docs: >-
      Contains content-specific details for a product, covering both standard
      (e.g., title, description)  and custom fields tailored to the product
      setup.
    properties:
      name:
        type: optional<string>
        docs: Name of the Product
      slug:
        type: optional<string>
        docs: URL structure of the Product in your site.
      description:
        type: optional<string>
        docs: A description of your product
      shippable:
        type: optional<boolean>
        docs: Boolean determining if the Product is shippable
      sku-properties:
        type: optional<list<ProductsUpdateResponseFieldDataSkuPropertiesItem>>
        docs: Variant types to include in SKUs
      categories:
        type: optional<list<string>>
        docs: The categories your product belongs to.
      tax-category:
        type: optional<ProductsUpdateResponseFieldDataTaxCategory>
        docs: Product tax class
      default-sku:
        type: optional<string>
        docs: The default SKU associated with this product.
      ec-product-type:
        type: optional<ProductsUpdateResponseFieldDataEcProductType>
        docs: >-
          <a
          href="https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types">Product
          types.</a> Enums reflect the following values in order: Physical,
          Digital, Service, Advanced"
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateResponse:
    docs: The Product object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      isArchived:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to archived
        default: false
      isDraft:
        type: optional<boolean>
        docs: Boolean determining if the Product is set to draft
        default: false
      fieldData:
        type: optional<ProductsUpdateResponseFieldData>
        docs: >-
          Contains content-specific details for a product, covering both
          standard (e.g., title, description)  and custom fields tailored to the
          product setup.
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuRequestSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuRequestSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuRequestSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsCreateSkuRequestSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsCreateSkuRequestSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsCreateSkuRequestSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuRequestSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsCreateSkuRequestSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponseSkusItemFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponseSkusItemFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponseSkusItemFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponseSkusItemFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsCreateSkuResponseSkusItemFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsCreateSkuResponseSkusItemFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: >-
        optional<ProductsCreateSkuResponseSkusItemFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponseSkusItem:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsCreateSkuResponseSkusItemFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsCreateSkuResponse:
    properties:
      skus: optional<list<ProductsCreateSkuResponseSkusItem>>
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestPublishStatus:
    enum:
      - staging
      - live
    docs: Indicate whether your Product should be set as "staging" or "live"
    default: staging
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestSkuFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuRequestSkuFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuRequestSkuFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuRequestSkuFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsUpdateSkuRequestSkuFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsUpdateSkuRequestSkuFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsUpdateSkuRequestSkuFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuRequestSku:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsUpdateSkuRequestSkuFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuResponseFieldDataPrice:
    docs: price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuResponseFieldDataCompareAtPrice:
    docs: comparison price of SKU
    properties:
      value:
        type: optional<double>
        docs: Price of SKU
      unit:
        type: optional<string>
        docs: Currency of Item
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuResponseFieldDataEcSkuBillingMethod:
    enum:
      - value: one-time
        name: OneTime
      - subscription
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanInterval:
    enum:
      - day
      - week
      - month
      - year
    docs: Interval of subscription renewal
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus:
    enum:
      - active
      - inactive
      - canceled
    docs: The status of the plan
    inline: true
    source:
      openapi: ../openapi.yml
  ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItem:
    properties:
      platform:
        type: optional<literal<"stripe">>
        docs: The platform of the subscription plan
      id:
        type: optional<string>
        docs: The unique identifier of the plan
      status:
        type: >-
          optional<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItemStatus>
        docs: The status of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlan:
    properties:
      interval:
        type: >-
          optional<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanInterval>
        docs: Interval of subscription renewal
      frequency:
        type: optional<double>
        docs: Frequncy of billing within interval
      trial:
        type: optional<double>
        docs: Number of days of a trial
      plans: >-
        optional<list<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlanPlansItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuResponseFieldData:
    docs: Standard and Custom fields for a SKU
    properties:
      sku-values:
        type: optional<map<string, string>>
        docs: >
          A dictionary that maps a SKU property to a SKU value. The key of the
          dictionary is the SKU property ID, and the value is the SKU value ID.
      name:
        type: string
        docs: Name of the Product
      slug:
        type: string
        docs: URL structure of the Product in your site.
      price:
        type: ProductsUpdateSkuResponseFieldDataPrice
        docs: price of SKU
      compare-at-price:
        type: optional<ProductsUpdateSkuResponseFieldDataCompareAtPrice>
        docs: comparison price of SKU
      ec-sku-billing-method: optional<ProductsUpdateSkuResponseFieldDataEcSkuBillingMethod>
      ec-sku-subscription-plan: optional<ProductsUpdateSkuResponseFieldDataEcSkuSubscriptionPlan>
      track-inventory:
        type: optional<boolean>
        docs: >-
          A boolean indicating whether inventory for this product should be
          tracked.
        default: false
      quantity:
        type: optional<double>
        docs: Quantity of SKU that will be tracked as items are ordered.
    source:
      openapi: ../openapi.yml
    inline: true
  ProductsUpdateSkuResponse:
    docs: The SKU object
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Product
      cmsLocaleId:
        type: optional<string>
        docs: Identifier for the locale of the CMS item
      lastPublished:
        type: optional<datetime>
        docs: The date the Product was last published
      lastUpdated:
        type: optional<datetime>
        docs: The date the Product was last updated
      createdOn:
        type: optional<datetime>
        docs: The date the Product was created
      fieldData:
        type: optional<ProductsUpdateSkuResponseFieldData>
        docs: Standard and Custom fields for a SKU
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/products
      method: GET
      auth: true
      docs: >
        Retrieve all products for a site. Use `limit` and `offset` to page
        through all products with subsequent requests. All SKUs for each product
        will also be fetched and returned. The `limit`, `offset` and `total`
        values represent Products only and do not include any SKUs.


        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Products & SKUs
      request:
        name: ProductsListRequest
        query-parameters:
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: ProductsListResponse
        status-code: 200
      errors:
        - root.ProductsListRequestBadRequestError
        - root.ProductsListRequestUnauthorizedError
        - root.ProductsListRequestForbiddenError
        - root.ProductsListRequestNotFoundError
        - root.ProductsListRequestConflictError
        - root.ProductsListRequestTooManyRequestsError
        - root.ProductsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              items:
                - product:
                    id: 660eb7a486d1d6e0412292d7
                    cmsLocaleId: 653ad57de882f528b32e810e
                    lastPublished: '2024-04-04T14:24:19Z'
                    lastUpdated: '2024-04-04T14:30:19Z'
                    createdOn: '2024-04-04T14:22:28Z'
                    isArchived: false
                    isDraft: false
                    fieldData:
                      name: T-Shirt
                      slug: t-shirt
                      description: A plain t-shirt
                      shippable: true
                      sku-properties:
                        - id: 31b77fa66fa376c2c0abb458d5be39fb
                          name: Size
                          enum:
                            - id: 8d21a625d655ab260e9941c27180c75b
                              name: Small
                              slug: small
                            - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                              name: Medium
                              slug: medium
                            - id: ec7877d6137ecf7ec86f726c135b1812
                              name: Large
                              slug: large
                        - id: 74d3738e62c568d5634dd6989daec5ec
                          name: Color
                          enum:
                            - id: e539b0d6c3a609cd06ddb2da804f68f0
                              name: Royal Blue
                              slug: royal-blue
                            - id: 68d98f2fbafc0fd45651cddc44798dd0
                              name: Crimson Red
                              slug: crimson-red
                            - id: 996cd95c97fd5620d0a374c835b37205
                              name: Forrest Green
                              slug: forrest-green
                      tax-category: standard-taxable
                      default-sku: 66072fb71b89448912e2681c
                      ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
                  skus:
                    - id: 580e63fc8c9a982ac9b8b745
                      cmsLocaleId: 653ad57de882f528b32e810e
                      lastPublished: '2023-03-17T18:47:35Z'
                      lastUpdated: '2023-03-17T18:47:35Z'
                      createdOn: '2023-03-17T18:47:35Z'
                      fieldData:
                        sku-values:
                          ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                        name: Blue T-shirt
                        slug: t-shirt-blue
                        price:
                          value: 100
                          unit: USD
                        quantity: 10
              pagination:
                limit: 100
                offset: 0
                total: 100
    create:
      path: /sites/{site_id}/products
      method: POST
      auth: true
      docs: >-
        Creating a new Product involves creating both a Product and a SKU, since
        a Product Item has to have, at minimum, a single SKU.


        In order to create a Product with multiple SKUs - for example a T-shirt
        in sizes small, medium and large - you'll need to create
        `sku-properties`. In our T-shirt example, a single `sku-property` would
        be Color. Within that property, we'll need to list out the various
        colors a T-shirt could be as an array of `enum` values: `royal-blue`,
        `crimson-red`, and `forrest-green`.


        Once, you've created a Product and its `sku-properties` with `enum`
        values, you can create your default SKU, which will automatically be a
        combination of the first `sku-properties` you've created. In our
        example, the default SKU will be a Royal Blue T-Shirt, because our first
        `enum` of our Color `sku-property` is Royal Blue. After you've created
        your product, you can create additional SKUs using the <a
        href="https://developers.webflow.com/reference/create-skus">Create SKU
        endpoint</a>


        Upon creation, the default product type will be `Advanced`. The product
        type is used to determine which Product and SKU fields are shown to
        users in the `Designer` and the `Editor`. Setting it to `Advanced`
        ensures that all Product and SKU fields will be shown.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Product & SKU
      request:
        name: ProductsCreateRequest
        body:
          properties:
            publishStatus:
              type: optional<ProductsCreateRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            product:
              type: optional<ProductsCreateRequestProduct>
              docs: The Product object
            sku:
              type: optional<ProductsCreateRequestSku>
              docs: The SKU object
        content-type: application/json
      response:
        docs: Request was successful
        type: ProductsCreateResponse
        status-code: 200
      errors:
        - root.ProductsCreateRequestBadRequestError
        - root.ProductsCreateRequestUnauthorizedError
        - root.ProductsCreateRequestForbiddenError
        - root.ProductsCreateRequestNotFoundError
        - root.ProductsCreateRequestConflictError
        - root.ProductsCreateRequestTooManyRequestsError
        - root.ProductsCreateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request: {}
          response:
            body:
              product:
                id: 660eb7a486d1d6e0412292d7
                cmsLocaleId: 653ad57de882f528b32e810e
                lastPublished: '2024-04-04T14:24:19Z'
                lastUpdated: '2024-04-04T14:30:19Z'
                createdOn: '2024-04-04T14:22:28Z'
                isArchived: false
                isDraft: false
                fieldData:
                  name: T-Shirt
                  slug: t-shirt
                  description: A plain t-shirt
                  shippable: true
                  sku-properties:
                    - id: 31b77fa66fa376c2c0abb458d5be39fb
                      name: Size
                      enum:
                        - id: 8d21a625d655ab260e9941c27180c75b
                          name: Small
                          slug: small
                        - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                          name: Medium
                          slug: medium
                        - id: ec7877d6137ecf7ec86f726c135b1812
                          name: Large
                          slug: large
                    - id: 74d3738e62c568d5634dd6989daec5ec
                      name: Color
                      enum:
                        - id: e539b0d6c3a609cd06ddb2da804f68f0
                          name: Royal Blue
                          slug: royal-blue
                        - id: 68d98f2fbafc0fd45651cddc44798dd0
                          name: Crimson Red
                          slug: crimson-red
                        - id: 996cd95c97fd5620d0a374c835b37205
                          name: Forrest Green
                          slug: forrest-green
                  categories:
                    - categories
                  tax-category: standard-taxable
                  default-sku: 66072fb71b89448912e2681c
                  ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                    name: Blue T-shirt
                    slug: t-shirt-blue
                    price:
                      value: 100
                      unit: USD
                    quantity: 10
    get:
      path: /sites/{site_id}/products/{product_id}
      method: GET
      auth: true
      docs: >
        Retrieve a single product by its id. All of its SKUs will also be
        retrieved.


        Required scope | `ecommerce:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
      display-name: Get Product and SKUs
      response:
        docs: Request was successful
        type: ProductsGetResponse
        status-code: 200
      errors:
        - root.ProductsGetRequestBadRequestError
        - root.ProductsGetRequestUnauthorizedError
        - root.ProductsGetRequestForbiddenError
        - root.ProductsGetRequestNotFoundError
        - root.ProductsGetRequestConflictError
        - root.ProductsGetRequestTooManyRequestsError
        - root.ProductsGetRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          response:
            body:
              product:
                id: 660eb7a486d1d6e0412292d7
                cmsLocaleId: 653ad57de882f528b32e810e
                lastPublished: '2024-04-04T14:24:19Z'
                lastUpdated: '2024-04-04T14:30:19Z'
                createdOn: '2024-04-04T14:22:28Z'
                isArchived: false
                isDraft: false
                fieldData:
                  name: T-Shirt
                  slug: t-shirt
                  description: A plain t-shirt
                  shippable: true
                  sku-properties:
                    - id: 31b77fa66fa376c2c0abb458d5be39fb
                      name: Size
                      enum:
                        - id: 8d21a625d655ab260e9941c27180c75b
                          name: Small
                          slug: small
                        - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                          name: Medium
                          slug: medium
                        - id: ec7877d6137ecf7ec86f726c135b1812
                          name: Large
                          slug: large
                    - id: 74d3738e62c568d5634dd6989daec5ec
                      name: Color
                      enum:
                        - id: e539b0d6c3a609cd06ddb2da804f68f0
                          name: Royal Blue
                          slug: royal-blue
                        - id: 68d98f2fbafc0fd45651cddc44798dd0
                          name: Crimson Red
                          slug: crimson-red
                        - id: 996cd95c97fd5620d0a374c835b37205
                          name: Forrest Green
                          slug: forrest-green
                  categories:
                    - categories
                  tax-category: standard-taxable
                  default-sku: 66072fb71b89448912e2681c
                  ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                    name: Blue T-shirt
                    slug: t-shirt-blue
                    price:
                      value: 100
                      unit: USD
                    quantity: 10
    update:
      path: /sites/{site_id}/products/{product_id}
      method: PATCH
      auth: true
      docs: >
        Updating an existing Product will set the product type to `Advanced`.
        The product type is used to determine which Product and SKU fields are
        shown to users in the `Designer` and the `Editor`. Setting it to
        `Advanced` ensures that all Product and SKU fields will be shown. The
        product type can be edited in the `Designer` or the `Editor`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
      display-name: Update Product
      request:
        name: ProductsUpdateRequest
        body:
          properties:
            publishStatus:
              type: optional<ProductsUpdateRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            product:
              type: optional<ProductsUpdateRequestProduct>
              docs: The Product object
            sku:
              type: optional<ProductsUpdateRequestSku>
              docs: The SKU object
        content-type: application/json
      response:
        docs: Request was successful
        type: ProductsUpdateResponse
        status-code: 200
      errors:
        - root.ProductsUpdateRequestBadRequestError
        - root.ProductsUpdateRequestUnauthorizedError
        - root.ProductsUpdateRequestForbiddenError
        - root.ProductsUpdateRequestNotFoundError
        - root.ProductsUpdateRequestConflictError
        - root.ProductsUpdateRequestTooManyRequestsError
        - root.ProductsUpdateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          request: {}
          response:
            body:
              id: 660eb7a486d1d6e0412292d7
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2024-04-04T14:24:19Z'
              lastUpdated: '2024-04-04T14:30:19Z'
              createdOn: '2024-04-04T14:22:28Z'
              isArchived: false
              isDraft: false
              fieldData:
                name: T-Shirt
                slug: t-shirt
                description: A plain t-shirt
                shippable: true
                sku-properties:
                  - id: 31b77fa66fa376c2c0abb458d5be39fb
                    name: Size
                    enum:
                      - id: 8d21a625d655ab260e9941c27180c75b
                        name: Small
                        slug: small
                      - id: ecdca17106ad86c0dfe3b5f3ac8be6c9
                        name: Medium
                        slug: medium
                      - id: ec7877d6137ecf7ec86f726c135b1812
                        name: Large
                        slug: large
                  - id: 74d3738e62c568d5634dd6989daec5ec
                    name: Color
                    enum:
                      - id: e539b0d6c3a609cd06ddb2da804f68f0
                        name: Royal Blue
                        slug: royal-blue
                      - id: 68d98f2fbafc0fd45651cddc44798dd0
                        name: Crimson Red
                        slug: crimson-red
                      - id: 996cd95c97fd5620d0a374c835b37205
                        name: Forrest Green
                        slug: forrest-green
                categories:
                  - categories
                tax-category: standard-taxable
                default-sku: 66072fb71b89448912e2681c
                ec-product-type: b6ccc1830db4b1babeb06a9ac5f6dd76
    create-sku:
      path: /sites/{site_id}/products/{product_id}/skus
      method: POST
      auth: true
      docs: >
        Create additional SKUs to cover every variant of your Product. The
        Default SKU already counts as one of the variants.


        Creating additional SKUs will set the product type to `Advanced` for the
        product associated with the SKUs. The product type is used to determine
        which Product and SKU fields are shown to users in the `Designer` and
        the `Editor`. Setting it to `Advanced` ensures that all Product and SKU
        fields will be shown. The product type can be edited in the `Designer`
        or the `Editor`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
      display-name: Create SKU
      request:
        name: ProductsCreateSkuRequest
        body:
          properties:
            publishStatus:
              type: optional<ProductsCreateSkuRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            skus:
              docs: An array of the SKU data your are adding
              type: list<ProductsCreateSkuRequestSkusItem>
        content-type: application/json
      response:
        docs: Request was successful
        type: ProductsCreateSkuResponse
        status-code: 200
      errors:
        - root.ProductsCreateSkuRequestBadRequestError
        - root.ProductsCreateSkuRequestUnauthorizedError
        - root.ProductsCreateSkuRequestForbiddenError
        - root.ProductsCreateSkuRequestNotFoundError
        - root.ProductsCreateSkuRequestConflictError
        - root.ProductsCreateSkuRequestTooManyRequestsError
        - root.ProductsCreateSkuRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
          request:
            skus:
              - {}
          response:
            body:
              skus:
                - id: 580e63fc8c9a982ac9b8b745
                  cmsLocaleId: 653ad57de882f528b32e810e
                  lastPublished: '2023-03-17T18:47:35Z'
                  lastUpdated: '2023-03-17T18:47:35Z'
                  createdOn: '2023-03-17T18:47:35Z'
                  fieldData:
                    sku-values:
                      ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                    name: Blue T-shirt
                    slug: t-shirt-blue
                    price:
                      value: 100
                      unit: USD
                    quantity: 10
    update-sku:
      path: /sites/{site_id}/products/{product_id}/skus/{sku_id}
      method: PATCH
      auth: true
      docs: >
        Updating an existing SKU will set the product type to `Advanced` for the
        product associated with the SKU. The product type is used to determine
        which Product and SKU fields are shown to users in the `Designer` and
        the `Editor`. Setting it to `Advanced` ensures that all Product and SKU
        fields will be shown. The product type can be edited in the `Designer`
        or the `Editor`.


        Required scope | `ecommerce:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        product_id:
          type: string
          docs: Unique identifier for a Product
        sku_id:
          type: string
          docs: Unique identifier for a SKU
      display-name: Update SKU
      request:
        name: ProductsUpdateSkuRequest
        body:
          properties:
            publishStatus:
              type: optional<ProductsUpdateSkuRequestPublishStatus>
              docs: >-
                Indicate whether your Product should be set as "staging" or
                "live"
              default: staging
            sku:
              type: ProductsUpdateSkuRequestSku
              docs: The SKU object
        content-type: application/json
      response:
        docs: Request was successful
        type: ProductsUpdateSkuResponse
        status-code: 200
      errors:
        - root.ProductsUpdateSkuRequestBadRequestError
        - root.ProductsUpdateSkuRequestUnauthorizedError
        - root.ProductsUpdateSkuRequestForbiddenError
        - root.ProductsUpdateSkuRequestNotFoundError
        - root.ProductsUpdateSkuRequestConflictError
        - root.ProductsUpdateSkuRequestTooManyRequestsError
        - root.ProductsUpdateSkuRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            product_id: 580e63fc8c9a982ac9b8b745
            sku_id: 5e8518516e147040726cc415
          request:
            sku: {}
          response:
            body:
              id: 580e63fc8c9a982ac9b8b745
              cmsLocaleId: 653ad57de882f528b32e810e
              lastPublished: '2023-03-17T18:47:35Z'
              lastUpdated: '2023-03-17T18:47:35Z'
              createdOn: '2023-03-17T18:47:35Z'
              fieldData:
                sku-values:
                  ff42fee0113744f693a764e3431a9cc2: 64a74715c456e36762fc39a1
                name: Blue T-shirt
                slug: t-shirt-blue
                price:
                  value: 100
                  unit: USD
                compare-at-price:
                  value: 100
                  unit: USD
                ec-sku-billing-method: one-time
                ec-sku-subscription-plan:
                  interval: day
                  frequency: 1
                  trial: 7
                  plans:
                    - {}
                track-inventory: true
                quantity: 10
  source:
    openapi: ../openapi.yml
",
    },
    "scripts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "display-name": "Get Registered Scripts",
              "docs": "List of scripts registered to a Site.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  Additionally, Scripts can be remotely hosted, or registered as inline snippets. <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`
",
              "errors": [
                "root.ScriptsListRequestBadRequestError",
                "root.ScriptsListRequestUnauthorizedError",
                "root.ScriptsListRequestNotFoundError",
                "root.ScriptsListRequestTooManyRequestsError",
                "root.ScriptsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "registeredScripts": [
                        {
                          "canCopy": false,
                          "createdOn": "2022-10-26T00:28:54.191Z",
                          "displayName": "Alert",
                          "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.1.js",
                          "id": "alert",
                          "lastUpdated": "lastUpdated",
                          "version": "0.0.1",
                        },
                        {
                          "canCopy": false,
                          "createdOn": "2022-10-26T00:28:54.191Z",
                          "displayName": "Alert",
                          "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.2.js",
                          "id": "alert",
                          "lastUpdated": "lastUpdated",
                          "version": "0.0.2",
                        },
                        {
                          "canCopy": true,
                          "createdOn": "2022-10-26T00:28:54.191Z",
                          "displayName": "CMS Slider",
                          "hostedLocation": "https://cdn.jsdelivr.net/.../cms_slider.js",
                          "id": "cms_slider",
                          "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                          "lastUpdated": "lastUpdated",
                          "version": "1.0.0",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/registered_scripts",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ScriptsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "register-hosted": {
              "auth": true,
              "display-name": "Register Script - Hosted",
              "docs": "Add a script to a Site's Custom Code registry. </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  Additionally, Scripts can be remotely hosted, or registered as inline snippets.   <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     </br></br>  Required scope | `custom_code:write`
",
              "errors": [
                "root.ScriptsRegisterHostedRequestBadRequestError",
                "root.ScriptsRegisterHostedRequestUnauthorizedError",
                "root.ScriptsRegisterHostedRequestNotFoundError",
                "root.ScriptsRegisterHostedRequestTooManyRequestsError",
                "root.ScriptsRegisterHostedRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "canCopy": true,
                    "displayName": "CMS Slider",
                    "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                    "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                    "version": "1.0.0",
                  },
                  "response": {
                    "body": {
                      "canCopy": true,
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "displayName": "CMS Slider",
                      "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                      "id": "cms_slider",
                      "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                      "lastUpdated": "lastUpdated",
                      "version": "1.0.0",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/registered_scripts/hosted",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "canCopy": {
                      "default": false,
                      "docs": "Define whether the script can be copied on site duplication and transfer",
                      "type": "optional<boolean>",
                    },
                    "displayName": {
                      "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                      "type": "string",
                    },
                    "hostedLocation": {
                      "docs": "URI for an externally hosted script location",
                      "type": "string",
                    },
                    "integrityHash": {
                      "docs": "Sub-Resource Integrity Hash",
                      "type": "string",
                    },
                    "version": {
                      "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ScriptsRegisterHostedRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 201,
                "type": "ScriptsRegisterHostedResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "register-inline": {
              "auth": true,
              "display-name": "Register Script - Inline",
              "docs": "Add a script to a Site's Custom Code registry. Inline scripts can be between 1 and 2000 characters. </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  </br></br>  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`
",
              "errors": [
                "root.ScriptsRegisterInlineRequestBadRequestError",
                "root.ScriptsRegisterInlineRequestUnauthorizedError",
                "root.ScriptsRegisterInlineRequestNotFoundError",
                "root.ScriptsRegisterInlineRequestTooManyRequestsError",
                "root.ScriptsRegisterInlineRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "displayName": "Alert",
                    "sourceCode": "alert('hello world');",
                    "version": "0.0.1",
                  },
                  "response": {
                    "body": {
                      "canCopy": false,
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "displayName": "Alert",
                      "hostedLocation": "https://uploads-ssl.webflow.com/6258612d1ee792848f805dcf%2F64b6c769ff52ba6c3d904a91%2F660d6e15b3d1696f2d2b1447%2Falert-0.0.1.js",
                      "id": "alert",
                      "lastUpdated": "lastUpdated",
                      "version": "0.0.1",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/registered_scripts/inline",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "canCopy": {
                      "default": false,
                      "docs": "Define whether the script can be copied on site duplication and transfer",
                      "type": "optional<boolean>",
                    },
                    "displayName": {
                      "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                      "type": "string",
                    },
                    "integrityHash": {
                      "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                      "type": "optional<string>",
                    },
                    "sourceCode": {
                      "docs": "The code to be added to the site (to be hosted by Webflow).",
                      "type": "string",
                    },
                    "version": {
                      "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ScriptsRegisterInlineRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Created",
                "status-code": 201,
                "type": "ScriptsRegisterInlineResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ScriptsListResponse": {
            "docs": "A list of scripts registered to the site",
            "inline": undefined,
            "properties": {
              "registeredScripts": "optional<list<ScriptsListResponseRegisteredScriptsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListResponseRegisteredScriptsItem": {
            "docs": "Registered custom code for application",
            "inline": true,
            "properties": {
              "canCopy": {
                "default": false,
                "docs": "Define whether the script can be copied on site duplication and transfer",
                "type": "optional<boolean>",
              },
              "createdOn": {
                "docs": "Timestamp when the script version was created",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                "type": "optional<string>",
              },
              "hostedLocation": {
                "docs": "URI for an externally hosted script location",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Human readable id, derived from the user-specified display name",
                "type": "optional<string>",
              },
              "integrityHash": {
                "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Timestamp when the script version was last updated",
                "type": "optional<string>",
              },
              "version": {
                "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsRegisterHostedResponse": {
            "docs": "Registered custom code for application",
            "inline": undefined,
            "properties": {
              "canCopy": {
                "default": false,
                "docs": "Define whether the script can be copied on site duplication and transfer",
                "type": "optional<boolean>",
              },
              "createdOn": {
                "docs": "Timestamp when the script version was created",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                "type": "optional<string>",
              },
              "hostedLocation": {
                "docs": "URI for an externally hosted script location",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Human readable id, derived from the user-specified display name",
                "type": "optional<string>",
              },
              "integrityHash": {
                "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Timestamp when the script version was last updated",
                "type": "optional<string>",
              },
              "version": {
                "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsRegisterInlineResponse": {
            "docs": "Registered custom code for application",
            "inline": undefined,
            "properties": {
              "canCopy": {
                "default": false,
                "docs": "Define whether the script can be copied on site duplication and transfer",
                "type": "optional<boolean>",
              },
              "createdOn": {
                "docs": "Timestamp when the script version was created",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                "type": "optional<string>",
              },
              "hostedLocation": {
                "docs": "URI for an externally hosted script location",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Human readable id, derived from the user-specified display name",
                "type": "optional<string>",
              },
              "integrityHash": {
                "docs": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Timestamp when the script version was last updated",
                "type": "optional<string>",
              },
              "version": {
                "docs": "A Semantic Version (SemVer) string, denoting the version of the script",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ScriptsListResponseRegisteredScriptsItem:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsListResponse:
    docs: A list of scripts registered to the site
    properties:
      registeredScripts: optional<list<ScriptsListResponseRegisteredScriptsItem>>
    source:
      openapi: ../openapi.yml
  ScriptsRegisterHostedResponse:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../openapi.yml
  ScriptsRegisterInlineResponse:
    docs: Registered custom code for application
    properties:
      id:
        type: optional<string>
        docs: Human readable id, derived from the user-specified display name
      canCopy:
        type: optional<boolean>
        docs: >-
          Define whether the script can be copied on site duplication and
          transfer
        default: false
      displayName:
        type: optional<string>
        docs: >-
          User-facing name for the script. Must be between 1 and 50 alphanumeric
          characters
      hostedLocation:
        type: optional<string>
        docs: URI for an externally hosted script location
      integrityHash:
        type: optional<string>
        docs: >-
          Sub-Resource Integrity Hash. Only required for externally hosted
          scripts (passed via hostedLocation)
      createdOn:
        type: optional<string>
        docs: Timestamp when the script version was created
      lastUpdated:
        type: optional<string>
        docs: Timestamp when the script version was last updated
      version:
        type: optional<string>
        docs: A Semantic Version (SemVer) string, denoting the version of the script
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/registered_scripts
      method: GET
      auth: true
      docs: >
        List of scripts registered to a Site.  </br></br>  In order to use the
        Custom Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  Additionally, Scripts can be remotely hosted, or registered
        as inline snippets. <blockquote class="callout callout_info"
        theme="📘">Access to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Get Registered Scripts
      response:
        docs: Request was successful
        type: ScriptsListResponse
        status-code: 200
      errors:
        - root.ScriptsListRequestBadRequestError
        - root.ScriptsListRequestUnauthorizedError
        - root.ScriptsListRequestNotFoundError
        - root.ScriptsListRequestTooManyRequestsError
        - root.ScriptsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              registeredScripts:
                - id: alert
                  canCopy: false
                  displayName: Alert
                  hostedLocation: https://cdn.webflow.io/.../alert-0.0.1.js
                  createdOn: '2022-10-26T00:28:54.191Z'
                  lastUpdated: lastUpdated
                  version: 0.0.1
                - id: alert
                  canCopy: false
                  displayName: Alert
                  hostedLocation: https://cdn.webflow.io/.../alert-0.0.2.js
                  createdOn: '2022-10-26T00:28:54.191Z'
                  lastUpdated: lastUpdated
                  version: 0.0.2
                - id: cms_slider
                  canCopy: true
                  displayName: CMS Slider
                  hostedLocation: https://cdn.jsdelivr.net/.../cms_slider.js
                  integrityHash: >-
                    sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+
                  createdOn: '2022-10-26T00:28:54.191Z'
                  lastUpdated: lastUpdated
                  version: 1.0.0
    register-hosted:
      path: /sites/{site_id}/registered_scripts/hosted
      method: POST
      auth: true
      docs: >
        Add a script to a Site's Custom Code registry. </br></br>  In order to
        use the Custom Code APIs for Sites and Pages, Custom Code Scripts must
        first be registered  to a Site via the `registered_scripts` endpoints,
        and then applied to a Site or Page using the appropriate `custom_code`
        endpoints.  Additionally, Scripts can be remotely hosted, or registered
        as inline snippets.   <blockquote class="callout callout_info"
        theme="📘">Access to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     </br></br>  Required scope |
        `custom_code:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Register Script - Hosted
      request:
        name: ScriptsRegisterHostedRequest
        body:
          properties:
            hostedLocation:
              type: string
              docs: URI for an externally hosted script location
            integrityHash:
              type: string
              docs: Sub-Resource Integrity Hash
            canCopy:
              type: optional<boolean>
              docs: >-
                Define whether the script can be copied on site duplication and
                transfer
              default: false
            version:
              type: string
              docs: >-
                A Semantic Version (SemVer) string, denoting the version of the
                script
            displayName:
              type: string
              docs: >-
                User-facing name for the script. Must be between 1 and 50
                alphanumeric characters
        content-type: application/json
      response:
        docs: Request was successful
        type: ScriptsRegisterHostedResponse
        status-code: 201
      errors:
        - root.ScriptsRegisterHostedRequestBadRequestError
        - root.ScriptsRegisterHostedRequestUnauthorizedError
        - root.ScriptsRegisterHostedRequestNotFoundError
        - root.ScriptsRegisterHostedRequestTooManyRequestsError
        - root.ScriptsRegisterHostedRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            hostedLocation: https://cdn.jsdelivr.net/.../cmsslider.js
            integrityHash: >-
              sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+
            canCopy: true
            version: 1.0.0
            displayName: CMS Slider
          response:
            body:
              id: cms_slider
              canCopy: true
              displayName: CMS Slider
              hostedLocation: https://cdn.jsdelivr.net/.../cmsslider.js
              integrityHash: >-
                sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+
              createdOn: '2022-10-26T00:28:54.191Z'
              lastUpdated: lastUpdated
              version: 1.0.0
    register-inline:
      path: /sites/{site_id}/registered_scripts/inline
      method: POST
      auth: true
      docs: >
        Add a script to a Site's Custom Code registry. Inline scripts can be
        between 1 and 2000 characters. </br></br>  In order to use the Custom
        Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  </br></br>  <blockquote class="callout callout_info"
        theme="📘">Access to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Register Script - Inline
      request:
        name: ScriptsRegisterInlineRequest
        body:
          properties:
            sourceCode:
              type: string
              docs: The code to be added to the site (to be hosted by Webflow).
            integrityHash:
              type: optional<string>
              docs: >-
                Sub-Resource Integrity Hash. Only required for externally hosted
                scripts (passed via hostedLocation)
            canCopy:
              type: optional<boolean>
              docs: >-
                Define whether the script can be copied on site duplication and
                transfer
              default: false
            version:
              type: string
              docs: >-
                A Semantic Version (SemVer) string, denoting the version of the
                script
            displayName:
              type: string
              docs: >-
                User-facing name for the script. Must be between 1 and 50
                alphanumeric characters
        content-type: application/json
      response:
        docs: Created
        type: ScriptsRegisterInlineResponse
        status-code: 201
      errors:
        - root.ScriptsRegisterInlineRequestBadRequestError
        - root.ScriptsRegisterInlineRequestUnauthorizedError
        - root.ScriptsRegisterInlineRequestNotFoundError
        - root.ScriptsRegisterInlineRequestTooManyRequestsError
        - root.ScriptsRegisterInlineRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            sourceCode: alert('hello world');
            version: 0.0.1
            displayName: Alert
          response:
            body:
              id: alert
              canCopy: false
              displayName: Alert
              hostedLocation: >-
                https://uploads-ssl.webflow.com/6258612d1ee792848f805dcf%2F64b6c769ff52ba6c3d904a91%2F660d6e15b3d1696f2d2b1447%2Falert-0.0.1.js
              createdOn: '2022-10-26T00:28:54.191Z'
              lastUpdated: lastUpdated
              version: 0.0.1
  source:
    openapi: ../openapi.yml
",
    },
    "sites.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Sites",
          "endpoints": {
            "get": {
              "auth": true,
              "display-name": "Get Site",
              "docs": "Get a site by site id </br></br>  Required scope | `sites:read`",
              "errors": [
                "root.SitesGetRequestBadRequestError",
                "root.SitesGetRequestUnauthorizedError",
                "root.SitesGetRequestNotFoundError",
                "root.SitesGetRequestTooManyRequestsError",
                "root.SitesGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "1979-10-12T12:00:00Z",
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89d",
                          "url": "hitchhikersguide.galaxy",
                        },
                        {
                          "id": "589a331aa51e760df7ccb89e",
                          "url": "heartofgold.spaceship",
                        },
                      ],
                      "displayName": "The Hitchhiker's Guide to the Galaxy",
                      "id": "42e98c9a982ac9b8b742",
                      "lastPublished": "2023-04-02T12:42:00Z",
                      "lastUpdated": "2023-04-02T12:42:00Z",
                      "locales": {
                        "primary": {
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "displayImageId": "displayImageId",
                          "displayName": "English (United States)",
                          "enabled": false,
                          "id": "653fd9af6a07fc9cfd7a5e57",
                          "redirect": true,
                          "subdirectory": "",
                          "tag": "en-US",
                        },
                        "secondary": [
                          {
                            "cmsLocaleId": "653ad57de882f528b32e810e",
                            "displayName": "English (United States)",
                            "enabled": false,
                            "id": "653fd9af6a07fc9cfd7a5e57",
                            "redirect": true,
                            "subdirectory": "",
                            "tag": "en-US",
                          },
                        ],
                      },
                      "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                      "previewUrl": "https://screenshots.webflow.com/sites/6258612d1ee792848f805dcf/20231219211811_d5990556c743f33b7071300a03bf67e6.png",
                      "shortName": "hitchhikers-guide",
                      "timeZone": "Magrathea/FactoryFloor",
                      "workspaceId": "42e63e98c9a982ac9b8b742",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "SitesGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-custom-domain": {
              "auth": true,
              "display-name": "Get Custom Domains",
              "docs": "Get a list of all custom domains related to site. </br></br>  Required scope | `sites:read`",
              "errors": [
                "root.SitesGetCustomDomainRequestUnauthorizedError",
                "root.SitesGetCustomDomainRequestForbiddenError",
                "root.SitesGetCustomDomainRequestNotFoundError",
                "root.SitesGetCustomDomainRequestTooManyRequestsError",
                "root.SitesGetCustomDomainRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89d",
                          "url": "hitchhikersguide.galaxy",
                        },
                        {
                          "id": "589a331aa51e760df7ccb89e",
                          "url": "heartofgold.spaceship",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_domains",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "SitesGetCustomDomainResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Sites",
              "docs": "List of all sites the provided access token is able to access. </br></br> Required scope | `sites:read`",
              "errors": [
                "root.SitesListRequestUnauthorizedError",
                "root.SitesListRequestNotFoundError",
                "root.SitesListRequestTooManyRequestsError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "sites": [
                        {
                          "createdOn": "1979-10-12T12:00:00Z",
                          "customDomains": [
                            {
                              "id": "589a331aa51e760df7ccb89e",
                              "url": "heartofgold.galaxy",
                            },
                          ],
                          "displayName": "Heart of Gold Spaceship",
                          "id": "42e63e98c9a982ac9b8b741",
                          "lastPublished": "2023-04-02T12:42:00Z",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "locales": {
                            "primary": {
                              "cmsLocaleId": "653ad57de882f528b32e810e",
                              "displayName": "English - Heart of Gold Standard",
                              "enabled": true,
                              "id": "653fd9af6a07fc9cfd7a5e57",
                              "redirect": false,
                              "subdirectory": "/en",
                              "tag": "The Ultimate Answer",
                            },
                            "secondary": [
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810g",
                                "displayName": "Betelgeusian - Vogon Liaison",
                                "enabled": true,
                                "id": "653fd9af6a07fc9cfd7a5e58",
                                "redirect": true,
                                "subdirectory": "/bet",
                                "tag": "Vogon",
                              },
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810h",
                                "displayName": "Magrathean - Custom Planet Designs",
                                "enabled": false,
                                "id": "653fd9af6a07fc9cfd7a5e59",
                                "redirect": true,
                                "subdirectory": "/mg",
                                "tag": "Magrathean",
                              },
                            ],
                          },
                          "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                          "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b741/197910121200.png",
                          "shortName": "heart-of-gold",
                          "timeZone": "DeepSpace/InfiniteImprobability",
                          "workspaceId": "42e63fc8c9a982ac9b8b744",
                        },
                        {
                          "createdOn": "1981-10-12T12:00:00Z",
                          "customDomains": [
                            {
                              "id": "589a331aa51e760df7ccb89f",
                              "url": "marvin.blog",
                            },
                          ],
                          "displayName": "Marvin's Personal Blog",
                          "id": "42e63e98c9a982ac9b8b742",
                          "lastPublished": "2023-04-02T12:45:00Z",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "locales": {
                            "primary": {
                              "cmsLocaleId": "653ad57de882f528b32e810e",
                              "displayName": "English - Marvin's Musings",
                              "enabled": true,
                              "id": "653fd9af6a07fc9cfd7a5e57",
                              "redirect": false,
                              "subdirectory": "/en",
                              "tag": "English",
                            },
                            "secondary": [
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810f",
                                "displayName": "Squornshellous - Mattress Speak",
                                "enabled": true,
                                "id": "653fd9af6a07fc9cfd7a5e56",
                                "redirect": true,
                                "subdirectory": "/sr",
                                "tag": "Squornshellous",
                              },
                            ],
                          },
                          "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b742/198110121200.png",
                          "shortName": "paranoid-android",
                          "timeZone": "DeepSpace/Depression",
                          "workspaceId": "42e63fc8c9a982ac9b8b745",
                        },
                        {
                          "createdOn": "1982-10-12T12:00:00Z",
                          "customDomains": [
                            {
                              "id": "589a331aa51e760df7ccb8a0",
                              "url": "vogonpoetry.galaxy",
                            },
                          ],
                          "displayName": "Vogon Poetry Archive",
                          "id": "42e63e98c9a982ac9b8b743",
                          "lastPublished": "2023-04-02T12:50:00Z",
                          "lastUpdated": "2016-10-24T19:43:17Z",
                          "locales": {
                            "primary": {
                              "cmsLocaleId": "653ad57de882f528b32e810d",
                              "displayName": "English - Vogon Verse",
                              "enabled": true,
                              "id": "653fd9af6a07fc9cfd7a5e55",
                              "redirect": false,
                              "subdirectory": "/en",
                              "tag": "Third Worst Poetry",
                            },
                            "secondary": [
                              {
                                "cmsLocaleId": "653ad57de882f528b32e810c",
                                "displayName": "Galactic - Universal Language",
                                "enabled": true,
                                "id": "653fd9af6a07fc9cfd7a5e54",
                                "redirect": true,
                                "subdirectory": "/gl",
                                "tag": "Pan-Galactic Gargle Blaster",
                              },
                            ],
                          },
                          "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b743/198210121200.png",
                          "shortName": "vogon-poetry",
                          "timeZone": "Vogsphere/PoetryHall",
                          "workspaceId": "42e63fc8c9a982ac9b8b746",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites",
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "SitesListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "publish": {
              "auth": true,
              "display-name": "Publish site",
              "docs": "Publish a site to one more more domains. </br></br>  Required scope | `sites:write` <blockquote class="callout callout_info" theme="📘"><h2 class="callout-heading"><span class="callout-icon">📘</span><p>Endpoint-specific rate limit</p></h2><p>This endpoint has a limit of one successful publish queue per minute.</p></blockquote>",
              "errors": [
                "root.SitesPublishRequestBadRequestError",
                "root.SitesPublishRequestUnauthorizedError",
                "root.SitesPublishRequestForbiddenError",
                "root.SitesPublishRequestNotFoundError",
                "root.SitesPublishRequestTooManyRequestsError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {},
                  "response": {
                    "body": {
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89d",
                          "url": "test-api-domain.com",
                        },
                      ],
                      "publishToWebflowSubdomain": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/publish",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "customDomains": {
                      "docs": "Array of Custom Domain ids to publish",
                      "type": "optional<list<string>>",
                    },
                    "publishToWebflowSubdomain": {
                      "default": false,
                      "docs": "Choice of whether to publish to the default Webflow Subdomain",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SitesPublishRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request accepted",
                "status-code": 202,
                "type": "SitesPublishResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "SitePublishPayload": {
            "docs": "The Webhook payload for when a Site is published",
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The payload of data sent from Webflow",
                "type": "optional<SitePublishPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitePublishPayloadPayload": {
            "docs": "The payload of data sent from Webflow",
            "inline": true,
            "properties": {
              "domains": {
                "docs": "The domains that were published",
                "type": "optional<list<string>>",
              },
              "publishedBy": {
                "docs": "The name and id of the user who published the site",
                "type": "optional<map<string, unknown>>",
              },
              "publishedOn": {
                "docs": "The timestamp of the publish event",
                "type": "optional<datetime>",
              },
              "siteId": {
                "docs": "The ID of the site that was published",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetCustomDomainResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "customDomains": "optional<list<SitesGetCustomDomainResponseCustomDomainsItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetCustomDomainResponseCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for the Domain",
                "type": "string",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date the Site was created",
                "type": "optional<datetime>",
              },
              "customDomains": "optional<list<SitesGetResponseCustomDomainsItem>>",
              "displayName": {
                "docs": "Name given to Site",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Site",
                "type": "string",
              },
              "lastPublished": {
                "docs": "Date the Site was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "Date the Site was last updated",
                "type": "optional<datetime>",
              },
              "locales": "optional<SitesGetResponseLocales>",
              "parentFolderId": {
                "docs": "The ID of the parent folder the Site exists in",
                "type": "optional<string>",
              },
              "previewUrl": {
                "docs": "URL of a generated image for the given Site",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "shortName": {
                "docs": "Slugified version of name",
                "type": "optional<string>",
              },
              "timeZone": {
                "docs": "Site timezone set under Site Settings",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetResponseCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for the Domain",
                "type": "string",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetResponseLocales": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "primary": {
                "docs": "The primary locale for the site or application.",
                "type": "optional<SitesGetResponseLocalesPrimary>",
              },
              "secondary": {
                "docs": "A list of secondary locales available for the site or application.",
                "type": "optional<list<SitesGetResponseLocalesSecondaryItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetResponseLocalesPrimary": {
            "docs": "The primary locale for the site or application.",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesGetResponseLocalesSecondaryItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "sites": "optional<list<SitesListResponseSitesItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListResponseSitesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "Date the Site was created",
                "type": "optional<datetime>",
              },
              "customDomains": "optional<list<SitesListResponseSitesItemCustomDomainsItem>>",
              "displayName": {
                "docs": "Name given to Site",
                "type": "optional<string>",
              },
              "id": {
                "docs": "Unique identifier for the Site",
                "type": "string",
              },
              "lastPublished": {
                "docs": "Date the Site was last published",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "Date the Site was last updated",
                "type": "optional<datetime>",
              },
              "locales": "optional<SitesListResponseSitesItemLocales>",
              "parentFolderId": {
                "docs": "The ID of the parent folder the Site exists in",
                "type": "optional<string>",
              },
              "previewUrl": {
                "docs": "URL of a generated image for the given Site",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "shortName": {
                "docs": "Slugified version of name",
                "type": "optional<string>",
              },
              "timeZone": {
                "docs": "Site timezone set under Site Settings",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListResponseSitesItemCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for the Domain",
                "type": "string",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListResponseSitesItemLocales": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "primary": {
                "docs": "The primary locale for the site or application.",
                "type": "optional<SitesListResponseSitesItemLocalesPrimary>",
              },
              "secondary": {
                "docs": "A list of secondary locales available for the site or application.",
                "type": "optional<list<SitesListResponseSitesItemLocalesSecondaryItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListResponseSitesItemLocalesPrimary": {
            "docs": "The primary locale for the site or application.",
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesListResponseSitesItemLocalesSecondaryItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "cmsLocaleId": {
                "docs": "A CMS-specific identifier for the locale.",
                "type": "optional<string>",
              },
              "displayImageId": {
                "docs": "An optional ID for an image associated with the locale, nullable.",
                "type": "optional<string>",
              },
              "displayName": {
                "docs": "The display name of the locale, typically in English.",
                "type": "optional<string>",
              },
              "enabled": {
                "docs": "Indicates if the locale is enabled.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the locale.",
                "type": "optional<string>",
              },
              "redirect": {
                "docs": "Determines if requests should redirect to the locale's subdirectory.",
                "type": "optional<boolean>",
              },
              "subdirectory": {
                "docs": "The subdirectory path for the locale, used in URLs.",
                "type": "optional<string>",
              },
              "tag": {
                "docs": "A tag or code representing the locale, often following a standard format like 'en-US'.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesPublishResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "customDomains": {
                "docs": "Array of domains objects",
                "type": "optional<list<SitesPublishResponseCustomDomainsItem>>",
              },
              "publishToWebflowSubdomain": {
                "default": false,
                "docs": "Flag for publishing to webflow.io subdomain",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SitesPublishResponseCustomDomainsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "Unique identifier for the Domain",
                "type": "string",
              },
              "url": {
                "docs": "The registered Domain name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "site_publish": {
            "display-name": "Site Publish",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "domains": [
                      "my-website.webflow.io",
                    ],
                    "publishedBy": {
                      "displayName": "Zaphod BeebleBrox",
                    },
                    "publishedOn": "2024-07-26T16:43:20Z",
                    "siteId": "62749158efef318abc8d5a0f",
                  },
                  "triggerType": "site_publish",
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": {
              "docs": "The Webhook payload for when a Site is published",
              "type": "SitePublishPayload",
            },
          },
        },
      },
      "rawContents": "types:
  SitesListResponseSitesItemCustomDomainsItem:
    properties:
      id:
        type: string
        docs: Unique identifier for the Domain
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  SitesListResponseSitesItemLocalesPrimary:
    docs: The primary locale for the site or application.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<string>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  SitesListResponseSitesItemLocalesSecondaryItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<string>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  SitesListResponseSitesItemLocales:
    properties:
      primary:
        type: optional<SitesListResponseSitesItemLocalesPrimary>
        docs: The primary locale for the site or application.
      secondary:
        type: optional<list<SitesListResponseSitesItemLocalesSecondaryItem>>
        docs: A list of secondary locales available for the site or application.
    source:
      openapi: ../openapi.yml
    inline: true
  SitesListResponseSitesItem:
    properties:
      id:
        type: string
        docs: Unique identifier for the Site
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace
      createdOn:
        type: optional<datetime>
        docs: Date the Site was created
      displayName:
        type: optional<string>
        docs: Name given to Site
      shortName:
        type: optional<string>
        docs: Slugified version of name
      lastPublished:
        type: optional<datetime>
        docs: Date the Site was last published
      lastUpdated:
        type: optional<datetime>
        docs: Date the Site was last updated
      previewUrl:
        type: optional<string>
        docs: URL of a generated image for the given Site
        validation:
          format: uri
      timeZone:
        type: optional<string>
        docs: Site timezone set under Site Settings
      parentFolderId:
        type: optional<string>
        docs: The ID of the parent folder the Site exists in
      customDomains: optional<list<SitesListResponseSitesItemCustomDomainsItem>>
      locales: optional<SitesListResponseSitesItemLocales>
    source:
      openapi: ../openapi.yml
    inline: true
  SitesListResponse:
    properties:
      sites: optional<list<SitesListResponseSitesItem>>
    source:
      openapi: ../openapi.yml
  SitesGetResponseCustomDomainsItem:
    properties:
      id:
        type: string
        docs: Unique identifier for the Domain
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  SitesGetResponseLocalesPrimary:
    docs: The primary locale for the site or application.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<string>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  SitesGetResponseLocalesSecondaryItem:
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the locale.
      cmsLocaleId:
        type: optional<string>
        docs: A CMS-specific identifier for the locale.
      enabled:
        type: optional<boolean>
        docs: Indicates if the locale is enabled.
      displayName:
        type: optional<string>
        docs: The display name of the locale, typically in English.
      displayImageId:
        type: optional<string>
        docs: An optional ID for an image associated with the locale, nullable.
      redirect:
        type: optional<boolean>
        docs: Determines if requests should redirect to the locale's subdirectory.
      subdirectory:
        type: optional<string>
        docs: The subdirectory path for the locale, used in URLs.
      tag:
        type: optional<string>
        docs: >-
          A tag or code representing the locale, often following a standard
          format like 'en-US'.
    source:
      openapi: ../openapi.yml
    inline: true
  SitesGetResponseLocales:
    properties:
      primary:
        type: optional<SitesGetResponseLocalesPrimary>
        docs: The primary locale for the site or application.
      secondary:
        type: optional<list<SitesGetResponseLocalesSecondaryItem>>
        docs: A list of secondary locales available for the site or application.
    source:
      openapi: ../openapi.yml
    inline: true
  SitesGetResponse:
    properties:
      id:
        type: string
        docs: Unique identifier for the Site
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace
      createdOn:
        type: optional<datetime>
        docs: Date the Site was created
      displayName:
        type: optional<string>
        docs: Name given to Site
      shortName:
        type: optional<string>
        docs: Slugified version of name
      lastPublished:
        type: optional<datetime>
        docs: Date the Site was last published
      lastUpdated:
        type: optional<datetime>
        docs: Date the Site was last updated
      previewUrl:
        type: optional<string>
        docs: URL of a generated image for the given Site
        validation:
          format: uri
      timeZone:
        type: optional<string>
        docs: Site timezone set under Site Settings
      parentFolderId:
        type: optional<string>
        docs: The ID of the parent folder the Site exists in
      customDomains: optional<list<SitesGetResponseCustomDomainsItem>>
      locales: optional<SitesGetResponseLocales>
    source:
      openapi: ../openapi.yml
  SitesGetCustomDomainResponseCustomDomainsItem:
    properties:
      id:
        type: string
        docs: Unique identifier for the Domain
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  SitesGetCustomDomainResponse:
    properties:
      customDomains: optional<list<SitesGetCustomDomainResponseCustomDomainsItem>>
    source:
      openapi: ../openapi.yml
  SitesPublishResponseCustomDomainsItem:
    properties:
      id:
        type: string
        docs: Unique identifier for the Domain
      url:
        type: optional<string>
        docs: The registered Domain name
    source:
      openapi: ../openapi.yml
    inline: true
  SitesPublishResponse:
    properties:
      customDomains:
        type: optional<list<SitesPublishResponseCustomDomainsItem>>
        docs: Array of domains objects
      publishToWebflowSubdomain:
        type: optional<boolean>
        docs: Flag for publishing to webflow.io subdomain
        default: false
    source:
      openapi: ../openapi.yml
  SitePublishPayloadPayload:
    docs: The payload of data sent from Webflow
    properties:
      siteId:
        type: optional<string>
        docs: The ID of the site that was published
      publishedOn:
        type: optional<datetime>
        docs: The timestamp of the publish event
      domains:
        type: optional<list<string>>
        docs: The domains that were published
      publishedBy:
        type: optional<map<string, unknown>>
        docs: The name and id of the user who published the site
    source:
      openapi: ../openapi.yml
    inline: true
  SitePublishPayload:
    docs: The Webhook payload for when a Site is published
    properties:
      triggerType:
        type: optional<string>
        docs: The type of event that triggered the request
      payload:
        type: optional<SitePublishPayloadPayload>
        docs: The payload of data sent from Webflow
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites
      method: GET
      auth: true
      docs: >-
        List of all sites the provided access token is able to access.
        </br></br> Required scope | `sites:read`
      source:
        openapi: ../openapi.yml
      display-name: List Sites
      response:
        docs: Request was successful
        type: SitesListResponse
        status-code: 200
      errors:
        - root.SitesListRequestUnauthorizedError
        - root.SitesListRequestNotFoundError
        - root.SitesListRequestTooManyRequestsError
      examples:
        - response:
            body:
              sites:
                - id: 42e63e98c9a982ac9b8b741
                  workspaceId: 42e63fc8c9a982ac9b8b744
                  createdOn: '1979-10-12T12:00:00Z'
                  displayName: Heart of Gold Spaceship
                  shortName: heart-of-gold
                  lastPublished: '2023-04-02T12:42:00Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  previewUrl: >-
                    https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b741/197910121200.png
                  timeZone: DeepSpace/InfiniteImprobability
                  parentFolderId: 1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6
                  customDomains:
                    - id: 589a331aa51e760df7ccb89e
                      url: heartofgold.galaxy
                  locales:
                    primary:
                      id: 653fd9af6a07fc9cfd7a5e57
                      cmsLocaleId: 653ad57de882f528b32e810e
                      enabled: true
                      displayName: English - Heart of Gold Standard
                      redirect: false
                      subdirectory: /en
                      tag: The Ultimate Answer
                    secondary:
                      - id: 653fd9af6a07fc9cfd7a5e58
                        cmsLocaleId: 653ad57de882f528b32e810g
                        enabled: true
                        displayName: Betelgeusian - Vogon Liaison
                        redirect: true
                        subdirectory: /bet
                        tag: Vogon
                      - id: 653fd9af6a07fc9cfd7a5e59
                        cmsLocaleId: 653ad57de882f528b32e810h
                        enabled: false
                        displayName: Magrathean - Custom Planet Designs
                        redirect: true
                        subdirectory: /mg
                        tag: Magrathean
                - id: 42e63e98c9a982ac9b8b742
                  workspaceId: 42e63fc8c9a982ac9b8b745
                  createdOn: '1981-10-12T12:00:00Z'
                  displayName: Marvin's Personal Blog
                  shortName: paranoid-android
                  lastPublished: '2023-04-02T12:45:00Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  previewUrl: >-
                    https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b742/198110121200.png
                  timeZone: DeepSpace/Depression
                  customDomains:
                    - id: 589a331aa51e760df7ccb89f
                      url: marvin.blog
                  locales:
                    primary:
                      id: 653fd9af6a07fc9cfd7a5e57
                      cmsLocaleId: 653ad57de882f528b32e810e
                      enabled: true
                      displayName: English - Marvin's Musings
                      redirect: false
                      subdirectory: /en
                      tag: English
                    secondary:
                      - id: 653fd9af6a07fc9cfd7a5e56
                        cmsLocaleId: 653ad57de882f528b32e810f
                        enabled: true
                        displayName: Squornshellous - Mattress Speak
                        redirect: true
                        subdirectory: /sr
                        tag: Squornshellous
                - id: 42e63e98c9a982ac9b8b743
                  workspaceId: 42e63fc8c9a982ac9b8b746
                  createdOn: '1982-10-12T12:00:00Z'
                  displayName: Vogon Poetry Archive
                  shortName: vogon-poetry
                  lastPublished: '2023-04-02T12:50:00Z'
                  lastUpdated: '2016-10-24T19:43:17Z'
                  previewUrl: >-
                    https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b743/198210121200.png
                  timeZone: Vogsphere/PoetryHall
                  customDomains:
                    - id: 589a331aa51e760df7ccb8a0
                      url: vogonpoetry.galaxy
                  locales:
                    primary:
                      id: 653fd9af6a07fc9cfd7a5e55
                      cmsLocaleId: 653ad57de882f528b32e810d
                      enabled: true
                      displayName: English - Vogon Verse
                      redirect: false
                      subdirectory: /en
                      tag: Third Worst Poetry
                    secondary:
                      - id: 653fd9af6a07fc9cfd7a5e54
                        cmsLocaleId: 653ad57de882f528b32e810c
                        enabled: true
                        displayName: Galactic - Universal Language
                        redirect: true
                        subdirectory: /gl
                        tag: Pan-Galactic Gargle Blaster
    get:
      path: /sites/{site_id}
      method: GET
      auth: true
      docs: Get a site by site id </br></br>  Required scope | `sites:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Get Site
      response:
        docs: Request was successful
        type: SitesGetResponse
        status-code: 200
      errors:
        - root.SitesGetRequestBadRequestError
        - root.SitesGetRequestUnauthorizedError
        - root.SitesGetRequestNotFoundError
        - root.SitesGetRequestTooManyRequestsError
        - root.SitesGetRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              id: 42e98c9a982ac9b8b742
              workspaceId: 42e63e98c9a982ac9b8b742
              createdOn: '1979-10-12T12:00:00Z'
              displayName: The Hitchhiker's Guide to the Galaxy
              shortName: hitchhikers-guide
              lastPublished: '2023-04-02T12:42:00Z'
              lastUpdated: '2023-04-02T12:42:00Z'
              previewUrl: >-
                https://screenshots.webflow.com/sites/6258612d1ee792848f805dcf/20231219211811_d5990556c743f33b7071300a03bf67e6.png
              timeZone: Magrathea/FactoryFloor
              parentFolderId: 1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6
              customDomains:
                - id: 589a331aa51e760df7ccb89d
                  url: hitchhikersguide.galaxy
                - id: 589a331aa51e760df7ccb89e
                  url: heartofgold.spaceship
              locales:
                primary:
                  id: 653fd9af6a07fc9cfd7a5e57
                  cmsLocaleId: 653ad57de882f528b32e810e
                  enabled: false
                  displayName: English (United States)
                  displayImageId: displayImageId
                  redirect: true
                  subdirectory: ''
                  tag: en-US
                secondary:
                  - id: 653fd9af6a07fc9cfd7a5e57
                    cmsLocaleId: 653ad57de882f528b32e810e
                    enabled: false
                    displayName: English (United States)
                    redirect: true
                    subdirectory: ''
                    tag: en-US
    get-custom-domain:
      path: /sites/{site_id}/custom_domains
      method: GET
      auth: true
      docs: >-
        Get a list of all custom domains related to site. </br></br>  Required
        scope | `sites:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Get Custom Domains
      response:
        docs: Request was successful
        type: SitesGetCustomDomainResponse
        status-code: 200
      errors:
        - root.SitesGetCustomDomainRequestUnauthorizedError
        - root.SitesGetCustomDomainRequestForbiddenError
        - root.SitesGetCustomDomainRequestNotFoundError
        - root.SitesGetCustomDomainRequestTooManyRequestsError
        - root.SitesGetCustomDomainRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              customDomains:
                - id: 589a331aa51e760df7ccb89d
                  url: hitchhikersguide.galaxy
                - id: 589a331aa51e760df7ccb89e
                  url: heartofgold.spaceship
    publish:
      path: /sites/{site_id}/publish
      method: POST
      auth: true
      docs: >-
        Publish a site to one more more domains. </br></br>  Required scope |
        `sites:write` <blockquote class="callout callout_info" theme="📘"><h2
        class="callout-heading"><span
        class="callout-icon">📘</span><p>Endpoint-specific rate
        limit</p></h2><p>This endpoint has a limit of one successful publish
        queue per minute.</p></blockquote>
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Publish site
      request:
        name: SitesPublishRequest
        body:
          properties:
            customDomains:
              type: optional<list<string>>
              docs: Array of Custom Domain ids to publish
            publishToWebflowSubdomain:
              type: optional<boolean>
              docs: Choice of whether to publish to the default Webflow Subdomain
              default: false
        content-type: application/json
      response:
        docs: Request accepted
        type: SitesPublishResponse
        status-code: 202
      errors:
        - root.SitesPublishRequestBadRequestError
        - root.SitesPublishRequestUnauthorizedError
        - root.SitesPublishRequestForbiddenError
        - root.SitesPublishRequestNotFoundError
        - root.SitesPublishRequestTooManyRequestsError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request: {}
          response:
            body:
              customDomains:
                - id: 589a331aa51e760df7ccb89d
                  url: test-api-domain.com
              publishToWebflowSubdomain: true
  source:
    openapi: ../openapi.yml
  display-name: Sites
webhooks:
  site_publish:
    method: POST
    display-name: Site Publish
    headers: {}
    payload:
      type: SitePublishPayload
      docs: The Webhook payload for when a Site is published
    examples:
      - payload:
          triggerType: site_publish
          payload:
            siteId: 62749158efef318abc8d5a0f
            publishedOn: '2024-07-26T16:43:20Z'
            domains:
              - my-website.webflow.io
            publishedBy:
              displayName: Zaphod BeebleBrox
",
    },
    "sites/activityLogs.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "list": {
              "auth": true,
              "display-name": "Get Site Activity Logs",
              "docs": "Retrieve Activity Logs for a specific Site. Requires Site to be on an Enterprise plan. </br></br>  Required scope | `site_activity:read`",
              "errors": [
                "root.ActivityLogsListRequestForbiddenError",
                "root.ActivityLogsListRequestNotFoundError",
                "root.ActivityLogsListRequestTooManyRequestsError",
                "root.ActivityLogsListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "items": [
                        {
                          "createdOn": "2023-11-08T23:16:23Z",
                          "event": "cms_collection",
                          "id": "654c16c7b229e56bcf26872d",
                          "lastUpdated": "2023-11-08T23:16:23Z",
                          "resourceId": "654c16c7b229e56bcf26870c",
                          "resourceName": "foo-bar",
                          "resourceOperation": "CREATED",
                          "user": {
                            "displayName": "John Doe",
                            "id": "6509cd56e90eec668b009712",
                          },
                        },
                      ],
                      "pagination": {
                        "limit": 25,
                        "offset": 0,
                        "total": 1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/activity_logs",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "ActivityLogsListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "A list of site activity logs",
                "status-code": 200,
                "type": "ActivityLogsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ActivityLogsListResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "items": "optional<list<ActivityLogsListResponseItemsItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ActivityLogsListResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogsListResponseItemsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": "optional<datetime>",
              "event": "optional<string>",
              "id": "optional<string>",
              "lastUpdated": "optional<datetime>",
              "newValue": "optional<string>",
              "payload": "optional<map<string, unknown>>",
              "previousValue": "optional<string>",
              "resourceId": "optional<string>",
              "resourceName": "optional<string>",
              "resourceOperation": "optional<ActivityLogsListResponseItemsItemResourceOperation>",
              "user": "optional<ActivityLogsListResponseItemsItemUser>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogsListResponseItemsItemResourceOperation": {
            "enum": [
              "CREATED",
              "MODIFIED",
              "PUBLISHED",
              "UNPUBLISHED",
              "DELETED",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogsListResponseItemsItemUser": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "displayName": "optional<string>",
              "id": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogsListResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ActivityLogsListResponseItemsItemResourceOperation:
    enum:
      - CREATED
      - MODIFIED
      - PUBLISHED
      - UNPUBLISHED
      - DELETED
    inline: true
    source:
      openapi: ../openapi.yml
  ActivityLogsListResponseItemsItemUser:
    properties:
      id: optional<string>
      displayName: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  ActivityLogsListResponseItemsItem:
    properties:
      id: optional<string>
      createdOn: optional<datetime>
      lastUpdated: optional<datetime>
      event: optional<string>
      resourceOperation: optional<ActivityLogsListResponseItemsItemResourceOperation>
      user: optional<ActivityLogsListResponseItemsItemUser>
      resourceId: optional<string>
      resourceName: optional<string>
      newValue: optional<string>
      previousValue: optional<string>
      payload: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yml
    inline: true
  ActivityLogsListResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ActivityLogsListResponse:
    properties:
      items: optional<list<ActivityLogsListResponseItemsItem>>
      pagination:
        type: optional<ActivityLogsListResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/activity_logs
      method: GET
      auth: true
      docs: >-
        Retrieve Activity Logs for a specific Site. Requires Site to be on an
        Enterprise plan. </br></br>  Required scope | `site_activity:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Get Site Activity Logs
      request:
        name: ActivityLogsListRequest
        query-parameters:
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
      response:
        docs: A list of site activity logs
        type: ActivityLogsListResponse
        status-code: 200
      errors:
        - root.ActivityLogsListRequestForbiddenError
        - root.ActivityLogsListRequestNotFoundError
        - root.ActivityLogsListRequestTooManyRequestsError
        - root.ActivityLogsListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              items:
                - id: 654c16c7b229e56bcf26872d
                  createdOn: '2023-11-08T23:16:23Z'
                  lastUpdated: '2023-11-08T23:16:23Z'
                  event: cms_collection
                  resourceOperation: CREATED
                  user:
                    id: 6509cd56e90eec668b009712
                    displayName: John Doe
                  resourceId: 654c16c7b229e56bcf26870c
                  resourceName: foo-bar
              pagination:
                limit: 25
                offset: 0
                total: 1
  source:
    openapi: ../openapi.yml
",
    },
    "sites/scripts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "../__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete-custom-code": {
              "auth": true,
              "display-name": "Delete Custom Code",
              "docs": "Delete the custom code block that an app created for a Site </br></br> <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`
",
              "errors": [
                "root.ScriptsDeleteCustomCodeRequestBadRequestError",
                "root.ScriptsDeleteCustomCodeRequestUnauthorizedError",
                "root.ScriptsDeleteCustomCodeRequestNotFoundError",
                "root.ScriptsDeleteCustomCodeRequestTooManyRequestsError",
                "root.ScriptsDeleteCustomCodeRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get-custom-code": {
              "auth": true,
              "display-name": "Get Custom Code",
              "docs": "Get all registered scripts that have been applied to a specific Site.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`
",
              "errors": [
                "root.ScriptsGetCustomCodeRequestBadRequestError",
                "root.ScriptsGetCustomCodeRequestUnauthorizedError",
                "root.ScriptsGetCustomCodeRequestNotFoundError",
                "root.ScriptsGetCustomCodeRequestTooManyRequestsError",
                "root.ScriptsGetCustomCodeRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "lastUpdated": "2022-10-26T00:28:54.191Z",
                      "scripts": [
                        {
                          "attributes": {
                            "my-attribute": "some-value",
                          },
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ScriptsGetCustomCodeResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list-custom-code-blocks": {
              "auth": true,
              "display-name": "List Custom Code Blocks",
              "docs": "Get all instances of Custom Code applied to a Site or Pages.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`
",
              "errors": [
                "root.ScriptsListCustomCodeBlocksRequestBadRequestError",
                "root.ScriptsListCustomCodeBlocksRequestUnauthorizedError",
                "root.ScriptsListCustomCodeBlocksRequestNotFoundError",
                "root.ScriptsListCustomCodeBlocksRequestTooManyRequestsError",
                "root.ScriptsListCustomCodeBlocksRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "blocks": [
                        {
                          "createdOn": "2024-04-03T16:49:15Z",
                          "lastUpdated": "2024-04-03T16:49:15Z",
                          "scripts": [
                            {
                              "attributes": {
                                "key": "value",
                              },
                              "id": "chartjs",
                              "location": "header",
                              "version": "4.4.2",
                            },
                          ],
                          "siteId": "6258612d1ee792848f805dcf",
                          "type": "site",
                        },
                        {
                          "createdOn": "2022-10-26T00:28:54Z",
                          "lastUpdated": "2022-10-26T00:28:54Z",
                          "pageId": "6419db964a9c43f6a3af6348",
                          "scripts": [
                            {
                              "attributes": {
                                "my-attribute": "some-value",
                              },
                              "id": "cms_slider",
                              "location": "header",
                              "version": "1.0.0",
                            },
                            {
                              "attributes": {
                                "key": "value",
                              },
                              "id": "alert",
                              "location": "header",
                              "version": "0.0.1",
                            },
                          ],
                          "siteId": "6390c49674a71f84b51a08d8",
                          "type": "page",
                        },
                      ],
                      "pagination": {
                        "limit": 10,
                        "offset": 0,
                        "total": 1,
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code/blocks",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "ScriptsListCustomCodeBlocksRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ScriptsListCustomCodeBlocksResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "upsert-custom-code": {
              "auth": true,
              "display-name": "Add/Update Custom Code",
              "docs": "Add a registered script to a Site.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`
",
              "errors": [
                "root.ScriptsUpsertCustomCodeRequestBadRequestError",
                "root.ScriptsUpsertCustomCodeRequestUnauthorizedError",
                "root.ScriptsUpsertCustomCodeRequestNotFoundError",
                "root.ScriptsUpsertCustomCodeRequestTooManyRequestsError",
                "root.ScriptsUpsertCustomCodeRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "scripts": [
                      {
                        "attributes": {
                          "my-attribute": "some-value",
                        },
                        "id": "cms_slider",
                        "location": "header",
                        "version": "1.0.0",
                      },
                      {
                        "id": "alert",
                        "location": "header",
                        "version": "0.0.1",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "createdOn": "createdOn",
                      "lastUpdated": "lastUpdated",
                      "scripts": [
                        {
                          "attributes": {
                            "my-attribute": "some-value",
                          },
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                        },
                        {
                          "attributes": {
                            "key": "value",
                          },
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/sites/{site_id}/custom_code",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "scripts": {
                      "docs": "A list of scripts applied to a Site or a Page",
                      "type": "optional<list<ScriptsUpsertCustomCodeRequestScriptsItem>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ScriptsUpsertCustomCodeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "ScriptsUpsertCustomCodeResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ScriptsGetCustomCodeResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<ScriptsGetCustomCodeResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsGetCustomCodeResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsGetCustomCodeResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsGetCustomCodeResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksResponse": {
            "docs": "Custom Code Blocks corresponding to where scripts were applied",
            "inline": undefined,
            "properties": {
              "blocks": "optional<list<ScriptsListCustomCodeBlocksResponseBlocksItem>>",
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<ScriptsListCustomCodeBlocksResponsePagination>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksResponseBlocksItem": {
            "docs": "A specific instance of Custom Code applied to a Site or Page",
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "The date the Block was created",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The date the Block was most recently updated",
                "type": "optional<datetime>",
              },
              "pageId": {
                "docs": "The Page id (if applied at Page-level)",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItem>>",
              },
              "siteId": {
                "docs": "The Site id where the custom code was applied",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Whether the Custom Code script is applied at the Site-level or Page-level",
                "type": "optional<ScriptsListCustomCodeBlocksResponseBlocksItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksResponseBlocksItemType": {
            "docs": "Whether the Custom Code script is applied at the Site-level or Page-level",
            "enum": [
              "page",
              "site",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsListCustomCodeBlocksResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeRequestScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsUpsertCustomCodeRequestScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeRequestScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date when the Site's scripts were created",
                "type": "optional<string>",
              },
              "lastUpdated": {
                "docs": "Date when the Site's scripts were last updated",
                "type": "optional<string>",
              },
              "scripts": {
                "docs": "A list of scripts applied to a Site or a Page",
                "type": "optional<list<ScriptsUpsertCustomCodeResponseScriptsItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeResponseScriptsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "attributes": {
                "docs": "Developer-specified key/value pairs to be applied as attributes to the script",
                "type": "optional<map<string, unknown>>",
              },
              "id": {
                "docs": "ID of the registered custom code script",
                "type": "string",
              },
              "location": {
                "default": "header",
                "docs": "Location of the script, either in the header or footer of the published site",
                "type": "ScriptsUpsertCustomCodeResponseScriptsItemLocation",
              },
              "version": {
                "docs": "Semantic Version String for the registered script *e.g. 0.0.1*",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ScriptsUpsertCustomCodeResponseScriptsItemLocation": {
            "default": "header",
            "docs": "Location of the script, either in the header or footer of the published site",
            "enum": [
              "header",
              "footer",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ScriptsGetCustomCodeResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsGetCustomCodeResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsGetCustomCodeResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsGetCustomCodeResponse:
    properties:
      scripts:
        type: optional<list<ScriptsGetCustomCodeResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeRequestScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeRequestScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsUpsertCustomCodeRequestScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsUpsertCustomCodeResponseScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsUpsertCustomCodeResponseScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsUpsertCustomCodeResponseScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsUpsertCustomCodeResponse:
    properties:
      scripts:
        type: optional<list<ScriptsUpsertCustomCodeResponseScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      lastUpdated:
        type: optional<string>
        docs: Date when the Site's scripts were last updated
      createdOn:
        type: optional<string>
        docs: Date when the Site's scripts were created
    source:
      openapi: ../openapi.yml
  ScriptsListCustomCodeBlocksResponseBlocksItemType:
    enum:
      - page
      - site
    docs: Whether the Custom Code script is applied at the Site-level or Page-level
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItemLocation:
    enum:
      - header
      - footer
    docs: >-
      Location of the script, either in the header or footer of the published
      site
    default: header
    inline: true
    source:
      openapi: ../openapi.yml
  ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItem:
    properties:
      id:
        type: string
        docs: ID of the registered custom code script
      location:
        type: ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItemLocation
        docs: >-
          Location of the script, either in the header or footer of the
          published site
        default: header
      version:
        type: string
        docs: Semantic Version String for the registered script *e.g. 0.0.1*
      attributes:
        type: optional<map<string, unknown>>
        docs: >-
          Developer-specified key/value pairs to be applied as attributes to the
          script
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsListCustomCodeBlocksResponseBlocksItem:
    docs: A specific instance of Custom Code applied to a Site or Page
    properties:
      siteId:
        type: optional<string>
        docs: The Site id where the custom code was applied
      pageId:
        type: optional<string>
        docs: The Page id (if applied at Page-level)
      type:
        type: optional<ScriptsListCustomCodeBlocksResponseBlocksItemType>
        docs: >-
          Whether the Custom Code script is applied at the Site-level or
          Page-level
      scripts:
        type: >-
          optional<list<ScriptsListCustomCodeBlocksResponseBlocksItemScriptsItem>>
        docs: A list of scripts applied to a Site or a Page
      createdOn:
        type: optional<datetime>
        docs: The date the Block was created
      lastUpdated:
        type: optional<datetime>
        docs: The date the Block was most recently updated
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsListCustomCodeBlocksResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  ScriptsListCustomCodeBlocksResponse:
    docs: Custom Code Blocks corresponding to where scripts were applied
    properties:
      blocks: optional<list<ScriptsListCustomCodeBlocksResponseBlocksItem>>
      pagination:
        type: optional<ScriptsListCustomCodeBlocksResponsePagination>
        docs: Pagination object
    source:
      openapi: ../openapi.yml
imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-custom-code:
      path: /sites/{site_id}/custom_code
      method: GET
      auth: true
      docs: >
        Get all registered scripts that have been applied to a specific Site. 
        <blockquote class="callout callout_info" theme="📘">Access to this
        endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Get Custom Code
      response:
        docs: Request was successful
        type: ScriptsGetCustomCodeResponse
        status-code: 200
      errors:
        - root.ScriptsGetCustomCodeRequestBadRequestError
        - root.ScriptsGetCustomCodeRequestUnauthorizedError
        - root.ScriptsGetCustomCodeRequestNotFoundError
        - root.ScriptsGetCustomCodeRequestTooManyRequestsError
        - root.ScriptsGetCustomCodeRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              scripts:
                - id: cms_slider
                  location: header
                  version: 1.0.0
                  attributes:
                    my-attribute: some-value
                - id: alert
                  location: header
                  version: 0.0.1
                  attributes:
                    key: value
              lastUpdated: '2022-10-26T00:28:54.191Z'
              createdOn: '2022-10-26T00:28:54.191Z'
    upsert-custom-code:
      path: /sites/{site_id}/custom_code
      method: PUT
      auth: true
      docs: >
        Add a registered script to a Site.  </br></br>  In order to use the
        Custom Code APIs for Sites and Pages, Custom Code Scripts must first be
        registered  to a Site via the `registered_scripts` endpoints, and then
        applied to a Site or Page using the appropriate `custom_code`
        endpoints.  <blockquote class="callout callout_info" theme="📘">Access
        to this endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Add/Update Custom Code
      request:
        name: ScriptsUpsertCustomCodeRequest
        body:
          properties:
            scripts:
              type: optional<list<ScriptsUpsertCustomCodeRequestScriptsItem>>
              docs: A list of scripts applied to a Site or a Page
        content-type: application/json
      response:
        docs: Request was successful
        type: ScriptsUpsertCustomCodeResponse
        status-code: 200
      errors:
        - root.ScriptsUpsertCustomCodeRequestBadRequestError
        - root.ScriptsUpsertCustomCodeRequestUnauthorizedError
        - root.ScriptsUpsertCustomCodeRequestNotFoundError
        - root.ScriptsUpsertCustomCodeRequestTooManyRequestsError
        - root.ScriptsUpsertCustomCodeRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            scripts:
              - id: cms_slider
                location: header
                version: 1.0.0
                attributes:
                  my-attribute: some-value
              - id: alert
                location: header
                version: 0.0.1
          response:
            body:
              scripts:
                - id: cms_slider
                  location: header
                  version: 1.0.0
                  attributes:
                    my-attribute: some-value
                - id: alert
                  location: header
                  version: 0.0.1
                  attributes:
                    key: value
              lastUpdated: lastUpdated
              createdOn: createdOn
    delete-custom-code:
      path: /sites/{site_id}/custom_code
      method: DELETE
      auth: true
      docs: >
        Delete the custom code block that an app created for a Site </br></br>
        <blockquote class="callout callout_info" theme="📘">Access to this
        endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Delete Custom Code
      errors:
        - root.ScriptsDeleteCustomCodeRequestBadRequestError
        - root.ScriptsDeleteCustomCodeRequestUnauthorizedError
        - root.ScriptsDeleteCustomCodeRequestNotFoundError
        - root.ScriptsDeleteCustomCodeRequestTooManyRequestsError
        - root.ScriptsDeleteCustomCodeRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
    list-custom-code-blocks:
      path: /sites/{site_id}/custom_code/blocks
      method: GET
      auth: true
      docs: >
        Get all instances of Custom Code applied to a Site or Pages. 
        <blockquote class="callout callout_info" theme="📘">Access to this
        endpoint requires a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `custom_code:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Custom Code Blocks
      request:
        name: ScriptsListCustomCodeBlocksRequest
        query-parameters:
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
      response:
        docs: Request was successful
        type: ScriptsListCustomCodeBlocksResponse
        status-code: 200
      errors:
        - root.ScriptsListCustomCodeBlocksRequestBadRequestError
        - root.ScriptsListCustomCodeBlocksRequestUnauthorizedError
        - root.ScriptsListCustomCodeBlocksRequestNotFoundError
        - root.ScriptsListCustomCodeBlocksRequestTooManyRequestsError
        - root.ScriptsListCustomCodeBlocksRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              blocks:
                - siteId: 6258612d1ee792848f805dcf
                  type: site
                  scripts:
                    - id: chartjs
                      location: header
                      version: 4.4.2
                      attributes:
                        key: value
                  createdOn: '2024-04-03T16:49:15Z'
                  lastUpdated: '2024-04-03T16:49:15Z'
                - siteId: 6390c49674a71f84b51a08d8
                  pageId: 6419db964a9c43f6a3af6348
                  type: page
                  scripts:
                    - id: cms_slider
                      location: header
                      version: 1.0.0
                      attributes:
                        my-attribute: some-value
                    - id: alert
                      location: header
                      version: 0.0.1
                      attributes:
                        key: value
                  createdOn: '2022-10-26T00:28:54Z'
                  lastUpdated: '2022-10-26T00:28:54Z'
              pagination:
                limit: 10
                offset: 0
                total: 1
  source:
    openapi: ../openapi.yml
",
    },
    "token.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "authorized-by": {
              "auth": true,
              "display-name": "Get Authorization User Info",
              "docs": "Information about the Authorized User <br><br> Required Scope | `authorized_user:read`",
              "errors": [
                "root.TokenAuthorizedByRequestUnauthorizedError",
                "root.TokenAuthorizedByRequestForbiddenError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "email": "some@email.com",
                      "firstName": "Some",
                      "id": "545bbecb7bdd6769632504a7",
                      "lastName": "One",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/token/authorized_by",
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "TokenAuthorizedByResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "introspect": {
              "auth": true,
              "display-name": "Get Authorization Info",
              "docs": "Information about the authorization token <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>    
",
              "errors": [
                "root.TokenIntrospectRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "response": {
                    "body": {
                      "application": {
                        "description": "My Amazing App",
                        "displayName": "My Amazing App",
                        "homepage": "https://webflow.com",
                        "id": "55131cd036c09f7d07883dfc",
                      },
                      "authorization": {
                        "authorizedTo": {
                          "siteIds": [
                            "62f3b1f7eafac55d0c64ef91",
                          ],
                          "userIds": [
                            "545bbecb7bdd6769632504a7",
                          ],
                          "workspaceIds": [
                            "52f3b1f7eafac55d0c64ef91",
                          ],
                        },
                        "createdOn": "2016-10-03T23:12:00Z",
                        "grantType": "authorization_code",
                        "id": "55818d58616600637b9a5786",
                        "lastUsed": "2016-10-10T21:41:12Z",
                        "rateLimit": 60,
                        "scope": "assets:read,assets:write",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/token/introspect",
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "TokenIntrospectResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "TokenAuthorizedByResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "email": {
                "docs": "The user's email address",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "firstName": {
                "docs": "The user's first name",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique id of the user",
                "type": "optional<string>",
              },
              "lastName": {
                "docs": "The user's last name",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TokenIntrospectResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "application": "optional<unknown>",
              "authorization": {
                "docs": "The Authorization object",
                "type": "optional<TokenIntrospectResponseAuthorization>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TokenIntrospectResponseAuthorization": {
            "docs": "The Authorization object",
            "inline": true,
            "properties": {
              "authorizedTo": "optional<TokenIntrospectResponseAuthorizationAuthorizedTo>",
              "createdOn": {
                "docs": "The date the Authorization was created",
                "type": "optional<datetime>",
              },
              "grantType": {
                "docs": "The grant type of the Authorization",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique id of the Authorization instance",
                "type": "optional<string>",
              },
              "lastUsed": {
                "docs": "The date the Authorization was last used",
                "type": "optional<datetime>",
              },
              "rateLimit": {
                "docs": "The default rate limit for the Authorization (requests/min)",
                "type": "optional<integer>",
              },
              "scope": {
                "docs": "Comma separted list of OAuth scopes corresponding to the Authorization",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TokenIntrospectResponseAuthorizationAuthorizedTo": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "siteIds": {
                "docs": "Array of Sites this app is authorized to",
                "type": "optional<list<unknown>>",
              },
              "userIds": {
                "docs": "Array of Users this app is authorized to",
                "type": "optional<list<unknown>>",
              },
              "workspaceIds": {
                "docs": "Array of Workspaces this app is authorized to",
                "type": "optional<list<unknown>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  TokenAuthorizedByResponse:
    properties:
      id:
        type: optional<string>
        docs: The unique id of the user
      email:
        type: optional<string>
        docs: The user's email address
        validation:
          format: email
      firstName:
        type: optional<string>
        docs: The user's first name
      lastName:
        type: optional<string>
        docs: The user's last name
    source:
      openapi: ../openapi.yml
  TokenIntrospectResponseAuthorizationAuthorizedTo:
    properties:
      siteIds:
        type: optional<list<unknown>>
        docs: Array of Sites this app is authorized to
      workspaceIds:
        type: optional<list<unknown>>
        docs: Array of Workspaces this app is authorized to
      userIds:
        type: optional<list<unknown>>
        docs: Array of Users this app is authorized to
    source:
      openapi: ../openapi.yml
    inline: true
  TokenIntrospectResponseAuthorization:
    docs: The Authorization object
    properties:
      id:
        type: optional<string>
        docs: The unique id of the Authorization instance
      createdOn:
        type: optional<datetime>
        docs: The date the Authorization was created
      lastUsed:
        type: optional<datetime>
        docs: The date the Authorization was last used
      grantType:
        type: optional<string>
        docs: The grant type of the Authorization
      rateLimit:
        type: optional<integer>
        docs: The default rate limit for the Authorization (requests/min)
      scope:
        type: optional<string>
        docs: Comma separted list of OAuth scopes corresponding to the Authorization
      authorizedTo: optional<TokenIntrospectResponseAuthorizationAuthorizedTo>
    source:
      openapi: ../openapi.yml
    inline: true
  TokenIntrospectResponse:
    properties:
      authorization:
        type: optional<TokenIntrospectResponseAuthorization>
        docs: The Authorization object
      application: optional<unknown>
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    authorized-by:
      path: /token/authorized_by
      method: GET
      auth: true
      docs: >-
        Information about the Authorized User <br><br> Required Scope |
        `authorized_user:read`
      source:
        openapi: ../openapi.yml
      display-name: Get Authorization User Info
      response:
        docs: Request was successful
        type: TokenAuthorizedByResponse
        status-code: 200
      errors:
        - root.TokenAuthorizedByRequestUnauthorizedError
        - root.TokenAuthorizedByRequestForbiddenError
      examples:
        - response:
            body:
              id: 545bbecb7bdd6769632504a7
              email: some@email.com
              firstName: Some
              lastName: One
    introspect:
      path: /token/introspect
      method: GET
      auth: true
      docs: >
        Information about the authorization token <blockquote class="callout
        callout_info" theme="📘">Access to this endpoint requires a bearer token
        from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>    
      source:
        openapi: ../openapi.yml
      display-name: Get Authorization Info
      response:
        docs: Request was successful
        type: TokenIntrospectResponse
        status-code: 200
      errors:
        - root.TokenIntrospectRequestUnauthorizedError
      examples:
        - response:
            body:
              authorization:
                id: 55818d58616600637b9a5786
                createdOn: '2016-10-03T23:12:00Z'
                lastUsed: '2016-10-10T21:41:12Z'
                grantType: authorization_code
                rateLimit: 60
                scope: assets:read,assets:write
                authorizedTo:
                  siteIds:
                    - 62f3b1f7eafac55d0c64ef91
                  workspaceIds:
                    - 52f3b1f7eafac55d0c64ef91
                  userIds:
                    - 545bbecb7bdd6769632504a7
              application:
                id: 55131cd036c09f7d07883dfc
                description: My Amazing App
                homepage: https://webflow.com
                displayName: My Amazing App
  source:
    openapi: ../openapi.yml
",
    },
    "users.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "delete": {
              "auth": true,
              "display-name": "Delete User",
              "docs": "Delete a User by ID <br><br> Required scope | `users:write`",
              "errors": [
                "root.UsersDeleteRequestBadRequestError",
                "root.UsersDeleteRequestUnauthorizedError",
                "root.UsersDeleteRequestForbiddenError",
                "root.UsersDeleteRequestNotFoundError",
                "root.UsersDeleteRequestTooManyRequestsError",
                "root.UsersDeleteRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "user_id": "580e63e98c9a982ac9b8b741",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/{user_id}",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
                "user_id": {
                  "docs": "Unique identifier for a User",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": true,
              "display-name": "Get User",
              "docs": "Get a User by ID <br><br> Required scope | `users:read`",
              "errors": [
                "root.UsersGetRequestBadRequestError",
                "root.UsersGetRequestUnauthorizedError",
                "root.UsersGetRequestForbiddenError",
                "root.UsersGetRequestNotFoundError",
                "root.UsersGetRequestTooManyRequestsError",
                "root.UsersGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "user_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "slug": "webflowers",
                          "type": "admin",
                        },
                      ],
                      "createdOn": "2022-05-20T13:46:12Z",
                      "data": {
                        "data": {
                          "accept-communications": true,
                          "accept-privacy": true,
                          "additionalProperties": "additionalProperties",
                          "email": "email",
                          "name": "name",
                        },
                      },
                      "id": "6287ec36a841b25637c663df",
                      "invitedOn": "2022-05-20T13:46:12Z",
                      "isEmailVerified": true,
                      "lastLogin": "2022-05-20T13:46:12Z",
                      "lastUpdated": "2022-05-20T13:46:12Z",
                      "status": "verified",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/{user_id}",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
                "user_id": {
                  "docs": "Unique identifier for a User",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UsersGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "invite": {
              "auth": true,
              "display-name": "Create and Invite a User",
              "docs": "Create and invite a user with an email address. The user will be sent and invite via email, which they will need to accept in order to join paid Access Groups. <br><br> Required scope | `users:write`",
              "errors": [
                "root.UsersInviteRequestBadRequestError",
                "root.UsersInviteRequestUnauthorizedError",
                "root.UsersInviteRequestForbiddenError",
                "root.UsersInviteRequestNotFoundError",
                "root.UsersInviteRequestConflictError",
                "root.UsersInviteRequestTooManyRequestsError",
                "root.UsersInviteRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "accessGroups": [
                      "webflowers",
                    ],
                    "email": "some.one@home.com",
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "slug": "webflowers",
                          "type": "admin",
                        },
                      ],
                      "createdOn": "2022-05-20T13:46:12Z",
                      "data": {
                        "data": {
                          "accept-communications": true,
                          "accept-privacy": true,
                          "additionalProperties": "additionalProperties",
                          "email": "email",
                          "name": "name",
                        },
                      },
                      "id": "6287ec36a841b25637c663df",
                      "invitedOn": "2022-05-20T13:46:12Z",
                      "isEmailVerified": true,
                      "lastLogin": "2022-05-20T13:46:12Z",
                      "lastUpdated": "2022-05-20T13:46:12Z",
                      "status": "verified",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/invite",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "accessGroups": {
                      "docs": "An array of access group slugs. Access groups are assigned to the user as type `admin` and the user remains in the group until removed.
",
                      "type": "optional<list<string>>",
                    },
                    "email": {
                      "docs": "Email address of user to send invite to",
                      "type": "string",
                      "validation": {
                        "format": "email",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UsersInviteRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UsersInviteResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Users",
              "docs": "Get a list of users for a site <br><br> Required scope | `users:read`",
              "errors": [
                "root.UsersListRequestBadRequestError",
                "root.UsersListRequestUnauthorizedError",
                "root.UsersListRequestForbiddenError",
                "root.UsersListRequestNotFoundError",
                "root.UsersListRequestTooManyRequestsError",
                "root.UsersListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "count": 5,
                      "limit": 5,
                      "offset": 0,
                      "total": 201,
                      "users": [
                        {
                          "accessGroups": [
                            {
                              "slug": "vogon-construction-crew",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-20T13:46:12Z",
                          "id": "6287ec36a841b25637c663df",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": false,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-20T13:46:12Z",
                          "status": "unverified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "improbability-drive-test-subjects",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-19T05:32:04Z",
                          "id": "6287ec36a841b25637c663f0",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": false,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-19T05:32:04Z",
                          "status": "unverified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "heart-of-gold-crew",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-17T03:34:06Z",
                          "id": "6287ec36a841b25637c663d9",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": true,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-17T03:34:06Z",
                          "status": "verified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "hitchhikers-guide-research-team",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-15T03:46:09Z",
                          "id": "6287ec37a841b25637c6641b",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": false,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-15T03:46:09Z",
                          "status": "unverified",
                        },
                        {
                          "accessGroups": [
                            {
                              "slug": "milliways-reservationists",
                              "type": "admin",
                            },
                          ],
                          "createdOn": "2022-05-15T02:55:38Z",
                          "id": "6287ec37a841b25637c66449",
                          "invitedOn": "2016-10-24T19:41:29Z",
                          "isEmailVerified": true,
                          "lastLogin": "2016-10-24T19:41:29Z",
                          "lastUpdated": "2022-05-15T02:55:38Z",
                          "status": "verified",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/users",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "name": "UsersListRequest",
                "query-parameters": {
                  "limit": {
                    "docs": "Maximum number of records to be returned (max limit: 100)",
                    "type": "optional<double>",
                  },
                  "offset": {
                    "docs": "Offset used for pagination if the results have more than limit records",
                    "type": "optional<double>",
                  },
                  "sort": {
                    "docs": "Sort string to use when ordering users

Example(`CreatedOn`, `Email`, `Status`, `LastLogin`, `UpdatedOn`).

Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
",
                    "type": "optional<UsersListRequestSort>",
                  },
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UsersListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "display-name": "Update User",
              "docs": "Update a User by ID <br><br> Required scope | `users:write`
<aside class="notice">The <code>email</code> and <code>password</code> fields cannot be updated using this endpoint</aside>
",
              "errors": [
                "root.UsersUpdateRequestBadRequestError",
                "root.UsersUpdateRequestUnauthorizedError",
                "root.UsersUpdateRequestForbiddenError",
                "root.UsersUpdateRequestNotFoundError",
                "root.UsersUpdateRequestTooManyRequestsError",
                "root.UsersUpdateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                    "user_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "accessGroups": [
                      "webflowers",
                      "platinum",
                      "free-tier",
                    ],
                    "data": {
                      "accept-communications": false,
                      "accept-privacy": false,
                      "name": "Some One",
                    },
                  },
                  "response": {
                    "body": {
                      "accessGroups": [
                        {
                          "slug": "webflowers",
                          "type": "admin",
                        },
                      ],
                      "createdOn": "2022-05-20T13:46:12Z",
                      "data": {
                        "data": {
                          "accept-communications": true,
                          "accept-privacy": true,
                          "additionalProperties": "additionalProperties",
                          "email": "email",
                          "name": "name",
                        },
                      },
                      "id": "6287ec36a841b25637c663df",
                      "invitedOn": "2022-05-20T13:46:12Z",
                      "isEmailVerified": true,
                      "lastLogin": "2022-05-20T13:46:12Z",
                      "lastUpdated": "2022-05-20T13:46:12Z",
                      "status": "verified",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/sites/{site_id}/users/{user_id}",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
                "user_id": {
                  "docs": "Unique identifier for a User",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "accessGroups": {
                      "docs": "An array of access group slugs. Access groups are assigned to the user as type `admin` and the user remains in the group until removed.
",
                      "type": "optional<list<string>>",
                    },
                    "data": "optional<UsersUpdateRequestData>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UsersUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "UsersUpdateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "UserAccountAddedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
                "type": "optional<UserAccountAddedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<UserAccountAddedPayloadTriggerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UserAccountAddedPayloadPayloadAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UserAccountAddedPayloadPayloadData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UserAccountAddedPayloadPayloadStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UserAccountAddedPayloadPayloadAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UserAccountAddedPayloadPayloadDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadPayloadStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountAddedPayloadTriggerType": {
            "docs": "The type of event that triggered the request",
            "enum": [
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
                "type": "optional<UserAccountDeletedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<UserAccountDeletedPayloadTriggerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UserAccountDeletedPayloadPayloadAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UserAccountDeletedPayloadPayloadData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UserAccountDeletedPayloadPayloadStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UserAccountDeletedPayloadPayloadAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UserAccountDeletedPayloadPayloadDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadPayloadStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountDeletedPayloadTriggerType": {
            "docs": "The type of event that triggered the request",
            "enum": [
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "payload": {
                "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
                "type": "optional<UserAccountUpdatedPayloadPayload>",
              },
              "triggerType": {
                "docs": "The type of event that triggered the request",
                "type": "optional<UserAccountUpdatedPayloadTriggerType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayload": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UserAccountUpdatedPayloadPayloadAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UserAccountUpdatedPayloadPayloadData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UserAccountUpdatedPayloadPayloadStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UserAccountUpdatedPayloadPayloadAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UserAccountUpdatedPayloadPayloadDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadPayloadStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserAccountUpdatedPayloadTriggerType": {
            "docs": "The type of event that triggered the request",
            "enum": [
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UsersGetResponseAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UsersGetResponseData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UsersGetResponseStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetResponseAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UsersGetResponseAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetResponseAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetResponseData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UsersGetResponseDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetResponseDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersGetResponseStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UsersInviteResponseAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UsersInviteResponseData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UsersInviteResponseStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteResponseAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UsersInviteResponseAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteResponseAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteResponseData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UsersInviteResponseDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteResponseDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersInviteResponseStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListRequestSort": {
            "enum": [
              {
                "docs": "Sorts users in ascending order based on their created date",
                "name": "CreatedOnAscending",
                "value": "CreatedOn",
              },
              {
                "docs": "Sorts users in descending order based on their created date",
                "name": "CreatedOnDescending",
                "value": "-CreatedOn",
              },
              {
                "docs": "Sorts users in ascending order based on their email",
                "name": "EmailAscending",
                "value": "Email",
              },
              {
                "docs": "Sorts users in descending order based on their email",
                "name": "EmailDescending",
                "value": "-Email",
              },
              {
                "docs": "Sorts users in ascending order based on their status",
                "name": "StatusAscending",
                "value": "Status",
              },
              {
                "docs": "Sorts users in descending order based on their status",
                "name": "StatusDescending",
                "value": "-Status",
              },
              {
                "docs": "Sorts users in ascending order based on their last login date",
                "name": "LastLoginAscending",
                "value": "LastLogin",
              },
              {
                "docs": "Sorts users in descending order based on their last login date",
                "name": "LastLoginDescending",
                "value": "-LastLogin",
              },
              {
                "docs": "Sorts users in ascending order based on their update date",
                "name": "UpdatedOnAscending",
                "value": "UpdatedOn",
              },
              {
                "docs": "Sorts users in descending order based on their update date",
                "name": "UpdatedOnDescending",
                "value": "-UpdatedOn",
              },
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponse": {
            "docs": "The list users results",
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "Number of users returned",
                "type": "optional<double>",
              },
              "limit": {
                "default": 10,
                "docs": "The limit specified in the request",
                "type": "optional<double>",
              },
              "offset": {
                "default": 0,
                "docs": "The offset specified for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "Total number of users in the collection",
                "type": "optional<double>",
              },
              "users": {
                "docs": "List of Users for a Site",
                "type": "optional<list<UsersListResponseUsersItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponseUsersItem": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": true,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UsersListResponseUsersItemAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UsersListResponseUsersItemData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UsersListResponseUsersItemStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponseUsersItemAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UsersListResponseUsersItemAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponseUsersItemAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponseUsersItemData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UsersListResponseUsersItemDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponseUsersItemDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersListResponseUsersItemStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateRequestData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateResponse": {
            "docs": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items
",
            "inline": undefined,
            "properties": {
              "accessGroups": {
                "docs": "Access groups the user belongs to",
                "type": "optional<list<UsersUpdateResponseAccessGroupsItem>>",
              },
              "createdOn": {
                "docs": "The timestamp the user was created",
                "type": "optional<datetime>",
              },
              "data": {
                "docs": "An object containing the User's basic info and custom fields",
                "type": "optional<UsersUpdateResponseData>",
              },
              "id": {
                "docs": "Unique identifier for the User",
                "type": "optional<string>",
              },
              "invitedOn": {
                "docs": "The timestamp the user was invited",
                "type": "optional<datetime>",
              },
              "isEmailVerified": {
                "docs": "Shows whether the user has verified their email address",
                "type": "optional<boolean>",
              },
              "lastLogin": {
                "docs": "The timestamp the user was logged in",
                "type": "optional<datetime>",
              },
              "lastUpdated": {
                "docs": "The timestamp the user was updated",
                "type": "optional<datetime>",
              },
              "status": {
                "docs": "The status of the user",
                "type": "optional<UsersUpdateResponseStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateResponseAccessGroupsItem": {
            "docs": "Access group slugs and types",
            "inline": true,
            "properties": {
              "slug": {
                "docs": "Access group identifier for APIs",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
                "type": "optional<UsersUpdateResponseAccessGroupsItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateResponseAccessGroupsItemType": {
            "docs": "The type of access group based on how it was assigned to the user.
* `admin` - Assigned to the user via API or in the designer
* `ecommerce` - Assigned to the user via an ecommerce purchase
",
            "enum": [
              "admin",
              "ecommerce",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateResponseData": {
            "docs": "An object containing the User's basic info and custom fields",
            "inline": true,
            "properties": {
              "data": "optional<UsersUpdateResponseDataData>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateResponseDataData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "accept-communications": {
                "docs": "Boolean indicating if the user has accepted to receive communications
",
                "type": "optional<boolean>",
              },
              "accept-privacy": {
                "docs": "Boolean indicating if the user has accepted the privacy policy
",
                "type": "optional<boolean>",
              },
              "additionalProperties": {
                "docs": "Custom user attributes",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The email address of the user
",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the user
",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UsersUpdateResponseStatus": {
            "docs": "The status of the user",
            "enum": [
              "invited",
              "verified",
              "unverified",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
        "webhooks": {
          "user_account_added": {
            "display-name": "New User Added",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "accessGroups": [
                      {
                        "slug": "webflowers",
                        "type": "admin",
                      },
                    ],
                    "createdOn": "2022-05-20T13:46:12Z",
                    "id": "6287ec36a841b25637c663df",
                    "invitedOn": "2022-05-20T13:46:12Z",
                    "isEmailVerified": true,
                    "lastLogin": "2022-05-20T13:46:12Z",
                    "lastUpdated": "2022-05-20T13:46:12Z",
                    "status": "verified",
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "UserAccountAddedPayload",
          },
          "user_account_deleted": {
            "display-name": "Account Deleted",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "accessGroups": [
                      {
                        "slug": "webflowers",
                        "type": "admin",
                      },
                    ],
                    "createdOn": "2022-05-20T13:46:12Z",
                    "id": "6287ec36a841b25637c663df",
                    "invitedOn": "2022-05-20T13:46:12Z",
                    "isEmailVerified": true,
                    "lastLogin": "2022-05-20T13:46:12Z",
                    "lastUpdated": "2022-05-20T13:46:12Z",
                    "status": "verified",
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "UserAccountDeletedPayload",
          },
          "user_account_updated": {
            "display-name": "Account Updated",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "payload": {
                  "payload": {
                    "accessGroups": [
                      {
                        "slug": "webflowers",
                        "type": "admin",
                      },
                    ],
                    "createdOn": "2022-05-20T13:46:12Z",
                    "id": "6287ec36a841b25637c663df",
                    "invitedOn": "2022-05-20T13:46:12Z",
                    "isEmailVerified": true,
                    "lastLogin": "2022-05-20T13:46:12Z",
                    "lastUpdated": "2022-05-20T13:46:12Z",
                    "status": "verified",
                  },
                },
              },
            ],
            "headers": {},
            "method": "POST",
            "payload": "UserAccountUpdatedPayload",
          },
        },
      },
      "rawContents": "types:
  UsersListRequestSort:
    enum:
      - value: CreatedOn
        name: CreatedOnAscending
        docs: Sorts users in ascending order based on their created date
      - value: '-CreatedOn'
        name: CreatedOnDescending
        docs: Sorts users in descending order based on their created date
      - value: Email
        name: EmailAscending
        docs: Sorts users in ascending order based on their email
      - value: '-Email'
        name: EmailDescending
        docs: Sorts users in descending order based on their email
      - value: Status
        name: StatusAscending
        docs: Sorts users in ascending order based on their status
      - value: '-Status'
        name: StatusDescending
        docs: Sorts users in descending order based on their status
      - value: LastLogin
        name: LastLoginAscending
        docs: Sorts users in ascending order based on their last login date
      - value: '-LastLogin'
        name: LastLoginDescending
        docs: Sorts users in descending order based on their last login date
      - value: UpdatedOn
        name: UpdatedOnAscending
        docs: Sorts users in ascending order based on their update date
      - value: '-UpdatedOn'
        name: UpdatedOnDescending
        docs: Sorts users in descending order based on their update date
    source:
      openapi: ../openapi.yml
  UsersListResponseUsersItemStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UsersListResponseUsersItemAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UsersListResponseUsersItemAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UsersListResponseUsersItemAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UsersListResponseUsersItemDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UsersListResponseUsersItemData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UsersListResponseUsersItemDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UsersListResponseUsersItem:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UsersListResponseUsersItemStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UsersListResponseUsersItemAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UsersListResponseUsersItemData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UsersListResponse:
    docs: The list users results
    properties:
      count:
        type: optional<double>
        docs: Number of users returned
      limit:
        type: optional<double>
        docs: The limit specified in the request
        default: 10
      offset:
        type: optional<double>
        docs: The offset specified for pagination
        default: 0
      total:
        type: optional<double>
        docs: Total number of users in the collection
      users:
        type: optional<list<UsersListResponseUsersItem>>
        docs: List of Users for a Site
    source:
      openapi: ../openapi.yml
  UsersGetResponseStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UsersGetResponseAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UsersGetResponseAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UsersGetResponseAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UsersGetResponseDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UsersGetResponseData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UsersGetResponseDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UsersGetResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UsersGetResponseStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UsersGetResponseAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UsersGetResponseData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
  UsersUpdateRequestData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
    source:
      openapi: ../openapi.yml
    inline: true
  UsersUpdateResponseStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UsersUpdateResponseAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UsersUpdateResponseAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UsersUpdateResponseAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UsersUpdateResponseDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UsersUpdateResponseData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UsersUpdateResponseDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UsersUpdateResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UsersUpdateResponseStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UsersUpdateResponseAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UsersUpdateResponseData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
  UsersInviteResponseStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UsersInviteResponseAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UsersInviteResponseAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UsersInviteResponseAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UsersInviteResponseDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UsersInviteResponseData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UsersInviteResponseDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UsersInviteResponse:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UsersInviteResponseStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UsersInviteResponseAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UsersInviteResponseData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadTriggerType:
    enum:
      - user_account_added
      - user_account_updated
      - user_account_deleted
    docs: The type of event that triggered the request
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadPayloadStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadPayloadAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountAddedPayloadPayloadAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccountAddedPayloadPayloadAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayloadPayloadDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayloadPayloadData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserAccountAddedPayloadPayloadDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayloadPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UserAccountAddedPayloadPayloadStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UserAccountAddedPayloadPayloadAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UserAccountAddedPayloadPayloadData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountAddedPayload:
    properties:
      triggerType:
        type: optional<UserAccountAddedPayloadTriggerType>
        docs: The type of event that triggered the request
      payload:
        type: optional<UserAccountAddedPayloadPayload>
        docs: >
          The fields that define the schema for a given Item are based on the
          Collection that Item belongs to. Beyond the user defined fields, there
          are a handful of additional fields that are automatically created for
          all items
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadTriggerType:
    enum:
      - user_account_added
      - user_account_updated
      - user_account_deleted
    docs: The type of event that triggered the request
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadPayloadStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadPayloadAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountUpdatedPayloadPayloadAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccountUpdatedPayloadPayloadAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayloadPayloadDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayloadPayloadData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserAccountUpdatedPayloadPayloadDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayloadPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UserAccountUpdatedPayloadPayloadStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UserAccountUpdatedPayloadPayloadAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UserAccountUpdatedPayloadPayloadData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountUpdatedPayload:
    properties:
      triggerType:
        type: optional<UserAccountUpdatedPayloadTriggerType>
        docs: The type of event that triggered the request
      payload:
        type: optional<UserAccountUpdatedPayloadPayload>
        docs: >
          The fields that define the schema for a given Item are based on the
          Collection that Item belongs to. Beyond the user defined fields, there
          are a handful of additional fields that are automatically created for
          all items
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadTriggerType:
    enum:
      - user_account_added
      - user_account_updated
      - user_account_deleted
    docs: The type of event that triggered the request
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadPayloadStatus:
    enum:
      - invited
      - verified
      - unverified
    docs: The status of the user
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadPayloadAccessGroupsItemType:
    enum:
      - admin
      - ecommerce
    docs: |
      The type of access group based on how it was assigned to the user.
      * `admin` - Assigned to the user via API or in the designer
      * `ecommerce` - Assigned to the user via an ecommerce purchase
    inline: true
    source:
      openapi: ../openapi.yml
  UserAccountDeletedPayloadPayloadAccessGroupsItem:
    docs: Access group slugs and types
    properties:
      slug:
        type: optional<string>
        docs: Access group identifier for APIs
      type:
        type: optional<UserAccountDeletedPayloadPayloadAccessGroupsItemType>
        docs: |
          The type of access group based on how it was assigned to the user.
          * `admin` - Assigned to the user via API or in the designer
          * `ecommerce` - Assigned to the user via an ecommerce purchase
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayloadPayloadDataData:
    properties:
      name:
        type: optional<string>
        docs: |
          The name of the user
      email:
        type: optional<string>
        docs: |
          The email address of the user
      accept-privacy:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted the privacy policy
      accept-communications:
        type: optional<boolean>
        docs: |
          Boolean indicating if the user has accepted to receive communications
      additionalProperties:
        type: optional<string>
        docs: Custom user attributes
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayloadPayloadData:
    docs: An object containing the User's basic info and custom fields
    properties:
      data: optional<UserAccountDeletedPayloadPayloadDataData>
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayloadPayload:
    docs: >
      The fields that define the schema for a given Item are based on the
      Collection that Item belongs to. Beyond the user defined fields, there are
      a handful of additional fields that are automatically created for all
      items
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the User
      isEmailVerified:
        type: optional<boolean>
        docs: Shows whether the user has verified their email address
      lastUpdated:
        type: optional<datetime>
        docs: The timestamp the user was updated
      invitedOn:
        type: optional<datetime>
        docs: The timestamp the user was invited
      createdOn:
        type: optional<datetime>
        docs: The timestamp the user was created
      lastLogin:
        type: optional<datetime>
        docs: The timestamp the user was logged in
      status:
        type: optional<UserAccountDeletedPayloadPayloadStatus>
        docs: The status of the user
      accessGroups:
        type: optional<list<UserAccountDeletedPayloadPayloadAccessGroupsItem>>
        docs: Access groups the user belongs to
      data:
        type: optional<UserAccountDeletedPayloadPayloadData>
        docs: An object containing the User's basic info and custom fields
    source:
      openapi: ../openapi.yml
    inline: true
  UserAccountDeletedPayload:
    properties:
      triggerType:
        type: optional<UserAccountDeletedPayloadTriggerType>
        docs: The type of event that triggered the request
      payload:
        type: optional<UserAccountDeletedPayloadPayload>
        docs: >
          The fields that define the schema for a given Item are based on the
          Collection that Item belongs to. Beyond the user defined fields, there
          are a handful of additional fields that are automatically created for
          all items
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/users
      method: GET
      auth: true
      docs: Get a list of users for a site <br><br> Required scope | `users:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Users
      request:
        name: UsersListRequest
        query-parameters:
          offset:
            type: optional<double>
            docs: >-
              Offset used for pagination if the results have more than limit
              records
          limit:
            type: optional<double>
            docs: 'Maximum number of records to be returned (max limit: 100)'
          sort:
            type: optional<UsersListRequestSort>
            docs: |
              Sort string to use when ordering users

              Example(`CreatedOn`, `Email`, `Status`, `LastLogin`, `UpdatedOn`).

              Can be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)
      response:
        docs: Request was successful
        type: UsersListResponse
        status-code: 200
      errors:
        - root.UsersListRequestBadRequestError
        - root.UsersListRequestUnauthorizedError
        - root.UsersListRequestForbiddenError
        - root.UsersListRequestNotFoundError
        - root.UsersListRequestTooManyRequestsError
        - root.UsersListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              count: 5
              limit: 5
              offset: 0
              total: 201
              users:
                - id: 6287ec36a841b25637c663df
                  isEmailVerified: false
                  lastUpdated: '2022-05-20T13:46:12Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-20T13:46:12Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: unverified
                  accessGroups:
                    - slug: vogon-construction-crew
                      type: admin
                - id: 6287ec36a841b25637c663f0
                  isEmailVerified: false
                  lastUpdated: '2022-05-19T05:32:04Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-19T05:32:04Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: unverified
                  accessGroups:
                    - slug: improbability-drive-test-subjects
                      type: admin
                - id: 6287ec36a841b25637c663d9
                  isEmailVerified: true
                  lastUpdated: '2022-05-17T03:34:06Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-17T03:34:06Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: verified
                  accessGroups:
                    - slug: heart-of-gold-crew
                      type: admin
                - id: 6287ec37a841b25637c6641b
                  isEmailVerified: false
                  lastUpdated: '2022-05-15T03:46:09Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-15T03:46:09Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: unverified
                  accessGroups:
                    - slug: hitchhikers-guide-research-team
                      type: admin
                - id: 6287ec37a841b25637c66449
                  isEmailVerified: true
                  lastUpdated: '2022-05-15T02:55:38Z'
                  invitedOn: '2016-10-24T19:41:29Z'
                  createdOn: '2022-05-15T02:55:38Z'
                  lastLogin: '2016-10-24T19:41:29Z'
                  status: verified
                  accessGroups:
                    - slug: milliways-reservationists
                      type: admin
    get:
      path: /sites/{site_id}/users/{user_id}
      method: GET
      auth: true
      docs: Get a User by ID <br><br> Required scope | `users:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        user_id:
          type: string
          docs: Unique identifier for a User
      display-name: Get User
      response:
        docs: Request was successful
        type: UsersGetResponse
        status-code: 200
      errors:
        - root.UsersGetRequestBadRequestError
        - root.UsersGetRequestUnauthorizedError
        - root.UsersGetRequestForbiddenError
        - root.UsersGetRequestNotFoundError
        - root.UsersGetRequestTooManyRequestsError
        - root.UsersGetRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            user_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              id: 6287ec36a841b25637c663df
              isEmailVerified: true
              lastUpdated: '2022-05-20T13:46:12Z'
              invitedOn: '2022-05-20T13:46:12Z'
              createdOn: '2022-05-20T13:46:12Z'
              lastLogin: '2022-05-20T13:46:12Z'
              status: verified
              accessGroups:
                - slug: webflowers
                  type: admin
              data:
                data:
                  name: name
                  email: email
                  accept-privacy: true
                  accept-communications: true
                  additionalProperties: additionalProperties
    delete:
      path: /sites/{site_id}/users/{user_id}
      method: DELETE
      auth: true
      docs: Delete a User by ID <br><br> Required scope | `users:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        user_id:
          type: string
          docs: Unique identifier for a User
      display-name: Delete User
      errors:
        - root.UsersDeleteRequestBadRequestError
        - root.UsersDeleteRequestUnauthorizedError
        - root.UsersDeleteRequestForbiddenError
        - root.UsersDeleteRequestNotFoundError
        - root.UsersDeleteRequestTooManyRequestsError
        - root.UsersDeleteRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            user_id: 580e63e98c9a982ac9b8b741
    update:
      path: /sites/{site_id}/users/{user_id}
      method: PATCH
      auth: true
      docs: >
        Update a User by ID <br><br> Required scope | `users:write`

        <aside class="notice">The <code>email</code> and <code>password</code>
        fields cannot be updated using this endpoint</aside>
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
        user_id:
          type: string
          docs: Unique identifier for a User
      display-name: Update User
      request:
        name: UsersUpdateRequest
        body:
          properties:
            data: optional<UsersUpdateRequestData>
            accessGroups:
              type: optional<list<string>>
              docs: >
                An array of access group slugs. Access groups are assigned to
                the user as type `admin` and the user remains in the group until
                removed.
        content-type: application/json
      response:
        docs: Request was successful
        type: UsersUpdateResponse
        status-code: 200
      errors:
        - root.UsersUpdateRequestBadRequestError
        - root.UsersUpdateRequestUnauthorizedError
        - root.UsersUpdateRequestForbiddenError
        - root.UsersUpdateRequestNotFoundError
        - root.UsersUpdateRequestTooManyRequestsError
        - root.UsersUpdateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
            user_id: 580e63e98c9a982ac9b8b741
          request:
            data:
              name: Some One
              accept-privacy: false
              accept-communications: false
            accessGroups:
              - webflowers
              - platinum
              - free-tier
          response:
            body:
              id: 6287ec36a841b25637c663df
              isEmailVerified: true
              lastUpdated: '2022-05-20T13:46:12Z'
              invitedOn: '2022-05-20T13:46:12Z'
              createdOn: '2022-05-20T13:46:12Z'
              lastLogin: '2022-05-20T13:46:12Z'
              status: verified
              accessGroups:
                - slug: webflowers
                  type: admin
              data:
                data:
                  name: name
                  email: email
                  accept-privacy: true
                  accept-communications: true
                  additionalProperties: additionalProperties
    invite:
      path: /sites/{site_id}/users/invite
      method: POST
      auth: true
      docs: >-
        Create and invite a user with an email address. The user will be sent
        and invite via email, which they will need to accept in order to join
        paid Access Groups. <br><br> Required scope | `users:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create and Invite a User
      request:
        name: UsersInviteRequest
        body:
          properties:
            email:
              type: string
              docs: Email address of user to send invite to
              validation:
                format: email
            accessGroups:
              type: optional<list<string>>
              docs: >
                An array of access group slugs. Access groups are assigned to
                the user as type `admin` and the user remains in the group until
                removed.
        content-type: application/json
      response:
        docs: Request was successful
        type: UsersInviteResponse
        status-code: 200
      errors:
        - root.UsersInviteRequestBadRequestError
        - root.UsersInviteRequestUnauthorizedError
        - root.UsersInviteRequestForbiddenError
        - root.UsersInviteRequestNotFoundError
        - root.UsersInviteRequestConflictError
        - root.UsersInviteRequestTooManyRequestsError
        - root.UsersInviteRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            email: some.one@home.com
            accessGroups:
              - webflowers
          response:
            body:
              id: 6287ec36a841b25637c663df
              isEmailVerified: true
              lastUpdated: '2022-05-20T13:46:12Z'
              invitedOn: '2022-05-20T13:46:12Z'
              createdOn: '2022-05-20T13:46:12Z'
              lastLogin: '2022-05-20T13:46:12Z'
              status: verified
              accessGroups:
                - slug: webflowers
                  type: admin
              data:
                data:
                  name: name
                  email: email
                  accept-privacy: true
                  accept-communications: true
                  additionalProperties: additionalProperties
  source:
    openapi: ../openapi.yml
webhooks:
  user_account_added:
    method: POST
    display-name: New User Added
    headers: {}
    payload: UserAccountAddedPayload
    examples:
      - payload:
          payload:
            id: 6287ec36a841b25637c663df
            isEmailVerified: true
            lastUpdated: '2022-05-20T13:46:12Z'
            invitedOn: '2022-05-20T13:46:12Z'
            createdOn: '2022-05-20T13:46:12Z'
            lastLogin: '2022-05-20T13:46:12Z'
            status: verified
            accessGroups:
              - slug: webflowers
                type: admin
  user_account_updated:
    method: POST
    display-name: Account Updated
    headers: {}
    payload: UserAccountUpdatedPayload
    examples:
      - payload:
          payload:
            id: 6287ec36a841b25637c663df
            isEmailVerified: true
            lastUpdated: '2022-05-20T13:46:12Z'
            invitedOn: '2022-05-20T13:46:12Z'
            createdOn: '2022-05-20T13:46:12Z'
            lastLogin: '2022-05-20T13:46:12Z'
            status: verified
            accessGroups:
              - slug: webflowers
                type: admin
  user_account_deleted:
    method: POST
    display-name: Account Deleted
    headers: {}
    payload: UserAccountDeletedPayload
    examples:
      - payload:
          payload:
            id: 6287ec36a841b25637c663df
            isEmailVerified: true
            lastUpdated: '2022-05-20T13:46:12Z'
            invitedOn: '2022-05-20T13:46:12Z'
            createdOn: '2022-05-20T13:46:12Z'
            lastLogin: '2022-05-20T13:46:12Z'
            status: verified
            accessGroups:
              - slug: webflowers
                type: admin
",
    },
    "webhooks.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Webhooks",
          "endpoints": {
            "create": {
              "auth": true,
              "display-name": "Create Webhook",
              "docs": "Create a new Webhook, to be notified when Webflow resources change. Limit of 75 registrations per `triggerType`, per site. <blockquote class="callout callout_info" theme="📘">Access to this endpoint requires a bearer token from a <a href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data Client App</a>.</blockquote>     Required scope | `sites:write`
",
              "errors": [
                "root.WebhooksCreateRequestBadRequestError",
                "root.WebhooksCreateRequestUnauthorizedError",
                "root.WebhooksCreateRequestNotFoundError",
                "root.WebhooksCreateRequestTooManyRequestsError",
                "root.WebhooksCreateRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "request": {
                    "triggerType": "form_submission",
                    "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-11-08T23:59:28Z",
                      "id": "582266e0cd48de0f0e3c6d8b",
                      "lastTriggered": "2023-02-08T23:59:28Z",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/sites/{site_id}/webhooks",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "filter": {
                      "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                      "type": "optional<WebhooksCreateRequestFilter>",
                    },
                    "triggerType": {
                      "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                      "type": "optional<WebhooksCreateRequestTriggerType>",
                    },
                    "url": {
                      "docs": "URL to send the Webhook payload to",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "WebhooksCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 201,
                "type": "WebhooksCreateResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": true,
              "display-name": "Remove Webhook",
              "docs": "Remove a Webhook",
              "errors": [
                "root.WebhooksDeleteRequestBadRequestError",
                "root.WebhooksDeleteRequestUnauthorizedError",
                "root.WebhooksDeleteRequestNotFoundError",
                "root.WebhooksDeleteRequestTooManyRequestsError",
                "root.WebhooksDeleteRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "webhook_id": "580e64008c9a982ac9b8b754",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/webhooks/{webhook_id}",
              "path-parameters": {
                "webhook_id": {
                  "docs": "Unique identifier for a Webhook",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": true,
              "display-name": "Get Webhook",
              "docs": "Get a specific Webhook instance",
              "errors": [
                "root.WebhooksGetRequestBadRequestError",
                "root.WebhooksGetRequestUnauthorizedError",
                "root.WebhooksGetRequestNotFoundError",
                "root.WebhooksGetRequestTooManyRequestsError",
                "root.WebhooksGetRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "webhook_id": "580e64008c9a982ac9b8b754",
                  },
                  "response": {
                    "body": {
                      "createdOn": "2022-11-08T23:59:28Z",
                      "id": "582266e0cd48de0f0e3c6d8b",
                      "lastTriggered": "2023-02-08T23:59:28Z",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/webhooks/{webhook_id}",
              "path-parameters": {
                "webhook_id": {
                  "docs": "Unique identifier for a Webhook",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "WebhooksGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": true,
              "display-name": "List Webhooks",
              "docs": "List all App-created Webhooks registered for a given site </br></br> Required scope | `sites:read`
",
              "errors": [
                "root.WebhooksListRequestBadRequestError",
                "root.WebhooksListRequestUnauthorizedError",
                "root.WebhooksListRequestNotFoundError",
                "root.WebhooksListRequestTooManyRequestsError",
                "root.WebhooksListRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "site_id": "580e63e98c9a982ac9b8b741",
                  },
                  "response": {
                    "body": {
                      "pagination": {
                        "limit": 100,
                        "offset": 0,
                        "total": 100,
                      },
                      "webhooks": [
                        {
                          "createdOn": "2016-09-02T23:26:22Z",
                          "filter": {
                            "name": "Email Form",
                          },
                          "id": "57ca0a9e418c504a6e1acbb6",
                          "lastTriggered": "2023-02-08T23:59:28Z",
                          "siteId": "562ac0395358780a1f5e6fbd",
                          "triggerType": "form_submission",
                          "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                          "workspaceId": "4f4e46fd476ea8c507000001",
                        },
                        {
                          "createdOn": "2016-07-19T01:43:40Z",
                          "filter": {
                            "name": "Email Form",
                          },
                          "id": "578d85cce0c47cd2865f4cf2",
                          "lastTriggered": "2023-02-08T23:59:28Z",
                          "siteId": "562ac0395358780a1f5e6fbd",
                          "triggerType": "form_submission",
                          "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                          "workspaceId": "4f4e46fd476ea8c507000001",
                        },
                        {
                          "createdOn": "2016-07-19T01:43:40Z",
                          "filter": {
                            "name": "Email Form",
                          },
                          "id": "578d85cce0c47cd2865f4cf3",
                          "lastTriggered": "2023-02-08T23:59:28Z",
                          "siteId": "562ac0395358780a1f5e6fbd",
                          "triggerType": "form_submission",
                          "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                          "workspaceId": "4f4e46fd476ea8c507000001",
                        },
                      ],
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/sites/{site_id}/webhooks",
              "path-parameters": {
                "site_id": {
                  "docs": "Unique identifier for a Site",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Request was successful",
                "status-code": 200,
                "type": "WebhooksListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "WebhooksCreateRequestFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksCreateRequestTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksCreateResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date the Webhook registration was created",
                "type": "optional<datetime>",
              },
              "filter": {
                "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                "type": "optional<WebhooksCreateResponseFilter>",
              },
              "id": {
                "docs": "Unique identifier for the Webhook registration",
                "type": "optional<string>",
              },
              "lastTriggered": {
                "docs": "Date the Webhook instance was last triggered",
                "type": "optional<datetime>",
              },
              "siteId": {
                "docs": "Unique identifier for the Site the Webhook is registered in",
                "type": "optional<string>",
              },
              "triggerType": {
                "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                "type": "optional<WebhooksCreateResponseTriggerType>",
              },
              "url": {
                "docs": "URL to send the Webhook payload to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace the Webhook is registered in",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksCreateResponseFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksCreateResponseTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksGetResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "createdOn": {
                "docs": "Date the Webhook registration was created",
                "type": "optional<datetime>",
              },
              "filter": {
                "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                "type": "optional<WebhooksGetResponseFilter>",
              },
              "id": {
                "docs": "Unique identifier for the Webhook registration",
                "type": "optional<string>",
              },
              "lastTriggered": {
                "docs": "Date the Webhook instance was last triggered",
                "type": "optional<datetime>",
              },
              "siteId": {
                "docs": "Unique identifier for the Site the Webhook is registered in",
                "type": "optional<string>",
              },
              "triggerType": {
                "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                "type": "optional<WebhooksGetResponseTriggerType>",
              },
              "url": {
                "docs": "URL to send the Webhook payload to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace the Webhook is registered in",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksGetResponseFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksGetResponseTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksListResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "pagination": {
                "docs": "Pagination object",
                "type": "optional<WebhooksListResponsePagination>",
              },
              "webhooks": "optional<list<WebhooksListResponseWebhooksItem>>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksListResponsePagination": {
            "docs": "Pagination object",
            "inline": true,
            "properties": {
              "limit": {
                "docs": "The limit used for pagination",
                "type": "optional<double>",
              },
              "offset": {
                "docs": "The offset used for pagination",
                "type": "optional<double>",
              },
              "total": {
                "docs": "The total number of records",
                "type": "optional<double>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksListResponseWebhooksItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdOn": {
                "docs": "Date the Webhook registration was created",
                "type": "optional<datetime>",
              },
              "filter": {
                "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                "type": "optional<WebhooksListResponseWebhooksItemFilter>",
              },
              "id": {
                "docs": "Unique identifier for the Webhook registration",
                "type": "optional<string>",
              },
              "lastTriggered": {
                "docs": "Date the Webhook instance was last triggered",
                "type": "optional<datetime>",
              },
              "siteId": {
                "docs": "Unique identifier for the Site the Webhook is registered in",
                "type": "optional<string>",
              },
              "triggerType": {
                "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
                "type": "optional<WebhooksListResponseWebhooksItemTriggerType>",
              },
              "url": {
                "docs": "URL to send the Webhook payload to",
                "type": "optional<string>",
              },
              "workspaceId": {
                "docs": "Unique identifier for the Workspace the Webhook is registered in",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksListResponseWebhooksItemFilter": {
            "docs": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "inline": true,
            "properties": {
              "name": {
                "docs": "The name of the form you'd like to recieve notifications for.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "WebhooksListResponseWebhooksItemTriggerType": {
            "docs": "* `form_submission` - Sends the [form_submission](#form_submission) event
* `site_publish` - Sends a [site_publish](#site_publish) event
* `page_created` - Send the [page_created](#page_created) event
* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event
* `page_deleted` - Sends the [page_deleted](#page_deleted) event
* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event
* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event
* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event
* `user_account_added` - Sends the [user_account_added](#user_account_added) event
* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event
* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event
* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event
* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event
* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event
* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event
",
            "enum": [
              "form_submission",
              "site_publish",
              "page_created",
              "page_metadata_updated",
              "page_deleted",
              "ecomm_new_order",
              "ecomm_order_changed",
              "ecomm_inventory_changed",
              "user_account_added",
              "user_account_updated",
              "user_account_deleted",
              "collection_item_created",
              "collection_item_changed",
              "collection_item_deleted",
              "collection_item_unpublished",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  WebhooksListResponsePagination:
    docs: Pagination object
    properties:
      limit:
        type: optional<double>
        docs: The limit used for pagination
      offset:
        type: optional<double>
        docs: The offset used for pagination
      total:
        type: optional<double>
        docs: The total number of records
    source:
      openapi: ../openapi.yml
    inline: true
  WebhooksListResponseWebhooksItemTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  WebhooksListResponseWebhooksItemFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  WebhooksListResponseWebhooksItem:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
      triggerType:
        type: optional<WebhooksListResponseWebhooksItemTriggerType>
        docs: >
          * `form_submission` - Sends the [form_submission](#form_submission)
          event

          * `site_publish` - Sends a [site_publish](#site_publish) event

          * `page_created` - Send the [page_created](#page_created) event

          * `page_metadata_updated` - Sends the
          [page_metadata_updated](#page_metadata_updated) event

          * `page_deleted` - Sends the [page_deleted](#page_deleted) event

          * `ecomm_new_order` - Sends the new
          [ecomm_new_order](#ecomm_new_order) event

          * `ecomm_order_changed` - Sends the
          [ecomm_order_changed](#ecomm_order_changed) event

          * `ecomm_inventory_changed` - Sends the
          [ecomm_inventory_changed](#ecomm_inventory_changed) event

          * `user_account_added` - Sends the
          [user_account_added](#user_account_added) event

          * `user_account_updated` - Sends the
          [user_account_updated](#user_account_updated) event

          * `user_account_deleted` - Sends the
          [user_account_deleted](#user_account_deleted) event

          * `collection_item_created` - Sends the
          [collection_item_created](#collection_item_created) event

          * `collection_item_changed` - Sends the
          [collection_item_changed](#collection_item_changed) event

          * `collection_item_deleted` - Sends the
          [collection_item_deleted](#collection_item_deleted) event

          * `collection_item_unpublished` - Sends the
          [collection_item_unpublished](#collection_item_unpublished) event
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
      filter:
        type: optional<WebhooksListResponseWebhooksItemFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for. 
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
    source:
      openapi: ../openapi.yml
    inline: true
  WebhooksListResponse:
    properties:
      pagination:
        type: optional<WebhooksListResponsePagination>
        docs: Pagination object
      webhooks: optional<list<WebhooksListResponseWebhooksItem>>
    source:
      openapi: ../openapi.yml
  WebhooksCreateRequestTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  WebhooksCreateRequestFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  WebhooksCreateResponseTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  WebhooksCreateResponseFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  WebhooksCreateResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
      triggerType:
        type: optional<WebhooksCreateResponseTriggerType>
        docs: >
          * `form_submission` - Sends the [form_submission](#form_submission)
          event

          * `site_publish` - Sends a [site_publish](#site_publish) event

          * `page_created` - Send the [page_created](#page_created) event

          * `page_metadata_updated` - Sends the
          [page_metadata_updated](#page_metadata_updated) event

          * `page_deleted` - Sends the [page_deleted](#page_deleted) event

          * `ecomm_new_order` - Sends the new
          [ecomm_new_order](#ecomm_new_order) event

          * `ecomm_order_changed` - Sends the
          [ecomm_order_changed](#ecomm_order_changed) event

          * `ecomm_inventory_changed` - Sends the
          [ecomm_inventory_changed](#ecomm_inventory_changed) event

          * `user_account_added` - Sends the
          [user_account_added](#user_account_added) event

          * `user_account_updated` - Sends the
          [user_account_updated](#user_account_updated) event

          * `user_account_deleted` - Sends the
          [user_account_deleted](#user_account_deleted) event

          * `collection_item_created` - Sends the
          [collection_item_created](#collection_item_created) event

          * `collection_item_changed` - Sends the
          [collection_item_changed](#collection_item_changed) event

          * `collection_item_deleted` - Sends the
          [collection_item_deleted](#collection_item_deleted) event

          * `collection_item_unpublished` - Sends the
          [collection_item_unpublished](#collection_item_unpublished) event
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
      filter:
        type: optional<WebhooksCreateResponseFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for. 
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
    source:
      openapi: ../openapi.yml
  WebhooksGetResponseTriggerType:
    enum:
      - form_submission
      - site_publish
      - page_created
      - page_metadata_updated
      - page_deleted
      - ecomm_new_order
      - ecomm_order_changed
      - ecomm_inventory_changed
      - user_account_added
      - user_account_updated
      - user_account_deleted
      - collection_item_created
      - collection_item_changed
      - collection_item_deleted
      - collection_item_unpublished
    docs: >
      * `form_submission` - Sends the [form_submission](#form_submission) event

      * `site_publish` - Sends a [site_publish](#site_publish) event

      * `page_created` - Send the [page_created](#page_created) event

      * `page_metadata_updated` - Sends the
      [page_metadata_updated](#page_metadata_updated) event

      * `page_deleted` - Sends the [page_deleted](#page_deleted) event

      * `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order)
      event

      * `ecomm_order_changed` - Sends the
      [ecomm_order_changed](#ecomm_order_changed) event

      * `ecomm_inventory_changed` - Sends the
      [ecomm_inventory_changed](#ecomm_inventory_changed) event

      * `user_account_added` - Sends the
      [user_account_added](#user_account_added) event

      * `user_account_updated` - Sends the
      [user_account_updated](#user_account_updated) event

      * `user_account_deleted` - Sends the
      [user_account_deleted](#user_account_deleted) event

      * `collection_item_created` - Sends the
      [collection_item_created](#collection_item_created) event

      * `collection_item_changed` - Sends the
      [collection_item_changed](#collection_item_changed) event

      * `collection_item_deleted` - Sends the
      [collection_item_deleted](#collection_item_deleted) event

      * `collection_item_unpublished` - Sends the
      [collection_item_unpublished](#collection_item_unpublished) event
    inline: true
    source:
      openapi: ../openapi.yml
  WebhooksGetResponseFilter:
    docs: >-
      Only supported for the `form_submission` trigger type. Filter for the form
      you want Webhooks to be sent for. 
    properties:
      name:
        type: optional<string>
        docs: The name of the form you'd like to recieve notifications for.
    source:
      openapi: ../openapi.yml
    inline: true
  WebhooksGetResponse:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the Webhook registration
      triggerType:
        type: optional<WebhooksGetResponseTriggerType>
        docs: >
          * `form_submission` - Sends the [form_submission](#form_submission)
          event

          * `site_publish` - Sends a [site_publish](#site_publish) event

          * `page_created` - Send the [page_created](#page_created) event

          * `page_metadata_updated` - Sends the
          [page_metadata_updated](#page_metadata_updated) event

          * `page_deleted` - Sends the [page_deleted](#page_deleted) event

          * `ecomm_new_order` - Sends the new
          [ecomm_new_order](#ecomm_new_order) event

          * `ecomm_order_changed` - Sends the
          [ecomm_order_changed](#ecomm_order_changed) event

          * `ecomm_inventory_changed` - Sends the
          [ecomm_inventory_changed](#ecomm_inventory_changed) event

          * `user_account_added` - Sends the
          [user_account_added](#user_account_added) event

          * `user_account_updated` - Sends the
          [user_account_updated](#user_account_updated) event

          * `user_account_deleted` - Sends the
          [user_account_deleted](#user_account_deleted) event

          * `collection_item_created` - Sends the
          [collection_item_created](#collection_item_created) event

          * `collection_item_changed` - Sends the
          [collection_item_changed](#collection_item_changed) event

          * `collection_item_deleted` - Sends the
          [collection_item_deleted](#collection_item_deleted) event

          * `collection_item_unpublished` - Sends the
          [collection_item_unpublished](#collection_item_unpublished) event
      url:
        type: optional<string>
        docs: URL to send the Webhook payload to
      workspaceId:
        type: optional<string>
        docs: Unique identifier for the Workspace the Webhook is registered in
      siteId:
        type: optional<string>
        docs: Unique identifier for the Site the Webhook is registered in
      filter:
        type: optional<WebhooksGetResponseFilter>
        docs: >-
          Only supported for the `form_submission` trigger type. Filter for the
          form you want Webhooks to be sent for. 
      lastTriggered:
        type: optional<datetime>
        docs: Date the Webhook instance was last triggered
      createdOn:
        type: optional<datetime>
        docs: Date the Webhook registration was created
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /sites/{site_id}/webhooks
      method: GET
      auth: true
      docs: >
        List all App-created Webhooks registered for a given site </br></br>
        Required scope | `sites:read`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: List Webhooks
      response:
        docs: Request was successful
        type: WebhooksListResponse
        status-code: 200
      errors:
        - root.WebhooksListRequestBadRequestError
        - root.WebhooksListRequestUnauthorizedError
        - root.WebhooksListRequestNotFoundError
        - root.WebhooksListRequestTooManyRequestsError
        - root.WebhooksListRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          response:
            body:
              pagination:
                limit: 100
                offset: 0
                total: 100
              webhooks:
                - id: 57ca0a9e418c504a6e1acbb6
                  triggerType: form_submission
                  url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
                  workspaceId: 4f4e46fd476ea8c507000001
                  siteId: 562ac0395358780a1f5e6fbd
                  filter:
                    name: Email Form
                  lastTriggered: '2023-02-08T23:59:28Z'
                  createdOn: '2016-09-02T23:26:22Z'
                - id: 578d85cce0c47cd2865f4cf2
                  triggerType: form_submission
                  url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
                  workspaceId: 4f4e46fd476ea8c507000001
                  siteId: 562ac0395358780a1f5e6fbd
                  filter:
                    name: Email Form
                  lastTriggered: '2023-02-08T23:59:28Z'
                  createdOn: '2016-07-19T01:43:40Z'
                - id: 578d85cce0c47cd2865f4cf3
                  triggerType: form_submission
                  url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
                  workspaceId: 4f4e46fd476ea8c507000001
                  siteId: 562ac0395358780a1f5e6fbd
                  filter:
                    name: Email Form
                  lastTriggered: '2023-02-08T23:59:28Z'
                  createdOn: '2016-07-19T01:43:40Z'
    create:
      path: /sites/{site_id}/webhooks
      method: POST
      auth: true
      docs: >
        Create a new Webhook, to be notified when Webflow resources change.
        Limit of 75 registrations per `triggerType`, per site. <blockquote
        class="callout callout_info" theme="📘">Access to this endpoint requires
        a bearer token from a <a
        href="https://developers.webflow.com/data/docs/getting-started-data-clients">Data
        Client App</a>.</blockquote>     Required scope | `sites:write`
      source:
        openapi: ../openapi.yml
      path-parameters:
        site_id:
          type: string
          docs: Unique identifier for a Site
      display-name: Create Webhook
      request:
        name: WebhooksCreateRequest
        body:
          properties:
            triggerType:
              type: optional<WebhooksCreateRequestTriggerType>
              docs: >
                * `form_submission` - Sends the
                [form_submission](#form_submission) event

                * `site_publish` - Sends a [site_publish](#site_publish) event

                * `page_created` - Send the [page_created](#page_created) event

                * `page_metadata_updated` - Sends the
                [page_metadata_updated](#page_metadata_updated) event

                * `page_deleted` - Sends the [page_deleted](#page_deleted) event

                * `ecomm_new_order` - Sends the new
                [ecomm_new_order](#ecomm_new_order) event

                * `ecomm_order_changed` - Sends the
                [ecomm_order_changed](#ecomm_order_changed) event

                * `ecomm_inventory_changed` - Sends the
                [ecomm_inventory_changed](#ecomm_inventory_changed) event

                * `user_account_added` - Sends the
                [user_account_added](#user_account_added) event

                * `user_account_updated` - Sends the
                [user_account_updated](#user_account_updated) event

                * `user_account_deleted` - Sends the
                [user_account_deleted](#user_account_deleted) event

                * `collection_item_created` - Sends the
                [collection_item_created](#collection_item_created) event

                * `collection_item_changed` - Sends the
                [collection_item_changed](#collection_item_changed) event

                * `collection_item_deleted` - Sends the
                [collection_item_deleted](#collection_item_deleted) event

                * `collection_item_unpublished` - Sends the
                [collection_item_unpublished](#collection_item_unpublished)
                event
            url:
              type: optional<string>
              docs: URL to send the Webhook payload to
            filter:
              type: optional<WebhooksCreateRequestFilter>
              docs: >-
                Only supported for the `form_submission` trigger type. Filter
                for the form you want Webhooks to be sent for. 
        content-type: application/json
      response:
        docs: Request was successful
        type: WebhooksCreateResponse
        status-code: 201
      errors:
        - root.WebhooksCreateRequestBadRequestError
        - root.WebhooksCreateRequestUnauthorizedError
        - root.WebhooksCreateRequestNotFoundError
        - root.WebhooksCreateRequestTooManyRequestsError
        - root.WebhooksCreateRequestInternalServerError
      examples:
        - path-parameters:
            site_id: 580e63e98c9a982ac9b8b741
          request:
            triggerType: form_submission
            url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
          response:
            body:
              id: 582266e0cd48de0f0e3c6d8b
              triggerType: form_submission
              url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
              workspaceId: 4f4e46fd476ea8c507000001
              siteId: 562ac0395358780a1f5e6fbd
              lastTriggered: '2023-02-08T23:59:28Z'
              createdOn: '2022-11-08T23:59:28Z'
    get:
      path: /webhooks/{webhook_id}
      method: GET
      auth: true
      docs: Get a specific Webhook instance
      source:
        openapi: ../openapi.yml
      path-parameters:
        webhook_id:
          type: string
          docs: Unique identifier for a Webhook
      display-name: Get Webhook
      response:
        docs: Request was successful
        type: WebhooksGetResponse
        status-code: 200
      errors:
        - root.WebhooksGetRequestBadRequestError
        - root.WebhooksGetRequestUnauthorizedError
        - root.WebhooksGetRequestNotFoundError
        - root.WebhooksGetRequestTooManyRequestsError
        - root.WebhooksGetRequestInternalServerError
      examples:
        - path-parameters:
            webhook_id: 580e64008c9a982ac9b8b754
          response:
            body:
              id: 582266e0cd48de0f0e3c6d8b
              triggerType: form_submission
              url: https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f
              workspaceId: 4f4e46fd476ea8c507000001
              siteId: 562ac0395358780a1f5e6fbd
              lastTriggered: '2023-02-08T23:59:28Z'
              createdOn: '2022-11-08T23:59:28Z'
    delete:
      path: /webhooks/{webhook_id}
      method: DELETE
      auth: true
      docs: Remove a Webhook
      source:
        openapi: ../openapi.yml
      path-parameters:
        webhook_id:
          type: string
          docs: Unique identifier for a Webhook
      display-name: Remove Webhook
      errors:
        - root.WebhooksDeleteRequestBadRequestError
        - root.WebhooksDeleteRequestUnauthorizedError
        - root.WebhooksDeleteRequestNotFoundError
        - root.WebhooksDeleteRequestTooManyRequestsError
        - root.WebhooksDeleteRequestInternalServerError
      examples:
        - path-parameters:
            webhook_id: 580e64008c9a982ac9b8b754
  source:
    openapi: ../openapi.yml
  display-name: Webhooks
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Data API",
      "environments": {
        "Default": "https://api.webflow.com/v2",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Data API
environments:
  Default: https://api.webflow.com/v2
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}